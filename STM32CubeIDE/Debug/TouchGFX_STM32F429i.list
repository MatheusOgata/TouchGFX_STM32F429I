
TouchGFX_STM32F429i.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c41c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003820  0801c5cc  0801c5cc  0002c5cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000046e  0801fdec  0801fdec  0002fdec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000000c  0802025c  0802025c  0003025c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000024  08020268  08020268  00030268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000396c0  0802028c  0802028c  0003028c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805994c  0805994c  000700f4  2**0
                  CONTENTS
  8 .ARM          00000008  0805994c  0805994c  0006994c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08059954  08059954  000700f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08059954  08059954  00069954  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08059968  08059968  00069968  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000000f4  20000000  08059970  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00008c90  200000f4  08059a64  000700f4  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  20008d84  08059a64  00078d84  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000700f4  2**0
                  CONTENTS, READONLY
 16 .debug_info   00068eaa  00000000  00000000  00070124  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_abbrev 0000cd33  00000000  00000000  000d8fce  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 00002b18  00000000  00000000  000e5d08  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00002720  00000000  00000000  000e8820  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macro  0002e44e  00000000  00000000  000eaf40  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   0002747b  00000000  00000000  0011938e  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_str    000fde09  00000000  00000000  00140809  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .comment      000000fa  00000000  00000000  0023e612  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000bb28  00000000  00000000  0023e70c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000f4 	.word	0x200000f4
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801c5b4 	.word	0x0801c5b4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000f8 	.word	0x200000f8
 80001ec:	0801c5b4 	.word	0x0801c5b4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8000590:	b480      	push	{r7}
 8000592:	b085      	sub	sp, #20
 8000594:	af00      	add	r7, sp, #0
 8000596:	60f8      	str	r0, [r7, #12]
 8000598:	60b9      	str	r1, [r7, #8]
 800059a:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 800059c:	68fb      	ldr	r3, [r7, #12]
 800059e:	4a07      	ldr	r2, [pc, #28]	; (80005bc <vApplicationGetIdleTaskMemory+0x2c>)
 80005a0:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 80005a2:	68bb      	ldr	r3, [r7, #8]
 80005a4:	4a06      	ldr	r2, [pc, #24]	; (80005c0 <vApplicationGetIdleTaskMemory+0x30>)
 80005a6:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	2280      	movs	r2, #128	; 0x80
 80005ac:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 80005ae:	bf00      	nop
 80005b0:	3714      	adds	r7, #20
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	20000110 	.word	0x20000110
 80005c0:	20000164 	.word	0x20000164

080005c4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005c4:	b5b0      	push	{r4, r5, r7, lr}
 80005c6:	b08e      	sub	sp, #56	; 0x38
 80005c8:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005ca:	f004 fe75 	bl	80052b8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005ce:	f000 f839 	bl	8000644 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005d2:	f000 f9ad 	bl	8000930 <MX_GPIO_Init>
  MX_FMC_Init();
 80005d6:	f000 f955 	bl	8000884 <MX_FMC_Init>
  MX_LTDC_Init();
 80005da:	f000 f8d1 	bl	8000780 <MX_LTDC_Init>
  MX_CRC_Init();
 80005de:	f000 f8bb 	bl	8000758 <MX_CRC_Init>
  MX_TouchGFX_Init();
 80005e2:	f000 fe86 	bl	80012f2 <MX_TouchGFX_Init>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 80005e6:	4b13      	ldr	r3, [pc, #76]	; (8000634 <main+0x70>)
 80005e8:	f107 041c 	add.w	r4, r7, #28
 80005ec:	461d      	mov	r5, r3
 80005ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80005f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80005f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80005f6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 80005fa:	f107 031c 	add.w	r3, r7, #28
 80005fe:	2100      	movs	r1, #0
 8000600:	4618      	mov	r0, r3
 8000602:	f007 fa6d 	bl	8007ae0 <osThreadCreate>
 8000606:	4602      	mov	r2, r0
 8000608:	4b0b      	ldr	r3, [pc, #44]	; (8000638 <main+0x74>)
 800060a:	601a      	str	r2, [r3, #0]

  /* definition and creation of touchGfxTask */
  osThreadDef(touchGfxTask, StartTGFX_Task, osPriorityNormal, 0, 4096);
 800060c:	4b0b      	ldr	r3, [pc, #44]	; (800063c <main+0x78>)
 800060e:	463c      	mov	r4, r7
 8000610:	461d      	mov	r5, r3
 8000612:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000614:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000616:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800061a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  touchGfxTaskHandle = osThreadCreate(osThread(touchGfxTask), NULL);
 800061e:	463b      	mov	r3, r7
 8000620:	2100      	movs	r1, #0
 8000622:	4618      	mov	r0, r3
 8000624:	f007 fa5c 	bl	8007ae0 <osThreadCreate>
 8000628:	4602      	mov	r2, r0
 800062a:	4b05      	ldr	r3, [pc, #20]	; (8000640 <main+0x7c>)
 800062c:	601a      	str	r2, [r3, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 800062e:	f007 fa50 	bl	8007ad2 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000632:	e7fe      	b.n	8000632 <main+0x6e>
 8000634:	0801c5d8 	.word	0x0801c5d8
 8000638:	20008c30 	.word	0x20008c30
 800063c:	0801c604 	.word	0x0801c604
 8000640:	20008c2c 	.word	0x20008c2c

08000644 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000644:	b580      	push	{r7, lr}
 8000646:	b0a0      	sub	sp, #128	; 0x80
 8000648:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800064a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800064e:	2230      	movs	r2, #48	; 0x30
 8000650:	2100      	movs	r1, #0
 8000652:	4618      	mov	r0, r3
 8000654:	f01b f831 	bl	801b6ba <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000658:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800065c:	2200      	movs	r2, #0
 800065e:	601a      	str	r2, [r3, #0]
 8000660:	605a      	str	r2, [r3, #4]
 8000662:	609a      	str	r2, [r3, #8]
 8000664:	60da      	str	r2, [r3, #12]
 8000666:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000668:	f107 030c 	add.w	r3, r7, #12
 800066c:	2230      	movs	r2, #48	; 0x30
 800066e:	2100      	movs	r1, #0
 8000670:	4618      	mov	r0, r3
 8000672:	f01b f822 	bl	801b6ba <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000676:	2300      	movs	r3, #0
 8000678:	60bb      	str	r3, [r7, #8]
 800067a:	4b35      	ldr	r3, [pc, #212]	; (8000750 <SystemClock_Config+0x10c>)
 800067c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800067e:	4a34      	ldr	r2, [pc, #208]	; (8000750 <SystemClock_Config+0x10c>)
 8000680:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000684:	6413      	str	r3, [r2, #64]	; 0x40
 8000686:	4b32      	ldr	r3, [pc, #200]	; (8000750 <SystemClock_Config+0x10c>)
 8000688:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800068a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800068e:	60bb      	str	r3, [r7, #8]
 8000690:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000692:	2300      	movs	r3, #0
 8000694:	607b      	str	r3, [r7, #4]
 8000696:	4b2f      	ldr	r3, [pc, #188]	; (8000754 <SystemClock_Config+0x110>)
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	4a2e      	ldr	r2, [pc, #184]	; (8000754 <SystemClock_Config+0x110>)
 800069c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80006a0:	6013      	str	r3, [r2, #0]
 80006a2:	4b2c      	ldr	r3, [pc, #176]	; (8000754 <SystemClock_Config+0x110>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80006aa:	607b      	str	r3, [r7, #4]
 80006ac:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80006ae:	2301      	movs	r3, #1
 80006b0:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80006b2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80006b6:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006b8:	2302      	movs	r3, #2
 80006ba:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80006bc:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80006c0:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80006c2:	2304      	movs	r3, #4
 80006c4:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLN = 180;
 80006c6:	23b4      	movs	r3, #180	; 0xb4
 80006c8:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80006ca:	2302      	movs	r3, #2
 80006cc:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80006ce:	2304      	movs	r3, #4
 80006d0:	67fb      	str	r3, [r7, #124]	; 0x7c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006d2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80006d6:	4618      	mov	r0, r3
 80006d8:	f005 fd14 	bl	8006104 <HAL_RCC_OscConfig>
 80006dc:	4603      	mov	r3, r0
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d001      	beq.n	80006e6 <SystemClock_Config+0xa2>
  {
    Error_Handler();
 80006e2:	f000 fa6b 	bl	8000bbc <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80006e6:	f005 fcbd 	bl	8006064 <HAL_PWREx_EnableOverDrive>
 80006ea:	4603      	mov	r3, r0
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	d001      	beq.n	80006f4 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 80006f0:	f000 fa64 	bl	8000bbc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006f4:	230f      	movs	r3, #15
 80006f6:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80006f8:	2302      	movs	r3, #2
 80006fa:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006fc:	2300      	movs	r3, #0
 80006fe:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000700:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000704:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000706:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800070a:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800070c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000710:	2105      	movs	r1, #5
 8000712:	4618      	mov	r0, r3
 8000714:	f005 ff66 	bl	80065e4 <HAL_RCC_ClockConfig>
 8000718:	4603      	mov	r3, r0
 800071a:	2b00      	cmp	r3, #0
 800071c:	d001      	beq.n	8000722 <SystemClock_Config+0xde>
  {
    Error_Handler();
 800071e:	f000 fa4d 	bl	8000bbc <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000722:	2308      	movs	r3, #8
 8000724:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 66;
 8000726:	2342      	movs	r3, #66	; 0x42
 8000728:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 800072a:	2306      	movs	r3, #6
 800072c:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 800072e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000732:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000734:	f107 030c 	add.w	r3, r7, #12
 8000738:	4618      	mov	r0, r3
 800073a:	f006 f963 	bl	8006a04 <HAL_RCCEx_PeriphCLKConfig>
 800073e:	4603      	mov	r3, r0
 8000740:	2b00      	cmp	r3, #0
 8000742:	d001      	beq.n	8000748 <SystemClock_Config+0x104>
  {
    Error_Handler();
 8000744:	f000 fa3a 	bl	8000bbc <Error_Handler>
  }
}
 8000748:	bf00      	nop
 800074a:	3780      	adds	r7, #128	; 0x80
 800074c:	46bd      	mov	sp, r7
 800074e:	bd80      	pop	{r7, pc}
 8000750:	40023800 	.word	0x40023800
 8000754:	40007000 	.word	0x40007000

08000758 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 800075c:	4b06      	ldr	r3, [pc, #24]	; (8000778 <MX_CRC_Init+0x20>)
 800075e:	4a07      	ldr	r2, [pc, #28]	; (800077c <MX_CRC_Init+0x24>)
 8000760:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000762:	4805      	ldr	r0, [pc, #20]	; (8000778 <MX_CRC_Init+0x20>)
 8000764:	f004 feee 	bl	8005544 <HAL_CRC_Init>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800076e:	f000 fa25 	bl	8000bbc <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000772:	bf00      	nop
 8000774:	bd80      	pop	{r7, pc}
 8000776:	bf00      	nop
 8000778:	20008c34 	.word	0x20008c34
 800077c:	40023000 	.word	0x40023000

08000780 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	b08e      	sub	sp, #56	; 0x38
 8000784:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */
	ili9341_Init();
 8000786:	f004 fc4d 	bl	8005024 <ili9341_Init>
  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800078a:	1d3b      	adds	r3, r7, #4
 800078c:	2234      	movs	r2, #52	; 0x34
 800078e:	2100      	movs	r1, #0
 8000790:	4618      	mov	r0, r3
 8000792:	f01a ff92 	bl	801b6ba <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000796:	4b39      	ldr	r3, [pc, #228]	; (800087c <MX_LTDC_Init+0xfc>)
 8000798:	4a39      	ldr	r2, [pc, #228]	; (8000880 <MX_LTDC_Init+0x100>)
 800079a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800079c:	4b37      	ldr	r3, [pc, #220]	; (800087c <MX_LTDC_Init+0xfc>)
 800079e:	2200      	movs	r2, #0
 80007a0:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80007a2:	4b36      	ldr	r3, [pc, #216]	; (800087c <MX_LTDC_Init+0xfc>)
 80007a4:	2200      	movs	r2, #0
 80007a6:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80007a8:	4b34      	ldr	r3, [pc, #208]	; (800087c <MX_LTDC_Init+0xfc>)
 80007aa:	2200      	movs	r2, #0
 80007ac:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80007ae:	4b33      	ldr	r3, [pc, #204]	; (800087c <MX_LTDC_Init+0xfc>)
 80007b0:	2200      	movs	r2, #0
 80007b2:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 80007b4:	4b31      	ldr	r3, [pc, #196]	; (800087c <MX_LTDC_Init+0xfc>)
 80007b6:	2209      	movs	r2, #9
 80007b8:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 80007ba:	4b30      	ldr	r3, [pc, #192]	; (800087c <MX_LTDC_Init+0xfc>)
 80007bc:	2201      	movs	r2, #1
 80007be:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 80007c0:	4b2e      	ldr	r3, [pc, #184]	; (800087c <MX_LTDC_Init+0xfc>)
 80007c2:	221d      	movs	r2, #29
 80007c4:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 80007c6:	4b2d      	ldr	r3, [pc, #180]	; (800087c <MX_LTDC_Init+0xfc>)
 80007c8:	2203      	movs	r2, #3
 80007ca:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 80007cc:	4b2b      	ldr	r3, [pc, #172]	; (800087c <MX_LTDC_Init+0xfc>)
 80007ce:	f240 120d 	movw	r2, #269	; 0x10d
 80007d2:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 80007d4:	4b29      	ldr	r3, [pc, #164]	; (800087c <MX_LTDC_Init+0xfc>)
 80007d6:	f240 1243 	movw	r2, #323	; 0x143
 80007da:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 80007dc:	4b27      	ldr	r3, [pc, #156]	; (800087c <MX_LTDC_Init+0xfc>)
 80007de:	f240 1217 	movw	r2, #279	; 0x117
 80007e2:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 80007e4:	4b25      	ldr	r3, [pc, #148]	; (800087c <MX_LTDC_Init+0xfc>)
 80007e6:	f240 1247 	movw	r2, #327	; 0x147
 80007ea:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 80007ec:	4b23      	ldr	r3, [pc, #140]	; (800087c <MX_LTDC_Init+0xfc>)
 80007ee:	2200      	movs	r2, #0
 80007f0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80007f4:	4b21      	ldr	r3, [pc, #132]	; (800087c <MX_LTDC_Init+0xfc>)
 80007f6:	2200      	movs	r2, #0
 80007f8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80007fc:	4b1f      	ldr	r3, [pc, #124]	; (800087c <MX_LTDC_Init+0xfc>)
 80007fe:	2200      	movs	r2, #0
 8000800:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000804:	481d      	ldr	r0, [pc, #116]	; (800087c <MX_LTDC_Init+0xfc>)
 8000806:	f005 f897 	bl	8005938 <HAL_LTDC_Init>
 800080a:	4603      	mov	r3, r0
 800080c:	2b00      	cmp	r3, #0
 800080e:	d001      	beq.n	8000814 <MX_LTDC_Init+0x94>
  {
    Error_Handler();
 8000810:	f000 f9d4 	bl	8000bbc <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000814:	2300      	movs	r3, #0
 8000816:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 8000818:	23f0      	movs	r3, #240	; 0xf0
 800081a:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 800081c:	2300      	movs	r3, #0
 800081e:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8000820:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000824:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000826:	2302      	movs	r3, #2
 8000828:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 800082a:	23ff      	movs	r3, #255	; 0xff
 800082c:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 800082e:	2300      	movs	r3, #0
 8000830:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 8000832:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000836:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000838:	2307      	movs	r3, #7
 800083a:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0;
 800083c:	2300      	movs	r3, #0
 800083e:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8000840:	23f0      	movs	r3, #240	; 0xf0
 8000842:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8000844:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000848:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 800084a:	2300      	movs	r3, #0
 800084c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000850:	2300      	movs	r3, #0
 8000852:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000856:	2300      	movs	r3, #0
 8000858:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800085c:	1d3b      	adds	r3, r7, #4
 800085e:	2200      	movs	r2, #0
 8000860:	4619      	mov	r1, r3
 8000862:	4806      	ldr	r0, [pc, #24]	; (800087c <MX_LTDC_Init+0xfc>)
 8000864:	f005 f9f0 	bl	8005c48 <HAL_LTDC_ConfigLayer>
 8000868:	4603      	mov	r3, r0
 800086a:	2b00      	cmp	r3, #0
 800086c:	d001      	beq.n	8000872 <MX_LTDC_Init+0xf2>
  {
    Error_Handler();
 800086e:	f000 f9a5 	bl	8000bbc <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000872:	bf00      	nop
 8000874:	3738      	adds	r7, #56	; 0x38
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}
 800087a:	bf00      	nop
 800087c:	20008c4c 	.word	0x20008c4c
 8000880:	40016800 	.word	0x40016800

08000884 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8000884:	b580      	push	{r7, lr}
 8000886:	b088      	sub	sp, #32
 8000888:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 800088a:	1d3b      	adds	r3, r7, #4
 800088c:	2200      	movs	r2, #0
 800088e:	601a      	str	r2, [r3, #0]
 8000890:	605a      	str	r2, [r3, #4]
 8000892:	609a      	str	r2, [r3, #8]
 8000894:	60da      	str	r2, [r3, #12]
 8000896:	611a      	str	r2, [r3, #16]
 8000898:	615a      	str	r2, [r3, #20]
 800089a:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800089c:	4b21      	ldr	r3, [pc, #132]	; (8000924 <MX_FMC_Init+0xa0>)
 800089e:	4a22      	ldr	r2, [pc, #136]	; (8000928 <MX_FMC_Init+0xa4>)
 80008a0:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80008a2:	4b20      	ldr	r3, [pc, #128]	; (8000924 <MX_FMC_Init+0xa0>)
 80008a4:	2201      	movs	r2, #1
 80008a6:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80008a8:	4b1e      	ldr	r3, [pc, #120]	; (8000924 <MX_FMC_Init+0xa0>)
 80008aa:	2200      	movs	r2, #0
 80008ac:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80008ae:	4b1d      	ldr	r3, [pc, #116]	; (8000924 <MX_FMC_Init+0xa0>)
 80008b0:	2204      	movs	r2, #4
 80008b2:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80008b4:	4b1b      	ldr	r3, [pc, #108]	; (8000924 <MX_FMC_Init+0xa0>)
 80008b6:	2210      	movs	r2, #16
 80008b8:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80008ba:	4b1a      	ldr	r3, [pc, #104]	; (8000924 <MX_FMC_Init+0xa0>)
 80008bc:	2240      	movs	r2, #64	; 0x40
 80008be:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80008c0:	4b18      	ldr	r3, [pc, #96]	; (8000924 <MX_FMC_Init+0xa0>)
 80008c2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80008c6:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80008c8:	4b16      	ldr	r3, [pc, #88]	; (8000924 <MX_FMC_Init+0xa0>)
 80008ca:	2200      	movs	r2, #0
 80008cc:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_3;
 80008ce:	4b15      	ldr	r3, [pc, #84]	; (8000924 <MX_FMC_Init+0xa0>)
 80008d0:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 80008d4:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80008d6:	4b13      	ldr	r3, [pc, #76]	; (8000924 <MX_FMC_Init+0xa0>)
 80008d8:	2200      	movs	r2, #0
 80008da:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80008dc:	4b11      	ldr	r3, [pc, #68]	; (8000924 <MX_FMC_Init+0xa0>)
 80008de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80008e2:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 80008e4:	2302      	movs	r3, #2
 80008e6:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 80008e8:	2307      	movs	r3, #7
 80008ea:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 80008ec:	2304      	movs	r3, #4
 80008ee:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 80008f0:	2307      	movs	r3, #7
 80008f2:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 80008f4:	2303      	movs	r3, #3
 80008f6:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 80008f8:	2302      	movs	r3, #2
 80008fa:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 80008fc:	2302      	movs	r3, #2
 80008fe:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000900:	1d3b      	adds	r3, r7, #4
 8000902:	4619      	mov	r1, r3
 8000904:	4807      	ldr	r0, [pc, #28]	; (8000924 <MX_FMC_Init+0xa0>)
 8000906:	f006 fa3b 	bl	8006d80 <HAL_SDRAM_Init>
 800090a:	4603      	mov	r3, r0
 800090c:	2b00      	cmp	r3, #0
 800090e:	d001      	beq.n	8000914 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000910:	f000 f954 	bl	8000bbc <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  SDRAM_Initialization_Sequence(&hsdram1,&command);
 8000914:	4905      	ldr	r1, [pc, #20]	; (800092c <MX_FMC_Init+0xa8>)
 8000916:	4803      	ldr	r0, [pc, #12]	; (8000924 <MX_FMC_Init+0xa0>)
 8000918:	f000 f8b0 	bl	8000a7c <SDRAM_Initialization_Sequence>
  /* USER CODE END FMC_Init 2 */
}
 800091c:	bf00      	nop
 800091e:	3720      	adds	r7, #32
 8000920:	46bd      	mov	sp, r7
 8000922:	bd80      	pop	{r7, pc}
 8000924:	20008d08 	.word	0x20008d08
 8000928:	a0000140 	.word	0xa0000140
 800092c:	20008c3c 	.word	0x20008c3c

08000930 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000930:	b580      	push	{r7, lr}
 8000932:	b08e      	sub	sp, #56	; 0x38
 8000934:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000936:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800093a:	2200      	movs	r2, #0
 800093c:	601a      	str	r2, [r3, #0]
 800093e:	605a      	str	r2, [r3, #4]
 8000940:	609a      	str	r2, [r3, #8]
 8000942:	60da      	str	r2, [r3, #12]
 8000944:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000946:	2300      	movs	r3, #0
 8000948:	623b      	str	r3, [r7, #32]
 800094a:	4b49      	ldr	r3, [pc, #292]	; (8000a70 <MX_GPIO_Init+0x140>)
 800094c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800094e:	4a48      	ldr	r2, [pc, #288]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000950:	f043 0320 	orr.w	r3, r3, #32
 8000954:	6313      	str	r3, [r2, #48]	; 0x30
 8000956:	4b46      	ldr	r3, [pc, #280]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800095a:	f003 0320 	and.w	r3, r3, #32
 800095e:	623b      	str	r3, [r7, #32]
 8000960:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000962:	2300      	movs	r3, #0
 8000964:	61fb      	str	r3, [r7, #28]
 8000966:	4b42      	ldr	r3, [pc, #264]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000968:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800096a:	4a41      	ldr	r2, [pc, #260]	; (8000a70 <MX_GPIO_Init+0x140>)
 800096c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000970:	6313      	str	r3, [r2, #48]	; 0x30
 8000972:	4b3f      	ldr	r3, [pc, #252]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000976:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800097a:	61fb      	str	r3, [r7, #28]
 800097c:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800097e:	2300      	movs	r3, #0
 8000980:	61bb      	str	r3, [r7, #24]
 8000982:	4b3b      	ldr	r3, [pc, #236]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000984:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000986:	4a3a      	ldr	r2, [pc, #232]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000988:	f043 0304 	orr.w	r3, r3, #4
 800098c:	6313      	str	r3, [r2, #48]	; 0x30
 800098e:	4b38      	ldr	r3, [pc, #224]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000990:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000992:	f003 0304 	and.w	r3, r3, #4
 8000996:	61bb      	str	r3, [r7, #24]
 8000998:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800099a:	2300      	movs	r3, #0
 800099c:	617b      	str	r3, [r7, #20]
 800099e:	4b34      	ldr	r3, [pc, #208]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009a2:	4a33      	ldr	r2, [pc, #204]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009a4:	f043 0301 	orr.w	r3, r3, #1
 80009a8:	6313      	str	r3, [r2, #48]	; 0x30
 80009aa:	4b31      	ldr	r3, [pc, #196]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009ae:	f003 0301 	and.w	r3, r3, #1
 80009b2:	617b      	str	r3, [r7, #20]
 80009b4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009b6:	2300      	movs	r3, #0
 80009b8:	613b      	str	r3, [r7, #16]
 80009ba:	4b2d      	ldr	r3, [pc, #180]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009be:	4a2c      	ldr	r2, [pc, #176]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009c0:	f043 0302 	orr.w	r3, r3, #2
 80009c4:	6313      	str	r3, [r2, #48]	; 0x30
 80009c6:	4b2a      	ldr	r3, [pc, #168]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009ca:	f003 0302 	and.w	r3, r3, #2
 80009ce:	613b      	str	r3, [r7, #16]
 80009d0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80009d2:	2300      	movs	r3, #0
 80009d4:	60fb      	str	r3, [r7, #12]
 80009d6:	4b26      	ldr	r3, [pc, #152]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009da:	4a25      	ldr	r2, [pc, #148]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009e0:	6313      	str	r3, [r2, #48]	; 0x30
 80009e2:	4b23      	ldr	r3, [pc, #140]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009e6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80009ea:	60fb      	str	r3, [r7, #12]
 80009ec:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80009ee:	2300      	movs	r3, #0
 80009f0:	60bb      	str	r3, [r7, #8]
 80009f2:	4b1f      	ldr	r3, [pc, #124]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009f6:	4a1e      	ldr	r2, [pc, #120]	; (8000a70 <MX_GPIO_Init+0x140>)
 80009f8:	f043 0310 	orr.w	r3, r3, #16
 80009fc:	6313      	str	r3, [r2, #48]	; 0x30
 80009fe:	4b1c      	ldr	r3, [pc, #112]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a02:	f003 0310 	and.w	r3, r3, #16
 8000a06:	60bb      	str	r3, [r7, #8]
 8000a08:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	607b      	str	r3, [r7, #4]
 8000a0e:	4b18      	ldr	r3, [pc, #96]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000a10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a12:	4a17      	ldr	r2, [pc, #92]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000a14:	f043 0308 	orr.w	r3, r3, #8
 8000a18:	6313      	str	r3, [r2, #48]	; 0x30
 8000a1a:	4b15      	ldr	r3, [pc, #84]	; (8000a70 <MX_GPIO_Init+0x140>)
 8000a1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a1e:	f003 0308 	and.w	r3, r3, #8
 8000a22:	607b      	str	r3, [r7, #4]
 8000a24:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8000a26:	2200      	movs	r2, #0
 8000a28:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 8000a2c:	4811      	ldr	r0, [pc, #68]	; (8000a74 <MX_GPIO_Init+0x144>)
 8000a2e:	f004 ff4f 	bl	80058d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000a32:	2301      	movs	r3, #1
 8000a34:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a36:	2300      	movs	r3, #0
 8000a38:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a3e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a42:	4619      	mov	r1, r3
 8000a44:	480c      	ldr	r0, [pc, #48]	; (8000a78 <MX_GPIO_Init+0x148>)
 8000a46:	f004 fd99 	bl	800557c <HAL_GPIO_Init>

  /*Configure GPIO pins : PG13 PG14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8000a4a:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8000a4e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a50:	2301      	movs	r3, #1
 8000a52:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a54:	2300      	movs	r3, #0
 8000a56:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a58:	2300      	movs	r3, #0
 8000a5a:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000a5c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a60:	4619      	mov	r1, r3
 8000a62:	4804      	ldr	r0, [pc, #16]	; (8000a74 <MX_GPIO_Init+0x144>)
 8000a64:	f004 fd8a 	bl	800557c <HAL_GPIO_Init>

}
 8000a68:	bf00      	nop
 8000a6a:	3738      	adds	r7, #56	; 0x38
 8000a6c:	46bd      	mov	sp, r7
 8000a6e:	bd80      	pop	{r7, pc}
 8000a70:	40023800 	.word	0x40023800
 8000a74:	40021800 	.word	0x40021800
 8000a78:	40020000 	.word	0x40020000

08000a7c <SDRAM_Initialization_Sequence>:

/* USER CODE BEGIN 4 */
static void SDRAM_Initialization_Sequence(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command)
{
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b084      	sub	sp, #16
 8000a80:	af00      	add	r7, sp, #0
 8000a82:	6078      	str	r0, [r7, #4]
 8000a84:	6039      	str	r1, [r7, #0]
  __IO uint32_t tmpmrd =0;
 8000a86:	2300      	movs	r3, #0
 8000a88:	60fb      	str	r3, [r7, #12]
  /* Step 3:  Configure a clock configuration enable command */
  Command->CommandMode 			 = FMC_SDRAM_CMD_CLK_ENABLE;
 8000a8a:	683b      	ldr	r3, [r7, #0]
 8000a8c:	2201      	movs	r2, #1
 8000a8e:	601a      	str	r2, [r3, #0]
  Command->CommandTarget 		 = FMC_SDRAM_CMD_TARGET_BANK2;
 8000a90:	683b      	ldr	r3, [r7, #0]
 8000a92:	2208      	movs	r2, #8
 8000a94:	605a      	str	r2, [r3, #4]
  Command->AutoRefreshNumber 	 = 1;
 8000a96:	683b      	ldr	r3, [r7, #0]
 8000a98:	2201      	movs	r2, #1
 8000a9a:	609a      	str	r2, [r3, #8]
  Command->ModeRegisterDefinition = 0;
 8000a9c:	683b      	ldr	r3, [r7, #0]
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(hsdram, Command, 0x1000);
 8000aa2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000aa6:	6839      	ldr	r1, [r7, #0]
 8000aa8:	6878      	ldr	r0, [r7, #4]
 8000aaa:	f006 f9c1 	bl	8006e30 <HAL_SDRAM_SendCommand>

  /* Step 4: Insert 100 ms delay */
  HAL_Delay(100);
 8000aae:	2064      	movs	r0, #100	; 0x64
 8000ab0:	f004 fc44 	bl	800533c <HAL_Delay>

  /* Step 5: Configure a PALL (precharge all) command */
  Command->CommandMode 			 = FMC_SDRAM_CMD_PALL;
 8000ab4:	683b      	ldr	r3, [r7, #0]
 8000ab6:	2202      	movs	r2, #2
 8000ab8:	601a      	str	r2, [r3, #0]
  Command->CommandTarget 	     = FMC_SDRAM_CMD_TARGET_BANK2;
 8000aba:	683b      	ldr	r3, [r7, #0]
 8000abc:	2208      	movs	r2, #8
 8000abe:	605a      	str	r2, [r3, #4]
  Command->AutoRefreshNumber 	 = 1;
 8000ac0:	683b      	ldr	r3, [r7, #0]
 8000ac2:	2201      	movs	r2, #1
 8000ac4:	609a      	str	r2, [r3, #8]
  Command->ModeRegisterDefinition = 0;
 8000ac6:	683b      	ldr	r3, [r7, #0]
 8000ac8:	2200      	movs	r2, #0
 8000aca:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(hsdram, Command, 0x1000);
 8000acc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000ad0:	6839      	ldr	r1, [r7, #0]
 8000ad2:	6878      	ldr	r0, [r7, #4]
 8000ad4:	f006 f9ac 	bl	8006e30 <HAL_SDRAM_SendCommand>

  /* Step 6 : Configure a Auto-Refresh command */
  Command->CommandMode 			 = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8000ad8:	683b      	ldr	r3, [r7, #0]
 8000ada:	2203      	movs	r2, #3
 8000adc:	601a      	str	r2, [r3, #0]
  Command->CommandTarget 		 = FMC_SDRAM_CMD_TARGET_BANK2;
 8000ade:	683b      	ldr	r3, [r7, #0]
 8000ae0:	2208      	movs	r2, #8
 8000ae2:	605a      	str	r2, [r3, #4]
  Command->AutoRefreshNumber 	 = 4;
 8000ae4:	683b      	ldr	r3, [r7, #0]
 8000ae6:	2204      	movs	r2, #4
 8000ae8:	609a      	str	r2, [r3, #8]
  Command->ModeRegisterDefinition = 0;
 8000aea:	683b      	ldr	r3, [r7, #0]
 8000aec:	2200      	movs	r2, #0
 8000aee:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(hsdram, Command, 0x1000);
 8000af0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000af4:	6839      	ldr	r1, [r7, #0]
 8000af6:	6878      	ldr	r0, [r7, #4]
 8000af8:	f006 f99a 	bl	8006e30 <HAL_SDRAM_SendCommand>

  /* Step 7: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_2          |
 8000afc:	f240 2331 	movw	r3, #561	; 0x231
 8000b00:	60fb      	str	r3, [r7, #12]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |
                     SDRAM_MODEREG_CAS_LATENCY_3           |
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command->CommandMode = FMC_SDRAM_CMD_LOAD_MODE;
 8000b02:	683b      	ldr	r3, [r7, #0]
 8000b04:	2204      	movs	r2, #4
 8000b06:	601a      	str	r2, [r3, #0]
  Command->CommandTarget 		 = FMC_SDRAM_CMD_TARGET_BANK2;
 8000b08:	683b      	ldr	r3, [r7, #0]
 8000b0a:	2208      	movs	r2, #8
 8000b0c:	605a      	str	r2, [r3, #4]
  Command->AutoRefreshNumber 	 = 1;
 8000b0e:	683b      	ldr	r3, [r7, #0]
 8000b10:	2201      	movs	r2, #1
 8000b12:	609a      	str	r2, [r3, #8]
  Command->ModeRegisterDefinition = tmpmrd;
 8000b14:	68fa      	ldr	r2, [r7, #12]
 8000b16:	683b      	ldr	r3, [r7, #0]
 8000b18:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(hsdram, Command, 0x1000);
 8000b1a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000b1e:	6839      	ldr	r1, [r7, #0]
 8000b20:	6878      	ldr	r0, [r7, #4]
 8000b22:	f006 f985 	bl	8006e30 <HAL_SDRAM_SendCommand>

  /* Step 8: Set the refresh rate counter */
  /* (15.62 us x Freq) - 20 */
  /* Set the device refresh counter */
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000b26:	f240 516a 	movw	r1, #1386	; 0x56a
 8000b2a:	6878      	ldr	r0, [r7, #4]
 8000b2c:	f006 f9ab 	bl	8006e86 <HAL_SDRAM_ProgramRefreshRate>
}
 8000b30:	bf00      	nop
 8000b32:	3710      	adds	r7, #16
 8000b34:	46bd      	mov	sp, r7
 8000b36:	bd80      	pop	{r7, pc}

08000b38 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	b084      	sub	sp, #16
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	bool bToggle;
	HAL_GPIO_TogglePin(GPIOG, ((bToggle) ? (GPIO_PIN_13) : (GPIO_PIN_14)));
 8000b40:	7bfb      	ldrb	r3, [r7, #15]
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d002      	beq.n	8000b4c <StartDefaultTask+0x14>
 8000b46:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000b4a:	e001      	b.n	8000b50 <StartDefaultTask+0x18>
 8000b4c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000b50:	4619      	mov	r1, r3
 8000b52:	480b      	ldr	r0, [pc, #44]	; (8000b80 <StartDefaultTask+0x48>)
 8000b54:	f004 fed5 	bl	8005902 <HAL_GPIO_TogglePin>
	bToggle = !bToggle;
 8000b58:	7bfb      	ldrb	r3, [r7, #15]
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	bf14      	ite	ne
 8000b5e:	2301      	movne	r3, #1
 8000b60:	2300      	moveq	r3, #0
 8000b62:	b2db      	uxtb	r3, r3
 8000b64:	f083 0301 	eor.w	r3, r3, #1
 8000b68:	b2db      	uxtb	r3, r3
 8000b6a:	73fb      	strb	r3, [r7, #15]
 8000b6c:	7bfb      	ldrb	r3, [r7, #15]
 8000b6e:	f003 0301 	and.w	r3, r3, #1
 8000b72:	73fb      	strb	r3, [r7, #15]
    osDelay(500);
 8000b74:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000b78:	f006 fffe 	bl	8007b78 <osDelay>
  {
 8000b7c:	e7e0      	b.n	8000b40 <StartDefaultTask+0x8>
 8000b7e:	bf00      	nop
 8000b80:	40021800 	.word	0x40021800

08000b84 <StartTGFX_Task>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTGFX_Task */
void StartTGFX_Task(void const * argument)
{
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b082      	sub	sp, #8
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTGFX_Task */
	MX_TouchGFX_Process();
 8000b8c:	f000 fbb7 	bl	80012fe <MX_TouchGFX_Process>
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8000b90:	2001      	movs	r0, #1
 8000b92:	f006 fff1 	bl	8007b78 <osDelay>
 8000b96:	e7fb      	b.n	8000b90 <StartTGFX_Task+0xc>

08000b98 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000b98:	b580      	push	{r7, lr}
 8000b9a:	b082      	sub	sp, #8
 8000b9c:	af00      	add	r7, sp, #0
 8000b9e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	4a04      	ldr	r2, [pc, #16]	; (8000bb8 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000ba6:	4293      	cmp	r3, r2
 8000ba8:	d101      	bne.n	8000bae <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000baa:	f004 fba7 	bl	80052fc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000bae:	bf00      	nop
 8000bb0:	3708      	adds	r7, #8
 8000bb2:	46bd      	mov	sp, r7
 8000bb4:	bd80      	pop	{r7, pc}
 8000bb6:	bf00      	nop
 8000bb8:	40010000 	.word	0x40010000

08000bbc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000bbc:	b480      	push	{r7}
 8000bbe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000bc0:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000bc2:	e7fe      	b.n	8000bc2 <Error_Handler+0x6>

08000bc4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	b082      	sub	sp, #8
 8000bc8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000bca:	2300      	movs	r3, #0
 8000bcc:	607b      	str	r3, [r7, #4]
 8000bce:	4b12      	ldr	r3, [pc, #72]	; (8000c18 <HAL_MspInit+0x54>)
 8000bd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bd2:	4a11      	ldr	r2, [pc, #68]	; (8000c18 <HAL_MspInit+0x54>)
 8000bd4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000bd8:	6453      	str	r3, [r2, #68]	; 0x44
 8000bda:	4b0f      	ldr	r3, [pc, #60]	; (8000c18 <HAL_MspInit+0x54>)
 8000bdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bde:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000be2:	607b      	str	r3, [r7, #4]
 8000be4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000be6:	2300      	movs	r3, #0
 8000be8:	603b      	str	r3, [r7, #0]
 8000bea:	4b0b      	ldr	r3, [pc, #44]	; (8000c18 <HAL_MspInit+0x54>)
 8000bec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bee:	4a0a      	ldr	r2, [pc, #40]	; (8000c18 <HAL_MspInit+0x54>)
 8000bf0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000bf4:	6413      	str	r3, [r2, #64]	; 0x40
 8000bf6:	4b08      	ldr	r3, [pc, #32]	; (8000c18 <HAL_MspInit+0x54>)
 8000bf8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bfa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000bfe:	603b      	str	r3, [r7, #0]
 8000c00:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c02:	2200      	movs	r2, #0
 8000c04:	210f      	movs	r1, #15
 8000c06:	f06f 0001 	mvn.w	r0, #1
 8000c0a:	f004 fc71 	bl	80054f0 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c0e:	bf00      	nop
 8000c10:	3708      	adds	r7, #8
 8000c12:	46bd      	mov	sp, r7
 8000c14:	bd80      	pop	{r7, pc}
 8000c16:	bf00      	nop
 8000c18:	40023800 	.word	0x40023800

08000c1c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000c1c:	b480      	push	{r7}
 8000c1e:	b085      	sub	sp, #20
 8000c20:	af00      	add	r7, sp, #0
 8000c22:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000c24:	687b      	ldr	r3, [r7, #4]
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	4a0b      	ldr	r2, [pc, #44]	; (8000c58 <HAL_CRC_MspInit+0x3c>)
 8000c2a:	4293      	cmp	r3, r2
 8000c2c:	d10d      	bne.n	8000c4a <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000c2e:	2300      	movs	r3, #0
 8000c30:	60fb      	str	r3, [r7, #12]
 8000c32:	4b0a      	ldr	r3, [pc, #40]	; (8000c5c <HAL_CRC_MspInit+0x40>)
 8000c34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c36:	4a09      	ldr	r2, [pc, #36]	; (8000c5c <HAL_CRC_MspInit+0x40>)
 8000c38:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000c3c:	6313      	str	r3, [r2, #48]	; 0x30
 8000c3e:	4b07      	ldr	r3, [pc, #28]	; (8000c5c <HAL_CRC_MspInit+0x40>)
 8000c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c42:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000c46:	60fb      	str	r3, [r7, #12]
 8000c48:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000c4a:	bf00      	nop
 8000c4c:	3714      	adds	r7, #20
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop
 8000c58:	40023000 	.word	0x40023000
 8000c5c:	40023800 	.word	0x40023800

08000c60 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000c60:	b580      	push	{r7, lr}
 8000c62:	b08e      	sub	sp, #56	; 0x38
 8000c64:	af00      	add	r7, sp, #0
 8000c66:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c68:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	601a      	str	r2, [r3, #0]
 8000c70:	605a      	str	r2, [r3, #4]
 8000c72:	609a      	str	r2, [r3, #8]
 8000c74:	60da      	str	r2, [r3, #12]
 8000c76:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	4a7f      	ldr	r2, [pc, #508]	; (8000e7c <HAL_LTDC_MspInit+0x21c>)
 8000c7e:	4293      	cmp	r3, r2
 8000c80:	f040 80f8 	bne.w	8000e74 <HAL_LTDC_MspInit+0x214>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000c84:	2300      	movs	r3, #0
 8000c86:	623b      	str	r3, [r7, #32]
 8000c88:	4b7d      	ldr	r3, [pc, #500]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000c8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c8c:	4a7c      	ldr	r2, [pc, #496]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000c8e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000c92:	6453      	str	r3, [r2, #68]	; 0x44
 8000c94:	4b7a      	ldr	r3, [pc, #488]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000c96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c98:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8000c9c:	623b      	str	r3, [r7, #32]
 8000c9e:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	61fb      	str	r3, [r7, #28]
 8000ca4:	4b76      	ldr	r3, [pc, #472]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000ca6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ca8:	4a75      	ldr	r2, [pc, #468]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000caa:	f043 0320 	orr.w	r3, r3, #32
 8000cae:	6313      	str	r3, [r2, #48]	; 0x30
 8000cb0:	4b73      	ldr	r3, [pc, #460]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cb4:	f003 0320 	and.w	r3, r3, #32
 8000cb8:	61fb      	str	r3, [r7, #28]
 8000cba:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	61bb      	str	r3, [r7, #24]
 8000cc0:	4b6f      	ldr	r3, [pc, #444]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cc4:	4a6e      	ldr	r2, [pc, #440]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cc6:	f043 0301 	orr.w	r3, r3, #1
 8000cca:	6313      	str	r3, [r2, #48]	; 0x30
 8000ccc:	4b6c      	ldr	r3, [pc, #432]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cd0:	f003 0301 	and.w	r3, r3, #1
 8000cd4:	61bb      	str	r3, [r7, #24]
 8000cd6:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cd8:	2300      	movs	r3, #0
 8000cda:	617b      	str	r3, [r7, #20]
 8000cdc:	4b68      	ldr	r3, [pc, #416]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ce0:	4a67      	ldr	r2, [pc, #412]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000ce2:	f043 0302 	orr.w	r3, r3, #2
 8000ce6:	6313      	str	r3, [r2, #48]	; 0x30
 8000ce8:	4b65      	ldr	r3, [pc, #404]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cec:	f003 0302 	and.w	r3, r3, #2
 8000cf0:	617b      	str	r3, [r7, #20]
 8000cf2:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	613b      	str	r3, [r7, #16]
 8000cf8:	4b61      	ldr	r3, [pc, #388]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cfc:	4a60      	ldr	r2, [pc, #384]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000cfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d02:	6313      	str	r3, [r2, #48]	; 0x30
 8000d04:	4b5e      	ldr	r3, [pc, #376]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d08:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d0c:	613b      	str	r3, [r7, #16]
 8000d0e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d10:	2300      	movs	r3, #0
 8000d12:	60fb      	str	r3, [r7, #12]
 8000d14:	4b5a      	ldr	r3, [pc, #360]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d18:	4a59      	ldr	r2, [pc, #356]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d1a:	f043 0304 	orr.w	r3, r3, #4
 8000d1e:	6313      	str	r3, [r2, #48]	; 0x30
 8000d20:	4b57      	ldr	r3, [pc, #348]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d24:	f003 0304 	and.w	r3, r3, #4
 8000d28:	60fb      	str	r3, [r7, #12]
 8000d2a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	60bb      	str	r3, [r7, #8]
 8000d30:	4b53      	ldr	r3, [pc, #332]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d34:	4a52      	ldr	r2, [pc, #328]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d36:	f043 0308 	orr.w	r3, r3, #8
 8000d3a:	6313      	str	r3, [r2, #48]	; 0x30
 8000d3c:	4b50      	ldr	r3, [pc, #320]	; (8000e80 <HAL_LTDC_MspInit+0x220>)
 8000d3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d40:	f003 0308 	and.w	r3, r3, #8
 8000d44:	60bb      	str	r3, [r7, #8]
 8000d46:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000d48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d4c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d4e:	2302      	movs	r3, #2
 8000d50:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d52:	2300      	movs	r3, #0
 8000d54:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d56:	2300      	movs	r3, #0
 8000d58:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000d5a:	230e      	movs	r3, #14
 8000d5c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000d5e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000d62:	4619      	mov	r1, r3
 8000d64:	4847      	ldr	r0, [pc, #284]	; (8000e84 <HAL_LTDC_MspInit+0x224>)
 8000d66:	f004 fc09 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8000d6a:	f641 0358 	movw	r3, #6232	; 0x1858
 8000d6e:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d70:	2302      	movs	r3, #2
 8000d72:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d74:	2300      	movs	r3, #0
 8000d76:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d78:	2300      	movs	r3, #0
 8000d7a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000d7c:	230e      	movs	r3, #14
 8000d7e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000d84:	4619      	mov	r1, r3
 8000d86:	4840      	ldr	r0, [pc, #256]	; (8000e88 <HAL_LTDC_MspInit+0x228>)
 8000d88:	f004 fbf8 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000d8c:	2303      	movs	r3, #3
 8000d8e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d90:	2302      	movs	r3, #2
 8000d92:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d94:	2300      	movs	r3, #0
 8000d96:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d98:	2300      	movs	r3, #0
 8000d9a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000d9c:	2309      	movs	r3, #9
 8000d9e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000da0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000da4:	4619      	mov	r1, r3
 8000da6:	4839      	ldr	r0, [pc, #228]	; (8000e8c <HAL_LTDC_MspInit+0x22c>)
 8000da8:	f004 fbe8 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8000dac:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8000db0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000db2:	2302      	movs	r3, #2
 8000db4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000db6:	2300      	movs	r3, #0
 8000db8:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dba:	2300      	movs	r3, #0
 8000dbc:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000dbe:	230e      	movs	r3, #14
 8000dc0:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000dc2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dc6:	4619      	mov	r1, r3
 8000dc8:	4830      	ldr	r0, [pc, #192]	; (8000e8c <HAL_LTDC_MspInit+0x22c>)
 8000dca:	f004 fbd7 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8000dce:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 8000dd2:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000dd4:	2302      	movs	r3, #2
 8000dd6:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dd8:	2300      	movs	r3, #0
 8000dda:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ddc:	2300      	movs	r3, #0
 8000dde:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000de0:	230e      	movs	r3, #14
 8000de2:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000de4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000de8:	4619      	mov	r1, r3
 8000dea:	4829      	ldr	r0, [pc, #164]	; (8000e90 <HAL_LTDC_MspInit+0x230>)
 8000dec:	f004 fbc6 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_10;
 8000df0:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
 8000df4:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000df6:	2302      	movs	r3, #2
 8000df8:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dfa:	2300      	movs	r3, #0
 8000dfc:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dfe:	2300      	movs	r3, #0
 8000e00:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e02:	230e      	movs	r3, #14
 8000e04:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000e06:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e0a:	4619      	mov	r1, r3
 8000e0c:	4821      	ldr	r0, [pc, #132]	; (8000e94 <HAL_LTDC_MspInit+0x234>)
 8000e0e:	f004 fbb5 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_6;
 8000e12:	2348      	movs	r3, #72	; 0x48
 8000e14:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e16:	2302      	movs	r3, #2
 8000e18:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e1e:	2300      	movs	r3, #0
 8000e20:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000e22:	230e      	movs	r3, #14
 8000e24:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000e26:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e2a:	4619      	mov	r1, r3
 8000e2c:	481a      	ldr	r0, [pc, #104]	; (8000e98 <HAL_LTDC_MspInit+0x238>)
 8000e2e:	f004 fba5 	bl	800557c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8000e32:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000e36:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e38:	2302      	movs	r3, #2
 8000e3a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e40:	2300      	movs	r3, #0
 8000e42:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000e44:	2309      	movs	r3, #9
 8000e46:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e48:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e4c:	4619      	mov	r1, r3
 8000e4e:	4810      	ldr	r0, [pc, #64]	; (8000e90 <HAL_LTDC_MspInit+0x230>)
 8000e50:	f004 fb94 	bl	800557c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8000e54:	2200      	movs	r2, #0
 8000e56:	2105      	movs	r1, #5
 8000e58:	2058      	movs	r0, #88	; 0x58
 8000e5a:	f004 fb49 	bl	80054f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000e5e:	2058      	movs	r0, #88	; 0x58
 8000e60:	f004 fb62 	bl	8005528 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 8000e64:	2200      	movs	r2, #0
 8000e66:	2105      	movs	r1, #5
 8000e68:	2059      	movs	r0, #89	; 0x59
 8000e6a:	f004 fb41 	bl	80054f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000e6e:	2059      	movs	r0, #89	; 0x59
 8000e70:	f004 fb5a 	bl	8005528 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000e74:	bf00      	nop
 8000e76:	3738      	adds	r7, #56	; 0x38
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	bd80      	pop	{r7, pc}
 8000e7c:	40016800 	.word	0x40016800
 8000e80:	40023800 	.word	0x40023800
 8000e84:	40021400 	.word	0x40021400
 8000e88:	40020000 	.word	0x40020000
 8000e8c:	40020400 	.word	0x40020400
 8000e90:	40021800 	.word	0x40021800
 8000e94:	40020800 	.word	0x40020800
 8000e98:	40020c00 	.word	0x40020c00

08000e9c <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b086      	sub	sp, #24
 8000ea0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8000ea2:	1d3b      	adds	r3, r7, #4
 8000ea4:	2200      	movs	r2, #0
 8000ea6:	601a      	str	r2, [r3, #0]
 8000ea8:	605a      	str	r2, [r3, #4]
 8000eaa:	609a      	str	r2, [r3, #8]
 8000eac:	60da      	str	r2, [r3, #12]
 8000eae:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8000eb0:	4b3f      	ldr	r3, [pc, #252]	; (8000fb0 <HAL_FMC_MspInit+0x114>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	d177      	bne.n	8000fa8 <HAL_FMC_MspInit+0x10c>
    return;
  }
  FMC_Initialized = 1;
 8000eb8:	4b3d      	ldr	r3, [pc, #244]	; (8000fb0 <HAL_FMC_MspInit+0x114>)
 8000eba:	2201      	movs	r2, #1
 8000ebc:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	603b      	str	r3, [r7, #0]
 8000ec2:	4b3c      	ldr	r3, [pc, #240]	; (8000fb4 <HAL_FMC_MspInit+0x118>)
 8000ec4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ec6:	4a3b      	ldr	r2, [pc, #236]	; (8000fb4 <HAL_FMC_MspInit+0x118>)
 8000ec8:	f043 0301 	orr.w	r3, r3, #1
 8000ecc:	6393      	str	r3, [r2, #56]	; 0x38
 8000ece:	4b39      	ldr	r3, [pc, #228]	; (8000fb4 <HAL_FMC_MspInit+0x118>)
 8000ed0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ed2:	f003 0301 	and.w	r3, r3, #1
 8000ed6:	603b      	str	r3, [r7, #0]
 8000ed8:	683b      	ldr	r3, [r7, #0]
  PB5   ------> FMC_SDCKE1
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8000eda:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8000ede:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee0:	2302      	movs	r3, #2
 8000ee2:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ee8:	2303      	movs	r3, #3
 8000eea:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000eec:	230c      	movs	r3, #12
 8000eee:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ef0:	1d3b      	adds	r3, r7, #4
 8000ef2:	4619      	mov	r1, r3
 8000ef4:	4830      	ldr	r0, [pc, #192]	; (8000fb8 <HAL_FMC_MspInit+0x11c>)
 8000ef6:	f004 fb41 	bl	800557c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000efa:	2301      	movs	r3, #1
 8000efc:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000efe:	2302      	movs	r3, #2
 8000f00:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f02:	2300      	movs	r3, #0
 8000f04:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f06:	2303      	movs	r3, #3
 8000f08:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000f0a:	230c      	movs	r3, #12
 8000f0c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000f0e:	1d3b      	adds	r3, r7, #4
 8000f10:	4619      	mov	r1, r3
 8000f12:	482a      	ldr	r0, [pc, #168]	; (8000fbc <HAL_FMC_MspInit+0x120>)
 8000f14:	f004 fb32 	bl	800557c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8000f18:	f248 1333 	movw	r3, #33075	; 0x8133
 8000f1c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f1e:	2302      	movs	r3, #2
 8000f20:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f22:	2300      	movs	r3, #0
 8000f24:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f26:	2303      	movs	r3, #3
 8000f28:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000f2a:	230c      	movs	r3, #12
 8000f2c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f2e:	1d3b      	adds	r3, r7, #4
 8000f30:	4619      	mov	r1, r3
 8000f32:	4823      	ldr	r0, [pc, #140]	; (8000fc0 <HAL_FMC_MspInit+0x124>)
 8000f34:	f004 fb22 	bl	800557c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000f38:	f64f 7383 	movw	r3, #65411	; 0xff83
 8000f3c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f3e:	2302      	movs	r3, #2
 8000f40:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f42:	2300      	movs	r3, #0
 8000f44:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f46:	2303      	movs	r3, #3
 8000f48:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000f4a:	230c      	movs	r3, #12
 8000f4c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f4e:	1d3b      	adds	r3, r7, #4
 8000f50:	4619      	mov	r1, r3
 8000f52:	481c      	ldr	r0, [pc, #112]	; (8000fc4 <HAL_FMC_MspInit+0x128>)
 8000f54:	f004 fb12 	bl	800557c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8000f58:	f24c 7303 	movw	r3, #50947	; 0xc703
 8000f5c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f5e:	2302      	movs	r3, #2
 8000f60:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f62:	2300      	movs	r3, #0
 8000f64:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f66:	2303      	movs	r3, #3
 8000f68:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000f6a:	230c      	movs	r3, #12
 8000f6c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f6e:	1d3b      	adds	r3, r7, #4
 8000f70:	4619      	mov	r1, r3
 8000f72:	4815      	ldr	r0, [pc, #84]	; (8000fc8 <HAL_FMC_MspInit+0x12c>)
 8000f74:	f004 fb02 	bl	800557c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8000f78:	2360      	movs	r3, #96	; 0x60
 8000f7a:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f7c:	2302      	movs	r3, #2
 8000f7e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f80:	2300      	movs	r3, #0
 8000f82:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f84:	2303      	movs	r3, #3
 8000f86:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000f88:	230c      	movs	r3, #12
 8000f8a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000f8c:	1d3b      	adds	r3, r7, #4
 8000f8e:	4619      	mov	r1, r3
 8000f90:	480e      	ldr	r0, [pc, #56]	; (8000fcc <HAL_FMC_MspInit+0x130>)
 8000f92:	f004 faf3 	bl	800557c <HAL_GPIO_Init>

  /* Peripheral interrupt init */
  HAL_NVIC_SetPriority(FMC_IRQn, 5, 0);
 8000f96:	2200      	movs	r2, #0
 8000f98:	2105      	movs	r1, #5
 8000f9a:	2030      	movs	r0, #48	; 0x30
 8000f9c:	f004 faa8 	bl	80054f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(FMC_IRQn);
 8000fa0:	2030      	movs	r0, #48	; 0x30
 8000fa2:	f004 fac1 	bl	8005528 <HAL_NVIC_EnableIRQ>
 8000fa6:	e000      	b.n	8000faa <HAL_FMC_MspInit+0x10e>
    return;
 8000fa8:	bf00      	nop
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8000faa:	3718      	adds	r7, #24
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	20000364 	.word	0x20000364
 8000fb4:	40023800 	.word	0x40023800
 8000fb8:	40021400 	.word	0x40021400
 8000fbc:	40020800 	.word	0x40020800
 8000fc0:	40021800 	.word	0x40021800
 8000fc4:	40021000 	.word	0x40021000
 8000fc8:	40020c00 	.word	0x40020c00
 8000fcc:	40020400 	.word	0x40020400

08000fd0 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8000fd0:	b580      	push	{r7, lr}
 8000fd2:	b082      	sub	sp, #8
 8000fd4:	af00      	add	r7, sp, #0
 8000fd6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8000fd8:	f7ff ff60 	bl	8000e9c <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000fdc:	bf00      	nop
 8000fde:	3708      	adds	r7, #8
 8000fe0:	46bd      	mov	sp, r7
 8000fe2:	bd80      	pop	{r7, pc}

08000fe4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	b08c      	sub	sp, #48	; 0x30
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8000fec:	2300      	movs	r3, #0
 8000fee:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  /*Configure the TIM1 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	6879      	ldr	r1, [r7, #4]
 8000ff8:	2019      	movs	r0, #25
 8000ffa:	f004 fa79 	bl	80054f0 <HAL_NVIC_SetPriority>

  /* Enable the TIM1 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8000ffe:	2019      	movs	r0, #25
 8001000:	f004 fa92 	bl	8005528 <HAL_NVIC_EnableIRQ>
  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();
 8001004:	2300      	movs	r3, #0
 8001006:	60fb      	str	r3, [r7, #12]
 8001008:	4b1f      	ldr	r3, [pc, #124]	; (8001088 <HAL_InitTick+0xa4>)
 800100a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800100c:	4a1e      	ldr	r2, [pc, #120]	; (8001088 <HAL_InitTick+0xa4>)
 800100e:	f043 0301 	orr.w	r3, r3, #1
 8001012:	6453      	str	r3, [r2, #68]	; 0x44
 8001014:	4b1c      	ldr	r3, [pc, #112]	; (8001088 <HAL_InitTick+0xa4>)
 8001016:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001018:	f003 0301 	and.w	r3, r3, #1
 800101c:	60fb      	str	r3, [r7, #12]
 800101e:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001020:	f107 0210 	add.w	r2, r7, #16
 8001024:	f107 0314 	add.w	r3, r7, #20
 8001028:	4611      	mov	r1, r2
 800102a:	4618      	mov	r0, r3
 800102c:	f005 fcb8 	bl	80069a0 <HAL_RCC_GetClockConfig>

  /* Compute TIM1 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001030:	f005 fca2 	bl	8006978 <HAL_RCC_GetPCLK2Freq>
 8001034:	4603      	mov	r3, r0
 8001036:	005b      	lsls	r3, r3, #1
 8001038:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800103a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800103c:	4a13      	ldr	r2, [pc, #76]	; (800108c <HAL_InitTick+0xa8>)
 800103e:	fba2 2303 	umull	r2, r3, r2, r3
 8001042:	0c9b      	lsrs	r3, r3, #18
 8001044:	3b01      	subs	r3, #1
 8001046:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 8001048:	4b11      	ldr	r3, [pc, #68]	; (8001090 <HAL_InitTick+0xac>)
 800104a:	4a12      	ldr	r2, [pc, #72]	; (8001094 <HAL_InitTick+0xb0>)
 800104c:	601a      	str	r2, [r3, #0]
  + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim1.Init.Period = (1000000U / 1000U) - 1U;
 800104e:	4b10      	ldr	r3, [pc, #64]	; (8001090 <HAL_InitTick+0xac>)
 8001050:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001054:	60da      	str	r2, [r3, #12]
  htim1.Init.Prescaler = uwPrescalerValue;
 8001056:	4a0e      	ldr	r2, [pc, #56]	; (8001090 <HAL_InitTick+0xac>)
 8001058:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800105a:	6053      	str	r3, [r2, #4]
  htim1.Init.ClockDivision = 0;
 800105c:	4b0c      	ldr	r3, [pc, #48]	; (8001090 <HAL_InitTick+0xac>)
 800105e:	2200      	movs	r2, #0
 8001060:	611a      	str	r2, [r3, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001062:	4b0b      	ldr	r3, [pc, #44]	; (8001090 <HAL_InitTick+0xac>)
 8001064:	2200      	movs	r2, #0
 8001066:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 8001068:	4809      	ldr	r0, [pc, #36]	; (8001090 <HAL_InitTick+0xac>)
 800106a:	f006 f989 	bl	8007380 <HAL_TIM_Base_Init>
 800106e:	4603      	mov	r3, r0
 8001070:	2b00      	cmp	r3, #0
 8001072:	d104      	bne.n	800107e <HAL_InitTick+0x9a>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim1);
 8001074:	4806      	ldr	r0, [pc, #24]	; (8001090 <HAL_InitTick+0xac>)
 8001076:	f006 f9b8 	bl	80073ea <HAL_TIM_Base_Start_IT>
 800107a:	4603      	mov	r3, r0
 800107c:	e000      	b.n	8001080 <HAL_InitTick+0x9c>
  }

  /* Return function status */
  return HAL_ERROR;
 800107e:	2301      	movs	r3, #1
}
 8001080:	4618      	mov	r0, r3
 8001082:	3730      	adds	r7, #48	; 0x30
 8001084:	46bd      	mov	sp, r7
 8001086:	bd80      	pop	{r7, pc}
 8001088:	40023800 	.word	0x40023800
 800108c:	431bde83 	.word	0x431bde83
 8001090:	20008d3c 	.word	0x20008d3c
 8001094:	40010000 	.word	0x40010000

08001098 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001098:	b480      	push	{r7}
 800109a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800109c:	e7fe      	b.n	800109c <NMI_Handler+0x4>

0800109e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800109e:	b480      	push	{r7}
 80010a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80010a2:	e7fe      	b.n	80010a2 <HardFault_Handler+0x4>

080010a4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80010a4:	b480      	push	{r7}
 80010a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80010a8:	e7fe      	b.n	80010a8 <MemManage_Handler+0x4>

080010aa <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80010aa:	b480      	push	{r7}
 80010ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80010ae:	e7fe      	b.n	80010ae <BusFault_Handler+0x4>

080010b0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80010b0:	b480      	push	{r7}
 80010b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80010b4:	e7fe      	b.n	80010b4 <UsageFault_Handler+0x4>

080010b6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80010b6:	b480      	push	{r7}
 80010b8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80010ba:	bf00      	nop
 80010bc:	46bd      	mov	sp, r7
 80010be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c2:	4770      	bx	lr

080010c4 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 80010c4:	b580      	push	{r7, lr}
 80010c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80010c8:	4802      	ldr	r0, [pc, #8]	; (80010d4 <TIM1_UP_TIM10_IRQHandler+0x10>)
 80010ca:	f006 f9b2 	bl	8007432 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 80010ce:	bf00      	nop
 80010d0:	bd80      	pop	{r7, pc}
 80010d2:	bf00      	nop
 80010d4:	20008d3c 	.word	0x20008d3c

080010d8 <FMC_IRQHandler>:

/**
  * @brief This function handles FMC global interrupt.
  */
void FMC_IRQHandler(void)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_IRQn 0 */

  /* USER CODE END FMC_IRQn 0 */
  HAL_SDRAM_IRQHandler(&hsdram1);
 80010dc:	4802      	ldr	r0, [pc, #8]	; (80010e8 <FMC_IRQHandler+0x10>)
 80010de:	f005 fe83 	bl	8006de8 <HAL_SDRAM_IRQHandler>
  /* USER CODE BEGIN FMC_IRQn 1 */

  /* USER CODE END FMC_IRQn 1 */
}
 80010e2:	bf00      	nop
 80010e4:	bd80      	pop	{r7, pc}
 80010e6:	bf00      	nop
 80010e8:	20008d08 	.word	0x20008d08

080010ec <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80010f0:	4802      	ldr	r0, [pc, #8]	; (80010fc <LTDC_IRQHandler+0x10>)
 80010f2:	f004 fcf1 	bl	8005ad8 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80010f6:	bf00      	nop
 80010f8:	bd80      	pop	{r7, pc}
 80010fa:	bf00      	nop
 80010fc:	20008c4c 	.word	0x20008c4c

08001100 <LTDC_ER_IRQHandler>:

/**
  * @brief This function handles LTDC global error interrupt.
  */
void LTDC_ER_IRQHandler(void)
{
 8001100:	b580      	push	{r7, lr}
 8001102:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_ER_IRQn 0 */

  /* USER CODE END LTDC_ER_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001104:	4802      	ldr	r0, [pc, #8]	; (8001110 <LTDC_ER_IRQHandler+0x10>)
 8001106:	f004 fce7 	bl	8005ad8 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_ER_IRQn 1 */

  /* USER CODE END LTDC_ER_IRQn 1 */
}
 800110a:	bf00      	nop
 800110c:	bd80      	pop	{r7, pc}
 800110e:	bf00      	nop
 8001110:	20008c4c 	.word	0x20008c4c

08001114 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001114:	b480      	push	{r7}
 8001116:	af00      	add	r7, sp, #0
	return 1;
 8001118:	2301      	movs	r3, #1
}
 800111a:	4618      	mov	r0, r3
 800111c:	46bd      	mov	sp, r7
 800111e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001122:	4770      	bx	lr

08001124 <_kill>:

int _kill(int pid, int sig)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b082      	sub	sp, #8
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800112e:	f01a fa6d 	bl	801b60c <__errno>
 8001132:	4602      	mov	r2, r0
 8001134:	2316      	movs	r3, #22
 8001136:	6013      	str	r3, [r2, #0]
	return -1;
 8001138:	f04f 33ff 	mov.w	r3, #4294967295
}
 800113c:	4618      	mov	r0, r3
 800113e:	3708      	adds	r7, #8
 8001140:	46bd      	mov	sp, r7
 8001142:	bd80      	pop	{r7, pc}

08001144 <_exit>:

void _exit (int status)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b082      	sub	sp, #8
 8001148:	af00      	add	r7, sp, #0
 800114a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800114c:	f04f 31ff 	mov.w	r1, #4294967295
 8001150:	6878      	ldr	r0, [r7, #4]
 8001152:	f7ff ffe7 	bl	8001124 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001156:	e7fe      	b.n	8001156 <_exit+0x12>

08001158 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001158:	b580      	push	{r7, lr}
 800115a:	b086      	sub	sp, #24
 800115c:	af00      	add	r7, sp, #0
 800115e:	60f8      	str	r0, [r7, #12]
 8001160:	60b9      	str	r1, [r7, #8]
 8001162:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001164:	2300      	movs	r3, #0
 8001166:	617b      	str	r3, [r7, #20]
 8001168:	e00a      	b.n	8001180 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800116a:	f3af 8000 	nop.w
 800116e:	4601      	mov	r1, r0
 8001170:	68bb      	ldr	r3, [r7, #8]
 8001172:	1c5a      	adds	r2, r3, #1
 8001174:	60ba      	str	r2, [r7, #8]
 8001176:	b2ca      	uxtb	r2, r1
 8001178:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800117a:	697b      	ldr	r3, [r7, #20]
 800117c:	3301      	adds	r3, #1
 800117e:	617b      	str	r3, [r7, #20]
 8001180:	697a      	ldr	r2, [r7, #20]
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	429a      	cmp	r2, r3
 8001186:	dbf0      	blt.n	800116a <_read+0x12>
	}

return len;
 8001188:	687b      	ldr	r3, [r7, #4]
}
 800118a:	4618      	mov	r0, r3
 800118c:	3718      	adds	r7, #24
 800118e:	46bd      	mov	sp, r7
 8001190:	bd80      	pop	{r7, pc}

08001192 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001192:	b580      	push	{r7, lr}
 8001194:	b086      	sub	sp, #24
 8001196:	af00      	add	r7, sp, #0
 8001198:	60f8      	str	r0, [r7, #12]
 800119a:	60b9      	str	r1, [r7, #8]
 800119c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800119e:	2300      	movs	r3, #0
 80011a0:	617b      	str	r3, [r7, #20]
 80011a2:	e009      	b.n	80011b8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80011a4:	68bb      	ldr	r3, [r7, #8]
 80011a6:	1c5a      	adds	r2, r3, #1
 80011a8:	60ba      	str	r2, [r7, #8]
 80011aa:	781b      	ldrb	r3, [r3, #0]
 80011ac:	4618      	mov	r0, r3
 80011ae:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011b2:	697b      	ldr	r3, [r7, #20]
 80011b4:	3301      	adds	r3, #1
 80011b6:	617b      	str	r3, [r7, #20]
 80011b8:	697a      	ldr	r2, [r7, #20]
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	429a      	cmp	r2, r3
 80011be:	dbf1      	blt.n	80011a4 <_write+0x12>
	}
	return len;
 80011c0:	687b      	ldr	r3, [r7, #4]
}
 80011c2:	4618      	mov	r0, r3
 80011c4:	3718      	adds	r7, #24
 80011c6:	46bd      	mov	sp, r7
 80011c8:	bd80      	pop	{r7, pc}

080011ca <_close>:

int _close(int file)
{
 80011ca:	b480      	push	{r7}
 80011cc:	b083      	sub	sp, #12
 80011ce:	af00      	add	r7, sp, #0
 80011d0:	6078      	str	r0, [r7, #4]
	return -1;
 80011d2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011d6:	4618      	mov	r0, r3
 80011d8:	370c      	adds	r7, #12
 80011da:	46bd      	mov	sp, r7
 80011dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e0:	4770      	bx	lr

080011e2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80011e2:	b480      	push	{r7}
 80011e4:	b083      	sub	sp, #12
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	6078      	str	r0, [r7, #4]
 80011ea:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80011ec:	683b      	ldr	r3, [r7, #0]
 80011ee:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80011f2:	605a      	str	r2, [r3, #4]
	return 0;
 80011f4:	2300      	movs	r3, #0
}
 80011f6:	4618      	mov	r0, r3
 80011f8:	370c      	adds	r7, #12
 80011fa:	46bd      	mov	sp, r7
 80011fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001200:	4770      	bx	lr

08001202 <_isatty>:

int _isatty(int file)
{
 8001202:	b480      	push	{r7}
 8001204:	b083      	sub	sp, #12
 8001206:	af00      	add	r7, sp, #0
 8001208:	6078      	str	r0, [r7, #4]
	return 1;
 800120a:	2301      	movs	r3, #1
}
 800120c:	4618      	mov	r0, r3
 800120e:	370c      	adds	r7, #12
 8001210:	46bd      	mov	sp, r7
 8001212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001216:	4770      	bx	lr

08001218 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001218:	b480      	push	{r7}
 800121a:	b085      	sub	sp, #20
 800121c:	af00      	add	r7, sp, #0
 800121e:	60f8      	str	r0, [r7, #12]
 8001220:	60b9      	str	r1, [r7, #8]
 8001222:	607a      	str	r2, [r7, #4]
	return 0;
 8001224:	2300      	movs	r3, #0
}
 8001226:	4618      	mov	r0, r3
 8001228:	3714      	adds	r7, #20
 800122a:	46bd      	mov	sp, r7
 800122c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001230:	4770      	bx	lr
	...

08001234 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001234:	b580      	push	{r7, lr}
 8001236:	b086      	sub	sp, #24
 8001238:	af00      	add	r7, sp, #0
 800123a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800123c:	4a14      	ldr	r2, [pc, #80]	; (8001290 <_sbrk+0x5c>)
 800123e:	4b15      	ldr	r3, [pc, #84]	; (8001294 <_sbrk+0x60>)
 8001240:	1ad3      	subs	r3, r2, r3
 8001242:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001244:	697b      	ldr	r3, [r7, #20]
 8001246:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001248:	4b13      	ldr	r3, [pc, #76]	; (8001298 <_sbrk+0x64>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	2b00      	cmp	r3, #0
 800124e:	d102      	bne.n	8001256 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001250:	4b11      	ldr	r3, [pc, #68]	; (8001298 <_sbrk+0x64>)
 8001252:	4a12      	ldr	r2, [pc, #72]	; (800129c <_sbrk+0x68>)
 8001254:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001256:	4b10      	ldr	r3, [pc, #64]	; (8001298 <_sbrk+0x64>)
 8001258:	681a      	ldr	r2, [r3, #0]
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	4413      	add	r3, r2
 800125e:	693a      	ldr	r2, [r7, #16]
 8001260:	429a      	cmp	r2, r3
 8001262:	d207      	bcs.n	8001274 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001264:	f01a f9d2 	bl	801b60c <__errno>
 8001268:	4602      	mov	r2, r0
 800126a:	230c      	movs	r3, #12
 800126c:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800126e:	f04f 33ff 	mov.w	r3, #4294967295
 8001272:	e009      	b.n	8001288 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001274:	4b08      	ldr	r3, [pc, #32]	; (8001298 <_sbrk+0x64>)
 8001276:	681b      	ldr	r3, [r3, #0]
 8001278:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800127a:	4b07      	ldr	r3, [pc, #28]	; (8001298 <_sbrk+0x64>)
 800127c:	681a      	ldr	r2, [r3, #0]
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	4413      	add	r3, r2
 8001282:	4a05      	ldr	r2, [pc, #20]	; (8001298 <_sbrk+0x64>)
 8001284:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001286:	68fb      	ldr	r3, [r7, #12]
}
 8001288:	4618      	mov	r0, r3
 800128a:	3718      	adds	r7, #24
 800128c:	46bd      	mov	sp, r7
 800128e:	bd80      	pop	{r7, pc}
 8001290:	20030000 	.word	0x20030000
 8001294:	00000400 	.word	0x00000400
 8001298:	20000368 	.word	0x20000368
 800129c:	20008d88 	.word	0x20008d88

080012a0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 80012a0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80012d8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80012a4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80012a6:	e003      	b.n	80012b0 <LoopCopyDataInit>

080012a8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80012a8:	4b0c      	ldr	r3, [pc, #48]	; (80012dc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80012aa:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80012ac:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80012ae:	3104      	adds	r1, #4

080012b0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80012b0:	480b      	ldr	r0, [pc, #44]	; (80012e0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80012b2:	4b0c      	ldr	r3, [pc, #48]	; (80012e4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80012b4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80012b6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80012b8:	d3f6      	bcc.n	80012a8 <CopyDataInit>
  ldr  r2, =_sbss
 80012ba:	4a0b      	ldr	r2, [pc, #44]	; (80012e8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80012bc:	e002      	b.n	80012c4 <LoopFillZerobss>

080012be <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80012be:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80012c0:	f842 3b04 	str.w	r3, [r2], #4

080012c4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80012c4:	4b09      	ldr	r3, [pc, #36]	; (80012ec <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80012c6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80012c8:	d3f9      	bcc.n	80012be <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80012ca:	f003 fd69 	bl	8004da0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80012ce:	f01a f9b5 	bl	801b63c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80012d2:	f7ff f977 	bl	80005c4 <main>
  bx  lr    
 80012d6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80012d8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80012dc:	08059970 	.word	0x08059970
  ldr  r0, =_sdata
 80012e0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80012e4:	200000f4 	.word	0x200000f4
  ldr  r2, =_sbss
 80012e8:	200000f4 	.word	0x200000f4
  ldr  r3, = _ebss
 80012ec:	20008d84 	.word	0x20008d84

080012f0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80012f0:	e7fe      	b.n	80012f0 <ADC_IRQHandler>

080012f2 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80012f2:	b580      	push	{r7, lr}
 80012f4:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80012f6:	f001 f873 	bl	80023e0 <touchgfx_init>
}
 80012fa:	bf00      	nop
 80012fc:	bd80      	pop	{r7, pc}

080012fe <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 80012fe:	b580      	push	{r7, lr}
 8001300:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8001302:	f001 f897 	bl	8002434 <touchgfx_taskEntry>
}
 8001306:	bf00      	nop
 8001308:	bd80      	pop	{r7, pc}
	...

0800130c <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800130c:	b480      	push	{r7}
 800130e:	b083      	sub	sp, #12
 8001310:	af00      	add	r7, sp, #0
 8001312:	6078      	str	r0, [r7, #4]
    {
 8001314:	4a04      	ldr	r2, [pc, #16]	; (8001328 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8001316:	687b      	ldr	r3, [r7, #4]
 8001318:	601a      	str	r2, [r3, #0]
    }
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	4618      	mov	r0, r3
 800131e:	370c      	adds	r7, #12
 8001320:	46bd      	mov	sp, r7
 8001322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001326:	4770      	bx	lr
 8001328:	0801cc48 	.word	0x0801cc48

0800132c <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800132c:	b580      	push	{r7, lr}
 800132e:	b082      	sub	sp, #8
 8001330:	af00      	add	r7, sp, #0
 8001332:	6078      	str	r0, [r7, #4]
    }
 8001334:	6878      	ldr	r0, [r7, #4]
 8001336:	f7ff ffe9 	bl	800130c <_ZN8touchgfx15TouchControllerD1Ev>
 800133a:	2104      	movs	r1, #4
 800133c:	6878      	ldr	r0, [r7, #4]
 800133e:	f01a f907 	bl	801b550 <_ZdlPvj>
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	4618      	mov	r0, r3
 8001346:	3708      	adds	r7, #8
 8001348:	46bd      	mov	sp, r7
 800134a:	bd80      	pop	{r7, pc}

0800134c <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800134c:	b480      	push	{r7}
 800134e:	b083      	sub	sp, #12
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8001354:	bf00      	nop
 8001356:	370c      	adds	r7, #12
 8001358:	46bd      	mov	sp, r7
 800135a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800135e:	4770      	bx	lr

08001360 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001360:	b480      	push	{r7}
 8001362:	b085      	sub	sp, #20
 8001364:	af00      	add	r7, sp, #0
 8001366:	60f8      	str	r0, [r7, #12]
 8001368:	60b9      	str	r1, [r7, #8]
 800136a:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800136c:	2300      	movs	r3, #0
}
 800136e:	4618      	mov	r0, r3
 8001370:	3714      	adds	r7, #20
 8001372:	46bd      	mov	sp, r7
 8001374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001378:	4770      	bx	lr
	...

0800137c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800137c:	b580      	push	{r7, lr}
 800137e:	b082      	sub	sp, #8
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
 8001384:	4a05      	ldr	r2, [pc, #20]	; (800139c <_ZN20STM32TouchControllerD1Ev+0x20>)
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	601a      	str	r2, [r3, #0]
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	4618      	mov	r0, r3
 800138e:	f7ff ffbd 	bl	800130c <_ZN8touchgfx15TouchControllerD1Ev>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	4618      	mov	r0, r3
 8001396:	3708      	adds	r7, #8
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}
 800139c:	0801cc30 	.word	0x0801cc30

080013a0 <_ZN20STM32TouchControllerD0Ev>:
 80013a0:	b580      	push	{r7, lr}
 80013a2:	b082      	sub	sp, #8
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
 80013a8:	6878      	ldr	r0, [r7, #4]
 80013aa:	f7ff ffe7 	bl	800137c <_ZN20STM32TouchControllerD1Ev>
 80013ae:	2104      	movs	r1, #4
 80013b0:	6878      	ldr	r0, [r7, #4]
 80013b2:	f01a f8cd 	bl	801b550 <_ZdlPvj>
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	4618      	mov	r0, r3
 80013ba:	3708      	adds	r7, #8
 80013bc:	46bd      	mov	sp, r7
 80013be:	bd80      	pop	{r7, pc}

080013c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 80013c0:	b480      	push	{r7}
 80013c2:	b083      	sub	sp, #12
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	4603      	mov	r3, r0
 80013c8:	71fb      	strb	r3, [r7, #7]

}
 80013ca:	bf00      	nop
 80013cc:	370c      	adds	r7, #12
 80013ce:	46bd      	mov	sp, r7
 80013d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d4:	4770      	bx	lr

080013d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 80013d6:	b480      	push	{r7}
 80013d8:	b083      	sub	sp, #12
 80013da:	af00      	add	r7, sp, #0
 80013dc:	4603      	mov	r3, r0
 80013de:	71fb      	strb	r3, [r7, #7]

}
 80013e0:	bf00      	nop
 80013e2:	370c      	adds	r7, #12
 80013e4:	46bd      	mov	sp, r7
 80013e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ea:	4770      	bx	lr

080013ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	4603      	mov	r3, r0
 80013f4:	71fb      	strb	r3, [r7, #7]

}
 80013f6:	bf00      	nop
 80013f8:	370c      	adds	r7, #12
 80013fa:	46bd      	mov	sp, r7
 80013fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001400:	4770      	bx	lr
	...

08001404 <_ZN8touchgfx3HALD1Ev>:
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
    }

    /** Finalizes an instance of the HAL class. */
    virtual ~HAL()
 8001404:	b480      	push	{r7}
 8001406:	b083      	sub	sp, #12
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
    {
 800140c:	4a04      	ldr	r2, [pc, #16]	; (8001420 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	601a      	str	r2, [r3, #0]
    }
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	4618      	mov	r0, r3
 8001416:	370c      	adds	r7, #12
 8001418:	46bd      	mov	sp, r7
 800141a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800141e:	4770      	bx	lr
 8001420:	0801dd90 	.word	0x0801dd90

08001424 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8001424:	b580      	push	{r7, lr}
 8001426:	b082      	sub	sp, #8
 8001428:	af00      	add	r7, sp, #0
 800142a:	6078      	str	r0, [r7, #4]
    }
 800142c:	6878      	ldr	r0, [r7, #4]
 800142e:	f7ff ffe9 	bl	8001404 <_ZN8touchgfx3HALD1Ev>
 8001432:	217c      	movs	r1, #124	; 0x7c
 8001434:	6878      	ldr	r0, [r7, #4]
 8001436:	f01a f88b 	bl	801b550 <_ZdlPvj>
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	4618      	mov	r0, r3
 800143e:	3708      	adds	r7, #8
 8001440:	46bd      	mov	sp, r7
 8001442:	bd80      	pop	{r7, pc}

08001444 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     *
     * @param  orientation The desired display orientation.
     *
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8001444:	b480      	push	{r7}
 8001446:	b083      	sub	sp, #12
 8001448:	af00      	add	r7, sp, #0
 800144a:	6078      	str	r0, [r7, #4]
 800144c:	460b      	mov	r3, r1
 800144e:	70fb      	strb	r3, [r7, #3]
    {
        requestedOrientation = orientation;
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	78fa      	ldrb	r2, [r7, #3]
 8001454:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	2201      	movs	r2, #1
 800145c:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 8001460:	bf00      	nop
 8001462:	370c      	adds	r7, #12
 8001464:	46bd      	mov	sp, r7
 8001466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146a:	4770      	bx	lr

0800146c <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800146c:	b580      	push	{r7, lr}
 800146e:	b082      	sub	sp, #8
 8001470:	af00      	add	r7, sp, #0
 8001472:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	f893 3077 	ldrb.w	r3, [r3, #119]	; 0x77
 800147a:	2b00      	cmp	r3, #0
 800147c:	d009      	beq.n	8001492 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	685a      	ldr	r2, [r3, #4]
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	685b      	ldr	r3, [r3, #4]
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	4610      	mov	r0, r2
 800148c:	4798      	blx	r3
 800148e:	4603      	mov	r3, r0
 8001490:	e000      	b.n	8001494 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        else
        {
            return static_cast<BlitOperations>(0);
 8001492:	2300      	movs	r3, #0
        }
    }
 8001494:	4618      	mov	r0, r3
 8001496:	3708      	adds	r7, #8
 8001498:	46bd      	mov	sp, r7
 800149a:	bd80      	pop	{r7, pc}

0800149c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800149c:	b580      	push	{r7, lr}
 800149e:	b082      	sub	sp, #8
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 80014a4:	6878      	ldr	r0, [r7, #4]
 80014a6:	f009 fe4d 	bl	800b144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	3390      	adds	r3, #144	; 0x90
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	6878      	ldr	r0, [r7, #4]
 80014b4:	4798      	blx	r3
    }
 80014b6:	bf00      	nop
 80014b8:	3708      	adds	r7, #8
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}

080014be <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 80014be:	b480      	push	{r7}
 80014c0:	b083      	sub	sp, #12
 80014c2:	af00      	add	r7, sp, #0
 80014c4:	6078      	str	r0, [r7, #4]
 80014c6:	6039      	str	r1, [r7, #0]
    {
        return false;
 80014c8:	2300      	movs	r3, #0
    }
 80014ca:	4618      	mov	r0, r3
 80014cc:	370c      	adds	r7, #12
 80014ce:	46bd      	mov	sp, r7
 80014d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d4:	4770      	bx	lr
	...

080014d8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double
     *                              buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80014d8:	b580      	push	{r7, lr}
 80014da:	b084      	sub	sp, #16
 80014dc:	af00      	add	r7, sp, #0
 80014de:	60f8      	str	r0, [r7, #12]
 80014e0:	60b9      	str	r1, [r7, #8]
 80014e2:	607a      	str	r2, [r7, #4]
 80014e4:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80014e6:	68bb      	ldr	r3, [r7, #8]
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d106      	bne.n	80014fa <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 80014ec:	4b11      	ldr	r3, [pc, #68]	; (8001534 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 80014ee:	4a12      	ldr	r2, [pc, #72]	; (8001538 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 80014f0:	f240 216b 	movw	r1, #619	; 0x26b
 80014f4:	4811      	ldr	r0, [pc, #68]	; (800153c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 80014f6:	f01a f857 	bl	801b5a8 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 80014fa:	68fb      	ldr	r3, [r7, #12]
 80014fc:	68ba      	ldr	r2, [r7, #8]
 80014fe:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001500:	68fb      	ldr	r3, [r7, #12]
 8001502:	687a      	ldr	r2, [r7, #4]
 8001504:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001506:	68fb      	ldr	r3, [r7, #12]
 8001508:	683a      	ldr	r2, [r7, #0]
 800150a:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800150c:	687b      	ldr	r3, [r7, #4]
 800150e:	2b00      	cmp	r3, #0
 8001510:	bf14      	ite	ne
 8001512:	2301      	movne	r3, #1
 8001514:	2300      	moveq	r3, #0
 8001516:	b2da      	uxtb	r2, r3
 8001518:	4b09      	ldr	r3, [pc, #36]	; (8001540 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800151a:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800151c:	683b      	ldr	r3, [r7, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	bf14      	ite	ne
 8001522:	2301      	movne	r3, #1
 8001524:	2300      	moveq	r3, #0
 8001526:	b2da      	uxtb	r2, r3
 8001528:	4b06      	ldr	r3, [pc, #24]	; (8001544 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800152a:	701a      	strb	r2, [r3, #0]
    }
 800152c:	bf00      	nop
 800152e:	3710      	adds	r7, #16
 8001530:	46bd      	mov	sp, r7
 8001532:	bd80      	pop	{r7, pc}
 8001534:	0801c620 	.word	0x0801c620
 8001538:	0801cd14 	.word	0x0801cd14
 800153c:	0801c658 	.word	0x0801c658
 8001540:	2000898e 	.word	0x2000898e
 8001544:	2000898f 	.word	0x2000898f

08001548 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 8001548:	b480      	push	{r7}
 800154a:	b083      	sub	sp, #12
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8001550:	2300      	movs	r3, #0
    }
 8001552:	4618      	mov	r0, r3
 8001554:	370c      	adds	r7, #12
 8001556:	46bd      	mov	sp, r7
 8001558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155c:	4770      	bx	lr

0800155e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800155e:	b580      	push	{r7, lr}
 8001560:	b082      	sub	sp, #8
 8001562:	af00      	add	r7, sp, #0
 8001564:	6078      	str	r0, [r7, #4]
 8001566:	460b      	mov	r3, r1
 8001568:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800156e:	2b00      	cmp	r3, #0
 8001570:	d004      	beq.n	800157c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001576:	887a      	ldrh	r2, [r7, #2]
 8001578:	4610      	mov	r0, r2
 800157a:	4798      	blx	r3
        }
    }
 800157c:	bf00      	nop
 800157e:	3708      	adds	r7, #8
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}

08001584 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 8001584:	b480      	push	{r7}
 8001586:	b083      	sub	sp, #12
 8001588:	af00      	add	r7, sp, #0
 800158a:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800158c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 8001590:	4618      	mov	r0, r3
 8001592:	370c      	adds	r7, #12
 8001594:	46bd      	mov	sp, r7
 8001596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800159a:	4770      	bx	lr

0800159c <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800159c:	b580      	push	{r7, lr}
 800159e:	b082      	sub	sp, #8
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	685a      	ldr	r2, [r3, #4]
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	685b      	ldr	r3, [r3, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	3318      	adds	r3, #24
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	4610      	mov	r0, r2
 80015b4:	4798      	blx	r3
 80015b6:	4603      	mov	r3, r0
    }
 80015b8:	4618      	mov	r0, r3
 80015ba:	3708      	adds	r7, #8
 80015bc:	46bd      	mov	sp, r7
 80015be:	bd80      	pop	{r7, pc}

080015c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80015c0:	b480      	push	{r7}
 80015c2:	b083      	sub	sp, #12
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80015d4:	429a      	cmp	r2, r3
 80015d6:	d017      	beq.n	8001608 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 80015d8:	4b1a      	ldr	r3, [pc, #104]	; (8001644 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 80015da:	781b      	ldrb	r3, [r3, #0]
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d12a      	bne.n	8001636 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80015e0:	4b19      	ldr	r3, [pc, #100]	; (8001648 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80015e2:	881a      	ldrh	r2, [r3, #0]
 80015e4:	4b19      	ldr	r3, [pc, #100]	; (800164c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80015e6:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80015e8:	4b19      	ldr	r3, [pc, #100]	; (8001650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80015ea:	881a      	ldrh	r2, [r3, #0]
 80015ec:	4b19      	ldr	r3, [pc, #100]	; (8001654 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80015ee:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80015f0:	4b16      	ldr	r3, [pc, #88]	; (800164c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80015f2:	881a      	ldrh	r2, [r3, #0]
 80015f4:	4b16      	ldr	r3, [pc, #88]	; (8001650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80015f6:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80015f8:	4b16      	ldr	r3, [pc, #88]	; (8001654 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80015fa:	881a      	ldrh	r2, [r3, #0]
 80015fc:	4b12      	ldr	r3, [pc, #72]	; (8001648 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80015fe:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 8001600:	4b10      	ldr	r3, [pc, #64]	; (8001644 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8001602:	2201      	movs	r2, #1
 8001604:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8001606:	e016      	b.n	8001636 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 8001608:	4b0e      	ldr	r3, [pc, #56]	; (8001644 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800160a:	781b      	ldrb	r3, [r3, #0]
 800160c:	2b00      	cmp	r3, #0
 800160e:	d012      	beq.n	8001636 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8001610:	4b0f      	ldr	r3, [pc, #60]	; (8001650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8001612:	881a      	ldrh	r2, [r3, #0]
 8001614:	4b0d      	ldr	r3, [pc, #52]	; (800164c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8001616:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8001618:	4b0b      	ldr	r3, [pc, #44]	; (8001648 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800161a:	881a      	ldrh	r2, [r3, #0]
 800161c:	4b0d      	ldr	r3, [pc, #52]	; (8001654 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800161e:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8001620:	4b0c      	ldr	r3, [pc, #48]	; (8001654 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8001622:	881a      	ldrh	r2, [r3, #0]
 8001624:	4b0a      	ldr	r3, [pc, #40]	; (8001650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8001626:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8001628:	4b08      	ldr	r3, [pc, #32]	; (800164c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800162a:	881a      	ldrh	r2, [r3, #0]
 800162c:	4b06      	ldr	r3, [pc, #24]	; (8001648 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800162e:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 8001630:	4b04      	ldr	r3, [pc, #16]	; (8001644 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8001632:	2200      	movs	r2, #0
 8001634:	701a      	strb	r2, [r3, #0]
    }
 8001636:	bf00      	nop
 8001638:	370c      	adds	r7, #12
 800163a:	46bd      	mov	sp, r7
 800163c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001640:	4770      	bx	lr
 8001642:	bf00      	nop
 8001644:	20008988 	.word	0x20008988
 8001648:	20008984 	.word	0x20008984
 800164c:	2000898a 	.word	0x2000898a
 8001650:	20008986 	.word	0x20008986
 8001654:	2000898c 	.word	0x2000898c

08001658 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingVariant when chaning rendering variant
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 8001658:	b480      	push	{r7}
 800165a:	b083      	sub	sp, #12
 800165c:	af00      	add	r7, sp, #0
 800165e:	6078      	str	r0, [r7, #4]
    {

    }
 8001660:	bf00      	nop
 8001662:	370c      	adds	r7, #12
 8001664:	46bd      	mov	sp, r7
 8001666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800166a:	4770      	bx	lr

0800166c <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingVariant when chaning rendering variant
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800166c:	b480      	push	{r7}
 800166e:	b083      	sub	sp, #12
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
    {

    }
 8001674:	bf00      	nop
 8001676:	370c      	adds	r7, #12
 8001678:	46bd      	mov	sp, r7
 800167a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167e:	4770      	bx	lr

08001680 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8001680:	b580      	push	{r7, lr}
 8001682:	b082      	sub	sp, #8
 8001684:	af00      	add	r7, sp, #0
 8001686:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	4618      	mov	r0, r3
 800168c:	f008 ffc6 	bl	800a61c <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8001690:	bf00      	nop
 8001692:	3708      	adds	r7, #8
 8001694:	46bd      	mov	sp, r7
 8001696:	bd80      	pop	{r7, pc}

08001698 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8001698:	b580      	push	{r7, lr}
 800169a:	b082      	sub	sp, #8
 800169c:	af00      	add	r7, sp, #0
 800169e:	6078      	str	r0, [r7, #4]
 80016a0:	4a05      	ldr	r2, [pc, #20]	; (80016b8 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	601a      	str	r2, [r3, #0]
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	4618      	mov	r0, r3
 80016aa:	f7ff feab 	bl	8001404 <_ZN8touchgfx3HALD1Ev>
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	4618      	mov	r0, r3
 80016b2:	3708      	adds	r7, #8
 80016b4:	46bd      	mov	sp, r7
 80016b6:	bd80      	pop	{r7, pc}
 80016b8:	0801d0bc 	.word	0x0801d0bc

080016bc <_ZN20TouchGFXGeneratedHALD0Ev>:
 80016bc:	b580      	push	{r7, lr}
 80016be:	b082      	sub	sp, #8
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	6078      	str	r0, [r7, #4]
 80016c4:	6878      	ldr	r0, [r7, #4]
 80016c6:	f7ff ffe7 	bl	8001698 <_ZN20TouchGFXGeneratedHALD1Ev>
 80016ca:	217c      	movs	r1, #124	; 0x7c
 80016cc:	6878      	ldr	r0, [r7, #4]
 80016ce:	f019 ff3f 	bl	801b550 <_ZdlPvj>
 80016d2:	687b      	ldr	r3, [r7, #4]
 80016d4:	4618      	mov	r0, r3
 80016d6:	3708      	adds	r7, #8
 80016d8:	46bd      	mov	sp, r7
 80016da:	bd80      	pop	{r7, pc}

080016dc <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80016dc:	b580      	push	{r7, lr}
 80016de:	b082      	sub	sp, #8
 80016e0:	af00      	add	r7, sp, #0
 80016e2:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	4618      	mov	r0, r3
 80016e8:	f7ff ffca 	bl	8001680 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 80016ec:	bf00      	nop
 80016ee:	3708      	adds	r7, #8
 80016f0:	46bd      	mov	sp, r7
 80016f2:	bd80      	pop	{r7, pc}

080016f4 <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80016f4:	b580      	push	{r7, lr}
 80016f6:	b082      	sub	sp, #8
 80016f8:	af00      	add	r7, sp, #0
 80016fa:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	4618      	mov	r0, r3
 8001700:	f001 f9de 	bl	8002ac0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 8001704:	bf00      	nop
 8001706:	3708      	adds	r7, #8
 8001708:	46bd      	mov	sp, r7
 800170a:	bd80      	pop	{r7, pc}

0800170c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800170c:	b580      	push	{r7, lr}
 800170e:	b082      	sub	sp, #8
 8001710:	af00      	add	r7, sp, #0
 8001712:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	4618      	mov	r0, r3
 8001718:	f001 fa46 	bl	8002ba8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800171c:	4603      	mov	r3, r0
}
 800171e:	4618      	mov	r0, r3
 8001720:	3708      	adds	r7, #8
 8001722:	46bd      	mov	sp, r7
 8001724:	bd80      	pop	{r7, pc}

08001726 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8001726:	b580      	push	{r7, lr}
 8001728:	b082      	sub	sp, #8
 800172a:	af00      	add	r7, sp, #0
 800172c:	6078      	str	r0, [r7, #4]
 800172e:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	6839      	ldr	r1, [r7, #0]
 8001734:	4618      	mov	r0, r3
 8001736:	f001 fa45 	bl	8002bc4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800173a:	bf00      	nop
 800173c:	3708      	adds	r7, #8
 800173e:	46bd      	mov	sp, r7
 8001740:	bd80      	pop	{r7, pc}

08001742 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001742:	b580      	push	{r7, lr}
 8001744:	b082      	sub	sp, #8
 8001746:	af00      	add	r7, sp, #0
 8001748:	6078      	str	r0, [r7, #4]
 800174a:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	6839      	ldr	r1, [r7, #0]
 8001750:	4618      	mov	r0, r3
 8001752:	f001 fa4d 	bl	8002bf0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 8001756:	bf00      	nop
 8001758:	3708      	adds	r7, #8
 800175a:	46bd      	mov	sp, r7
 800175c:	bd80      	pop	{r7, pc}

0800175e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800175e:	b580      	push	{r7, lr}
 8001760:	b084      	sub	sp, #16
 8001762:	af00      	add	r7, sp, #0
 8001764:	60f8      	str	r0, [r7, #12]
 8001766:	60b9      	str	r1, [r7, #8]
 8001768:	607a      	str	r2, [r7, #4]
 800176a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800176c:	68f8      	ldr	r0, [r7, #12]
 800176e:	683b      	ldr	r3, [r7, #0]
 8001770:	687a      	ldr	r2, [r7, #4]
 8001772:	68b9      	ldr	r1, [r7, #8]
 8001774:	f001 fa4a 	bl	8002c0c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 8001778:	4603      	mov	r3, r0
}
 800177a:	4618      	mov	r0, r3
 800177c:	3710      	adds	r7, #16
 800177e:	46bd      	mov	sp, r7
 8001780:	bd80      	pop	{r7, pc}

08001782 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8001782:	b580      	push	{r7, lr}
 8001784:	b082      	sub	sp, #8
 8001786:	af00      	add	r7, sp, #0
 8001788:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	4618      	mov	r0, r3
 800178e:	f001 f9bb 	bl	8002b08 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8001792:	bf00      	nop
 8001794:	3708      	adds	r7, #8
 8001796:	46bd      	mov	sp, r7
 8001798:	bd80      	pop	{r7, pc}

0800179a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800179a:	b580      	push	{r7, lr}
 800179c:	b082      	sub	sp, #8
 800179e:	af00      	add	r7, sp, #0
 80017a0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	4618      	mov	r0, r3
 80017a6:	f001 f9bb 	bl	8002b20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80017aa:	bf00      	nop
 80017ac:	3708      	adds	r7, #8
 80017ae:	46bd      	mov	sp, r7
 80017b0:	bd80      	pop	{r7, pc}

080017b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 80017b2:	b580      	push	{r7, lr}
 80017b4:	b082      	sub	sp, #8
 80017b6:	af00      	add	r7, sp, #0
 80017b8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	4618      	mov	r0, r3
 80017be:	f001 f9ba 	bl	8002b36 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 80017c2:	bf00      	nop
 80017c4:	3708      	adds	r7, #8
 80017c6:	46bd      	mov	sp, r7
 80017c8:	bd80      	pop	{r7, pc}

080017ca <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 80017ca:	b580      	push	{r7, lr}
 80017cc:	b082      	sub	sp, #8
 80017ce:	af00      	add	r7, sp, #0
 80017d0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	4618      	mov	r0, r3
 80017d6:	f001 f9b9 	bl	8002b4c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 80017da:	bf00      	nop
 80017dc:	3708      	adds	r7, #8
 80017de:	46bd      	mov	sp, r7
 80017e0:	bd80      	pop	{r7, pc}
	...

080017e4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b082      	sub	sp, #8
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	6078      	str	r0, [r7, #4]
 80017ec:	4a05      	ldr	r2, [pc, #20]	; (8001804 <_ZN11TouchGFXHALD1Ev+0x20>)
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	601a      	str	r2, [r3, #0]
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	4618      	mov	r0, r3
 80017f6:	f7ff ff4f 	bl	8001698 <_ZN20TouchGFXGeneratedHALD1Ev>
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	4618      	mov	r0, r3
 80017fe:	3708      	adds	r7, #8
 8001800:	46bd      	mov	sp, r7
 8001802:	bd80      	pop	{r7, pc}
 8001804:	0801cc60 	.word	0x0801cc60

08001808 <_ZN11TouchGFXHALD0Ev>:
 8001808:	b580      	push	{r7, lr}
 800180a:	b082      	sub	sp, #8
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
 8001810:	6878      	ldr	r0, [r7, #4]
 8001812:	f7ff ffe7 	bl	80017e4 <_ZN11TouchGFXHALD1Ev>
 8001816:	217c      	movs	r1, #124	; 0x7c
 8001818:	6878      	ldr	r0, [r7, #4]
 800181a:	f019 fe99 	bl	801b550 <_ZdlPvj>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	4618      	mov	r0, r3
 8001822:	3708      	adds	r7, #8
 8001824:	46bd      	mov	sp, r7
 8001826:	bd80      	pop	{r7, pc}

08001828 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8001828:	b580      	push	{r7, lr}
 800182a:	af00      	add	r7, sp, #0
    frame_buffer_sem = osSemaphoreCreate(osSemaphore(frame_buffer_sem), 1);
 800182c:	2101      	movs	r1, #1
 800182e:	4811      	ldr	r0, [pc, #68]	; (8001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001830:	f006 f9b6 	bl	8007ba0 <osSemaphoreCreate>
 8001834:	4602      	mov	r2, r0
 8001836:	4b10      	ldr	r3, [pc, #64]	; (8001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
 8001838:	601a      	str	r2, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800183a:	4b0f      	ldr	r3, [pc, #60]	; (8001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	2b00      	cmp	r3, #0
 8001840:	d105      	bne.n	800184e <_ZN8touchgfx10OSWrappers10initializeEv+0x26>
 8001842:	4b0e      	ldr	r3, [pc, #56]	; (800187c <_ZN8touchgfx10OSWrappers10initializeEv+0x54>)
 8001844:	4a0e      	ldr	r2, [pc, #56]	; (8001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x58>)
 8001846:	2125      	movs	r1, #37	; 0x25
 8001848:	480e      	ldr	r0, [pc, #56]	; (8001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x5c>)
 800184a:	f019 fead 	bl	801b5a8 <__assert_func>

    vsync_sem = osSemaphoreCreate(osSemaphore(vsync_sem), 1);
 800184e:	2101      	movs	r1, #1
 8001850:	480d      	ldr	r0, [pc, #52]	; (8001888 <_ZN8touchgfx10OSWrappers10initializeEv+0x60>)
 8001852:	f006 f9a5 	bl	8007ba0 <osSemaphoreCreate>
 8001856:	4602      	mov	r2, r0
 8001858:	4b0c      	ldr	r3, [pc, #48]	; (800188c <_ZN8touchgfx10OSWrappers10initializeEv+0x64>)
 800185a:	601a      	str	r2, [r3, #0]
    assert((vsync_sem != NULL) && "Creation of vsync semaphore failed");
 800185c:	4b0b      	ldr	r3, [pc, #44]	; (800188c <_ZN8touchgfx10OSWrappers10initializeEv+0x64>)
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	2b00      	cmp	r3, #0
 8001862:	d105      	bne.n	8001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>
 8001864:	4b0a      	ldr	r3, [pc, #40]	; (8001890 <_ZN8touchgfx10OSWrappers10initializeEv+0x68>)
 8001866:	4a06      	ldr	r2, [pc, #24]	; (8001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x58>)
 8001868:	2128      	movs	r1, #40	; 0x28
 800186a:	4806      	ldr	r0, [pc, #24]	; (8001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x5c>)
 800186c:	f019 fe9c 	bl	801b5a8 <__assert_func>
}
 8001870:	bf00      	nop
 8001872:	bd80      	pop	{r7, pc}
 8001874:	0801cd64 	.word	0x0801cd64
 8001878:	2000036c 	.word	0x2000036c
 800187c:	0801c6a0 	.word	0x0801c6a0
 8001880:	0801cd74 	.word	0x0801cd74
 8001884:	0801c6ec 	.word	0x0801c6ec
 8001888:	0801cd6c 	.word	0x0801cd6c
 800188c:	20000370 	.word	0x20000370
 8001890:	0801c734 	.word	0x0801c734

08001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8001894:	b580      	push	{r7, lr}
 8001896:	af00      	add	r7, sp, #0
    osSemaphoreWait(frame_buffer_sem, osWaitForever);
 8001898:	4b04      	ldr	r3, [pc, #16]	; (80018ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f04f 31ff 	mov.w	r1, #4294967295
 80018a0:	4618      	mov	r0, r3
 80018a2:	f006 f9b1 	bl	8007c08 <osSemaphoreWait>
}
 80018a6:	bf00      	nop
 80018a8:	bd80      	pop	{r7, pc}
 80018aa:	bf00      	nop
 80018ac:	2000036c 	.word	0x2000036c

080018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 80018b0:	b580      	push	{r7, lr}
 80018b2:	af00      	add	r7, sp, #0
    osSemaphoreRelease(frame_buffer_sem);
 80018b4:	4b03      	ldr	r3, [pc, #12]	; (80018c4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	4618      	mov	r0, r3
 80018ba:	f006 f9f3 	bl	8007ca4 <osSemaphoreRelease>
}
 80018be:	bf00      	nop
 80018c0:	bd80      	pop	{r7, pc}
 80018c2:	bf00      	nop
 80018c4:	2000036c 	.word	0x2000036c

080018c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	af00      	add	r7, sp, #0
    osSemaphoreWait(frame_buffer_sem, 0);
 80018cc:	4b03      	ldr	r3, [pc, #12]	; (80018dc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	2100      	movs	r1, #0
 80018d2:	4618      	mov	r0, r3
 80018d4:	f006 f998 	bl	8007c08 <osSemaphoreWait>
}
 80018d8:	bf00      	nop
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	2000036c 	.word	0x2000036c

080018e0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80018e0:	b580      	push	{r7, lr}
 80018e2:	af00      	add	r7, sp, #0
    // Release of semaphore inside an interrupt is handled by the CMSIS layer
    osSemaphoreRelease(frame_buffer_sem);
 80018e4:	4b03      	ldr	r3, [pc, #12]	; (80018f4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	4618      	mov	r0, r3
 80018ea:	f006 f9db 	bl	8007ca4 <osSemaphoreRelease>
}
 80018ee:	bf00      	nop
 80018f0:	bd80      	pop	{r7, pc}
 80018f2:	bf00      	nop
 80018f4:	2000036c 	.word	0x2000036c

080018f8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
    // Release of semaphore inside an interrupt is handled by the CMSIS layer
    osSemaphoreRelease(vsync_sem);
 80018fc:	4b03      	ldr	r3, [pc, #12]	; (800190c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4618      	mov	r0, r3
 8001902:	f006 f9cf 	bl	8007ca4 <osSemaphoreRelease>
}
 8001906:	bf00      	nop
 8001908:	bd80      	pop	{r7, pc}
 800190a:	bf00      	nop
 800190c:	20000370 	.word	0x20000370

08001910 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001910:	b580      	push	{r7, lr}
 8001912:	af00      	add	r7, sp, #0
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osSemaphoreWait(vsync_sem, 0);
 8001914:	4b07      	ldr	r3, [pc, #28]	; (8001934 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	2100      	movs	r1, #0
 800191a:	4618      	mov	r0, r3
 800191c:	f006 f974 	bl	8007c08 <osSemaphoreWait>

    // Then, wait for next VSYNC to occur.
    osSemaphoreWait(vsync_sem, osWaitForever);
 8001920:	4b04      	ldr	r3, [pc, #16]	; (8001934 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	f04f 31ff 	mov.w	r1, #4294967295
 8001928:	4618      	mov	r0, r3
 800192a:	f006 f96d 	bl	8007c08 <osSemaphoreWait>
}
 800192e:	bf00      	nop
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	20000370 	.word	0x20000370

08001938 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 8001938:	b480      	push	{r7}
 800193a:	b083      	sub	sp, #12
 800193c:	af00      	add	r7, sp, #0
 800193e:	6078      	str	r0, [r7, #4]
        : color(0)
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	2200      	movs	r2, #0
 8001944:	601a      	str	r2, [r3, #0]
    {
    }
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	4618      	mov	r0, r3
 800194a:	370c      	adds	r7, #12
 800194c:	46bd      	mov	sp, r7
 800194e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001952:	4770      	bx	lr

08001954 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8001954:	b480      	push	{r7}
 8001956:	b083      	sub	sp, #12
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
    {
        x = 0;
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	2200      	movs	r2, #0
 8001960:	801a      	strh	r2, [r3, #0]
        y = 0;
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	2200      	movs	r2, #0
 8001966:	805a      	strh	r2, [r3, #2]
        width = 0;
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	2200      	movs	r2, #0
 800196c:	809a      	strh	r2, [r3, #4]
        height = 0;
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2200      	movs	r2, #0
 8001972:	80da      	strh	r2, [r3, #6]
    }
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	4618      	mov	r0, r3
 8001978:	370c      	adds	r7, #12
 800197a:	46bd      	mov	sp, r7
 800197c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001980:	4770      	bx	lr
	...

08001984 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8001984:	b480      	push	{r7}
 8001986:	b083      	sub	sp, #12
 8001988:	af00      	add	r7, sp, #0
 800198a:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800198c:	4a04      	ldr	r2, [pc, #16]	; (80019a0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	6013      	str	r3, [r2, #0]
    }
 8001992:	bf00      	nop
 8001994:	370c      	adds	r7, #12
 8001996:	46bd      	mov	sp, r7
 8001998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800199c:	4770      	bx	lr
 800199e:	bf00      	nop
 80019a0:	200089ec 	.word	0x200089ec

080019a4 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80019a4:	b480      	push	{r7}
 80019a6:	b083      	sub	sp, #12
 80019a8:	af00      	add	r7, sp, #0
 80019aa:	6078      	str	r0, [r7, #4]
    {
 80019ac:	4a04      	ldr	r2, [pc, #16]	; (80019c0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	601a      	str	r2, [r3, #0]
    }
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	4618      	mov	r0, r3
 80019b6:	370c      	adds	r7, #12
 80019b8:	46bd      	mov	sp, r7
 80019ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019be:	4770      	bx	lr
 80019c0:	0801d018 	.word	0x0801d018

080019c4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80019c4:	b580      	push	{r7, lr}
 80019c6:	b082      	sub	sp, #8
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	6078      	str	r0, [r7, #4]
    }
 80019cc:	6878      	ldr	r0, [r7, #4]
 80019ce:	f7ff ffe9 	bl	80019a4 <_ZN8touchgfx12FontProviderD1Ev>
 80019d2:	2104      	movs	r1, #4
 80019d4:	6878      	ldr	r0, [r7, #4]
 80019d6:	f019 fdbb 	bl	801b550 <_ZdlPvj>
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	4618      	mov	r0, r3
 80019de:	3708      	adds	r7, #8
 80019e0:	46bd      	mov	sp, r7
 80019e2:	bd80      	pop	{r7, pc}

080019e4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 80019e4:	b480      	push	{r7}
 80019e6:	b085      	sub	sp, #20
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	60f8      	str	r0, [r7, #12]
 80019ec:	60b9      	str	r1, [r7, #8]
 80019ee:	607a      	str	r2, [r7, #4]
 80019f0:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80019f2:	4a0b      	ldr	r2, [pc, #44]	; (8001a20 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 80019f4:	68fb      	ldr	r3, [r7, #12]
 80019f6:	601a      	str	r2, [r3, #0]
 80019f8:	68fb      	ldr	r3, [r7, #12]
 80019fa:	68ba      	ldr	r2, [r7, #8]
 80019fc:	605a      	str	r2, [r3, #4]
 80019fe:	68fb      	ldr	r3, [r7, #12]
 8001a00:	687a      	ldr	r2, [r7, #4]
 8001a02:	609a      	str	r2, [r3, #8]
 8001a04:	68fb      	ldr	r3, [r7, #12]
 8001a06:	683a      	ldr	r2, [r7, #0]
 8001a08:	60da      	str	r2, [r3, #12]
 8001a0a:	68fb      	ldr	r3, [r7, #12]
 8001a0c:	69ba      	ldr	r2, [r7, #24]
 8001a0e:	611a      	str	r2, [r3, #16]
    {
    }
 8001a10:	68fb      	ldr	r3, [r7, #12]
 8001a12:	4618      	mov	r0, r3
 8001a14:	3714      	adds	r7, #20
 8001a16:	46bd      	mov	sp, r7
 8001a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a1c:	4770      	bx	lr
 8001a1e:	bf00      	nop
 8001a20:	0801d008 	.word	0x0801d008

08001a24 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8001a24:	b480      	push	{r7}
 8001a26:	b083      	sub	sp, #12
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
    {
 8001a2c:	4a04      	ldr	r2, [pc, #16]	; (8001a40 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	601a      	str	r2, [r3, #0]
    }
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	4618      	mov	r0, r3
 8001a36:	370c      	adds	r7, #12
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3e:	4770      	bx	lr
 8001a40:	0801d008 	.word	0x0801d008

08001a44 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8001a44:	b580      	push	{r7, lr}
 8001a46:	b082      	sub	sp, #8
 8001a48:	af00      	add	r7, sp, #0
 8001a4a:	6078      	str	r0, [r7, #4]
    }
 8001a4c:	6878      	ldr	r0, [r7, #4]
 8001a4e:	f7ff ffe9 	bl	8001a24 <_ZN8touchgfx7MVPHeapD1Ev>
 8001a52:	2114      	movs	r1, #20
 8001a54:	6878      	ldr	r0, [r7, #4]
 8001a56:	f019 fd7b 	bl	801b550 <_ZdlPvj>
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	3708      	adds	r7, #8
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bd80      	pop	{r7, pc}

08001a64 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8001a64:	b480      	push	{r7}
 8001a66:	b083      	sub	sp, #12
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
 8001a6c:	6039      	str	r1, [r7, #0]
    {
    }
 8001a6e:	bf00      	nop
 8001a70:	370c      	adds	r7, #12
 8001a72:	46bd      	mov	sp, r7
 8001a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a78:	4770      	bx	lr

08001a7a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8001a7a:	b480      	push	{r7}
 8001a7c:	b083      	sub	sp, #12
 8001a7e:	af00      	add	r7, sp, #0
 8001a80:	6078      	str	r0, [r7, #4]
 8001a82:	6039      	str	r1, [r7, #0]
    {
    }
 8001a84:	bf00      	nop
 8001a86:	370c      	adds	r7, #12
 8001a88:	46bd      	mov	sp, r7
 8001a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a8e:	4770      	bx	lr

08001a90 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8001a90:	b480      	push	{r7}
 8001a92:	b083      	sub	sp, #12
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
 8001a98:	6039      	str	r1, [r7, #0]
    {
    }
 8001a9a:	bf00      	nop
 8001a9c:	370c      	adds	r7, #12
 8001a9e:	46bd      	mov	sp, r7
 8001aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa4:	4770      	bx	lr

08001aa6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8001aa6:	b480      	push	{r7}
 8001aa8:	b083      	sub	sp, #12
 8001aaa:	af00      	add	r7, sp, #0
 8001aac:	6078      	str	r0, [r7, #4]
 8001aae:	460b      	mov	r3, r1
 8001ab0:	70fb      	strb	r3, [r7, #3]
    {
    }
 8001ab2:	bf00      	nop
 8001ab4:	370c      	adds	r7, #12
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001abc:	4770      	bx	lr

08001abe <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8001abe:	b480      	push	{r7}
 8001ac0:	b083      	sub	sp, #12
 8001ac2:	af00      	add	r7, sp, #0
 8001ac4:	6078      	str	r0, [r7, #4]
    {
    }
 8001ac6:	bf00      	nop
 8001ac8:	370c      	adds	r7, #12
 8001aca:	46bd      	mov	sp, r7
 8001acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad0:	4770      	bx	lr

08001ad2 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8001ad2:	b480      	push	{r7}
 8001ad4:	b083      	sub	sp, #12
 8001ad6:	af00      	add	r7, sp, #0
 8001ad8:	6078      	str	r0, [r7, #4]
    {
    }
 8001ada:	bf00      	nop
 8001adc:	370c      	adds	r7, #12
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae4:	4770      	bx	lr
	...

08001ae8 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8001ae8:	b480      	push	{r7}
 8001aea:	b083      	sub	sp, #12
 8001aec:	af00      	add	r7, sp, #0
 8001aee:	6078      	str	r0, [r7, #4]
    {
 8001af0:	4a04      	ldr	r2, [pc, #16]	; (8001b04 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	601a      	str	r2, [r3, #0]
    }
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	4618      	mov	r0, r3
 8001afa:	370c      	adds	r7, #12
 8001afc:	46bd      	mov	sp, r7
 8001afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b02:	4770      	bx	lr
 8001b04:	0801cfe0 	.word	0x0801cfe0

08001b08 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8001b08:	b580      	push	{r7, lr}
 8001b0a:	b082      	sub	sp, #8
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
    }
 8001b10:	6878      	ldr	r0, [r7, #4]
 8001b12:	f7ff ffe9 	bl	8001ae8 <_ZN8touchgfx15UIEventListenerD1Ev>
 8001b16:	2104      	movs	r1, #4
 8001b18:	6878      	ldr	r0, [r7, #4]
 8001b1a:	f019 fd19 	bl	801b550 <_ZdlPvj>
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	4618      	mov	r0, r3
 8001b22:	3708      	adds	r7, #8
 8001b24:	46bd      	mov	sp, r7
 8001b26:	bd80      	pop	{r7, pc}

08001b28 <_ZN8touchgfx3LCDD1Ev>:
 */
class LCD
{
public:
    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8001b28:	b480      	push	{r7}
 8001b2a:	b083      	sub	sp, #12
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	6078      	str	r0, [r7, #4]
    {
 8001b30:	4a04      	ldr	r2, [pc, #16]	; (8001b44 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	601a      	str	r2, [r3, #0]
    }
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	4618      	mov	r0, r3
 8001b3a:	370c      	adds	r7, #12
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b42:	4770      	bx	lr
 8001b44:	0801e6a0 	.word	0x0801e6a0

08001b48 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	b082      	sub	sp, #8
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	6078      	str	r0, [r7, #4]
    }
 8001b50:	6878      	ldr	r0, [r7, #4]
 8001b52:	f7ff ffe9 	bl	8001b28 <_ZN8touchgfx3LCDD1Ev>
 8001b56:	2108      	movs	r1, #8
 8001b58:	6878      	ldr	r0, [r7, #4]
 8001b5a:	f019 fcf9 	bl	801b550 <_ZdlPvj>
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	4618      	mov	r0, r3
 8001b62:	3708      	adds	r7, #8
 8001b64:	46bd      	mov	sp, r7
 8001b66:	bd80      	pop	{r7, pc}

08001b68 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8001b68:	b480      	push	{r7}
 8001b6a:	b083      	sub	sp, #12
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	460b      	mov	r3, r1
 8001b72:	70fb      	strb	r3, [r7, #3]
    {
    }
 8001b74:	bf00      	nop
 8001b76:	370c      	adds	r7, #12
 8001b78:	46bd      	mov	sp, r7
 8001b7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7e:	4770      	bx	lr

08001b80 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8001b80:	b480      	push	{r7}
 8001b82:	b083      	sub	sp, #12
 8001b84:	af00      	add	r7, sp, #0
 8001b86:	6078      	str	r0, [r7, #4]
 8001b88:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	683a      	ldr	r2, [r7, #0]
 8001b8e:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8001b92:	6810      	ldr	r0, [r2, #0]
 8001b94:	6851      	ldr	r1, [r2, #4]
 8001b96:	c303      	stmia	r3!, {r0, r1}
    };
 8001b98:	bf00      	nop
 8001b9a:	370c      	adds	r7, #12
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba2:	4770      	bx	lr

08001ba4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8001ba4:	b480      	push	{r7}
 8001ba6:	b083      	sub	sp, #12
 8001ba8:	af00      	add	r7, sp, #0
 8001baa:	6078      	str	r0, [r7, #4]
    {
 8001bac:	4a04      	ldr	r2, [pc, #16]	; (8001bc0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	601a      	str	r2, [r3, #0]
    }
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	4618      	mov	r0, r3
 8001bb6:	370c      	adds	r7, #12
 8001bb8:	46bd      	mov	sp, r7
 8001bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bbe:	4770      	bx	lr
 8001bc0:	0801cfc8 	.word	0x0801cfc8

08001bc4 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	b082      	sub	sp, #8
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
    }
 8001bcc:	6878      	ldr	r0, [r7, #4]
 8001bce:	f7ff ffe9 	bl	8001ba4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8001bd2:	2104      	movs	r1, #4
 8001bd4:	6878      	ldr	r0, [r7, #4]
 8001bd6:	f019 fcbb 	bl	801b550 <_ZdlPvj>
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	4618      	mov	r0, r3
 8001bde:	3708      	adds	r7, #8
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bd80      	pop	{r7, pc}

08001be4 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8001be4:	b480      	push	{r7}
 8001be6:	b083      	sub	sp, #12
 8001be8:	af00      	add	r7, sp, #0
 8001bea:	6078      	str	r0, [r7, #4]
    {
 8001bec:	4a04      	ldr	r2, [pc, #16]	; (8001c00 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	601a      	str	r2, [r3, #0]
    }
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	370c      	adds	r7, #12
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bfe:	4770      	bx	lr
 8001c00:	0801cfa4 	.word	0x0801cfa4

08001c04 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8001c04:	b580      	push	{r7, lr}
 8001c06:	b082      	sub	sp, #8
 8001c08:	af00      	add	r7, sp, #0
 8001c0a:	6078      	str	r0, [r7, #4]
    }
 8001c0c:	6878      	ldr	r0, [r7, #4]
 8001c0e:	f7ff ffe9 	bl	8001be4 <_ZN8touchgfx9DMA_QueueD1Ev>
 8001c12:	2104      	movs	r1, #4
 8001c14:	6878      	ldr	r0, [r7, #4]
 8001c16:	f019 fc9b 	bl	801b550 <_ZdlPvj>
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	4618      	mov	r0, r3
 8001c1e:	3708      	adds	r7, #8
 8001c20:	46bd      	mov	sp, r7
 8001c22:	bd80      	pop	{r7, pc}

08001c24 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 8001c24:	b480      	push	{r7}
 8001c26:	b083      	sub	sp, #12
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
    {
    }
 8001c2c:	bf00      	nop
 8001c2e:	370c      	adds	r7, #12
 8001c30:	46bd      	mov	sp, r7
 8001c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c36:	4770      	bx	lr

08001c38 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 8001c38:	b480      	push	{r7}
 8001c3a:	b083      	sub	sp, #12
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8001c40:	2300      	movs	r3, #0
    }
 8001c42:	4618      	mov	r0, r3
 8001c44:	370c      	adds	r7, #12
 8001c46:	46bd      	mov	sp, r7
 8001c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4c:	4770      	bx	lr
	...

08001c50 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 8001c50:	b480      	push	{r7}
 8001c52:	b083      	sub	sp, #12
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	6078      	str	r0, [r7, #4]
    {
 8001c58:	4a04      	ldr	r2, [pc, #16]	; (8001c6c <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	601a      	str	r2, [r3, #0]
    }
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	4618      	mov	r0, r3
 8001c62:	370c      	adds	r7, #12
 8001c64:	46bd      	mov	sp, r7
 8001c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c6a:	4770      	bx	lr
 8001c6c:	0801e1dc 	.word	0x0801e1dc

08001c70 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8001c70:	b580      	push	{r7, lr}
 8001c72:	b082      	sub	sp, #8
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
    }
 8001c78:	6878      	ldr	r0, [r7, #4]
 8001c7a:	f7ff ffe9 	bl	8001c50 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8001c7e:	210c      	movs	r1, #12
 8001c80:	6878      	ldr	r0, [r7, #4]
 8001c82:	f019 fc65 	bl	801b550 <_ZdlPvj>
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	4618      	mov	r0, r3
 8001c8a:	3708      	adds	r7, #8
 8001c8c:	46bd      	mov	sp, r7
 8001c8e:	bd80      	pop	{r7, pc}

08001c90 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8001c90:	b480      	push	{r7}
 8001c92:	b083      	sub	sp, #12
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	6078      	str	r0, [r7, #4]
 8001c98:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001c9a:	4a09      	ldr	r2, [pc, #36]	; (8001cc0 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	601a      	str	r2, [r3, #0]
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	683a      	ldr	r2, [r7, #0]
 8001ca4:	605a      	str	r2, [r3, #4]
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	2200      	movs	r2, #0
 8001caa:	721a      	strb	r2, [r3, #8]
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	2200      	movs	r2, #0
 8001cb0:	725a      	strb	r2, [r3, #9]
    {
    }
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	4618      	mov	r0, r3
 8001cb6:	370c      	adds	r7, #12
 8001cb8:	46bd      	mov	sp, r7
 8001cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbe:	4770      	bx	lr
 8001cc0:	0801e1dc 	.word	0x0801e1dc

08001cc4 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8001cc4:	b480      	push	{r7}
 8001cc6:	b083      	sub	sp, #12
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	6078      	str	r0, [r7, #4]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	2200      	movs	r2, #0
 8001cd0:	801a      	strh	r2, [r3, #0]
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	2200      	movs	r2, #0
 8001cd6:	805a      	strh	r2, [r3, #2]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	2200      	movs	r2, #0
 8001cdc:	809a      	strh	r2, [r3, #4]
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	80da      	strh	r2, [r3, #6]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	811a      	strh	r2, [r3, #8]
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	2200      	movs	r2, #0
 8001cee:	815a      	strh	r2, [r3, #10]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	819a      	strh	r2, [r3, #12]
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	739a      	strb	r2, [r3, #14]
        {
        }
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	4618      	mov	r0, r3
 8001d00:	370c      	adds	r7, #12
 8001d02:	46bd      	mov	sp, r7
 8001d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d08:	4770      	bx	lr

08001d0a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8001d0a:	b580      	push	{r7, lr}
 8001d0c:	b082      	sub	sp, #8
 8001d0e:	af00      	add	r7, sp, #0
 8001d10:	6078      	str	r0, [r7, #4]
        : listener(0), dragThresholdValue(0)
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	4618      	mov	r0, r3
 8001d16:	f7ff ffd5 	bl	8001cc4 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	2200      	movs	r2, #0
 8001d1e:	611a      	str	r2, [r3, #16]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	2200      	movs	r2, #0
 8001d24:	829a      	strh	r2, [r3, #20]
    {
    }
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	4618      	mov	r0, r3
 8001d2a:	3708      	adds	r7, #8
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}

08001d30 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8001d30:	b580      	push	{r7, lr}
 8001d32:	b084      	sub	sp, #16
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	60f8      	str	r0, [r7, #12]
 8001d38:	60b9      	str	r1, [r7, #8]
 8001d3a:	607a      	str	r2, [r7, #4]
 8001d3c:	603b      	str	r3, [r7, #0]
          lastRenderVariant(HARDWARE)
 8001d3e:	4a4a      	ldr	r2, [pc, #296]	; (8001e68 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	601a      	str	r2, [r3, #0]
 8001d44:	68fb      	ldr	r3, [r7, #12]
 8001d46:	68ba      	ldr	r2, [r7, #8]
 8001d48:	605a      	str	r2, [r3, #4]
 8001d4a:	68fb      	ldr	r3, [r7, #12]
 8001d4c:	687a      	ldr	r2, [r7, #4]
 8001d4e:	609a      	str	r2, [r3, #8]
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	683a      	ldr	r2, [r7, #0]
 8001d54:	60da      	str	r2, [r3, #12]
 8001d56:	68fb      	ldr	r3, [r7, #12]
 8001d58:	2200      	movs	r2, #0
 8001d5a:	611a      	str	r2, [r3, #16]
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	2200      	movs	r2, #0
 8001d60:	615a      	str	r2, [r3, #20]
 8001d62:	68fb      	ldr	r3, [r7, #12]
 8001d64:	2200      	movs	r2, #0
 8001d66:	619a      	str	r2, [r3, #24]
 8001d68:	68fb      	ldr	r3, [r7, #12]
 8001d6a:	331c      	adds	r3, #28
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	f7ff ffcc 	bl	8001d0a <_ZN8touchgfx8GesturesC1Ev>
 8001d72:	68fb      	ldr	r3, [r7, #12]
 8001d74:	2200      	movs	r2, #0
 8001d76:	639a      	str	r2, [r3, #56]	; 0x38
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	63da      	str	r2, [r3, #60]	; 0x3c
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	2200      	movs	r2, #0
 8001d82:	641a      	str	r2, [r3, #64]	; 0x40
 8001d84:	68fb      	ldr	r3, [r7, #12]
 8001d86:	2200      	movs	r2, #0
 8001d88:	645a      	str	r2, [r3, #68]	; 0x44
 8001d8a:	68fb      	ldr	r3, [r7, #12]
 8001d8c:	2200      	movs	r2, #0
 8001d8e:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	2201      	movs	r2, #1
 8001d96:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	2200      	movs	r2, #0
 8001da6:	64da      	str	r2, [r3, #76]	; 0x4c
 8001da8:	68fb      	ldr	r3, [r7, #12]
 8001daa:	3350      	adds	r3, #80	; 0x50
 8001dac:	4618      	mov	r0, r3
 8001dae:	f7ff fdd1 	bl	8001954 <_ZN8touchgfx4RectC1Ev>
 8001db2:	68fb      	ldr	r3, [r7, #12]
 8001db4:	2201      	movs	r2, #1
 8001db6:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8001dba:	68fb      	ldr	r3, [r7, #12]
 8001dbc:	2200      	movs	r2, #0
 8001dbe:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8001dc2:	68fb      	ldr	r3, [r7, #12]
 8001dc4:	2200      	movs	r2, #0
 8001dc6:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001dca:	68fb      	ldr	r3, [r7, #12]
 8001dcc:	2201      	movs	r2, #1
 8001dce:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 8001dd2:	68fb      	ldr	r3, [r7, #12]
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	2200      	movs	r2, #0
 8001dde:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001de2:	68fb      	ldr	r3, [r7, #12]
 8001de4:	2200      	movs	r2, #0
 8001de6:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8001dea:	68fb      	ldr	r3, [r7, #12]
 8001dec:	2200      	movs	r2, #0
 8001dee:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	2200      	movs	r2, #0
 8001df6:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	671a      	str	r2, [r3, #112]	; 0x70
 8001e00:	68fb      	ldr	r3, [r7, #12]
 8001e02:	2200      	movs	r2, #0
 8001e04:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001e10:	68fb      	ldr	r3, [r7, #12]
 8001e12:	2201      	movs	r2, #1
 8001e14:	f883 2077 	strb.w	r2, [r3, #119]	; 0x77
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	2201      	movs	r2, #1
 8001e1c:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        instance = this;
 8001e20:	4a12      	ldr	r2, [pc, #72]	; (8001e6c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x13c>)
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 8001e26:	4a12      	ldr	r2, [pc, #72]	; (8001e70 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
 8001e28:	8b3b      	ldrh	r3, [r7, #24]
 8001e2a:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 8001e2c:	4a11      	ldr	r2, [pc, #68]	; (8001e74 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
 8001e2e:	8bbb      	ldrh	r3, [r7, #28]
 8001e30:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8001e32:	4b11      	ldr	r3, [pc, #68]	; (8001e78 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x148>)
 8001e34:	2200      	movs	r2, #0
 8001e36:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001e38:	4b0d      	ldr	r3, [pc, #52]	; (8001e70 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
 8001e3a:	881a      	ldrh	r2, [r3, #0]
 8001e3c:	4b0f      	ldr	r3, [pc, #60]	; (8001e7c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x14c>)
 8001e3e:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001e40:	4b0c      	ldr	r3, [pc, #48]	; (8001e74 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
 8001e42:	881a      	ldrh	r2, [r3, #0]
 8001e44:	4b0e      	ldr	r3, [pc, #56]	; (8001e80 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x150>)
 8001e46:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001e48:	8b3a      	ldrh	r2, [r7, #24]
 8001e4a:	8bbb      	ldrh	r3, [r7, #28]
 8001e4c:	429a      	cmp	r2, r3
 8001e4e:	d301      	bcc.n	8001e54 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>
 8001e50:	2200      	movs	r2, #0
 8001e52:	e000      	b.n	8001e56 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x126>
 8001e54:	2201      	movs	r2, #1
 8001e56:	68fb      	ldr	r3, [r7, #12]
 8001e58:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	4618      	mov	r0, r3
 8001e60:	3710      	adds	r7, #16
 8001e62:	46bd      	mov	sp, r7
 8001e64:	bd80      	pop	{r7, pc}
 8001e66:	bf00      	nop
 8001e68:	0801dd90 	.word	0x0801dd90
 8001e6c:	20008990 	.word	0x20008990
 8001e70:	20008984 	.word	0x20008984
 8001e74:	20008986 	.word	0x20008986
 8001e78:	20008988 	.word	0x20008988
 8001e7c:	2000898a 	.word	0x2000898a
 8001e80:	2000898c 	.word	0x2000898c

08001e84 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8001e84:	b580      	push	{r7, lr}
 8001e86:	b082      	sub	sp, #8
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
 8001e8c:	4a05      	ldr	r2, [pc, #20]	; (8001ea4 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	601a      	str	r2, [r3, #0]
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	4618      	mov	r0, r3
 8001e96:	f7ff fe27 	bl	8001ae8 <_ZN8touchgfx15UIEventListenerD1Ev>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	3708      	adds	r7, #8
 8001ea0:	46bd      	mov	sp, r7
 8001ea2:	bd80      	pop	{r7, pc}
 8001ea4:	0801e77c 	.word	0x0801e77c

08001ea8 <_ZN8touchgfx11ApplicationD0Ev>:
 8001ea8:	b580      	push	{r7, lr}
 8001eaa:	b082      	sub	sp, #8
 8001eac:	af00      	add	r7, sp, #0
 8001eae:	6078      	str	r0, [r7, #4]
 8001eb0:	6878      	ldr	r0, [r7, #4]
 8001eb2:	f7ff ffe7 	bl	8001e84 <_ZN8touchgfx11ApplicationD1Ev>
 8001eb6:	f44f 719c 	mov.w	r1, #312	; 0x138
 8001eba:	6878      	ldr	r0, [r7, #4]
 8001ebc:	f019 fb48 	bl	801b550 <_ZdlPvj>
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	3708      	adds	r7, #8
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	bd80      	pop	{r7, pc}

08001eca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8001eca:	b580      	push	{r7, lr}
 8001ecc:	b082      	sub	sp, #8
 8001ece:	af00      	add	r7, sp, #0
 8001ed0:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8001ed2:	6878      	ldr	r0, [r7, #4]
 8001ed4:	f000 f804 	bl	8001ee0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8001ed8:	bf00      	nop
 8001eda:	3708      	adds	r7, #8
 8001edc:	46bd      	mov	sp, r7
 8001ede:	bd80      	pop	{r7, pc}

08001ee0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8001ee0:	b580      	push	{r7, lr}
 8001ee2:	b082      	sub	sp, #8
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d00f      	beq.n	8001f12 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	330c      	adds	r3, #12
 8001f02:	681b      	ldr	r3, [r3, #0]
 8001f04:	4610      	mov	r0, r2
 8001f06:	4798      	blx	r3
 8001f08:	4603      	mov	r3, r0
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d001      	beq.n	8001f12 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8001f0e:	2301      	movs	r3, #1
 8001f10:	e000      	b.n	8001f14 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8001f12:	2300      	movs	r3, #0
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	d00e      	beq.n	8001f36 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	3308      	adds	r3, #8
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	4610      	mov	r0, r2
 8001f2c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	2200      	movs	r2, #0
 8001f32:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        }
    }
 8001f36:	bf00      	nop
 8001f38:	3708      	adds	r7, #8
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}
	...

08001f40 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8001f40:	b580      	push	{r7, lr}
 8001f42:	b082      	sub	sp, #8
 8001f44:	af00      	add	r7, sp, #0
 8001f46:	6078      	str	r0, [r7, #4]
 8001f48:	4a05      	ldr	r2, [pc, #20]	; (8001f60 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	601a      	str	r2, [r3, #0]
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	4618      	mov	r0, r3
 8001f52:	f7ff ff97 	bl	8001e84 <_ZN8touchgfx11ApplicationD1Ev>
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	4618      	mov	r0, r3
 8001f5a:	3708      	adds	r7, #8
 8001f5c:	46bd      	mov	sp, r7
 8001f5e:	bd80      	pop	{r7, pc}
 8001f60:	0801cf60 	.word	0x0801cf60

08001f64 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8001f64:	b580      	push	{r7, lr}
 8001f66:	b082      	sub	sp, #8
 8001f68:	af00      	add	r7, sp, #0
 8001f6a:	6078      	str	r0, [r7, #4]
 8001f6c:	6878      	ldr	r0, [r7, #4]
 8001f6e:	f7ff ffe7 	bl	8001f40 <_ZN8touchgfx14MVPApplicationD1Ev>
 8001f72:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001f76:	6878      	ldr	r0, [r7, #4]
 8001f78:	f019 faea 	bl	801b550 <_ZdlPvj>
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	4618      	mov	r0, r3
 8001f80:	3708      	adds	r7, #8
 8001f82:	46bd      	mov	sp, r7
 8001f84:	bd80      	pop	{r7, pc}
	...

08001f88 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b082      	sub	sp, #8
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	4a08      	ldr	r2, [pc, #32]	; (8001fb4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	601a      	str	r2, [r3, #0]
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	f000 fb83 	bl	80026a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	4618      	mov	r0, r3
 8001fa6:	f7ff ffcb 	bl	8001f40 <_ZN8touchgfx14MVPApplicationD1Ev>
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	4618      	mov	r0, r3
 8001fae:	3708      	adds	r7, #8
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	bd80      	pop	{r7, pc}
 8001fb4:	0801cf04 	.word	0x0801cf04

08001fb8 <_ZN23FrontendApplicationBaseD0Ev>:
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b082      	sub	sp, #8
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
 8001fc0:	6878      	ldr	r0, [r7, #4]
 8001fc2:	f7ff ffe1 	bl	8001f88 <_ZN23FrontendApplicationBaseD1Ev>
 8001fc6:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8001fca:	6878      	ldr	r0, [r7, #4]
 8001fcc:	f019 fac0 	bl	801b550 <_ZdlPvj>
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	4618      	mov	r0, r3
 8001fd4:	3708      	adds	r7, #8
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	bd80      	pop	{r7, pc}
	...

08001fdc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8001fdc:	b580      	push	{r7, lr}
 8001fde:	b082      	sub	sp, #8
 8001fe0:	af00      	add	r7, sp, #0
 8001fe2:	6078      	str	r0, [r7, #4]
 8001fe4:	4a05      	ldr	r2, [pc, #20]	; (8001ffc <_ZN19FrontendApplicationD1Ev+0x20>)
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	601a      	str	r2, [r3, #0]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	4618      	mov	r0, r3
 8001fee:	f7ff ffcb 	bl	8001f88 <_ZN23FrontendApplicationBaseD1Ev>
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	3708      	adds	r7, #8
 8001ff8:	46bd      	mov	sp, r7
 8001ffa:	bd80      	pop	{r7, pc}
 8001ffc:	0801cec0 	.word	0x0801cec0

08002000 <_ZN19FrontendApplicationD0Ev>:
 8002000:	b580      	push	{r7, lr}
 8002002:	b082      	sub	sp, #8
 8002004:	af00      	add	r7, sp, #0
 8002006:	6078      	str	r0, [r7, #4]
 8002008:	6878      	ldr	r0, [r7, #4]
 800200a:	f7ff ffe7 	bl	8001fdc <_ZN19FrontendApplicationD1Ev>
 800200e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002012:	6878      	ldr	r0, [r7, #4]
 8002014:	f019 fa9c 	bl	801b550 <_ZdlPvj>
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	4618      	mov	r0, r3
 800201c:	3708      	adds	r7, #8
 800201e:	46bd      	mov	sp, r7
 8002020:	bd80      	pop	{r7, pc}

08002022 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002022:	b580      	push	{r7, lr}
 8002024:	b082      	sub	sp, #8
 8002026:	af00      	add	r7, sp, #0
 8002028:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 8002030:	4618      	mov	r0, r3
 8002032:	f002 fd7f 	bl	8004b34 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	4618      	mov	r0, r3
 800203a:	f00a ff01 	bl	800ce40 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800203e:	bf00      	nop
 8002040:	3708      	adds	r7, #8
 8002042:	46bd      	mov	sp, r7
 8002044:	bd80      	pop	{r7, pc}

08002046 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8002046:	b580      	push	{r7, lr}
 8002048:	b082      	sub	sp, #8
 800204a:	af00      	add	r7, sp, #0
 800204c:	6078      	str	r0, [r7, #4]
 800204e:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 8002050:	683b      	ldr	r3, [r7, #0]
 8002052:	4618      	mov	r0, r3
 8002054:	f001 f898 	bl	8003188 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 8002058:	bf00      	nop
 800205a:	3708      	adds	r7, #8
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}

08002060 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8002060:	b580      	push	{r7, lr}
 8002062:	b086      	sub	sp, #24
 8002064:	af02      	add	r7, sp, #8
 8002066:	60f8      	str	r0, [r7, #12]
 8002068:	60b9      	str	r1, [r7, #8]
 800206a:	607a      	str	r2, [r7, #4]
 800206c:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800206e:	68f8      	ldr	r0, [r7, #12]
 8002070:	69bb      	ldr	r3, [r7, #24]
 8002072:	9300      	str	r3, [sp, #0]
 8002074:	683b      	ldr	r3, [r7, #0]
 8002076:	687a      	ldr	r2, [r7, #4]
 8002078:	68b9      	ldr	r1, [r7, #8]
 800207a:	f7ff fcb3 	bl	80019e4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800207e:	4a04      	ldr	r2, [pc, #16]	; (8002090 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	601a      	str	r2, [r3, #0]
    {

    }
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	4618      	mov	r0, r3
 8002088:	3710      	adds	r7, #16
 800208a:	46bd      	mov	sp, r7
 800208c:	bd80      	pop	{r7, pc}
 800208e:	bf00      	nop
 8002090:	0801ceac 	.word	0x0801ceac

08002094 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002094:	b580      	push	{r7, lr}
 8002096:	af00      	add	r7, sp, #0
 8002098:	4801      	ldr	r0, [pc, #4]	; (80020a0 <__tcf_0+0xc>)
 800209a:	f000 f9fd 	bl	8002498 <_ZN12FrontendHeapD1Ev>
 800209e:	bd80      	pop	{r7, pc}
 80020a0:	20000374 	.word	0x20000374

080020a4 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 80020a4:	b580      	push	{r7, lr}
 80020a6:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 80020a8:	4b12      	ldr	r3, [pc, #72]	; (80020f4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 80020aa:	781b      	ldrb	r3, [r3, #0]
 80020ac:	f3bf 8f5b 	dmb	ish
 80020b0:	b2db      	uxtb	r3, r3
 80020b2:	f003 0301 	and.w	r3, r3, #1
 80020b6:	2b00      	cmp	r3, #0
 80020b8:	bf0c      	ite	eq
 80020ba:	2301      	moveq	r3, #1
 80020bc:	2300      	movne	r3, #0
 80020be:	b2db      	uxtb	r3, r3
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d013      	beq.n	80020ec <_ZN12FrontendHeap11getInstanceEv+0x48>
 80020c4:	480b      	ldr	r0, [pc, #44]	; (80020f4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 80020c6:	f019 fa45 	bl	801b554 <__cxa_guard_acquire>
 80020ca:	4603      	mov	r3, r0
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	bf14      	ite	ne
 80020d0:	2301      	movne	r3, #1
 80020d2:	2300      	moveq	r3, #0
 80020d4:	b2db      	uxtb	r3, r3
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d008      	beq.n	80020ec <_ZN12FrontendHeap11getInstanceEv+0x48>
 80020da:	4807      	ldr	r0, [pc, #28]	; (80020f8 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 80020dc:	f000 f868 	bl	80021b0 <_ZN12FrontendHeapC1Ev>
 80020e0:	4804      	ldr	r0, [pc, #16]	; (80020f4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 80020e2:	f019 fa43 	bl	801b56c <__cxa_guard_release>
 80020e6:	4805      	ldr	r0, [pc, #20]	; (80020fc <_ZN12FrontendHeap11getInstanceEv+0x58>)
 80020e8:	f019 fa7c 	bl	801b5e4 <atexit>
        return instance;
 80020ec:	4b02      	ldr	r3, [pc, #8]	; (80020f8 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 80020ee:	4618      	mov	r0, r3
 80020f0:	bd80      	pop	{r7, pc}
 80020f2:	bf00      	nop
 80020f4:	20000608 	.word	0x20000608
 80020f8:	20000374 	.word	0x20000374
 80020fc:	08002095 	.word	0x08002095

08002100 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8002100:	b580      	push	{r7, lr}
 8002102:	b082      	sub	sp, #8
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
 8002108:	4a05      	ldr	r2, [pc, #20]	; (8002120 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	601a      	str	r2, [r3, #0]
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	4618      	mov	r0, r3
 8002112:	f7ff fc87 	bl	8001a24 <_ZN8touchgfx7MVPHeapD1Ev>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	4618      	mov	r0, r3
 800211a:	3708      	adds	r7, #8
 800211c:	46bd      	mov	sp, r7
 800211e:	bd80      	pop	{r7, pc}
 8002120:	0801ceac 	.word	0x0801ceac

08002124 <_ZN16FrontendHeapBaseD0Ev>:
 8002124:	b580      	push	{r7, lr}
 8002126:	b082      	sub	sp, #8
 8002128:	af00      	add	r7, sp, #0
 800212a:	6078      	str	r0, [r7, #4]
 800212c:	6878      	ldr	r0, [r7, #4]
 800212e:	f7ff ffe7 	bl	8002100 <_ZN16FrontendHeapBaseD1Ev>
 8002132:	2114      	movs	r1, #20
 8002134:	6878      	ldr	r0, [r7, #4]
 8002136:	f019 fa0b 	bl	801b550 <_ZdlPvj>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	4618      	mov	r0, r3
 800213e:	3708      	adds	r7, #8
 8002140:	46bd      	mov	sp, r7
 8002142:	bd80      	pop	{r7, pc}

08002144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8002144:	b580      	push	{r7, lr}
 8002146:	b082      	sub	sp, #8
 8002148:	af00      	add	r7, sp, #0
 800214a:	6078      	str	r0, [r7, #4]
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	4618      	mov	r0, r3
 8002150:	f008 f882 	bl	800a258 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002154:	4a03      	ldr	r2, [pc, #12]	; (8002164 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	601a      	str	r2, [r3, #0]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	4618      	mov	r0, r3
 800215e:	3708      	adds	r7, #8
 8002160:	46bd      	mov	sp, r7
 8002162:	bd80      	pop	{r7, pc}
 8002164:	0801ce78 	.word	0x0801ce78

08002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8002168:	b580      	push	{r7, lr}
 800216a:	b082      	sub	sp, #8
 800216c:	af00      	add	r7, sp, #0
 800216e:	6078      	str	r0, [r7, #4]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	4618      	mov	r0, r3
 8002174:	f008 f870 	bl	800a258 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002178:	4a03      	ldr	r2, [pc, #12]	; (8002188 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	601a      	str	r2, [r3, #0]
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	4618      	mov	r0, r3
 8002182:	3708      	adds	r7, #8
 8002184:	46bd      	mov	sp, r7
 8002186:	bd80      	pop	{r7, pc}
 8002188:	0801ce44 	.word	0x0801ce44

0800218c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800218c:	b580      	push	{r7, lr}
 800218e:	b082      	sub	sp, #8
 8002190:	af00      	add	r7, sp, #0
 8002192:	6078      	str	r0, [r7, #4]
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	4618      	mov	r0, r3
 8002198:	f008 f85e 	bl	800a258 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800219c:	4a03      	ldr	r2, [pc, #12]	; (80021ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	601a      	str	r2, [r3, #0]
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	4618      	mov	r0, r3
 80021a6:	3708      	adds	r7, #8
 80021a8:	46bd      	mov	sp, r7
 80021aa:	bd80      	pop	{r7, pc}
 80021ac:	0801ce10 	.word	0x0801ce10

080021b0 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 80021b0:	b590      	push	{r4, r7, lr}
 80021b2:	b085      	sub	sp, #20
 80021b4:	af02      	add	r7, sp, #8
 80021b6:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 80021b8:	6878      	ldr	r0, [r7, #4]
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	f103 0114 	add.w	r1, r3, #20
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	f503 7492 	add.w	r4, r3, #292	; 0x124
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 80021d2:	9300      	str	r3, [sp, #0]
 80021d4:	4623      	mov	r3, r4
 80021d6:	f7ff ff43 	bl	8002060 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 80021da:	4a18      	ldr	r2, [pc, #96]	; (800223c <_ZN12FrontendHeapC1Ev+0x8c>)
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	601a      	str	r2, [r3, #0]
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	3314      	adds	r3, #20
 80021e4:	4618      	mov	r0, r3
 80021e6:	f7ff ffad 	bl	8002144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	332c      	adds	r3, #44	; 0x2c
 80021ee:	4618      	mov	r0, r3
 80021f0:	f7ff ffba 	bl	8002168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	f503 7392 	add.w	r3, r3, #292	; 0x124
 80021fa:	4618      	mov	r0, r3
 80021fc:	f7ff ffc6 	bl	800218c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8002206:	4618      	mov	r0, r3
 8002208:	f002 fc86 	bl	8004b18 <_ZN5ModelC1Ev>
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	f503 709e 	add.w	r0, r3, #316	; 0x13c
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8002218:	687a      	ldr	r2, [r7, #4]
 800221a:	4619      	mov	r1, r3
 800221c:	f002 fc66 	bl	8004aec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 8002220:	687a      	ldr	r2, [r7, #4]
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 8002228:	4619      	mov	r1, r3
 800222a:	4610      	mov	r0, r2
 800222c:	f7ff ff0b 	bl	8002046 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	4618      	mov	r0, r3
 8002234:	370c      	adds	r7, #12
 8002236:	46bd      	mov	sp, r7
 8002238:	bd90      	pop	{r4, r7, pc}
 800223a:	bf00      	nop
 800223c:	0801cdfc 	.word	0x0801cdfc

08002240 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8002240:	b580      	push	{r7, lr}
 8002242:	b082      	sub	sp, #8
 8002244:	af00      	add	r7, sp, #0
 8002246:	6078      	str	r0, [r7, #4]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	3318      	adds	r3, #24
 800224c:	4618      	mov	r0, r3
 800224e:	f7ff fb73 	bl	8001938 <_ZN8touchgfx9colortypeC1Ev>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	4618      	mov	r0, r3
 8002256:	3708      	adds	r7, #8
 8002258:	46bd      	mov	sp, r7
 800225a:	bd80      	pop	{r7, pc}

0800225c <_ZN8touchgfx5NoDMAC1Ev>:
 * @see DMA_Interface
 */
class NoDMA : public DMA_Interface
{
public:
    NoDMA()
 800225c:	b580      	push	{r7, lr}
 800225e:	b082      	sub	sp, #8
 8002260:	af00      	add	r7, sp, #0
 8002262:	6078      	str	r0, [r7, #4]
        : DMA_Interface(q), q(&b, 1)
 8002264:	687a      	ldr	r2, [r7, #4]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	330c      	adds	r3, #12
 800226a:	4619      	mov	r1, r3
 800226c:	4610      	mov	r0, r2
 800226e:	f7ff fd0f 	bl	8001c90 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8002272:	4a0b      	ldr	r2, [pc, #44]	; (80022a0 <_ZN8touchgfx5NoDMAC1Ev+0x44>)
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	601a      	str	r2, [r3, #0]
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	f103 000c 	add.w	r0, r3, #12
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	3320      	adds	r3, #32
 8002282:	2201      	movs	r2, #1
 8002284:	4619      	mov	r1, r3
 8002286:	f009 f889 	bl	800b39c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	3320      	adds	r3, #32
 800228e:	4618      	mov	r0, r3
 8002290:	f7ff ffd6 	bl	8002240 <_ZN8touchgfx6BlitOpC1Ev>
    {
    }
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	4618      	mov	r0, r3
 8002298:	3708      	adds	r7, #8
 800229a:	46bd      	mov	sp, r7
 800229c:	bd80      	pop	{r7, pc}
 800229e:	bf00      	nop
 80022a0:	0801cdac 	.word	0x0801cdac

080022a4 <_ZN8touchgfx5NoDMA11getBlitCapsEv>:
    /**
     * No blit operations supported by this DMA implementation.
     *
     * @return Zero (no blit ops supported).
     */
    virtual BlitOperations getBlitCaps()
 80022a4:	b480      	push	{r7}
 80022a6:	b083      	sub	sp, #12
 80022a8:	af00      	add	r7, sp, #0
 80022aa:	6078      	str	r0, [r7, #4]
    {
        return static_cast<BlitOperations>(0);
 80022ac:	2300      	movs	r3, #0
    }
 80022ae:	4618      	mov	r0, r3
 80022b0:	370c      	adds	r7, #12
 80022b2:	46bd      	mov	sp, r7
 80022b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b8:	4770      	bx	lr
	...

080022bc <_ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE>:
    /**
     * Asserts if used.
     *
     * @param  blitOp The blit operation to be performed by this DMA instance.
     */
    virtual void setupDataCopy(const BlitOp& blitOp)
 80022bc:	b580      	push	{r7, lr}
 80022be:	b082      	sub	sp, #8
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	6039      	str	r1, [r7, #0]
    {
        assert(0 && "DMA operation not supported");
 80022c6:	4b03      	ldr	r3, [pc, #12]	; (80022d4 <_ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE+0x18>)
 80022c8:	4a03      	ldr	r2, [pc, #12]	; (80022d8 <_ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE+0x1c>)
 80022ca:	213c      	movs	r1, #60	; 0x3c
 80022cc:	4803      	ldr	r0, [pc, #12]	; (80022dc <_ZN8touchgfx5NoDMA13setupDataCopyERKNS_6BlitOpE+0x20>)
 80022ce:	f019 f96b 	bl	801b5a8 <__assert_func>
 80022d2:	bf00      	nop
 80022d4:	0801c770 	.word	0x0801c770
 80022d8:	0801d06c 	.word	0x0801d06c
 80022dc:	0801c794 	.word	0x0801c794

080022e0 <_ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE>:
    /**
     * Asserts if used.
     *
     * @param  blitOp The blit operation to be performed by this DMA instance.
     */
    virtual void setupDataFill(const BlitOp& blitOp)
 80022e0:	b580      	push	{r7, lr}
 80022e2:	b082      	sub	sp, #8
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	6078      	str	r0, [r7, #4]
 80022e8:	6039      	str	r1, [r7, #0]
    {
        assert(0 && "DMA operation not supported");
 80022ea:	4b03      	ldr	r3, [pc, #12]	; (80022f8 <_ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE+0x18>)
 80022ec:	4a03      	ldr	r2, [pc, #12]	; (80022fc <_ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE+0x1c>)
 80022ee:	2146      	movs	r1, #70	; 0x46
 80022f0:	4803      	ldr	r0, [pc, #12]	; (8002300 <_ZN8touchgfx5NoDMA13setupDataFillERKNS_6BlitOpE+0x20>)
 80022f2:	f019 f959 	bl	801b5a8 <__assert_func>
 80022f6:	bf00      	nop
 80022f8:	0801c770 	.word	0x0801c770
 80022fc:	0801d024 	.word	0x0801d024
 8002300:	0801c794 	.word	0x0801c794

08002304 <_ZN8touchgfx5NoDMA18signalDMAInterruptEv>:
    }

    /** Does nothing. */
    virtual void signalDMAInterrupt()
 8002304:	b480      	push	{r7}
 8002306:	b083      	sub	sp, #12
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
    {
    }
 800230c:	bf00      	nop
 800230e:	370c      	adds	r7, #12
 8002310:	46bd      	mov	sp, r7
 8002312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002316:	4770      	bx	lr

08002318 <_ZN8touchgfx5NoDMA5flushEv>:

    /**
     * Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 8002318:	b480      	push	{r7}
 800231a:	b083      	sub	sp, #12
 800231c:	af00      	add	r7, sp, #0
 800231e:	6078      	str	r0, [r7, #4]
    {
    }
 8002320:	bf00      	nop
 8002322:	370c      	adds	r7, #12
 8002324:	46bd      	mov	sp, r7
 8002326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800232a:	4770      	bx	lr

0800232c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800232c:	b580      	push	{r7, lr}
 800232e:	b086      	sub	sp, #24
 8002330:	af02      	add	r7, sp, #8
 8002332:	60f8      	str	r0, [r7, #12]
 8002334:	60b9      	str	r1, [r7, #8]
 8002336:	607a      	str	r2, [r7, #4]
 8002338:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800233a:	68f8      	ldr	r0, [r7, #12]
 800233c:	8bbb      	ldrh	r3, [r7, #28]
 800233e:	9301      	str	r3, [sp, #4]
 8002340:	8b3b      	ldrh	r3, [r7, #24]
 8002342:	9300      	str	r3, [sp, #0]
 8002344:	683b      	ldr	r3, [r7, #0]
 8002346:	687a      	ldr	r2, [r7, #4]
 8002348:	68b9      	ldr	r1, [r7, #8]
 800234a:	f7ff fcf1 	bl	8001d30 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800234e:	4a04      	ldr	r2, [pc, #16]	; (8002360 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8002350:	68fb      	ldr	r3, [r7, #12]
 8002352:	601a      	str	r2, [r3, #0]
    }
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	4618      	mov	r0, r3
 8002358:	3710      	adds	r7, #16
 800235a:	46bd      	mov	sp, r7
 800235c:	bd80      	pop	{r7, pc}
 800235e:	bf00      	nop
 8002360:	0801d0bc 	.word	0x0801d0bc

08002364 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002364:	b580      	push	{r7, lr}
 8002366:	b086      	sub	sp, #24
 8002368:	af02      	add	r7, sp, #8
 800236a:	60f8      	str	r0, [r7, #12]
 800236c:	60b9      	str	r1, [r7, #8]
 800236e:	607a      	str	r2, [r7, #4]
 8002370:	603b      	str	r3, [r7, #0]
 8002372:	68f8      	ldr	r0, [r7, #12]
 8002374:	8bbb      	ldrh	r3, [r7, #28]
 8002376:	9301      	str	r3, [sp, #4]
 8002378:	8b3b      	ldrh	r3, [r7, #24]
 800237a:	9300      	str	r3, [sp, #0]
 800237c:	683b      	ldr	r3, [r7, #0]
 800237e:	687a      	ldr	r2, [r7, #4]
 8002380:	68b9      	ldr	r1, [r7, #8]
 8002382:	f7ff ffd3 	bl	800232c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8002386:	4a04      	ldr	r2, [pc, #16]	; (8002398 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	601a      	str	r2, [r3, #0]
    }
 800238c:	68fb      	ldr	r3, [r7, #12]
 800238e:	4618      	mov	r0, r3
 8002390:	3710      	adds	r7, #16
 8002392:	46bd      	mov	sp, r7
 8002394:	bd80      	pop	{r7, pc}
 8002396:	bf00      	nop
 8002398:	0801cc60 	.word	0x0801cc60

0800239c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800239c:	b480      	push	{r7}
 800239e:	b083      	sub	sp, #12
 80023a0:	af00      	add	r7, sp, #0
 80023a2:	6078      	str	r0, [r7, #4]
 80023a4:	4a04      	ldr	r2, [pc, #16]	; (80023b8 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	601a      	str	r2, [r3, #0]
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	4618      	mov	r0, r3
 80023ae:	370c      	adds	r7, #12
 80023b0:	46bd      	mov	sp, r7
 80023b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b6:	4770      	bx	lr
 80023b8:	0801cc48 	.word	0x0801cc48

080023bc <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 80023bc:	b580      	push	{r7, lr}
 80023be:	b082      	sub	sp, #8
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	4618      	mov	r0, r3
 80023c8:	f7ff ffe8 	bl	800239c <_ZN8touchgfx15TouchControllerC1Ev>
 80023cc:	4a03      	ldr	r2, [pc, #12]	; (80023dc <_ZN20STM32TouchControllerC1Ev+0x20>)
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	601a      	str	r2, [r3, #0]
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	4618      	mov	r0, r3
 80023d6:	3708      	adds	r7, #8
 80023d8:	46bd      	mov	sp, r7
 80023da:	bd80      	pop	{r7, pc}
 80023dc:	0801cc30 	.word	0x0801cc30

080023e0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80023e0:	b590      	push	{r4, r7, lr}
 80023e2:	b085      	sub	sp, #20
 80023e4:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80023e6:	f000 fc85 	bl	8002cf4 <_ZN14BitmapDatabase11getInstanceEv>
 80023ea:	4604      	mov	r4, r0
 80023ec:	f000 fc8c 	bl	8002d08 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80023f0:	4603      	mov	r3, r0
 80023f2:	4619      	mov	r1, r3
 80023f4:	2300      	movs	r3, #0
 80023f6:	9300      	str	r3, [sp, #0]
 80023f8:	2300      	movs	r3, #0
 80023fa:	2200      	movs	r2, #0
 80023fc:	4620      	mov	r0, r4
 80023fe:	f00d faa9 	bl	800f954 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 8002402:	4809      	ldr	r0, [pc, #36]	; (8002428 <touchgfx_init+0x48>)
 8002404:	f7ff fabe 	bl	8001984 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 8002408:	2000      	movs	r0, #0
 800240a:	f001 fbc1 	bl	8003b90 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800240e:	4807      	ldr	r0, [pc, #28]	; (800242c <touchgfx_init+0x4c>)
 8002410:	f00d f9e2 	bl	800f7d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 8002414:	f7ff fe46 	bl	80020a4 <_ZN12FrontendHeap11getInstanceEv>
 8002418:	6078      	str	r0, [r7, #4]
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
 800241a:	4805      	ldr	r0, [pc, #20]	; (8002430 <touchgfx_init+0x50>)
 800241c:	f7ff f96a 	bl	80016f4 <_ZN11TouchGFXHAL10initializeEv>
}
 8002420:	bf00      	nop
 8002422:	370c      	adds	r7, #12
 8002424:	46bd      	mov	sp, r7
 8002426:	bd90      	pop	{r4, r7, pc}
 8002428:	200006c8 	.word	0x200006c8
 800242c:	20000004 	.word	0x20000004
 8002430:	200006cc 	.word	0x200006cc

08002434 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8002434:	b580      	push	{r7, lr}
 8002436:	af00      	add	r7, sp, #0
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
 8002438:	4802      	ldr	r0, [pc, #8]	; (8002444 <touchgfx_taskEntry+0x10>)
 800243a:	f008 f920 	bl	800a67e <_ZN8touchgfx3HAL9taskEntryEv>
}
 800243e:	bf00      	nop
 8002440:	bd80      	pop	{r7, pc}
 8002442:	bf00      	nop
 8002444:	200006cc 	.word	0x200006cc

08002448 <_ZN8touchgfx5NoDMAD1Ev>:
class NoDMA : public DMA_Interface
 8002448:	b580      	push	{r7, lr}
 800244a:	b082      	sub	sp, #8
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	4a08      	ldr	r2, [pc, #32]	; (8002474 <_ZN8touchgfx5NoDMAD1Ev+0x2c>)
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	330c      	adds	r3, #12
 800245a:	4618      	mov	r0, r3
 800245c:	f000 f946 	bl	80026ec <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	4618      	mov	r0, r3
 8002464:	f7ff fbf4 	bl	8001c50 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	4618      	mov	r0, r3
 800246c:	3708      	adds	r7, #8
 800246e:	46bd      	mov	sp, r7
 8002470:	bd80      	pop	{r7, pc}
 8002472:	bf00      	nop
 8002474:	0801cdac 	.word	0x0801cdac

08002478 <_ZN8touchgfx5NoDMAD0Ev>:
 8002478:	b580      	push	{r7, lr}
 800247a:	b082      	sub	sp, #8
 800247c:	af00      	add	r7, sp, #0
 800247e:	6078      	str	r0, [r7, #4]
 8002480:	6878      	ldr	r0, [r7, #4]
 8002482:	f7ff ffe1 	bl	8002448 <_ZN8touchgfx5NoDMAD1Ev>
 8002486:	2140      	movs	r1, #64	; 0x40
 8002488:	6878      	ldr	r0, [r7, #4]
 800248a:	f019 f861 	bl	801b550 <_ZdlPvj>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	4618      	mov	r0, r3
 8002492:	3708      	adds	r7, #8
 8002494:	46bd      	mov	sp, r7
 8002496:	bd80      	pop	{r7, pc}

08002498 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8002498:	b580      	push	{r7, lr}
 800249a:	b082      	sub	sp, #8
 800249c:	af00      	add	r7, sp, #0
 800249e:	6078      	str	r0, [r7, #4]
 80024a0:	4a10      	ldr	r2, [pc, #64]	; (80024e4 <_ZN12FrontendHeapD1Ev+0x4c>)
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	601a      	str	r2, [r3, #0]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 80024ac:	4618      	mov	r0, r3
 80024ae:	f7ff fd95 	bl	8001fdc <_ZN19FrontendApplicationD1Ev>
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	f503 7392 	add.w	r3, r3, #292	; 0x124
 80024b8:	4618      	mov	r0, r3
 80024ba:	f000 f827 	bl	800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	332c      	adds	r3, #44	; 0x2c
 80024c2:	4618      	mov	r0, r3
 80024c4:	f000 f844 	bl	8002550 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	3314      	adds	r3, #20
 80024cc:	4618      	mov	r0, r3
 80024ce:	f000 f861 	bl	8002594 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	4618      	mov	r0, r3
 80024d6:	f7ff fe13 	bl	8002100 <_ZN16FrontendHeapBaseD1Ev>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	4618      	mov	r0, r3
 80024de:	3708      	adds	r7, #8
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bd80      	pop	{r7, pc}
 80024e4:	0801cdfc 	.word	0x0801cdfc

080024e8 <_ZN12FrontendHeapD0Ev>:
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b082      	sub	sp, #8
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	6078      	str	r0, [r7, #4]
 80024f0:	6878      	ldr	r0, [r7, #4]
 80024f2:	f7ff ffd1 	bl	8002498 <_ZN12FrontendHeapD1Ev>
 80024f6:	f44f 7125 	mov.w	r1, #660	; 0x294
 80024fa:	6878      	ldr	r0, [r7, #4]
 80024fc:	f019 f828 	bl	801b550 <_ZdlPvj>
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	4618      	mov	r0, r3
 8002504:	3708      	adds	r7, #8
 8002506:	46bd      	mov	sp, r7
 8002508:	bd80      	pop	{r7, pc}
	...

0800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800250c:	b580      	push	{r7, lr}
 800250e:	b082      	sub	sp, #8
 8002510:	af00      	add	r7, sp, #0
 8002512:	6078      	str	r0, [r7, #4]
 8002514:	4a05      	ldr	r2, [pc, #20]	; (800252c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	601a      	str	r2, [r3, #0]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	4618      	mov	r0, r3
 800251e:	f007 fe99 	bl	800a254 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	4618      	mov	r0, r3
 8002526:	3708      	adds	r7, #8
 8002528:	46bd      	mov	sp, r7
 800252a:	bd80      	pop	{r7, pc}
 800252c:	0801ce10 	.word	0x0801ce10

08002530 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002530:	b580      	push	{r7, lr}
 8002532:	b082      	sub	sp, #8
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
 8002538:	6878      	ldr	r0, [r7, #4]
 800253a:	f7ff ffe7 	bl	800250c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800253e:	2114      	movs	r1, #20
 8002540:	6878      	ldr	r0, [r7, #4]
 8002542:	f019 f805 	bl	801b550 <_ZdlPvj>
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	4618      	mov	r0, r3
 800254a:	3708      	adds	r7, #8
 800254c:	46bd      	mov	sp, r7
 800254e:	bd80      	pop	{r7, pc}

08002550 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002550:	b580      	push	{r7, lr}
 8002552:	b082      	sub	sp, #8
 8002554:	af00      	add	r7, sp, #0
 8002556:	6078      	str	r0, [r7, #4]
 8002558:	4a05      	ldr	r2, [pc, #20]	; (8002570 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	601a      	str	r2, [r3, #0]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	4618      	mov	r0, r3
 8002562:	f007 fe77 	bl	800a254 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	4618      	mov	r0, r3
 800256a:	3708      	adds	r7, #8
 800256c:	46bd      	mov	sp, r7
 800256e:	bd80      	pop	{r7, pc}
 8002570:	0801ce44 	.word	0x0801ce44

08002574 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002574:	b580      	push	{r7, lr}
 8002576:	b082      	sub	sp, #8
 8002578:	af00      	add	r7, sp, #0
 800257a:	6078      	str	r0, [r7, #4]
 800257c:	6878      	ldr	r0, [r7, #4]
 800257e:	f7ff ffe7 	bl	8002550 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002582:	21f8      	movs	r1, #248	; 0xf8
 8002584:	6878      	ldr	r0, [r7, #4]
 8002586:	f018 ffe3 	bl	801b550 <_ZdlPvj>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	4618      	mov	r0, r3
 800258e:	3708      	adds	r7, #8
 8002590:	46bd      	mov	sp, r7
 8002592:	bd80      	pop	{r7, pc}

08002594 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002594:	b580      	push	{r7, lr}
 8002596:	b082      	sub	sp, #8
 8002598:	af00      	add	r7, sp, #0
 800259a:	6078      	str	r0, [r7, #4]
 800259c:	4a05      	ldr	r2, [pc, #20]	; (80025b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	601a      	str	r2, [r3, #0]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	4618      	mov	r0, r3
 80025a6:	f007 fe55 	bl	800a254 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	4618      	mov	r0, r3
 80025ae:	3708      	adds	r7, #8
 80025b0:	46bd      	mov	sp, r7
 80025b2:	bd80      	pop	{r7, pc}
 80025b4:	0801ce78 	.word	0x0801ce78

080025b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80025b8:	b580      	push	{r7, lr}
 80025ba:	b082      	sub	sp, #8
 80025bc:	af00      	add	r7, sp, #0
 80025be:	6078      	str	r0, [r7, #4]
 80025c0:	6878      	ldr	r0, [r7, #4]
 80025c2:	f7ff ffe7 	bl	8002594 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80025c6:	2118      	movs	r1, #24
 80025c8:	6878      	ldr	r0, [r7, #4]
 80025ca:	f018 ffc1 	bl	801b550 <_ZdlPvj>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	4618      	mov	r0, r3
 80025d2:	3708      	adds	r7, #8
 80025d4:	46bd      	mov	sp, r7
 80025d6:	bd80      	pop	{r7, pc}

080025d8 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 80025d8:	b580      	push	{r7, lr}
 80025da:	b082      	sub	sp, #8
 80025dc:	af00      	add	r7, sp, #0
 80025de:	6078      	str	r0, [r7, #4]
 80025e0:	4a05      	ldr	r2, [pc, #20]	; (80025f8 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	601a      	str	r2, [r3, #0]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	4618      	mov	r0, r3
 80025ea:	f7ff fa9d 	bl	8001b28 <_ZN8touchgfx3LCDD1Ev>
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	4618      	mov	r0, r3
 80025f2:	3708      	adds	r7, #8
 80025f4:	46bd      	mov	sp, r7
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	0801f810 	.word	0x0801f810

080025fc <_ZN8touchgfx8LCD16bppD0Ev>:
 80025fc:	b580      	push	{r7, lr}
 80025fe:	b082      	sub	sp, #8
 8002600:	af00      	add	r7, sp, #0
 8002602:	6078      	str	r0, [r7, #4]
 8002604:	6878      	ldr	r0, [r7, #4]
 8002606:	f7ff ffe7 	bl	80025d8 <_ZN8touchgfx8LCD16bppD1Ev>
 800260a:	2178      	movs	r1, #120	; 0x78
 800260c:	6878      	ldr	r0, [r7, #4]
 800260e:	f018 ff9f 	bl	801b550 <_ZdlPvj>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	4618      	mov	r0, r3
 8002616:	3708      	adds	r7, #8
 8002618:	46bd      	mov	sp, r7
 800261a:	bd80      	pop	{r7, pc}

0800261c <_Z41__static_initialization_and_destruction_0ii>:
 800261c:	b580      	push	{r7, lr}
 800261e:	b084      	sub	sp, #16
 8002620:	af02      	add	r7, sp, #8
 8002622:	6078      	str	r0, [r7, #4]
 8002624:	6039      	str	r1, [r7, #0]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	2b01      	cmp	r3, #1
 800262a:	d118      	bne.n	800265e <_Z41__static_initialization_and_destruction_0ii+0x42>
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002632:	4293      	cmp	r3, r2
 8002634:	d113      	bne.n	800265e <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 8002636:	4817      	ldr	r0, [pc, #92]	; (8002694 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8002638:	f7ff fec0 	bl	80023bc <_ZN20STM32TouchControllerC1Ev>
static NoDMA dma;
 800263c:	4816      	ldr	r0, [pc, #88]	; (8002698 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800263e:	f7ff fe0d 	bl	800225c <_ZN8touchgfx5NoDMAC1Ev>
static LCD16bpp display;
 8002642:	4816      	ldr	r0, [pc, #88]	; (800269c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8002644:	f010 fa08 	bl	8012a58 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 8002648:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800264c:	9301      	str	r3, [sp, #4]
 800264e:	23f0      	movs	r3, #240	; 0xf0
 8002650:	9300      	str	r3, [sp, #0]
 8002652:	4b10      	ldr	r3, [pc, #64]	; (8002694 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8002654:	4a11      	ldr	r2, [pc, #68]	; (800269c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8002656:	4910      	ldr	r1, [pc, #64]	; (8002698 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8002658:	4811      	ldr	r0, [pc, #68]	; (80026a0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800265a:	f7ff fe83 	bl	8002364 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	2b00      	cmp	r3, #0
 8002662:	d113      	bne.n	800268c <_Z41__static_initialization_and_destruction_0ii+0x70>
 8002664:	683b      	ldr	r3, [r7, #0]
 8002666:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800266a:	4293      	cmp	r3, r2
 800266c:	d10e      	bne.n	800268c <_Z41__static_initialization_and_destruction_0ii+0x70>
 800266e:	480c      	ldr	r0, [pc, #48]	; (80026a0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8002670:	f7ff f8b8 	bl	80017e4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8002674:	480b      	ldr	r0, [pc, #44]	; (80026a4 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8002676:	f000 f85b 	bl	8002730 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800267a:	4808      	ldr	r0, [pc, #32]	; (800269c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800267c:	f7ff ffac 	bl	80025d8 <_ZN8touchgfx8LCD16bppD1Ev>
static NoDMA dma;
 8002680:	4805      	ldr	r0, [pc, #20]	; (8002698 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8002682:	f7ff fee1 	bl	8002448 <_ZN8touchgfx5NoDMAD1Ev>
static STM32TouchController tc;
 8002686:	4803      	ldr	r0, [pc, #12]	; (8002694 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 8002688:	f7fe fe78 	bl	800137c <_ZN20STM32TouchControllerD1Ev>
}
 800268c:	bf00      	nop
 800268e:	3708      	adds	r7, #8
 8002690:	46bd      	mov	sp, r7
 8002692:	bd80      	pop	{r7, pc}
 8002694:	2000060c 	.word	0x2000060c
 8002698:	20000610 	.word	0x20000610
 800269c:	20000650 	.word	0x20000650
 80026a0:	200006cc 	.word	0x200006cc
 80026a4:	20000004 	.word	0x20000004

080026a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80026a8:	b580      	push	{r7, lr}
 80026aa:	b082      	sub	sp, #8
 80026ac:	af00      	add	r7, sp, #0
 80026ae:	6078      	str	r0, [r7, #4]
 80026b0:	4a05      	ldr	r2, [pc, #20]	; (80026c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	601a      	str	r2, [r3, #0]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	4618      	mov	r0, r3
 80026ba:	f7ff fa73 	bl	8001ba4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	4618      	mov	r0, r3
 80026c2:	3708      	adds	r7, #8
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bd80      	pop	{r7, pc}
 80026c8:	0801cf48 	.word	0x0801cf48

080026cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 80026cc:	b580      	push	{r7, lr}
 80026ce:	b082      	sub	sp, #8
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	6078      	str	r0, [r7, #4]
 80026d4:	6878      	ldr	r0, [r7, #4]
 80026d6:	f7ff ffe7 	bl	80026a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80026da:	2110      	movs	r1, #16
 80026dc:	6878      	ldr	r0, [r7, #4]
 80026de:	f018 ff37 	bl	801b550 <_ZdlPvj>
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	4618      	mov	r0, r3
 80026e6:	3708      	adds	r7, #8
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}

080026ec <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80026ec:	b580      	push	{r7, lr}
 80026ee:	b082      	sub	sp, #8
 80026f0:	af00      	add	r7, sp, #0
 80026f2:	6078      	str	r0, [r7, #4]
 80026f4:	4a05      	ldr	r2, [pc, #20]	; (800270c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	601a      	str	r2, [r3, #0]
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	4618      	mov	r0, r3
 80026fe:	f7ff fa71 	bl	8001be4 <_ZN8touchgfx9DMA_QueueD1Ev>
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	4618      	mov	r0, r3
 8002706:	3708      	adds	r7, #8
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	0801e22c 	.word	0x0801e22c

08002710 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8002710:	b580      	push	{r7, lr}
 8002712:	b082      	sub	sp, #8
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	6878      	ldr	r0, [r7, #4]
 800271a:	f7ff ffe7 	bl	80026ec <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800271e:	2114      	movs	r1, #20
 8002720:	6878      	ldr	r0, [r7, #4]
 8002722:	f018 ff15 	bl	801b550 <_ZdlPvj>
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	4618      	mov	r0, r3
 800272a:	3708      	adds	r7, #8
 800272c:	46bd      	mov	sp, r7
 800272e:	bd80      	pop	{r7, pc}

08002730 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002730:	b580      	push	{r7, lr}
 8002732:	b082      	sub	sp, #8
 8002734:	af00      	add	r7, sp, #0
 8002736:	6078      	str	r0, [r7, #4]
 8002738:	4a05      	ldr	r2, [pc, #20]	; (8002750 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	601a      	str	r2, [r3, #0]
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4618      	mov	r0, r3
 8002742:	f7ff f92f 	bl	80019a4 <_ZN8touchgfx12FontProviderD1Ev>
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	4618      	mov	r0, r3
 800274a:	3708      	adds	r7, #8
 800274c:	46bd      	mov	sp, r7
 800274e:	bd80      	pop	{r7, pc}
 8002750:	0801d178 	.word	0x0801d178

08002754 <_ZN23ApplicationFontProviderD0Ev>:
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	6878      	ldr	r0, [r7, #4]
 800275e:	f7ff ffe7 	bl	8002730 <_ZN23ApplicationFontProviderD1Ev>
 8002762:	2104      	movs	r1, #4
 8002764:	6878      	ldr	r0, [r7, #4]
 8002766:	f018 fef3 	bl	801b550 <_ZdlPvj>
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	4618      	mov	r0, r3
 800276e:	3708      	adds	r7, #8
 8002770:	46bd      	mov	sp, r7
 8002772:	bd80      	pop	{r7, pc}

08002774 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8002774:	b480      	push	{r7}
 8002776:	b083      	sub	sp, #12
 8002778:	af00      	add	r7, sp, #0
 800277a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800277c:	2301      	movs	r3, #1
    }
 800277e:	4618      	mov	r0, r3
 8002780:	370c      	adds	r7, #12
 8002782:	46bd      	mov	sp, r7
 8002784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002788:	4770      	bx	lr

0800278a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800278a:	b480      	push	{r7}
 800278c:	b083      	sub	sp, #12
 800278e:	af00      	add	r7, sp, #0
 8002790:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8002792:	230c      	movs	r3, #12
    }
 8002794:	4618      	mov	r0, r3
 8002796:	370c      	adds	r7, #12
 8002798:	46bd      	mov	sp, r7
 800279a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800279e:	4770      	bx	lr

080027a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 80027a0:	b480      	push	{r7}
 80027a2:	b083      	sub	sp, #12
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	6078      	str	r0, [r7, #4]
 80027a8:	460b      	mov	r3, r1
 80027aa:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 80027ac:	887a      	ldrh	r2, [r7, #2]
 80027ae:	4613      	mov	r3, r2
 80027b0:	005b      	lsls	r3, r3, #1
 80027b2:	4413      	add	r3, r2
 80027b4:	009b      	lsls	r3, r3, #2
 80027b6:	3308      	adds	r3, #8
 80027b8:	687a      	ldr	r2, [r7, #4]
 80027ba:	4413      	add	r3, r2
    }
 80027bc:	4618      	mov	r0, r3
 80027be:	370c      	adds	r7, #12
 80027c0:	46bd      	mov	sp, r7
 80027c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c6:	4770      	bx	lr

080027c8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 80027c8:	b480      	push	{r7}
 80027ca:	b083      	sub	sp, #12
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	460b      	mov	r3, r1
 80027d2:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 80027d4:	887a      	ldrh	r2, [r7, #2]
 80027d6:	4613      	mov	r3, r2
 80027d8:	005b      	lsls	r3, r3, #1
 80027da:	4413      	add	r3, r2
 80027dc:	009b      	lsls	r3, r3, #2
 80027de:	3308      	adds	r3, #8
 80027e0:	687a      	ldr	r2, [r7, #4]
 80027e2:	4413      	add	r3, r2
    }
 80027e4:	4618      	mov	r0, r3
 80027e6:	370c      	adds	r7, #12
 80027e8:	46bd      	mov	sp, r7
 80027ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ee:	4770      	bx	lr

080027f0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80027f0:	b480      	push	{r7}
 80027f2:	b083      	sub	sp, #12
 80027f4:	af00      	add	r7, sp, #0
 80027f6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80027f8:	2301      	movs	r3, #1
    }
 80027fa:	4618      	mov	r0, r3
 80027fc:	370c      	adds	r7, #12
 80027fe:	46bd      	mov	sp, r7
 8002800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002804:	4770      	bx	lr

08002806 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8002806:	b480      	push	{r7}
 8002808:	b083      	sub	sp, #12
 800280a:	af00      	add	r7, sp, #0
 800280c:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800280e:	23f0      	movs	r3, #240	; 0xf0
    }
 8002810:	4618      	mov	r0, r3
 8002812:	370c      	adds	r7, #12
 8002814:	46bd      	mov	sp, r7
 8002816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800281a:	4770      	bx	lr

0800281c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800281c:	b480      	push	{r7}
 800281e:	b083      	sub	sp, #12
 8002820:	af00      	add	r7, sp, #0
 8002822:	6078      	str	r0, [r7, #4]
 8002824:	460b      	mov	r3, r1
 8002826:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8002828:	887a      	ldrh	r2, [r7, #2]
 800282a:	4613      	mov	r3, r2
 800282c:	011b      	lsls	r3, r3, #4
 800282e:	1a9b      	subs	r3, r3, r2
 8002830:	011b      	lsls	r3, r3, #4
 8002832:	3308      	adds	r3, #8
 8002834:	687a      	ldr	r2, [r7, #4]
 8002836:	4413      	add	r3, r2
    }
 8002838:	4618      	mov	r0, r3
 800283a:	370c      	adds	r7, #12
 800283c:	46bd      	mov	sp, r7
 800283e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002842:	4770      	bx	lr

08002844 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8002844:	b480      	push	{r7}
 8002846:	b083      	sub	sp, #12
 8002848:	af00      	add	r7, sp, #0
 800284a:	6078      	str	r0, [r7, #4]
 800284c:	460b      	mov	r3, r1
 800284e:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8002850:	887a      	ldrh	r2, [r7, #2]
 8002852:	4613      	mov	r3, r2
 8002854:	011b      	lsls	r3, r3, #4
 8002856:	1a9b      	subs	r3, r3, r2
 8002858:	011b      	lsls	r3, r3, #4
 800285a:	3308      	adds	r3, #8
 800285c:	687a      	ldr	r2, [r7, #4]
 800285e:	4413      	add	r3, r2
    }
 8002860:	4618      	mov	r0, r3
 8002862:	370c      	adds	r7, #12
 8002864:	46bd      	mov	sp, r7
 8002866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800286a:	4770      	bx	lr

0800286c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800286c:	b480      	push	{r7}
 800286e:	b083      	sub	sp, #12
 8002870:	af00      	add	r7, sp, #0
 8002872:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8002874:	2301      	movs	r3, #1
    }
 8002876:	4618      	mov	r0, r3
 8002878:	370c      	adds	r7, #12
 800287a:	46bd      	mov	sp, r7
 800287c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002880:	4770      	bx	lr

08002882 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8002882:	b480      	push	{r7}
 8002884:	b083      	sub	sp, #12
 8002886:	af00      	add	r7, sp, #0
 8002888:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800288a:	2310      	movs	r3, #16
    }
 800288c:	4618      	mov	r0, r3
 800288e:	370c      	adds	r7, #12
 8002890:	46bd      	mov	sp, r7
 8002892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002896:	4770      	bx	lr

08002898 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8002898:	b480      	push	{r7}
 800289a:	b083      	sub	sp, #12
 800289c:	af00      	add	r7, sp, #0
 800289e:	6078      	str	r0, [r7, #4]
 80028a0:	460b      	mov	r3, r1
 80028a2:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80028a4:	887b      	ldrh	r3, [r7, #2]
 80028a6:	011b      	lsls	r3, r3, #4
 80028a8:	3308      	adds	r3, #8
 80028aa:	687a      	ldr	r2, [r7, #4]
 80028ac:	4413      	add	r3, r2
    }
 80028ae:	4618      	mov	r0, r3
 80028b0:	370c      	adds	r7, #12
 80028b2:	46bd      	mov	sp, r7
 80028b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028b8:	4770      	bx	lr

080028ba <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80028ba:	b480      	push	{r7}
 80028bc:	b083      	sub	sp, #12
 80028be:	af00      	add	r7, sp, #0
 80028c0:	6078      	str	r0, [r7, #4]
 80028c2:	460b      	mov	r3, r1
 80028c4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80028c6:	887b      	ldrh	r3, [r7, #2]
 80028c8:	011b      	lsls	r3, r3, #4
 80028ca:	3308      	adds	r3, #8
 80028cc:	687a      	ldr	r2, [r7, #4]
 80028ce:	4413      	add	r3, r2
    }
 80028d0:	4618      	mov	r0, r3
 80028d2:	370c      	adds	r7, #12
 80028d4:	46bd      	mov	sp, r7
 80028d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028da:	4770      	bx	lr

080028dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80028dc:	b580      	push	{r7, lr}
 80028de:	b082      	sub	sp, #8
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	685b      	ldr	r3, [r3, #4]
 80028e8:	687a      	ldr	r2, [r7, #4]
 80028ea:	68d2      	ldr	r2, [r2, #12]
 80028ec:	1052      	asrs	r2, r2, #1
 80028ee:	1899      	adds	r1, r3, r2
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	68db      	ldr	r3, [r3, #12]
 80028f4:	f003 0301 	and.w	r3, r3, #1
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d102      	bne.n	8002902 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	689b      	ldr	r3, [r3, #8]
 8002900:	e00a      	b.n	8002918 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	685b      	ldr	r3, [r3, #4]
 8002906:	687a      	ldr	r2, [r7, #4]
 8002908:	68d2      	ldr	r2, [r2, #12]
 800290a:	1052      	asrs	r2, r2, #1
 800290c:	4413      	add	r3, r2
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	687a      	ldr	r2, [r7, #4]
 8002912:	6892      	ldr	r2, [r2, #8]
 8002914:	4413      	add	r3, r2
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	4608      	mov	r0, r1
 800291a:	4798      	blx	r3
    }
 800291c:	bf00      	nop
 800291e:	3708      	adds	r7, #8
 8002920:	46bd      	mov	sp, r7
 8002922:	bd80      	pop	{r7, pc}

08002924 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002924:	b480      	push	{r7}
 8002926:	b083      	sub	sp, #12
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	685b      	ldr	r3, [r3, #4]
 8002930:	2b00      	cmp	r3, #0
 8002932:	d010      	beq.n	8002956 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	689b      	ldr	r3, [r3, #8]
 8002938:	2b00      	cmp	r3, #0
 800293a:	d107      	bne.n	800294c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	68db      	ldr	r3, [r3, #12]
 8002940:	f003 0301 	and.w	r3, r3, #1
 8002944:	2b00      	cmp	r3, #0
 8002946:	d101      	bne.n	800294c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8002948:	2301      	movs	r3, #1
 800294a:	e000      	b.n	800294e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800294c:	2300      	movs	r3, #0
 800294e:	2b01      	cmp	r3, #1
 8002950:	d001      	beq.n	8002956 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8002952:	2301      	movs	r3, #1
 8002954:	e000      	b.n	8002958 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8002956:	2300      	movs	r3, #0
    }
 8002958:	4618      	mov	r0, r3
 800295a:	370c      	adds	r7, #12
 800295c:	46bd      	mov	sp, r7
 800295e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002962:	4770      	bx	lr

08002964 <_GLOBAL__sub_I_touchgfx_init>:
 8002964:	b580      	push	{r7, lr}
 8002966:	af00      	add	r7, sp, #0
 8002968:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800296c:	2001      	movs	r0, #1
 800296e:	f7ff fe55 	bl	800261c <_Z41__static_initialization_and_destruction_0ii>
 8002972:	bd80      	pop	{r7, pc}

08002974 <_GLOBAL__sub_D_touchgfx_init>:
 8002974:	b580      	push	{r7, lr}
 8002976:	af00      	add	r7, sp, #0
 8002978:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800297c:	2000      	movs	r0, #0
 800297e:	f7ff fe4d 	bl	800261c <_Z41__static_initialization_and_destruction_0ii>
 8002982:	bd80      	pop	{r7, pc}

08002984 <_ZN8touchgfx3HAL11getInstanceEv>:
    static HAL* getInstance()
 8002984:	b480      	push	{r7}
 8002986:	af00      	add	r7, sp, #0
        return instance;
 8002988:	4b03      	ldr	r3, [pc, #12]	; (8002998 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800298a:	681b      	ldr	r3, [r3, #0]
    }
 800298c:	4618      	mov	r0, r3
 800298e:	46bd      	mov	sp, r7
 8002990:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002994:	4770      	bx	lr
 8002996:	bf00      	nop
 8002998:	20008990 	.word	0x20008990

0800299c <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800299c:	b580      	push	{r7, lr}
 800299e:	b082      	sub	sp, #8
 80029a0:	af00      	add	r7, sp, #0
 80029a2:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	3318      	adds	r3, #24
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	6878      	ldr	r0, [r7, #4]
 80029ae:	4798      	blx	r3
    }
 80029b0:	bf00      	nop
 80029b2:	3708      	adds	r7, #8
 80029b4:	46bd      	mov	sp, r7
 80029b6:	bd80      	pop	{r7, pc}

080029b8 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 80029b8:	b480      	push	{r7}
 80029ba:	b083      	sub	sp, #12
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 80029c6:	3301      	adds	r3, #1
 80029c8:	b2da      	uxtb	r2, r3
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 80029d0:	bf00      	nop
 80029d2:	370c      	adds	r7, #12
 80029d4:	46bd      	mov	sp, r7
 80029d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029da:	4770      	bx	lr

080029dc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80029dc:	b480      	push	{r7}
 80029de:	b083      	sub	sp, #12
 80029e0:	af00      	add	r7, sp, #0
 80029e2:	4603      	mov	r3, r0
 80029e4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80029e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	db0d      	blt.n	8002a0a <__NVIC_EnableIRQ+0x2e>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80029ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029f2:	b2db      	uxtb	r3, r3
 80029f4:	f003 021f 	and.w	r2, r3, #31
 80029f8:	4907      	ldr	r1, [pc, #28]	; (8002a18 <__NVIC_EnableIRQ+0x3c>)
 80029fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029fe:	095b      	lsrs	r3, r3, #5
 8002a00:	2001      	movs	r0, #1
 8002a02:	fa00 f202 	lsl.w	r2, r0, r2
 8002a06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8002a0a:	bf00      	nop
 8002a0c:	370c      	adds	r7, #12
 8002a0e:	46bd      	mov	sp, r7
 8002a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a14:	4770      	bx	lr
 8002a16:	bf00      	nop
 8002a18:	e000e100 	.word	0xe000e100

08002a1c <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002a1c:	b480      	push	{r7}
 8002a1e:	b083      	sub	sp, #12
 8002a20:	af00      	add	r7, sp, #0
 8002a22:	4603      	mov	r3, r0
 8002a24:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002a26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	db12      	blt.n	8002a54 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002a2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a32:	b2db      	uxtb	r3, r3
 8002a34:	f003 021f 	and.w	r2, r3, #31
 8002a38:	4909      	ldr	r1, [pc, #36]	; (8002a60 <__NVIC_DisableIRQ+0x44>)
 8002a3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a3e:	095b      	lsrs	r3, r3, #5
 8002a40:	2001      	movs	r0, #1
 8002a42:	fa00 f202 	lsl.w	r2, r0, r2
 8002a46:	3320      	adds	r3, #32
 8002a48:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002a4c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002a50:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
 8002a54:	bf00      	nop
 8002a56:	370c      	adds	r7, #12
 8002a58:	46bd      	mov	sp, r7
 8002a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a5e:	4770      	bx	lr
 8002a60:	e000e100 	.word	0xe000e100

08002a64 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002a64:	b480      	push	{r7}
 8002a66:	b083      	sub	sp, #12
 8002a68:	af00      	add	r7, sp, #0
 8002a6a:	4603      	mov	r3, r0
 8002a6c:	6039      	str	r1, [r7, #0]
 8002a6e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002a70:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	db0c      	blt.n	8002a92 <__NVIC_SetPriority+0x2e>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002a78:	683b      	ldr	r3, [r7, #0]
 8002a7a:	b2db      	uxtb	r3, r3
 8002a7c:	4a0e      	ldr	r2, [pc, #56]	; (8002ab8 <__NVIC_SetPriority+0x54>)
 8002a7e:	f997 1007 	ldrsb.w	r1, [r7, #7]
 8002a82:	4608      	mov	r0, r1
 8002a84:	011b      	lsls	r3, r3, #4
 8002a86:	b2d9      	uxtb	r1, r3
 8002a88:	1813      	adds	r3, r2, r0
 8002a8a:	460a      	mov	r2, r1
 8002a8c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002a90:	e00c      	b.n	8002aac <__NVIC_SetPriority+0x48>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002a92:	683b      	ldr	r3, [r7, #0]
 8002a94:	b2da      	uxtb	r2, r3
 8002a96:	4909      	ldr	r1, [pc, #36]	; (8002abc <__NVIC_SetPriority+0x58>)
 8002a98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a9c:	b2db      	uxtb	r3, r3
 8002a9e:	f003 030f 	and.w	r3, r3, #15
 8002aa2:	3b04      	subs	r3, #4
 8002aa4:	0112      	lsls	r2, r2, #4
 8002aa6:	b2d2      	uxtb	r2, r2
 8002aa8:	440b      	add	r3, r1
 8002aaa:	761a      	strb	r2, [r3, #24]
}
 8002aac:	bf00      	nop
 8002aae:	370c      	adds	r7, #12
 8002ab0:	46bd      	mov	sp, r7
 8002ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ab6:	4770      	bx	lr
 8002ab8:	e000e100 	.word	0xe000e100
 8002abc:	e000ed00 	.word	0xe000ed00

08002ac0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 8002ac0:	b5b0      	push	{r4, r5, r7, lr}
 8002ac2:	b082      	sub	sp, #8
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	4618      	mov	r0, r3
 8002acc:	f008 f8b2 	bl	800ac34 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(Application::getInstance()));
 8002ad0:	687d      	ldr	r5, [r7, #4]
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	334c      	adds	r3, #76	; 0x4c
 8002ad8:	681c      	ldr	r4, [r3, #0]
 8002ada:	f00a facf 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 8002ade:	4603      	mov	r3, r0
 8002ae0:	4619      	mov	r1, r3
 8002ae2:	4628      	mov	r0, r5
 8002ae4:	47a0      	blx	r4
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0028000, (void*)0);
 8002ae6:	6878      	ldr	r0, [r7, #4]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	3370      	adds	r3, #112	; 0x70
 8002aee:	681c      	ldr	r4, [r3, #0]
 8002af0:	2300      	movs	r3, #0
 8002af2:	4a04      	ldr	r2, [pc, #16]	; (8002b04 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 8002af4:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 8002af8:	47a0      	blx	r4
}
 8002afa:	bf00      	nop
 8002afc:	3708      	adds	r7, #8
 8002afe:	46bd      	mov	sp, r7
 8002b00:	bdb0      	pop	{r4, r5, r7, pc}
 8002b02:	bf00      	nop
 8002b04:	d0028000 	.word	0xd0028000

08002b08 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8002b08:	b580      	push	{r7, lr}
 8002b0a:	b082      	sub	sp, #8
 8002b0c:	af00      	add	r7, sp, #0
 8002b0e:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(LTDC_IRQn, 9);
 8002b10:	2109      	movs	r1, #9
 8002b12:	2058      	movs	r0, #88	; 0x58
 8002b14:	f7ff ffa6 	bl	8002a64 <__NVIC_SetPriority>
}
 8002b18:	bf00      	nop
 8002b1a:	3708      	adds	r7, #8
 8002b1c:	46bd      	mov	sp, r7
 8002b1e:	bd80      	pop	{r7, pc}

08002b20 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8002b20:	b580      	push	{r7, lr}
 8002b22:	b082      	sub	sp, #8
 8002b24:	af00      	add	r7, sp, #0
 8002b26:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(LTDC_IRQn);
 8002b28:	2058      	movs	r0, #88	; 0x58
 8002b2a:	f7ff ff57 	bl	80029dc <__NVIC_EnableIRQ>
}
 8002b2e:	bf00      	nop
 8002b30:	3708      	adds	r7, #8
 8002b32:	46bd      	mov	sp, r7
 8002b34:	bd80      	pop	{r7, pc}

08002b36 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8002b36:	b580      	push	{r7, lr}
 8002b38:	b082      	sub	sp, #8
 8002b3a:	af00      	add	r7, sp, #0
 8002b3c:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(LTDC_IRQn);
 8002b3e:	2058      	movs	r0, #88	; 0x58
 8002b40:	f7ff ff6c 	bl	8002a1c <__NVIC_DisableIRQ>
}
 8002b44:	bf00      	nop
 8002b46:	3708      	adds	r7, #8
 8002b48:	46bd      	mov	sp, r7
 8002b4a:	bd80      	pop	{r7, pc}

08002b4c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8002b4c:	b480      	push	{r7}
 8002b4e:	b083      	sub	sp, #12
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002b54:	4b11      	ldr	r3, [pc, #68]	; (8002b9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8002b56:	68db      	ldr	r3, [r3, #12]
 8002b58:	b29b      	uxth	r3, r3
 8002b5a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002b5e:	b29b      	uxth	r3, r3
 8002b60:	3b01      	subs	r3, #1
 8002b62:	b29a      	uxth	r2, r3
 8002b64:	4b0e      	ldr	r3, [pc, #56]	; (8002ba0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8002b66:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002b68:	4b0c      	ldr	r3, [pc, #48]	; (8002b9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8002b6a:	691b      	ldr	r3, [r3, #16]
 8002b6c:	b29b      	uxth	r3, r3
 8002b6e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002b72:	b29b      	uxth	r3, r3
 8002b74:	3b01      	subs	r3, #1
 8002b76:	b29a      	uxth	r2, r3
 8002b78:	4b0a      	ldr	r3, [pc, #40]	; (8002ba4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 8002b7a:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002b7c:	4b08      	ldr	r3, [pc, #32]	; (8002ba0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8002b7e:	881a      	ldrh	r2, [r3, #0]
 8002b80:	4b06      	ldr	r3, [pc, #24]	; (8002b9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8002b82:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002b84:	4b05      	ldr	r3, [pc, #20]	; (8002b9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8002b86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002b88:	4a04      	ldr	r2, [pc, #16]	; (8002b9c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8002b8a:	f043 0301 	orr.w	r3, r3, #1
 8002b8e:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002b90:	bf00      	nop
 8002b92:	370c      	adds	r7, #12
 8002b94:	46bd      	mov	sp, r7
 8002b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9a:	4770      	bx	lr
 8002b9c:	40016800 	.word	0x40016800
 8002ba0:	20000748 	.word	0x20000748
 8002ba4:	2000074a 	.word	0x2000074a

08002ba8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8002ba8:	b480      	push	{r7}
 8002baa:	b083      	sub	sp, #12
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002bb0:	4b03      	ldr	r3, [pc, #12]	; (8002bc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 8002bb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	370c      	adds	r7, #12
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bbe:	4770      	bx	lr
 8002bc0:	40016884 	.word	0x40016884

08002bc4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8002bc4:	b480      	push	{r7}
 8002bc6:	b083      	sub	sp, #12
 8002bc8:	af00      	add	r7, sp, #0
 8002bca:	6078      	str	r0, [r7, #4]
 8002bcc:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002bce:	4a06      	ldr	r2, [pc, #24]	; (8002be8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 8002bd0:	683b      	ldr	r3, [r7, #0]
 8002bd2:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002bd4:	4b05      	ldr	r3, [pc, #20]	; (8002bec <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 8002bd6:	2201      	movs	r2, #1
 8002bd8:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002bda:	bf00      	nop
 8002bdc:	370c      	adds	r7, #12
 8002bde:	46bd      	mov	sp, r7
 8002be0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be4:	4770      	bx	lr
 8002be6:	bf00      	nop
 8002be8:	40016884 	.word	0x40016884
 8002bec:	40016800 	.word	0x40016800

08002bf0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b082      	sub	sp, #8
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	6039      	str	r1, [r7, #0]
  HAL::flushFrameBuffer(rect);
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	6839      	ldr	r1, [r7, #0]
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f007 fd12 	bl	800a628 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 8002c04:	bf00      	nop
 8002c06:	3708      	adds	r7, #8
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	bd80      	pop	{r7, pc}

08002c0c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b084      	sub	sp, #16
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	60f8      	str	r0, [r7, #12]
 8002c14:	60b9      	str	r1, [r7, #8]
 8002c16:	607a      	str	r2, [r7, #4]
 8002c18:	603b      	str	r3, [r7, #0]
  return HAL::blockCopy(dest, src, numBytes);
 8002c1a:	68f8      	ldr	r0, [r7, #12]
 8002c1c:	683b      	ldr	r3, [r7, #0]
 8002c1e:	687a      	ldr	r2, [r7, #4]
 8002c20:	68b9      	ldr	r1, [r7, #8]
 8002c22:	f007 fe36 	bl	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8002c26:	4603      	mov	r3, r0
}
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3710      	adds	r7, #16
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}

08002c30 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 8002c30:	b580      	push	{r7, lr}
 8002c32:	b082      	sub	sp, #8
 8002c34:	af00      	add	r7, sp, #0
 8002c36:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 8002c38:	4b1a      	ldr	r3, [pc, #104]	; (8002ca4 <HAL_LTDC_LineEventCallback+0x74>)
 8002c3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c3c:	4a1a      	ldr	r2, [pc, #104]	; (8002ca8 <HAL_LTDC_LineEventCallback+0x78>)
 8002c3e:	8812      	ldrh	r2, [r2, #0]
 8002c40:	4293      	cmp	r3, r2
 8002c42:	bf0c      	ite	eq
 8002c44:	2301      	moveq	r3, #1
 8002c46:	2300      	movne	r3, #0
 8002c48:	b2db      	uxtb	r3, r3
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d017      	beq.n	8002c7e <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002c4e:	4b17      	ldr	r3, [pc, #92]	; (8002cac <HAL_LTDC_LineEventCallback+0x7c>)
 8002c50:	881b      	ldrh	r3, [r3, #0]
 8002c52:	4619      	mov	r1, r3
 8002c54:	6878      	ldr	r0, [r7, #4]
 8002c56:	f003 f835 	bl	8005cc4 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 8002c5a:	f7ff fe93 	bl	8002984 <_ZN8touchgfx3HAL11getInstanceEv>
 8002c5e:	4603      	mov	r3, r0
 8002c60:	4618      	mov	r0, r3
 8002c62:	f7ff fea9 	bl	80029b8 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 8002c66:	f7fe fe47 	bl	80018f8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002c6a:	f7ff fe8b 	bl	8002984 <_ZN8touchgfx3HAL11getInstanceEv>
 8002c6e:	4603      	mov	r3, r0
 8002c70:	4618      	mov	r0, r3
 8002c72:	f008 fa67 	bl	800b144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8002c76:	2000      	movs	r0, #0
 8002c78:	f7fe fba2 	bl	80013c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 8002c7c:	e00e      	b.n	8002c9c <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002c7e:	4b0a      	ldr	r3, [pc, #40]	; (8002ca8 <HAL_LTDC_LineEventCallback+0x78>)
 8002c80:	881b      	ldrh	r3, [r3, #0]
 8002c82:	4619      	mov	r1, r3
 8002c84:	6878      	ldr	r0, [r7, #4]
 8002c86:	f003 f81d 	bl	8005cc4 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002c8a:	2000      	movs	r0, #0
 8002c8c:	f7fe fba3 	bl	80013d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 8002c90:	f7ff fe78 	bl	8002984 <_ZN8touchgfx3HAL11getInstanceEv>
 8002c94:	4603      	mov	r3, r0
 8002c96:	4618      	mov	r0, r3
 8002c98:	f7ff fe80 	bl	800299c <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 8002c9c:	bf00      	nop
 8002c9e:	3708      	adds	r7, #8
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	40016800 	.word	0x40016800
 8002ca8:	20000748 	.word	0x20000748
 8002cac:	2000074a 	.word	0x2000074a

08002cb0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b082      	sub	sp, #8
 8002cb4:	af00      	add	r7, sp, #0
 8002cb6:	6078      	str	r0, [r7, #4]
 8002cb8:	460b      	mov	r3, r1
 8002cba:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8002cbc:	887b      	ldrh	r3, [r7, #2]
 8002cbe:	2b01      	cmp	r3, #1
 8002cc0:	d008      	beq.n	8002cd4 <_ZN23ApplicationFontProvider7getFontEt+0x24>
 8002cc2:	2b02      	cmp	r3, #2
 8002cc4:	d00b      	beq.n	8002cde <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d10e      	bne.n	8002ce8 <_ZN23ApplicationFontProvider7getFontEt+0x38>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002cca:	f000 ffd9 	bl	8003c80 <_ZN17TypedTextDatabase8getFontsEv>
 8002cce:	4603      	mov	r3, r0
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	e00a      	b.n	8002cea <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002cd4:	f000 ffd4 	bl	8003c80 <_ZN17TypedTextDatabase8getFontsEv>
 8002cd8:	4603      	mov	r3, r0
 8002cda:	685b      	ldr	r3, [r3, #4]
 8002cdc:	e005      	b.n	8002cea <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002cde:	f000 ffcf 	bl	8003c80 <_ZN17TypedTextDatabase8getFontsEv>
 8002ce2:	4603      	mov	r3, r0
 8002ce4:	689b      	ldr	r3, [r3, #8]
 8002ce6:	e000      	b.n	8002cea <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    default:
        return 0;
 8002ce8:	2300      	movs	r3, #0
    }
}
 8002cea:	4618      	mov	r0, r3
 8002cec:	3708      	adds	r7, #8
 8002cee:	46bd      	mov	sp, r7
 8002cf0:	bd80      	pop	{r7, pc}
	...

08002cf4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8002cf4:	b480      	push	{r7}
 8002cf6:	af00      	add	r7, sp, #0
    return bitmap_database;
 8002cf8:	4b02      	ldr	r3, [pc, #8]	; (8002d04 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d02:	4770      	bx	lr
 8002d04:	0801d184 	.word	0x0801d184

08002d08 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8002d08:	b480      	push	{r7}
 8002d0a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8002d0c:	2303      	movs	r3, #3
}
 8002d0e:	4618      	mov	r0, r3
 8002d10:	46bd      	mov	sp, r7
 8002d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d16:	4770      	bx	lr

08002d18 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8002d18:	b480      	push	{r7}
 8002d1a:	b083      	sub	sp, #12
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	6078      	str	r0, [r7, #4]
    {
 8002d20:	4a04      	ldr	r2, [pc, #16]	; (8002d34 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	601a      	str	r2, [r3, #0]
    }
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	4618      	mov	r0, r3
 8002d2a:	370c      	adds	r7, #12
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d32:	4770      	bx	lr
 8002d34:	0801d384 	.word	0x0801d384

08002d38 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8002d38:	b580      	push	{r7, lr}
 8002d3a:	b082      	sub	sp, #8
 8002d3c:	af00      	add	r7, sp, #0
 8002d3e:	6078      	str	r0, [r7, #4]
    }
 8002d40:	6878      	ldr	r0, [r7, #4]
 8002d42:	f7ff ffe9 	bl	8002d18 <_ZN8touchgfx4FontD1Ev>
 8002d46:	2110      	movs	r1, #16
 8002d48:	6878      	ldr	r0, [r7, #4]
 8002d4a:	f018 fc01 	bl	801b550 <_ZdlPvj>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	4618      	mov	r0, r3
 8002d52:	3708      	adds	r7, #8
 8002d54:	46bd      	mov	sp, r7
 8002d56:	bd80      	pop	{r7, pc}

08002d58 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002d58:	b590      	push	{r4, r7, lr}
 8002d5a:	b087      	sub	sp, #28
 8002d5c:	af00      	add	r7, sp, #0
 8002d5e:	6078      	str	r0, [r7, #4]
 8002d60:	460b      	mov	r3, r1
 8002d62:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8002d64:	887b      	ldrh	r3, [r7, #2]
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d101      	bne.n	8002d6e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8002d6a:	2300      	movs	r3, #0
 8002d6c:	e010      	b.n	8002d90 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8002d6e:	2300      	movs	r3, #0
 8002d70:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8002d72:	2300      	movs	r3, #0
 8002d74:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	3308      	adds	r3, #8
 8002d7c:	681c      	ldr	r4, [r3, #0]
 8002d7e:	f107 030f 	add.w	r3, r7, #15
 8002d82:	f107 0210 	add.w	r2, r7, #16
 8002d86:	8879      	ldrh	r1, [r7, #2]
 8002d88:	6878      	ldr	r0, [r7, #4]
 8002d8a:	47a0      	blx	r4
 8002d8c:	6178      	str	r0, [r7, #20]
        return glyph;
 8002d8e:	697b      	ldr	r3, [r7, #20]
    }
 8002d90:	4618      	mov	r0, r3
 8002d92:	371c      	adds	r7, #28
 8002d94:	46bd      	mov	sp, r7
 8002d96:	bd90      	pop	{r4, r7, pc}

08002d98 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8002d98:	b480      	push	{r7}
 8002d9a:	b083      	sub	sp, #12
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	895b      	ldrh	r3, [r3, #10]
    }
 8002da4:	4618      	mov	r0, r3
 8002da6:	370c      	adds	r7, #12
 8002da8:	46bd      	mov	sp, r7
 8002daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dae:	4770      	bx	lr

08002db0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8002db0:	b480      	push	{r7}
 8002db2:	b083      	sub	sp, #12
 8002db4:	af00      	add	r7, sp, #0
 8002db6:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	899b      	ldrh	r3, [r3, #12]
    }
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	370c      	adds	r7, #12
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dc6:	4770      	bx	lr

08002dc8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @return The height in pixels of this font.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
 8002dc8:	b480      	push	{r7}
 8002dca:	b083      	sub	sp, #12
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	889b      	ldrh	r3, [r3, #4]
    }
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	370c      	adds	r7, #12
 8002dd8:	46bd      	mov	sp, r7
 8002dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dde:	4770      	bx	lr

08002de0 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     * account that certain characters (eg 'g') have pixels below the baseline, thus making
     * the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
 8002de0:	b480      	push	{r7}
 8002de2:	b083      	sub	sp, #12
 8002de4:	af00      	add	r7, sp, #0
 8002de6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	889a      	ldrh	r2, [r3, #4]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	799b      	ldrb	r3, [r3, #6]
 8002df0:	b29b      	uxth	r3, r3
 8002df2:	4413      	add	r3, r2
 8002df4:	b29b      	uxth	r3, r3
    }
 8002df6:	4618      	mov	r0, r3
 8002df8:	370c      	adds	r7, #12
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e00:	4770      	bx	lr

08002e02 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8002e02:	b480      	push	{r7}
 8002e04:	b083      	sub	sp, #12
 8002e06:	af00      	add	r7, sp, #0
 8002e08:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	79db      	ldrb	r3, [r3, #7]
 8002e0e:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8002e12:	b2db      	uxtb	r3, r3
    }
 8002e14:	4618      	mov	r0, r3
 8002e16:	370c      	adds	r7, #12
 8002e18:	46bd      	mov	sp, r7
 8002e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e1e:	4770      	bx	lr

08002e20 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8002e20:	b480      	push	{r7}
 8002e22:	b083      	sub	sp, #12
 8002e24:	af00      	add	r7, sp, #0
 8002e26:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	79db      	ldrb	r3, [r3, #7]
 8002e2c:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8002e30:	b2db      	uxtb	r3, r3
    }
 8002e32:	4618      	mov	r0, r3
 8002e34:	370c      	adds	r7, #12
 8002e36:	46bd      	mov	sp, r7
 8002e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e3c:	4770      	bx	lr
	...

08002e40 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b082      	sub	sp, #8
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	4a05      	ldr	r2, [pc, #20]	; (8002e60 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	601a      	str	r2, [r3, #0]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	4618      	mov	r0, r3
 8002e52:	f7ff ff61 	bl	8002d18 <_ZN8touchgfx4FontD1Ev>
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	4618      	mov	r0, r3
 8002e5a:	3708      	adds	r7, #8
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	bd80      	pop	{r7, pc}
 8002e60:	0801e8d0 	.word	0x0801e8d0

08002e64 <_ZN8touchgfx9ConstFontD0Ev>:
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b082      	sub	sp, #8
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
 8002e6c:	6878      	ldr	r0, [r7, #4]
 8002e6e:	f7ff ffe7 	bl	8002e40 <_ZN8touchgfx9ConstFontD1Ev>
 8002e72:	2118      	movs	r1, #24
 8002e74:	6878      	ldr	r0, [r7, #4]
 8002e76:	f018 fb6b 	bl	801b550 <_ZdlPvj>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	4618      	mov	r0, r3
 8002e7e:	3708      	adds	r7, #8
 8002e80:	46bd      	mov	sp, r7
 8002e82:	bd80      	pop	{r7, pc}

08002e84 <_ZN8touchgfx13GeneratedFontD1Ev>:
 * An GeneratedFont has both glyph table and glyph data placed in a flash which
 * supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8002e84:	b580      	push	{r7, lr}
 8002e86:	b082      	sub	sp, #8
 8002e88:	af00      	add	r7, sp, #0
 8002e8a:	6078      	str	r0, [r7, #4]
 8002e8c:	4a05      	ldr	r2, [pc, #20]	; (8002ea4 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	601a      	str	r2, [r3, #0]
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	4618      	mov	r0, r3
 8002e96:	f7ff ffd3 	bl	8002e40 <_ZN8touchgfx9ConstFontD1Ev>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	4618      	mov	r0, r3
 8002e9e:	3708      	adds	r7, #8
 8002ea0:	46bd      	mov	sp, r7
 8002ea2:	bd80      	pop	{r7, pc}
 8002ea4:	0801d324 	.word	0x0801d324

08002ea8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002ea8:	b580      	push	{r7, lr}
 8002eaa:	b082      	sub	sp, #8
 8002eac:	af00      	add	r7, sp, #0
 8002eae:	6078      	str	r0, [r7, #4]
 8002eb0:	6878      	ldr	r0, [r7, #4]
 8002eb2:	f7ff ffe7 	bl	8002e84 <_ZN8touchgfx13GeneratedFontD1Ev>
 8002eb6:	2124      	movs	r1, #36	; 0x24
 8002eb8:	6878      	ldr	r0, [r7, #4]
 8002eba:	f018 fb49 	bl	801b550 <_ZdlPvj>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	3708      	adds	r7, #8
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	bd80      	pop	{r7, pc}

08002ec8 <_ZN8touchgfx9TypedTextD1Ev>:
    virtual ~TypedText()
 8002ec8:	b480      	push	{r7}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
    {
 8002ed0:	4a04      	ldr	r2, [pc, #16]	; (8002ee4 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	601a      	str	r2, [r3, #0]
    }
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	4618      	mov	r0, r3
 8002eda:	370c      	adds	r7, #12
 8002edc:	46bd      	mov	sp, r7
 8002ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee2:	4770      	bx	lr
 8002ee4:	0801d1c8 	.word	0x0801d1c8

08002ee8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002ee8:	b580      	push	{r7, lr}
 8002eea:	b082      	sub	sp, #8
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
    }
 8002ef0:	6878      	ldr	r0, [r7, #4]
 8002ef2:	f7ff ffe9 	bl	8002ec8 <_ZN8touchgfx9TypedTextD1Ev>
 8002ef6:	2108      	movs	r1, #8
 8002ef8:	6878      	ldr	r0, [r7, #4]
 8002efa:	f018 fb29 	bl	801b550 <_ZdlPvj>
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	4618      	mov	r0, r3
 8002f02:	3708      	adds	r7, #8
 8002f04:	46bd      	mov	sp, r7
 8002f06:	bd80      	pop	{r7, pc}

08002f08 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8002f08:	b480      	push	{r7}
 8002f0a:	b083      	sub	sp, #12
 8002f0c:	af00      	add	r7, sp, #0
 8002f0e:	6078      	str	r0, [r7, #4]
 8002f10:	6039      	str	r1, [r7, #0]
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	4618      	mov	r0, r3
 8002f16:	370c      	adds	r7, #12
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f1e:	4770      	bx	lr

08002f20 <_ZN8touchgfx3HAL3lcdEv>:
    static LCD& lcd()
 8002f20:	b480      	push	{r7}
 8002f22:	af00      	add	r7, sp, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f24:	4b0b      	ldr	r3, [pc, #44]	; (8002f54 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d008      	beq.n	8002f42 <_ZN8touchgfx3HAL3lcdEv+0x22>
 8002f30:	4b08      	ldr	r3, [pc, #32]	; (8002f54 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d003      	beq.n	8002f42 <_ZN8touchgfx3HAL3lcdEv+0x22>
            return *instance->auxiliaryLCD;
 8002f3a:	4b06      	ldr	r3, [pc, #24]	; (8002f54 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002f40:	e002      	b.n	8002f48 <_ZN8touchgfx3HAL3lcdEv+0x28>
            return instance->lcdRef;
 8002f42:	4b04      	ldr	r3, [pc, #16]	; (8002f54 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	689b      	ldr	r3, [r3, #8]
    }
 8002f48:	4618      	mov	r0, r3
 8002f4a:	46bd      	mov	sp, r7
 8002f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f50:	4770      	bx	lr
 8002f52:	bf00      	nop
 8002f54:	20008990 	.word	0x20008990

08002f58 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8002f58:	b480      	push	{r7}
 8002f5a:	b083      	sub	sp, #12
 8002f5c:	af00      	add	r7, sp, #0
 8002f5e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8002f60:	4a07      	ldr	r2, [pc, #28]	; (8002f80 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	601a      	str	r2, [r3, #0]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	2200      	movs	r2, #0
 8002f6a:	605a      	str	r2, [r3, #4]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	2200      	movs	r2, #0
 8002f70:	721a      	strb	r2, [r3, #8]
    {
    }
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	4618      	mov	r0, r3
 8002f76:	370c      	adds	r7, #12
 8002f78:	46bd      	mov	sp, r7
 8002f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7e:	4770      	bx	lr
 8002f80:	0801d1fc 	.word	0x0801d1fc

08002f84 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8002f84:	b480      	push	{r7}
 8002f86:	b083      	sub	sp, #12
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
    {
 8002f8c:	4a04      	ldr	r2, [pc, #16]	; (8002fa0 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	601a      	str	r2, [r3, #0]
    }
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	4618      	mov	r0, r3
 8002f96:	370c      	adds	r7, #12
 8002f98:	46bd      	mov	sp, r7
 8002f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f9e:	4770      	bx	lr
 8002fa0:	0801d1fc 	.word	0x0801d1fc

08002fa4 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b082      	sub	sp, #8
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
    }
 8002fac:	6878      	ldr	r0, [r7, #4]
 8002fae:	f7ff ffe9 	bl	8002f84 <_ZN8touchgfx10TransitionD1Ev>
 8002fb2:	210c      	movs	r1, #12
 8002fb4:	6878      	ldr	r0, [r7, #4]
 8002fb6:	f018 facb 	bl	801b550 <_ZdlPvj>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	3708      	adds	r7, #8
 8002fc0:	46bd      	mov	sp, r7
 8002fc2:	bd80      	pop	{r7, pc}

08002fc4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8002fc4:	b480      	push	{r7}
 8002fc6:	b083      	sub	sp, #12
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
    {
    }
 8002fcc:	bf00      	nop
 8002fce:	370c      	adds	r7, #12
 8002fd0:	46bd      	mov	sp, r7
 8002fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd6:	4770      	bx	lr

08002fd8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8002fd8:	b480      	push	{r7}
 8002fda:	b083      	sub	sp, #12
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	6078      	str	r0, [r7, #4]
    {
    }
 8002fe0:	bf00      	nop
 8002fe2:	370c      	adds	r7, #12
 8002fe4:	46bd      	mov	sp, r7
 8002fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fea:	4770      	bx	lr

08002fec <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8002fec:	b480      	push	{r7}
 8002fee:	b083      	sub	sp, #12
 8002ff0:	af00      	add	r7, sp, #0
 8002ff2:	6078      	str	r0, [r7, #4]
    {
    }
 8002ff4:	bf00      	nop
 8002ff6:	370c      	adds	r7, #12
 8002ff8:	46bd      	mov	sp, r7
 8002ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ffe:	4770      	bx	lr

08003000 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8003000:	b580      	push	{r7, lr}
 8003002:	b082      	sub	sp, #8
 8003004:	af00      	add	r7, sp, #0
 8003006:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->draw();
 8003008:	f00a f838 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800300c:	4602      	mov	r2, r0
 800300e:	6813      	ldr	r3, [r2, #0]
 8003010:	3330      	adds	r3, #48	; 0x30
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	4610      	mov	r0, r2
 8003016:	4798      	blx	r3
    }
 8003018:	bf00      	nop
 800301a:	3708      	adds	r7, #8
 800301c:	46bd      	mov	sp, r7
 800301e:	bd80      	pop	{r7, pc}

08003020 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8003020:	b480      	push	{r7}
 8003022:	b083      	sub	sp, #12
 8003024:	af00      	add	r7, sp, #0
 8003026:	6078      	str	r0, [r7, #4]
 8003028:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	683a      	ldr	r2, [r7, #0]
 800302e:	605a      	str	r2, [r3, #4]
    }
 8003030:	bf00      	nop
 8003032:	370c      	adds	r7, #12
 8003034:	46bd      	mov	sp, r7
 8003036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800303a:	4770      	bx	lr

0800303c <_ZN8touchgfx14MVPApplicationC1Ev>:
    MVPApplication()
 800303c:	b580      	push	{r7, lr}
 800303e:	b082      	sub	sp, #8
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
          pendingScreenTransitionCallback(0)
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	4618      	mov	r0, r3
 8003048:	f00a f838 	bl	800d0bc <_ZN8touchgfx11ApplicationC1Ev>
 800304c:	4a09      	ldr	r2, [pc, #36]	; (8003074 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	601a      	str	r2, [r3, #0]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	2200      	movs	r2, #0
 8003056:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	2200      	movs	r2, #0
 800305e:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        instance = this;
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	4a04      	ldr	r2, [pc, #16]	; (8003078 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8003066:	6013      	str	r3, [r2, #0]
    }
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	4618      	mov	r0, r3
 800306c:	3708      	adds	r7, #8
 800306e:	46bd      	mov	sp, r7
 8003070:	bd80      	pop	{r7, pc}
 8003072:	bf00      	nop
 8003074:	0801cf60 	.word	0x0801cf60
 8003078:	200089dc 	.word	0x200089dc

0800307c <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800307c:	b480      	push	{r7}
 800307e:	b083      	sub	sp, #12
 8003080:	af00      	add	r7, sp, #0
 8003082:	6078      	str	r0, [r7, #4]
 8003084:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	683a      	ldr	r2, [r7, #0]
 800308a:	601a      	str	r2, [r3, #0]
    }
 800308c:	bf00      	nop
 800308e:	370c      	adds	r7, #12
 8003090:	46bd      	mov	sp, r7
 8003092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003096:	4770      	bx	lr

08003098 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8003098:	b480      	push	{r7}
 800309a:	b083      	sub	sp, #12
 800309c:	af00      	add	r7, sp, #0
 800309e:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	2201      	movs	r2, #1
 80030a4:	721a      	strb	r2, [r3, #8]
    }
 80030a6:	bf00      	nop
 80030a8:	370c      	adds	r7, #12
 80030aa:	46bd      	mov	sp, r7
 80030ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b0:	4770      	bx	lr

080030b2 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 80030b2:	b480      	push	{r7}
 80030b4:	b083      	sub	sp, #12
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	6078      	str	r0, [r7, #4]
 80030ba:	6039      	str	r1, [r7, #0]
    {
        model = m;
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	683a      	ldr	r2, [r7, #0]
 80030c0:	605a      	str	r2, [r3, #4]
    }
 80030c2:	bf00      	nop
 80030c4:	370c      	adds	r7, #12
 80030c6:	46bd      	mov	sp, r7
 80030c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030cc:	4770      	bx	lr
	...

080030d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80030d0:	b580      	push	{r7, lr}
 80030d2:	b084      	sub	sp, #16
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	60f8      	str	r0, [r7, #12]
 80030d8:	60b9      	str	r1, [r7, #8]
 80030da:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	4618      	mov	r0, r3
 80030e0:	f7ff ffac 	bl	800303c <_ZN8touchgfx14MVPApplicationC1Ev>
 80030e4:	4a13      	ldr	r2, [pc, #76]	; (8003134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	601a      	str	r2, [r3, #0]
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 80030f0:	4618      	mov	r0, r3
 80030f2:	f000 f89f 	bl	8003234 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 80030f6:	68fb      	ldr	r3, [r7, #12]
 80030f8:	687a      	ldr	r2, [r7, #4]
 80030fa:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	68ba      	ldr	r2, [r7, #8]
 8003102:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003106:	f7ff fc3d 	bl	8002984 <_ZN8touchgfx3HAL11getInstanceEv>
 800310a:	4602      	mov	r2, r0
 800310c:	6813      	ldr	r3, [r2, #0]
 800310e:	3308      	adds	r3, #8
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	2101      	movs	r1, #1
 8003114:	4610      	mov	r0, r2
 8003116:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003118:	2000      	movs	r0, #0
 800311a:	f000 fd39 	bl	8003b90 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800311e:	f7ff feff 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 8003122:	4603      	mov	r3, r0
 8003124:	4618      	mov	r0, r3
 8003126:	f011 f8f8 	bl	801431a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	4618      	mov	r0, r3
 800312e:	3710      	adds	r7, #16
 8003130:	46bd      	mov	sp, r7
 8003132:	bd80      	pop	{r7, pc}
 8003134:	0801cf04 	.word	0x0801cf04

08003138 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8003138:	b480      	push	{r7}
 800313a:	b083      	sub	sp, #12
 800313c:	af00      	add	r7, sp, #0
 800313e:	6078      	str	r0, [r7, #4]
 8003140:	6039      	str	r1, [r7, #0]
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	4618      	mov	r0, r3
 8003146:	370c      	adds	r7, #12
 8003148:	46bd      	mov	sp, r7
 800314a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800314e:	4770      	bx	lr

08003150 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003150:	b580      	push	{r7, lr}
 8003152:	b082      	sub	sp, #8
 8003154:	af00      	add	r7, sp, #0
 8003156:	6078      	str	r0, [r7, #4]
 8003158:	6039      	str	r1, [r7, #0]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	683a      	ldr	r2, [r7, #0]
 800315e:	4611      	mov	r1, r2
 8003160:	4618      	mov	r0, r3
 8003162:	f7ff ffe9 	bl	8003138 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8003166:	683b      	ldr	r3, [r7, #0]
 8003168:	685a      	ldr	r2, [r3, #4]
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	605a      	str	r2, [r3, #4]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	683a      	ldr	r2, [r7, #0]
 8003172:	3308      	adds	r3, #8
 8003174:	3208      	adds	r2, #8
 8003176:	e892 0003 	ldmia.w	r2, {r0, r1}
 800317a:	e883 0003 	stmia.w	r3, {r0, r1}
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	4618      	mov	r0, r3
 8003182:	3708      	adds	r7, #8
 8003184:	46bd      	mov	sp, r7
 8003186:	bd80      	pop	{r7, pc}

08003188 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 8003188:	b590      	push	{r4, r7, lr}
 800318a:	b089      	sub	sp, #36	; 0x24
 800318c:	af00      	add	r7, sp, #0
 800318e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoscreenScreenNoTransitionImpl);
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 8003196:	4b10      	ldr	r3, [pc, #64]	; (80031d8 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 8003198:	61bb      	str	r3, [r7, #24]
 800319a:	2300      	movs	r3, #0
 800319c:	61fb      	str	r3, [r7, #28]
 800319e:	f107 0008 	add.w	r0, r7, #8
 80031a2:	f107 0318 	add.w	r3, r7, #24
 80031a6:	cb0c      	ldmia	r3, {r2, r3}
 80031a8:	6879      	ldr	r1, [r7, #4]
 80031aa:	f000 f85f 	bl	800326c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 80031ae:	f107 0308 	add.w	r3, r7, #8
 80031b2:	4619      	mov	r1, r3
 80031b4:	4620      	mov	r0, r4
 80031b6:	f7ff ffcb 	bl	8003150 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 80031ba:	f107 0308 	add.w	r3, r7, #8
 80031be:	4618      	mov	r0, r3
 80031c0:	f7ff fa72 	bl	80026a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
}
 80031d0:	bf00      	nop
 80031d2:	3724      	adds	r7, #36	; 0x24
 80031d4:	46bd      	mov	sp, r7
 80031d6:	bd90      	pop	{r4, r7, pc}
 80031d8:	080031dd 	.word	0x080031dd

080031dc <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 80031dc:	b580      	push	{r7, lr}
 80031de:	b084      	sub	sp, #16
 80031e0:	af02      	add	r7, sp, #8
 80031e2:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	f503 719c 	add.w	r1, r3, #312	; 0x138
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80031f0:	461a      	mov	r2, r3
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 80031f8:	9300      	str	r3, [sp, #0]
 80031fa:	4b04      	ldr	r3, [pc, #16]	; (800320c <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 80031fc:	4804      	ldr	r0, [pc, #16]	; (8003210 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 80031fe:	f000 f867 	bl	80032d0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8003202:	bf00      	nop
 8003204:	3708      	adds	r7, #8
 8003206:	46bd      	mov	sp, r7
 8003208:	bd80      	pop	{r7, pc}
 800320a:	bf00      	nop
 800320c:	200089d0 	.word	0x200089d0
 8003210:	200089cc 	.word	0x200089cc

08003214 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8003214:	b480      	push	{r7}
 8003216:	b083      	sub	sp, #12
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
 800321c:	4a04      	ldr	r2, [pc, #16]	; (8003230 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	601a      	str	r2, [r3, #0]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	4618      	mov	r0, r3
 8003226:	370c      	adds	r7, #12
 8003228:	46bd      	mov	sp, r7
 800322a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800322e:	4770      	bx	lr
 8003230:	0801cfc8 	.word	0x0801cfc8

08003234 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
    Callback()
 8003234:	b580      	push	{r7, lr}
 8003236:	b082      	sub	sp, #8
 8003238:	af00      	add	r7, sp, #0
 800323a:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun_0(0)
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	4618      	mov	r0, r3
 8003240:	f7ff ffe8 	bl	8003214 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8003244:	4a08      	ldr	r2, [pc, #32]	; (8003268 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	601a      	str	r2, [r3, #0]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	2200      	movs	r2, #0
 800324e:	605a      	str	r2, [r3, #4]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	2200      	movs	r2, #0
 8003254:	609a      	str	r2, [r3, #8]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	2200      	movs	r2, #0
 800325a:	60da      	str	r2, [r3, #12]
    }
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	4618      	mov	r0, r3
 8003260:	3708      	adds	r7, #8
 8003262:	46bd      	mov	sp, r7
 8003264:	bd80      	pop	{r7, pc}
 8003266:	bf00      	nop
 8003268:	0801cf48 	.word	0x0801cf48

0800326c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 800326c:	b580      	push	{r7, lr}
 800326e:	b084      	sub	sp, #16
 8003270:	af00      	add	r7, sp, #0
 8003272:	60f8      	str	r0, [r7, #12]
 8003274:	60b9      	str	r1, [r7, #8]
 8003276:	4639      	mov	r1, r7
 8003278:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	4618      	mov	r0, r3
 8003280:	f7ff ffc8 	bl	8003214 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8003284:	4a08      	ldr	r2, [pc, #32]	; (80032a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	68ba      	ldr	r2, [r7, #8]
 800328e:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	3308      	adds	r3, #8
 8003294:	463a      	mov	r2, r7
 8003296:	e892 0003 	ldmia.w	r2, {r0, r1}
 800329a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800329e:	68fb      	ldr	r3, [r7, #12]
 80032a0:	4618      	mov	r0, r3
 80032a2:	3710      	adds	r7, #16
 80032a4:	46bd      	mov	sp, r7
 80032a6:	bd80      	pop	{r7, pc}
 80032a8:	0801cf48 	.word	0x0801cf48

080032ac <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 80032ac:	b580      	push	{r7, lr}
 80032ae:	b082      	sub	sp, #8
 80032b0:	af00      	add	r7, sp, #0
 80032b2:	6078      	str	r0, [r7, #4]
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	4618      	mov	r0, r3
 80032b8:	f7ff fe4e 	bl	8002f58 <_ZN8touchgfx10TransitionC1Ev>
 80032bc:	4a03      	ldr	r2, [pc, #12]	; (80032cc <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	601a      	str	r2, [r3, #0]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	4618      	mov	r0, r3
 80032c6:	3708      	adds	r7, #8
 80032c8:	46bd      	mov	sp, r7
 80032ca:	bd80      	pop	{r7, pc}
 80032cc:	0801d1d8 	.word	0x0801d1d8

080032d0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80032d0:	b590      	push	{r4, r7, lr}
 80032d2:	b08f      	sub	sp, #60	; 0x3c
 80032d4:	af00      	add	r7, sp, #0
 80032d6:	60f8      	str	r0, [r7, #12]
 80032d8:	60b9      	str	r1, [r7, #8]
 80032da:	607a      	str	r2, [r7, #4]
 80032dc:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	689a      	ldr	r2, [r3, #8]
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	689b      	ldr	r3, [r3, #8]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	3320      	adds	r3, #32
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	4610      	mov	r0, r2
 80032ee:	4798      	blx	r3
 80032f0:	4603      	mov	r3, r0
 80032f2:	2bef      	cmp	r3, #239	; 0xef
 80032f4:	d805      	bhi.n	8003302 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 80032f6:	4b85      	ldr	r3, [pc, #532]	; (800350c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x23c>)
 80032f8:	4a85      	ldr	r2, [pc, #532]	; (8003510 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x240>)
 80032fa:	21a7      	movs	r1, #167	; 0xa7
 80032fc:	4885      	ldr	r0, [pc, #532]	; (8003514 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x244>)
 80032fe:	f018 f953 	bl	801b5a8 <__assert_func>
 8003302:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	685a      	ldr	r2, [r3, #4]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	685b      	ldr	r3, [r3, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	3320      	adds	r3, #32
 8003310:	681b      	ldr	r3, [r3, #0]
 8003312:	4610      	mov	r0, r2
 8003314:	4798      	blx	r3
 8003316:	4603      	mov	r3, r0
 8003318:	2b0f      	cmp	r3, #15
 800331a:	d805      	bhi.n	8003328 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800331c:	4b7e      	ldr	r3, [pc, #504]	; (8003518 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x248>)
 800331e:	4a7c      	ldr	r2, [pc, #496]	; (8003510 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x240>)
 8003320:	21a8      	movs	r1, #168	; 0xa8
 8003322:	487c      	ldr	r0, [pc, #496]	; (8003514 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x244>)
 8003324:	f018 f940 	bl	801b5a8 <__assert_func>
 8003328:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	68da      	ldr	r2, [r3, #12]
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	68db      	ldr	r3, [r3, #12]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	3320      	adds	r3, #32
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	4610      	mov	r0, r2
 800333a:	4798      	blx	r3
 800333c:	4603      	mov	r3, r0
 800333e:	2b0b      	cmp	r3, #11
 8003340:	d805      	bhi.n	800334e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 8003342:	4b76      	ldr	r3, [pc, #472]	; (800351c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24c>)
 8003344:	4a72      	ldr	r2, [pc, #456]	; (8003510 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x240>)
 8003346:	21a9      	movs	r1, #169	; 0xa9
 8003348:	4872      	ldr	r0, [pc, #456]	; (8003514 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x244>)
 800334a:	f018 f92d 	bl	801b5a8 <__assert_func>
 800334e:	bf00      	nop
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	62bb      	str	r3, [r7, #40]	; 0x28
 8003354:	68bb      	ldr	r3, [r7, #8]
 8003356:	627b      	str	r3, [r7, #36]	; 0x24
 8003358:	683b      	ldr	r3, [r7, #0]
 800335a:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800335c:	f009 fe8e 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 8003360:	4603      	mov	r3, r0
 8003362:	4618      	mov	r0, r3
 8003364:	f009 fe90 	bl	800d088 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003368:	6a3b      	ldr	r3, [r7, #32]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	2b00      	cmp	r3, #0
 800336e:	d008      	beq.n	8003382 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb2>
        (*currentTrans)->tearDown();
 8003370:	6a3b      	ldr	r3, [r7, #32]
 8003372:	681a      	ldr	r2, [r3, #0]
 8003374:	6a3b      	ldr	r3, [r7, #32]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	330c      	adds	r3, #12
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	4610      	mov	r0, r2
 8003380:	4798      	blx	r3
    if (*currentTrans)
 8003382:	6a3b      	ldr	r3, [r7, #32]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	2b00      	cmp	r3, #0
 8003388:	d007      	beq.n	800339a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xca>
        (*currentTrans)->~Transition();
 800338a:	6a3b      	ldr	r3, [r7, #32]
 800338c:	681a      	ldr	r2, [r3, #0]
 800338e:	6a3b      	ldr	r3, [r7, #32]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	4610      	mov	r0, r2
 8003398:	4798      	blx	r3
    if (*currentScreen)
 800339a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d008      	beq.n	80033b4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe4>
        (*currentScreen)->tearDownScreen();
 80033a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033a4:	681a      	ldr	r2, [r3, #0]
 80033a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	3314      	adds	r3, #20
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	4610      	mov	r0, r2
 80033b2:	4798      	blx	r3
    if (*currentPresenter)
 80033b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	d008      	beq.n	80033ce <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfe>
        (*currentPresenter)->deactivate();
 80033bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033be:	681a      	ldr	r2, [r3, #0]
 80033c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	3304      	adds	r3, #4
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	4610      	mov	r0, r2
 80033cc:	4798      	blx	r3
    if (*currentScreen)
 80033ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	2b00      	cmp	r3, #0
 80033d4:	d007      	beq.n	80033e6 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x116>
        (*currentScreen)->~Screen();
 80033d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033d8:	681a      	ldr	r2, [r3, #0]
 80033da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	4610      	mov	r0, r2
 80033e4:	4798      	blx	r3
    if (*currentPresenter)
 80033e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	d008      	beq.n	8003400 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>
        (*currentPresenter)->~Presenter();
 80033ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033f0:	681a      	ldr	r2, [r3, #0]
 80033f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033f4:	681b      	ldr	r3, [r3, #0]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	3308      	adds	r3, #8
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	4610      	mov	r0, r2
 80033fe:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	68db      	ldr	r3, [r3, #12]
 8003404:	2100      	movs	r1, #0
 8003406:	4618      	mov	r0, r3
 8003408:	f000 f88a 	bl	8003520 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800340c:	4603      	mov	r3, r0
 800340e:	4619      	mov	r1, r3
 8003410:	200c      	movs	r0, #12
 8003412:	f7ff fd79 	bl	8002f08 <_ZnwjPv>
 8003416:	4604      	mov	r4, r0
 8003418:	2c00      	cmp	r4, #0
 800341a:	d004      	beq.n	8003426 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x156>
 800341c:	4620      	mov	r0, r4
 800341e:	f7ff ff45 	bl	80032ac <_ZN8touchgfx12NoTransitionC1Ev>
 8003422:	4623      	mov	r3, r4
 8003424:	e000      	b.n	8003428 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x158>
 8003426:	4623      	mov	r3, r4
 8003428:	637b      	str	r3, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	689b      	ldr	r3, [r3, #8]
 800342e:	2100      	movs	r1, #0
 8003430:	4618      	mov	r0, r3
 8003432:	f000 f888 	bl	8003546 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 8003436:	4603      	mov	r3, r0
 8003438:	4619      	mov	r1, r3
 800343a:	20f0      	movs	r0, #240	; 0xf0
 800343c:	f7ff fd64 	bl	8002f08 <_ZnwjPv>
 8003440:	4604      	mov	r4, r0
 8003442:	2c00      	cmp	r4, #0
 8003444:	d004      	beq.n	8003450 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x180>
 8003446:	4620      	mov	r0, r4
 8003448:	f001 fc80 	bl	8004d4c <_ZN10screenViewC1Ev>
 800344c:	4623      	mov	r3, r4
 800344e:	e000      	b.n	8003452 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x182>
 8003450:	4623      	mov	r3, r4
 8003452:	633b      	str	r3, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	685b      	ldr	r3, [r3, #4]
 8003458:	2100      	movs	r1, #0
 800345a:	4618      	mov	r0, r3
 800345c:	f000 f886 	bl	800356c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 8003460:	4603      	mov	r3, r0
 8003462:	4619      	mov	r1, r3
 8003464:	2010      	movs	r0, #16
 8003466:	f7ff fd4f 	bl	8002f08 <_ZnwjPv>
 800346a:	4604      	mov	r4, r0
 800346c:	2c00      	cmp	r4, #0
 800346e:	d005      	beq.n	800347c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 8003470:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003472:	4620      	mov	r0, r4
 8003474:	f001 fc14 	bl	8004ca0 <_ZN15screenPresenterC1ER10screenView>
 8003478:	4623      	mov	r3, r4
 800347a:	e000      	b.n	800347e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800347c:	4623      	mov	r3, r4
 800347e:	62fb      	str	r3, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 8003480:	683b      	ldr	r3, [r7, #0]
 8003482:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003484:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8003486:	68bb      	ldr	r3, [r7, #8]
 8003488:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800348a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003490:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8003492:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003494:	2b00      	cmp	r3, #0
 8003496:	d002      	beq.n	800349e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ce>
 8003498:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800349a:	3304      	adds	r3, #4
 800349c:	e000      	b.n	80034a0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1d0>
 800349e:	2300      	movs	r3, #0
 80034a0:	4619      	mov	r1, r3
 80034a2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80034a4:	f7ff fdea 	bl	800307c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80034a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80034aa:	3304      	adds	r3, #4
 80034ac:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80034ae:	4618      	mov	r0, r3
 80034b0:	f7ff fdff 	bl	80030b2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 80034b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034b6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80034b8:	4618      	mov	r0, r3
 80034ba:	f000 f86a 	bl	8003592 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 80034be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034c0:	61fb      	str	r3, [r7, #28]
 80034c2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80034c4:	61bb      	str	r3, [r7, #24]
 80034c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80034c8:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 80034ca:	69fb      	ldr	r3, [r7, #28]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	330c      	adds	r3, #12
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	69f8      	ldr	r0, [r7, #28]
 80034d4:	4798      	blx	r3
    newPresenter->activate();
 80034d6:	69bb      	ldr	r3, [r7, #24]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	69b8      	ldr	r0, [r7, #24]
 80034de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034e0:	6979      	ldr	r1, [r7, #20]
 80034e2:	69f8      	ldr	r0, [r7, #28]
 80034e4:	f00b f9d9 	bl	800e89a <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034e8:	697b      	ldr	r3, [r7, #20]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	3310      	adds	r3, #16
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	6978      	ldr	r0, [r7, #20]
 80034f2:	4798      	blx	r3
    newTransition->invalidate();
 80034f4:	697b      	ldr	r3, [r7, #20]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	3314      	adds	r3, #20
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	6978      	ldr	r0, [r7, #20]
 80034fe:	4798      	blx	r3

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8003500:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8003502:	4618      	mov	r0, r3
 8003504:	373c      	adds	r7, #60	; 0x3c
 8003506:	46bd      	mov	sp, r7
 8003508:	bd90      	pop	{r4, r7, pc}
 800350a:	bf00      	nop
 800350c:	0801c7dc 	.word	0x0801c7dc
 8003510:	0801d218 	.word	0x0801d218
 8003514:	0801c86c 	.word	0x0801c86c
 8003518:	0801c8b4 	.word	0x0801c8b4
 800351c:	0801c958 	.word	0x0801c958

08003520 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8003520:	b580      	push	{r7, lr}
 8003522:	b082      	sub	sp, #8
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
 8003528:	460b      	mov	r3, r1
 800352a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	3324      	adds	r3, #36	; 0x24
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	887a      	ldrh	r2, [r7, #2]
 8003536:	4611      	mov	r1, r2
 8003538:	6878      	ldr	r0, [r7, #4]
 800353a:	4798      	blx	r3
 800353c:	4603      	mov	r3, r0
    }
 800353e:	4618      	mov	r0, r3
 8003540:	3708      	adds	r7, #8
 8003542:	46bd      	mov	sp, r7
 8003544:	bd80      	pop	{r7, pc}

08003546 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 8003546:	b580      	push	{r7, lr}
 8003548:	b082      	sub	sp, #8
 800354a:	af00      	add	r7, sp, #0
 800354c:	6078      	str	r0, [r7, #4]
 800354e:	460b      	mov	r3, r1
 8003550:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	3324      	adds	r3, #36	; 0x24
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	887a      	ldrh	r2, [r7, #2]
 800355c:	4611      	mov	r1, r2
 800355e:	6878      	ldr	r0, [r7, #4]
 8003560:	4798      	blx	r3
 8003562:	4603      	mov	r3, r0
    }
 8003564:	4618      	mov	r0, r3
 8003566:	3708      	adds	r7, #8
 8003568:	46bd      	mov	sp, r7
 800356a:	bd80      	pop	{r7, pc}

0800356c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800356c:	b580      	push	{r7, lr}
 800356e:	b082      	sub	sp, #8
 8003570:	af00      	add	r7, sp, #0
 8003572:	6078      	str	r0, [r7, #4]
 8003574:	460b      	mov	r3, r1
 8003576:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	3324      	adds	r3, #36	; 0x24
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	887a      	ldrh	r2, [r7, #2]
 8003582:	4611      	mov	r1, r2
 8003584:	6878      	ldr	r0, [r7, #4]
 8003586:	4798      	blx	r3
 8003588:	4603      	mov	r3, r0
    }
 800358a:	4618      	mov	r0, r3
 800358c:	3708      	adds	r7, #8
 800358e:	46bd      	mov	sp, r7
 8003590:	bd80      	pop	{r7, pc}

08003592 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This
     * function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8003592:	b480      	push	{r7}
 8003594:	b083      	sub	sp, #12
 8003596:	af00      	add	r7, sp, #0
 8003598:	6078      	str	r0, [r7, #4]
 800359a:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	683a      	ldr	r2, [r7, #0]
 80035a0:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 80035a2:	bf00      	nop
 80035a4:	370c      	adds	r7, #12
 80035a6:	46bd      	mov	sp, r7
 80035a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ac:	4770      	bx	lr
	...

080035b0 <_ZN8touchgfx12NoTransitionD1Ev>:
 80035b0:	b580      	push	{r7, lr}
 80035b2:	b082      	sub	sp, #8
 80035b4:	af00      	add	r7, sp, #0
 80035b6:	6078      	str	r0, [r7, #4]
 80035b8:	4a05      	ldr	r2, [pc, #20]	; (80035d0 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	601a      	str	r2, [r3, #0]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	4618      	mov	r0, r3
 80035c2:	f7ff fcdf 	bl	8002f84 <_ZN8touchgfx10TransitionD1Ev>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	4618      	mov	r0, r3
 80035ca:	3708      	adds	r7, #8
 80035cc:	46bd      	mov	sp, r7
 80035ce:	bd80      	pop	{r7, pc}
 80035d0:	0801d1d8 	.word	0x0801d1d8

080035d4 <_ZN8touchgfx12NoTransitionD0Ev>:
 80035d4:	b580      	push	{r7, lr}
 80035d6:	b082      	sub	sp, #8
 80035d8:	af00      	add	r7, sp, #0
 80035da:	6078      	str	r0, [r7, #4]
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	f7ff ffe7 	bl	80035b0 <_ZN8touchgfx12NoTransitionD1Ev>
 80035e2:	210c      	movs	r1, #12
 80035e4:	6878      	ldr	r0, [r7, #4]
 80035e6:	f017 ffb3 	bl	801b550 <_ZdlPvj>
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	4618      	mov	r0, r3
 80035ee:	3708      	adds	r7, #8
 80035f0:	46bd      	mov	sp, r7
 80035f2:	bd80      	pop	{r7, pc}

080035f4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    /**
     * Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 80035f4:	b480      	push	{r7}
 80035f6:	b083      	sub	sp, #12
 80035f8:	af00      	add	r7, sp, #0
 80035fa:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	6a1b      	ldr	r3, [r3, #32]
    }
 8003600:	4618      	mov	r0, r3
 8003602:	370c      	adds	r7, #12
 8003604:	46bd      	mov	sp, r7
 8003606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800360a:	4770      	bx	lr

0800360c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 800360c:	b580      	push	{r7, lr}
 800360e:	b08c      	sub	sp, #48	; 0x30
 8003610:	af08      	add	r7, sp, #32
 8003612:	60f8      	str	r0, [r7, #12]
 8003614:	60b9      	str	r1, [r7, #8]
 8003616:	4611      	mov	r1, r2
 8003618:	461a      	mov	r2, r3
 800361a:	460b      	mov	r3, r1
 800361c:	80fb      	strh	r3, [r7, #6]
 800361e:	4613      	mov	r3, r2
 8003620:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8003622:	68f8      	ldr	r0, [r7, #12]
 8003624:	88b9      	ldrh	r1, [r7, #4]
 8003626:	88fa      	ldrh	r2, [r7, #6]
 8003628:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800362a:	9306      	str	r3, [sp, #24]
 800362c:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 800362e:	9305      	str	r3, [sp, #20]
 8003630:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8003634:	9304      	str	r3, [sp, #16]
 8003636:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800363a:	9303      	str	r3, [sp, #12]
 800363c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003640:	9302      	str	r3, [sp, #8]
 8003642:	7f3b      	ldrb	r3, [r7, #28]
 8003644:	9301      	str	r3, [sp, #4]
 8003646:	7e3b      	ldrb	r3, [r7, #24]
 8003648:	9300      	str	r3, [sp, #0]
 800364a:	460b      	mov	r3, r1
 800364c:	68b9      	ldr	r1, [r7, #8]
 800364e:	f00a fd31 	bl	800e0b4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8003652:	4a08      	ldr	r2, [pc, #32]	; (8003674 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 8003654:	68fb      	ldr	r3, [r7, #12]
 8003656:	601a      	str	r2, [r3, #0]
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800365c:	619a      	str	r2, [r3, #24]
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003662:	61da      	str	r2, [r3, #28]
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003668:	621a      	str	r2, [r3, #32]
{
}
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	4618      	mov	r0, r3
 800366e:	3710      	adds	r7, #16
 8003670:	46bd      	mov	sp, r7
 8003672:	bd80      	pop	{r7, pc}
 8003674:	0801d324 	.word	0x0801d324

08003678 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8003678:	b480      	push	{r7}
 800367a:	b085      	sub	sp, #20
 800367c:	af00      	add	r7, sp, #0
 800367e:	6078      	str	r0, [r7, #4]
 8003680:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	699b      	ldr	r3, [r3, #24]
 8003686:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003688:	683b      	ldr	r3, [r7, #0]
 800368a:	889b      	ldrh	r3, [r3, #4]
 800368c:	0adb      	lsrs	r3, r3, #11
 800368e:	b29b      	uxth	r3, r3
 8003690:	009b      	lsls	r3, r3, #2
 8003692:	68fa      	ldr	r2, [r7, #12]
 8003694:	4413      	add	r3, r2
 8003696:	681a      	ldr	r2, [r3, #0]
 8003698:	683b      	ldr	r3, [r7, #0]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	4413      	add	r3, r2
}
 800369e:	4618      	mov	r0, r3
 80036a0:	3714      	adds	r7, #20
 80036a2:	46bd      	mov	sp, r7
 80036a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a8:	4770      	bx	lr

080036aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80036aa:	b480      	push	{r7}
 80036ac:	b089      	sub	sp, #36	; 0x24
 80036ae:	af00      	add	r7, sp, #0
 80036b0:	60f8      	str	r0, [r7, #12]
 80036b2:	460b      	mov	r3, r1
 80036b4:	607a      	str	r2, [r7, #4]
 80036b6:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d003      	beq.n	80036c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	7b1b      	ldrb	r3, [r3, #12]
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	d101      	bne.n	80036ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80036c6:	2300      	movs	r3, #0
 80036c8:	e030      	b.n	800372c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	69da      	ldr	r2, [r3, #28]
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80036d2:	697b      	ldr	r3, [r7, #20]
 80036d4:	7b5b      	ldrb	r3, [r3, #13]
 80036d6:	021b      	lsls	r3, r3, #8
 80036d8:	b21b      	sxth	r3, r3
 80036da:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80036de:	b219      	sxth	r1, r3
 80036e0:	697b      	ldr	r3, [r7, #20]
 80036e2:	7adb      	ldrb	r3, [r3, #11]
 80036e4:	b21b      	sxth	r3, r3
 80036e6:	430b      	orrs	r3, r1
 80036e8:	b21b      	sxth	r3, r3
 80036ea:	b29b      	uxth	r3, r3
 80036ec:	009b      	lsls	r3, r3, #2
 80036ee:	4413      	add	r3, r2
 80036f0:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	7b1b      	ldrb	r3, [r3, #12]
 80036f6:	837b      	strh	r3, [r7, #26]
 80036f8:	8b7b      	ldrh	r3, [r7, #26]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d015      	beq.n	800372a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    {
        if (prevChar == kerndata->unicodePrevChar)
 80036fe:	69fb      	ldr	r3, [r7, #28]
 8003700:	881b      	ldrh	r3, [r3, #0]
 8003702:	897a      	ldrh	r2, [r7, #10]
 8003704:	429a      	cmp	r2, r3
 8003706:	d103      	bne.n	8003710 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
        {
            return kerndata->distance;
 8003708:	69fb      	ldr	r3, [r7, #28]
 800370a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800370e:	e00d      	b.n	800372c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8003710:	69fb      	ldr	r3, [r7, #28]
 8003712:	881b      	ldrh	r3, [r3, #0]
 8003714:	897a      	ldrh	r2, [r7, #10]
 8003716:	429a      	cmp	r2, r3
 8003718:	d306      	bcc.n	8003728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x7e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800371a:	8b7b      	ldrh	r3, [r7, #26]
 800371c:	3b01      	subs	r3, #1
 800371e:	837b      	strh	r3, [r7, #26]
 8003720:	69fb      	ldr	r3, [r7, #28]
 8003722:	3304      	adds	r3, #4
 8003724:	61fb      	str	r3, [r7, #28]
 8003726:	e7e7      	b.n	80036f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x4e>
        {
            break;
 8003728:	bf00      	nop
        }
    }
    return 0;
 800372a:	2300      	movs	r3, #0
}
 800372c:	4618      	mov	r0, r3
 800372e:	3724      	adds	r7, #36	; 0x24
 8003730:	46bd      	mov	sp, r7
 8003732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003736:	4770      	bx	lr

08003738 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003738:	b580      	push	{r7, lr}
 800373a:	af00      	add	r7, sp, #0
 800373c:	4801      	ldr	r0, [pc, #4]	; (8003744 <__tcf_0+0xc>)
 800373e:	f7ff fba1 	bl	8002e84 <_ZN8touchgfx13GeneratedFontD1Ev>
 8003742:	bd80      	pop	{r7, pc}
 8003744:	2000074c 	.word	0x2000074c

08003748 <_Z23getFont_verdana_10_4bppv>:
{
 8003748:	b580      	push	{r7, lr}
 800374a:	b08a      	sub	sp, #40	; 0x28
 800374c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800374e:	4b1e      	ldr	r3, [pc, #120]	; (80037c8 <_Z23getFont_verdana_10_4bppv+0x80>)
 8003750:	781b      	ldrb	r3, [r3, #0]
 8003752:	f3bf 8f5b 	dmb	ish
 8003756:	b2db      	uxtb	r3, r3
 8003758:	f003 0301 	and.w	r3, r3, #1
 800375c:	2b00      	cmp	r3, #0
 800375e:	bf0c      	ite	eq
 8003760:	2301      	moveq	r3, #1
 8003762:	2300      	movne	r3, #0
 8003764:	b2db      	uxtb	r3, r3
 8003766:	2b00      	cmp	r3, #0
 8003768:	d02a      	beq.n	80037c0 <_Z23getFont_verdana_10_4bppv+0x78>
 800376a:	4817      	ldr	r0, [pc, #92]	; (80037c8 <_Z23getFont_verdana_10_4bppv+0x80>)
 800376c:	f017 fef2 	bl	801b554 <__cxa_guard_acquire>
 8003770:	4603      	mov	r3, r0
 8003772:	2b00      	cmp	r3, #0
 8003774:	bf14      	ite	ne
 8003776:	2301      	movne	r3, #1
 8003778:	2300      	moveq	r3, #0
 800377a:	b2db      	uxtb	r3, r3
 800377c:	2b00      	cmp	r3, #0
 800377e:	d01f      	beq.n	80037c0 <_Z23getFont_verdana_10_4bppv+0x78>
 8003780:	2300      	movs	r3, #0
 8003782:	9309      	str	r3, [sp, #36]	; 0x24
 8003784:	2300      	movs	r3, #0
 8003786:	9308      	str	r3, [sp, #32]
 8003788:	233f      	movs	r3, #63	; 0x3f
 800378a:	9307      	str	r3, [sp, #28]
 800378c:	4b0f      	ldr	r3, [pc, #60]	; (80037cc <_Z23getFont_verdana_10_4bppv+0x84>)
 800378e:	9306      	str	r3, [sp, #24]
 8003790:	4b0f      	ldr	r3, [pc, #60]	; (80037d0 <_Z23getFont_verdana_10_4bppv+0x88>)
 8003792:	9305      	str	r3, [sp, #20]
 8003794:	2300      	movs	r3, #0
 8003796:	9304      	str	r3, [sp, #16]
 8003798:	2300      	movs	r3, #0
 800379a:	9303      	str	r3, [sp, #12]
 800379c:	2301      	movs	r3, #1
 800379e:	9302      	str	r3, [sp, #8]
 80037a0:	2304      	movs	r3, #4
 80037a2:	9301      	str	r3, [sp, #4]
 80037a4:	2300      	movs	r3, #0
 80037a6:	9300      	str	r3, [sp, #0]
 80037a8:	230a      	movs	r3, #10
 80037aa:	2201      	movs	r2, #1
 80037ac:	4909      	ldr	r1, [pc, #36]	; (80037d4 <_Z23getFont_verdana_10_4bppv+0x8c>)
 80037ae:	480a      	ldr	r0, [pc, #40]	; (80037d8 <_Z23getFont_verdana_10_4bppv+0x90>)
 80037b0:	f7ff ff2c 	bl	800360c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80037b4:	4804      	ldr	r0, [pc, #16]	; (80037c8 <_Z23getFont_verdana_10_4bppv+0x80>)
 80037b6:	f017 fed9 	bl	801b56c <__cxa_guard_release>
 80037ba:	4808      	ldr	r0, [pc, #32]	; (80037dc <_Z23getFont_verdana_10_4bppv+0x94>)
 80037bc:	f017 ff12 	bl	801b5e4 <atexit>
    return verdana_10_4bpp;
 80037c0:	4b05      	ldr	r3, [pc, #20]	; (80037d8 <_Z23getFont_verdana_10_4bppv+0x90>)
}
 80037c2:	4618      	mov	r0, r3
 80037c4:	46bd      	mov	sp, r7
 80037c6:	bd80      	pop	{r7, pc}
 80037c8:	20000770 	.word	0x20000770
 80037cc:	0802025c 	.word	0x0802025c
 80037d0:	0801d370 	.word	0x0801d370
 80037d4:	080201bc 	.word	0x080201bc
 80037d8:	2000074c 	.word	0x2000074c
 80037dc:	08003739 	.word	0x08003739

080037e0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80037e0:	b580      	push	{r7, lr}
 80037e2:	af00      	add	r7, sp, #0
 80037e4:	4801      	ldr	r0, [pc, #4]	; (80037ec <__tcf_0+0xc>)
 80037e6:	f7ff fb4d 	bl	8002e84 <_ZN8touchgfx13GeneratedFontD1Ev>
 80037ea:	bd80      	pop	{r7, pc}
 80037ec:	20000774 	.word	0x20000774

080037f0 <_Z23getFont_verdana_20_4bppv>:
{
 80037f0:	b580      	push	{r7, lr}
 80037f2:	b08a      	sub	sp, #40	; 0x28
 80037f4:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80037f6:	4b1e      	ldr	r3, [pc, #120]	; (8003870 <_Z23getFont_verdana_20_4bppv+0x80>)
 80037f8:	781b      	ldrb	r3, [r3, #0]
 80037fa:	f3bf 8f5b 	dmb	ish
 80037fe:	b2db      	uxtb	r3, r3
 8003800:	f003 0301 	and.w	r3, r3, #1
 8003804:	2b00      	cmp	r3, #0
 8003806:	bf0c      	ite	eq
 8003808:	2301      	moveq	r3, #1
 800380a:	2300      	movne	r3, #0
 800380c:	b2db      	uxtb	r3, r3
 800380e:	2b00      	cmp	r3, #0
 8003810:	d02a      	beq.n	8003868 <_Z23getFont_verdana_20_4bppv+0x78>
 8003812:	4817      	ldr	r0, [pc, #92]	; (8003870 <_Z23getFont_verdana_20_4bppv+0x80>)
 8003814:	f017 fe9e 	bl	801b554 <__cxa_guard_acquire>
 8003818:	4603      	mov	r3, r0
 800381a:	2b00      	cmp	r3, #0
 800381c:	bf14      	ite	ne
 800381e:	2301      	movne	r3, #1
 8003820:	2300      	moveq	r3, #0
 8003822:	b2db      	uxtb	r3, r3
 8003824:	2b00      	cmp	r3, #0
 8003826:	d01f      	beq.n	8003868 <_Z23getFont_verdana_20_4bppv+0x78>
 8003828:	2300      	movs	r3, #0
 800382a:	9309      	str	r3, [sp, #36]	; 0x24
 800382c:	2300      	movs	r3, #0
 800382e:	9308      	str	r3, [sp, #32]
 8003830:	233f      	movs	r3, #63	; 0x3f
 8003832:	9307      	str	r3, [sp, #28]
 8003834:	4b0f      	ldr	r3, [pc, #60]	; (8003874 <_Z23getFont_verdana_20_4bppv+0x84>)
 8003836:	9306      	str	r3, [sp, #24]
 8003838:	4b0f      	ldr	r3, [pc, #60]	; (8003878 <_Z23getFont_verdana_20_4bppv+0x88>)
 800383a:	9305      	str	r3, [sp, #20]
 800383c:	2301      	movs	r3, #1
 800383e:	9304      	str	r3, [sp, #16]
 8003840:	2300      	movs	r3, #0
 8003842:	9303      	str	r3, [sp, #12]
 8003844:	2301      	movs	r3, #1
 8003846:	9302      	str	r3, [sp, #8]
 8003848:	2304      	movs	r3, #4
 800384a:	9301      	str	r3, [sp, #4]
 800384c:	2300      	movs	r3, #0
 800384e:	9300      	str	r3, [sp, #0]
 8003850:	2314      	movs	r3, #20
 8003852:	2209      	movs	r2, #9
 8003854:	4909      	ldr	r1, [pc, #36]	; (800387c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8003856:	480a      	ldr	r0, [pc, #40]	; (8003880 <_Z23getFont_verdana_20_4bppv+0x90>)
 8003858:	f7ff fed8 	bl	800360c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800385c:	4804      	ldr	r0, [pc, #16]	; (8003870 <_Z23getFont_verdana_20_4bppv+0x80>)
 800385e:	f017 fe85 	bl	801b56c <__cxa_guard_release>
 8003862:	4808      	ldr	r0, [pc, #32]	; (8003884 <_Z23getFont_verdana_20_4bppv+0x94>)
 8003864:	f017 febe 	bl	801b5e4 <atexit>
    return verdana_20_4bpp;
 8003868:	4b05      	ldr	r3, [pc, #20]	; (8003880 <_Z23getFont_verdana_20_4bppv+0x90>)
}
 800386a:	4618      	mov	r0, r3
 800386c:	46bd      	mov	sp, r7
 800386e:	bd80      	pop	{r7, pc}
 8003870:	20000798 	.word	0x20000798
 8003874:	08020260 	.word	0x08020260
 8003878:	0801d374 	.word	0x0801d374
 800387c:	080201cc 	.word	0x080201cc
 8003880:	20000774 	.word	0x20000774
 8003884:	080037e1 	.word	0x080037e1

08003888 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8003888:	b580      	push	{r7, lr}
 800388a:	af00      	add	r7, sp, #0
 800388c:	4801      	ldr	r0, [pc, #4]	; (8003894 <__tcf_0+0xc>)
 800388e:	f7ff faf9 	bl	8002e84 <_ZN8touchgfx13GeneratedFontD1Ev>
 8003892:	bd80      	pop	{r7, pc}
 8003894:	2000079c 	.word	0x2000079c

08003898 <_Z23getFont_verdana_40_4bppv>:
{
 8003898:	b580      	push	{r7, lr}
 800389a:	b08a      	sub	sp, #40	; 0x28
 800389c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800389e:	4b1e      	ldr	r3, [pc, #120]	; (8003918 <_Z23getFont_verdana_40_4bppv+0x80>)
 80038a0:	781b      	ldrb	r3, [r3, #0]
 80038a2:	f3bf 8f5b 	dmb	ish
 80038a6:	b2db      	uxtb	r3, r3
 80038a8:	f003 0301 	and.w	r3, r3, #1
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	bf0c      	ite	eq
 80038b0:	2301      	moveq	r3, #1
 80038b2:	2300      	movne	r3, #0
 80038b4:	b2db      	uxtb	r3, r3
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	d02a      	beq.n	8003910 <_Z23getFont_verdana_40_4bppv+0x78>
 80038ba:	4817      	ldr	r0, [pc, #92]	; (8003918 <_Z23getFont_verdana_40_4bppv+0x80>)
 80038bc:	f017 fe4a 	bl	801b554 <__cxa_guard_acquire>
 80038c0:	4603      	mov	r3, r0
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	bf14      	ite	ne
 80038c6:	2301      	movne	r3, #1
 80038c8:	2300      	moveq	r3, #0
 80038ca:	b2db      	uxtb	r3, r3
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d01f      	beq.n	8003910 <_Z23getFont_verdana_40_4bppv+0x78>
 80038d0:	2300      	movs	r3, #0
 80038d2:	9309      	str	r3, [sp, #36]	; 0x24
 80038d4:	2300      	movs	r3, #0
 80038d6:	9308      	str	r3, [sp, #32]
 80038d8:	233f      	movs	r3, #63	; 0x3f
 80038da:	9307      	str	r3, [sp, #28]
 80038dc:	4b0f      	ldr	r3, [pc, #60]	; (800391c <_Z23getFont_verdana_40_4bppv+0x84>)
 80038de:	9306      	str	r3, [sp, #24]
 80038e0:	4b0f      	ldr	r3, [pc, #60]	; (8003920 <_Z23getFont_verdana_40_4bppv+0x88>)
 80038e2:	9305      	str	r3, [sp, #20]
 80038e4:	2300      	movs	r3, #0
 80038e6:	9304      	str	r3, [sp, #16]
 80038e8:	2300      	movs	r3, #0
 80038ea:	9303      	str	r3, [sp, #12]
 80038ec:	2301      	movs	r3, #1
 80038ee:	9302      	str	r3, [sp, #8]
 80038f0:	2304      	movs	r3, #4
 80038f2:	9301      	str	r3, [sp, #4]
 80038f4:	2300      	movs	r3, #0
 80038f6:	9300      	str	r3, [sp, #0]
 80038f8:	2328      	movs	r3, #40	; 0x28
 80038fa:	2201      	movs	r2, #1
 80038fc:	4909      	ldr	r1, [pc, #36]	; (8003924 <_Z23getFont_verdana_40_4bppv+0x8c>)
 80038fe:	480a      	ldr	r0, [pc, #40]	; (8003928 <_Z23getFont_verdana_40_4bppv+0x90>)
 8003900:	f7ff fe84 	bl	800360c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003904:	4804      	ldr	r0, [pc, #16]	; (8003918 <_Z23getFont_verdana_40_4bppv+0x80>)
 8003906:	f017 fe31 	bl	801b56c <__cxa_guard_release>
 800390a:	4808      	ldr	r0, [pc, #32]	; (800392c <_Z23getFont_verdana_40_4bppv+0x94>)
 800390c:	f017 fe6a 	bl	801b5e4 <atexit>
    return verdana_40_4bpp;
 8003910:	4b05      	ldr	r3, [pc, #20]	; (8003928 <_Z23getFont_verdana_40_4bppv+0x90>)
}
 8003912:	4618      	mov	r0, r3
 8003914:	46bd      	mov	sp, r7
 8003916:	bd80      	pop	{r7, pc}
 8003918:	200007c0 	.word	0x200007c0
 800391c:	08020264 	.word	0x08020264
 8003920:	0801d378 	.word	0x0801d378
 8003924:	0802024c 	.word	0x0802024c
 8003928:	2000079c 	.word	0x2000079c
 800392c:	08003889 	.word	0x08003889

08003930 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 8003930:	b480      	push	{r7}
 8003932:	b085      	sub	sp, #20
 8003934:	af00      	add	r7, sp, #0
 8003936:	60f8      	str	r0, [r7, #12]
 8003938:	460b      	mov	r3, r1
 800393a:	607a      	str	r2, [r7, #4]
 800393c:	817b      	strh	r3, [r7, #10]
    {
        return 0;
 800393e:	2300      	movs	r3, #0
    }
 8003940:	4618      	mov	r0, r3
 8003942:	3714      	adds	r7, #20
 8003944:	46bd      	mov	sp, r7
 8003946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800394a:	4770      	bx	lr

0800394c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800394c:	b480      	push	{r7}
 800394e:	b083      	sub	sp, #12
 8003950:	af00      	add	r7, sp, #0
 8003952:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8003954:	2300      	movs	r3, #0
    }
 8003956:	4618      	mov	r0, r3
 8003958:	370c      	adds	r7, #12
 800395a:	46bd      	mov	sp, r7
 800395c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003960:	4770      	bx	lr
	...

08003964 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8003964:	b480      	push	{r7}
 8003966:	b085      	sub	sp, #20
 8003968:	af00      	add	r7, sp, #0
 800396a:	60f8      	str	r0, [r7, #12]
 800396c:	60b9      	str	r1, [r7, #8]
 800396e:	4613      	mov	r3, r2
 8003970:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8003972:	4a07      	ldr	r2, [pc, #28]	; (8003990 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8003974:	68fb      	ldr	r3, [r7, #12]
 8003976:	6013      	str	r3, [r2, #0]
        fonts = f;
 8003978:	4a06      	ldr	r2, [pc, #24]	; (8003994 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800397a:	68bb      	ldr	r3, [r7, #8]
 800397c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800397e:	4a06      	ldr	r2, [pc, #24]	; (8003998 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8003980:	88fb      	ldrh	r3, [r7, #6]
 8003982:	8013      	strh	r3, [r2, #0]
    }
 8003984:	bf00      	nop
 8003986:	3714      	adds	r7, #20
 8003988:	46bd      	mov	sp, r7
 800398a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800398e:	4770      	bx	lr
 8003990:	200089e0 	.word	0x200089e0
 8003994:	200089e8 	.word	0x200089e8
 8003998:	200089e4 	.word	0x200089e4

0800399c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800399c:	b40e      	push	{r1, r2, r3}
 800399e:	b580      	push	{r7, lr}
 80039a0:	b085      	sub	sp, #20
 80039a2:	af00      	add	r7, sp, #0
 80039a4:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 80039a6:	f107 0320 	add.w	r3, r7, #32
 80039aa:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80039ac:	68bb      	ldr	r3, [r7, #8]
 80039ae:	69fa      	ldr	r2, [r7, #28]
 80039b0:	2100      	movs	r1, #0
 80039b2:	6878      	ldr	r0, [r7, #4]
 80039b4:	f00a f9b4 	bl	800dd20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 80039b8:	4603      	mov	r3, r0
 80039ba:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 80039bc:	89fb      	ldrh	r3, [r7, #14]
}
 80039be:	4618      	mov	r0, r3
 80039c0:	3714      	adds	r7, #20
 80039c2:	46bd      	mov	sp, r7
 80039c4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80039c8:	b003      	add	sp, #12
 80039ca:	4770      	bx	lr

080039cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80039cc:	b40c      	push	{r2, r3}
 80039ce:	b580      	push	{r7, lr}
 80039d0:	b084      	sub	sp, #16
 80039d2:	af00      	add	r7, sp, #0
 80039d4:	6078      	str	r0, [r7, #4]
 80039d6:	460b      	mov	r3, r1
 80039d8:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 80039da:	f107 031c 	add.w	r3, r7, #28
 80039de:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80039e0:	78f9      	ldrb	r1, [r7, #3]
 80039e2:	68bb      	ldr	r3, [r7, #8]
 80039e4:	69ba      	ldr	r2, [r7, #24]
 80039e6:	6878      	ldr	r0, [r7, #4]
 80039e8:	f00a f99a 	bl	800dd20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 80039ec:	4603      	mov	r3, r0
 80039ee:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 80039f0:	89fb      	ldrh	r3, [r7, #14]
}
 80039f2:	4618      	mov	r0, r3
 80039f4:	3710      	adds	r7, #16
 80039f6:	46bd      	mov	sp, r7
 80039f8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80039fc:	b002      	add	sp, #8
 80039fe:	4770      	bx	lr

08003a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 8003a00:	b580      	push	{r7, lr}
 8003a02:	b08a      	sub	sp, #40	; 0x28
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	6078      	str	r0, [r7, #4]
 8003a08:	460b      	mov	r3, r1
 8003a0a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003a10:	2b00      	cmp	r3, #0
 8003a12:	d016      	beq.n	8003a42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	331a      	adds	r3, #26
 8003a18:	627b      	str	r3, [r7, #36]	; 0x24
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003a1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a1c:	8adb      	ldrh	r3, [r3, #22]
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d105      	bne.n	8003a2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 8003a22:	4b42      	ldr	r3, [pc, #264]	; (8003b2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12c>)
 8003a24:	4a42      	ldr	r2, [pc, #264]	; (8003b30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8003a26:	21c0      	movs	r1, #192	; 0xc0
 8003a28:	4842      	ldr	r0, [pc, #264]	; (8003b34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8003a2a:	f017 fdbd 	bl	801b5a8 <__assert_func>
            return buffer[pos];
 8003a2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a30:	8a9b      	ldrh	r3, [r3, #20]
 8003a32:	461a      	mov	r2, r3
 8003a34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a36:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d001      	beq.n	8003a42 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 8003a3e:	2301      	movs	r3, #1
 8003a40:	e000      	b.n	8003a44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 8003a42:	2300      	movs	r3, #0
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d068      	beq.n	8003b1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11a>
    {
        substituteGlyphs();
 8003a48:	6878      	ldr	r0, [r7, #4]
 8003a4a:	f00b fc7f 	bl	800f34c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	331a      	adds	r3, #26
 8003a52:	623b      	str	r3, [r7, #32]
 8003a54:	2301      	movs	r3, #1
 8003a56:	83fb      	strh	r3, [r7, #30]
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003a58:	6a3b      	ldr	r3, [r7, #32]
 8003a5a:	8adb      	ldrh	r3, [r3, #22]
 8003a5c:	8bfa      	ldrh	r2, [r7, #30]
 8003a5e:	429a      	cmp	r2, r3
 8003a60:	d305      	bcc.n	8003a6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 8003a62:	4b35      	ldr	r3, [pc, #212]	; (8003b38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8003a64:	4a35      	ldr	r2, [pc, #212]	; (8003b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 8003a66:	21c5      	movs	r1, #197	; 0xc5
 8003a68:	4832      	ldr	r0, [pc, #200]	; (8003b34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8003a6a:	f017 fd9d 	bl	801b5a8 <__assert_func>
            const uint16_t index = pos + offset;
 8003a6e:	6a3b      	ldr	r3, [r7, #32]
 8003a70:	8a9a      	ldrh	r2, [r3, #20]
 8003a72:	8bfb      	ldrh	r3, [r7, #30]
 8003a74:	4413      	add	r3, r2
 8003a76:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 8003a78:	8bbb      	ldrh	r3, [r7, #28]
 8003a7a:	2b09      	cmp	r3, #9
 8003a7c:	d801      	bhi.n	8003a82 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 8003a7e:	8bbb      	ldrh	r3, [r7, #28]
 8003a80:	e001      	b.n	8003a86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 8003a82:	8bbb      	ldrh	r3, [r7, #28]
 8003a84:	3b0a      	subs	r3, #10
 8003a86:	6a3a      	ldr	r2, [r7, #32]
 8003a88:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003a8c:	f640 123f 	movw	r2, #2367	; 0x93f
 8003a90:	4293      	cmp	r3, r2
 8003a92:	bf0c      	ite	eq
 8003a94:	2301      	moveq	r3, #1
 8003a96:	2300      	movne	r3, #0
 8003a98:	b2db      	uxtb	r3, r3
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d03d      	beq.n	8003b1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11a>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	331a      	adds	r3, #26
 8003aa2:	687a      	ldr	r2, [r7, #4]
 8003aa4:	321a      	adds	r2, #26
 8003aa6:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 8003aa8:	68ba      	ldr	r2, [r7, #8]
 8003aaa:	8ad2      	ldrh	r2, [r2, #22]
 8003aac:	2a00      	cmp	r2, #0
 8003aae:	d105      	bne.n	8003abc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 8003ab0:	4b1e      	ldr	r3, [pc, #120]	; (8003b2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12c>)
 8003ab2:	4a1f      	ldr	r2, [pc, #124]	; (8003b30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8003ab4:	21c0      	movs	r1, #192	; 0xc0
 8003ab6:	481f      	ldr	r0, [pc, #124]	; (8003b34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8003ab8:	f017 fd76 	bl	801b5a8 <__assert_func>
            return buffer[pos];
 8003abc:	68ba      	ldr	r2, [r7, #8]
 8003abe:	8a92      	ldrh	r2, [r2, #20]
 8003ac0:	4611      	mov	r1, r2
 8003ac2:	68ba      	ldr	r2, [r7, #8]
 8003ac4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 8003ac8:	613b      	str	r3, [r7, #16]
 8003aca:	4613      	mov	r3, r2
 8003acc:	81fb      	strh	r3, [r7, #14]
        {
            buffer[pos] = newChar;
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 8003ace:	693b      	ldr	r3, [r7, #16]
 8003ad0:	8adb      	ldrh	r3, [r3, #22]
 8003ad2:	2b01      	cmp	r3, #1
 8003ad4:	d806      	bhi.n	8003ae4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 8003ad6:	4b1a      	ldr	r3, [pc, #104]	; (8003b40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 8003ad8:	4a1a      	ldr	r2, [pc, #104]	; (8003b44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 8003ada:	f240 110d 	movw	r1, #269	; 0x10d
 8003ade:	4815      	ldr	r0, [pc, #84]	; (8003b34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8003ae0:	f017 fd62 	bl	801b5a8 <__assert_func>
            const uint16_t index = pos + 1;
 8003ae4:	693b      	ldr	r3, [r7, #16]
 8003ae6:	8a9b      	ldrh	r3, [r3, #20]
 8003ae8:	3301      	adds	r3, #1
 8003aea:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 8003aec:	89bb      	ldrh	r3, [r7, #12]
 8003aee:	2b09      	cmp	r3, #9
 8003af0:	d801      	bhi.n	8003af6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 8003af2:	89bb      	ldrh	r3, [r7, #12]
 8003af4:	e000      	b.n	8003af8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 8003af6:	2300      	movs	r3, #0
 8003af8:	693a      	ldr	r2, [r7, #16]
 8003afa:	89f9      	ldrh	r1, [r7, #14]
 8003afc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
            nextCharacters.replaceAt0(0x093F);
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	331a      	adds	r3, #26
 8003b04:	61bb      	str	r3, [r7, #24]
 8003b06:	f640 133f 	movw	r3, #2367	; 0x93f
 8003b0a:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 8003b0c:	69bb      	ldr	r3, [r7, #24]
 8003b0e:	8a9b      	ldrh	r3, [r3, #20]
 8003b10:	4619      	mov	r1, r3
 8003b12:	69bb      	ldr	r3, [r7, #24]
 8003b14:	8afa      	ldrh	r2, [r7, #22]
 8003b16:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
    }
    return getNextChar();
 8003b1a:	6878      	ldr	r0, [r7, #4]
 8003b1c:	f00b fafa 	bl	800f114 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003b20:	4603      	mov	r3, r0
}
 8003b22:	4618      	mov	r0, r3
 8003b24:	3728      	adds	r7, #40	; 0x28
 8003b26:	46bd      	mov	sp, r7
 8003b28:	bd80      	pop	{r7, pc}
 8003b2a:	bf00      	nop
 8003b2c:	0801c9fc 	.word	0x0801c9fc
 8003b30:	0801d4a0 	.word	0x0801d4a0
 8003b34:	0801ca08 	.word	0x0801ca08
 8003b38:	0801ca54 	.word	0x0801ca54
 8003b3c:	0801d3cc 	.word	0x0801d3cc
 8003b40:	0801ca64 	.word	0x0801ca64
 8003b44:	0801d54c 	.word	0x0801d54c

08003b48 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8003b48:	b580      	push	{r7, lr}
 8003b4a:	b082      	sub	sp, #8
 8003b4c:	af00      	add	r7, sp, #0
 8003b4e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 8003b50:	6878      	ldr	r0, [r7, #4]
 8003b52:	f00b fa99 	bl	800f088 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 8003b56:	bf00      	nop
 8003b58:	3708      	adds	r7, #8
 8003b5a:	46bd      	mov	sp, r7
 8003b5c:	bd80      	pop	{r7, pc}

08003b5e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003b5e:	b580      	push	{r7, lr}
 8003b60:	b088      	sub	sp, #32
 8003b62:	af02      	add	r7, sp, #8
 8003b64:	60f8      	str	r0, [r7, #12]
 8003b66:	1d38      	adds	r0, r7, #4
 8003b68:	e880 0006 	stmia.w	r0, {r1, r2}
 8003b6c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 8003b6e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8003b72:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003b74:	1d39      	adds	r1, r7, #4
 8003b76:	697b      	ldr	r3, [r7, #20]
 8003b78:	9301      	str	r3, [sp, #4]
 8003b7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b7c:	9300      	str	r3, [sp, #0]
 8003b7e:	6a3b      	ldr	r3, [r7, #32]
 8003b80:	683a      	ldr	r2, [r7, #0]
 8003b82:	68f8      	ldr	r0, [r7, #12]
 8003b84:	f008 fe14 	bl	800c7b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003b88:	bf00      	nop
 8003b8a:	3718      	adds	r7, #24
 8003b8c:	46bd      	mov	sp, r7
 8003b8e:	bd80      	pop	{r7, pc}

08003b90 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003b90:	b590      	push	{r4, r7, lr}
 8003b92:	b085      	sub	sp, #20
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	4603      	mov	r3, r0
 8003b98:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8003b9e:	88fb      	ldrh	r3, [r7, #6]
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d127      	bne.n	8003bf4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8003ba4:	88fb      	ldrh	r3, [r7, #6]
 8003ba6:	4a1e      	ldr	r2, [pc, #120]	; (8003c20 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8003ba8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d016      	beq.n	8003bde <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8003bb0:	88fb      	ldrh	r3, [r7, #6]
 8003bb2:	4a1b      	ldr	r2, [pc, #108]	; (8003c20 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8003bb4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003bb8:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003bba:	68bb      	ldr	r3, [r7, #8]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	68ba      	ldr	r2, [r7, #8]
 8003bc0:	4413      	add	r3, r2
 8003bc2:	4a18      	ldr	r2, [pc, #96]	; (8003c24 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8003bc4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003bc6:	68bb      	ldr	r3, [r7, #8]
 8003bc8:	685b      	ldr	r3, [r3, #4]
 8003bca:	68ba      	ldr	r2, [r7, #8]
 8003bcc:	4413      	add	r3, r2
 8003bce:	4a16      	ldr	r2, [pc, #88]	; (8003c28 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8003bd0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003bd2:	68bb      	ldr	r3, [r7, #8]
 8003bd4:	689b      	ldr	r3, [r3, #8]
 8003bd6:	68ba      	ldr	r2, [r7, #8]
 8003bd8:	4413      	add	r3, r2
 8003bda:	60fb      	str	r3, [r7, #12]
 8003bdc:	e00a      	b.n	8003bf4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8003bde:	4b11      	ldr	r3, [pc, #68]	; (8003c24 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8003be0:	4a12      	ldr	r2, [pc, #72]	; (8003c2c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8003be2:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003be4:	4a12      	ldr	r2, [pc, #72]	; (8003c30 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8003be6:	4b10      	ldr	r3, [pc, #64]	; (8003c28 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8003be8:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003bea:	88fb      	ldrh	r3, [r7, #6]
 8003bec:	4a11      	ldr	r2, [pc, #68]	; (8003c34 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8003bee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003bf2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d00d      	beq.n	8003c16 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8003bfa:	4a0f      	ldr	r2, [pc, #60]	; (8003c38 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8003bfc:	88fb      	ldrh	r3, [r7, #6]
 8003bfe:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003c00:	f000 f83e 	bl	8003c80 <_ZN17TypedTextDatabase8getFontsEv>
 8003c04:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003c06:	f000 f833 	bl	8003c70 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8003c0a:	4603      	mov	r3, r0
 8003c0c:	461a      	mov	r2, r3
 8003c0e:	4621      	mov	r1, r4
 8003c10:	68f8      	ldr	r0, [r7, #12]
 8003c12:	f7ff fea7 	bl	8003964 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8003c16:	bf00      	nop
 8003c18:	3714      	adds	r7, #20
 8003c1a:	46bd      	mov	sp, r7
 8003c1c:	bd90      	pop	{r4, r7, pc}
 8003c1e:	bf00      	nop
 8003c20:	200007c4 	.word	0x200007c4
 8003c24:	200007cc 	.word	0x200007cc
 8003c28:	200007d0 	.word	0x200007d0
 8003c2c:	0802026c 	.word	0x0802026c
 8003c30:	08020268 	.word	0x08020268
 8003c34:	08020288 	.word	0x08020288
 8003c38:	200007c8 	.word	0x200007c8

08003c3c <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8003c3c:	b480      	push	{r7}
 8003c3e:	b083      	sub	sp, #12
 8003c40:	af00      	add	r7, sp, #0
 8003c42:	6078      	str	r0, [r7, #4]
 8003c44:	460b      	mov	r3, r1
 8003c46:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003c48:	4b07      	ldr	r3, [pc, #28]	; (8003c68 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	4b07      	ldr	r3, [pc, #28]	; (8003c6c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8003c4e:	6819      	ldr	r1, [r3, #0]
 8003c50:	887b      	ldrh	r3, [r7, #2]
 8003c52:	009b      	lsls	r3, r3, #2
 8003c54:	440b      	add	r3, r1
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	005b      	lsls	r3, r3, #1
 8003c5a:	4413      	add	r3, r2
}
 8003c5c:	4618      	mov	r0, r3
 8003c5e:	370c      	adds	r7, #12
 8003c60:	46bd      	mov	sp, r7
 8003c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c66:	4770      	bx	lr
 8003c68:	200007cc 	.word	0x200007cc
 8003c6c:	200007d0 	.word	0x200007d0

08003c70 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8003c70:	b480      	push	{r7}
 8003c72:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8003c74:	2301      	movs	r3, #1
}
 8003c76:	4618      	mov	r0, r3
 8003c78:	46bd      	mov	sp, r7
 8003c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c7e:	4770      	bx	lr

08003c80 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8003c80:	b480      	push	{r7}
 8003c82:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 8003c84:	4b02      	ldr	r3, [pc, #8]	; (8003c90 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8003c86:	4618      	mov	r0, r3
 8003c88:	46bd      	mov	sp, r7
 8003c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c8e:	4770      	bx	lr
 8003c90:	200007d4 	.word	0x200007d4

08003c94 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8003c94:	b580      	push	{r7, lr}
 8003c96:	b082      	sub	sp, #8
 8003c98:	af00      	add	r7, sp, #0
 8003c9a:	6078      	str	r0, [r7, #4]
 8003c9c:	6039      	str	r1, [r7, #0]
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	2b01      	cmp	r3, #1
 8003ca2:	d113      	bne.n	8003ccc <_Z41__static_initialization_and_destruction_0ii+0x38>
 8003ca4:	683b      	ldr	r3, [r7, #0]
 8003ca6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003caa:	4293      	cmp	r3, r2
 8003cac:	d10e      	bne.n	8003ccc <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8003cae:	f7ff fd9f 	bl	80037f0 <_Z23getFont_verdana_20_4bppv>
 8003cb2:	4602      	mov	r2, r0
};
 8003cb4:	4b07      	ldr	r3, [pc, #28]	; (8003cd4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8003cb6:	601a      	str	r2, [r3, #0]
    &(getFont_verdana_40_4bpp()),
 8003cb8:	f7ff fdee 	bl	8003898 <_Z23getFont_verdana_40_4bppv>
 8003cbc:	4602      	mov	r2, r0
};
 8003cbe:	4b05      	ldr	r3, [pc, #20]	; (8003cd4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8003cc0:	605a      	str	r2, [r3, #4]
    &(getFont_verdana_10_4bpp())
 8003cc2:	f7ff fd41 	bl	8003748 <_Z23getFont_verdana_10_4bppv>
 8003cc6:	4602      	mov	r2, r0
};
 8003cc8:	4b02      	ldr	r3, [pc, #8]	; (8003cd4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8003cca:	609a      	str	r2, [r3, #8]
}  // namespace TypedTextDatabase
 8003ccc:	bf00      	nop
 8003cce:	3708      	adds	r7, #8
 8003cd0:	46bd      	mov	sp, r7
 8003cd2:	bd80      	pop	{r7, pc}
 8003cd4:	200007d4 	.word	0x200007d4

08003cd8 <_GLOBAL__sub_I_touchgfx_fonts>:
 8003cd8:	b580      	push	{r7, lr}
 8003cda:	af00      	add	r7, sp, #0
 8003cdc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003ce0:	2001      	movs	r0, #1
 8003ce2:	f7ff ffd7 	bl	8003c94 <_Z41__static_initialization_and_destruction_0ii>
 8003ce6:	bd80      	pop	{r7, pc}

08003ce8 <_ZN8touchgfx9colortypeC1Em>:
    colortype(uint32_t col)
 8003ce8:	b480      	push	{r7}
 8003cea:	b083      	sub	sp, #12
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	6039      	str	r1, [r7, #0]
        color = col;
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	683a      	ldr	r2, [r7, #0]
 8003cf6:	601a      	str	r2, [r3, #0]
    }
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	4618      	mov	r0, r3
 8003cfc:	370c      	adds	r7, #12
 8003cfe:	46bd      	mov	sp, r7
 8003d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d04:	4770      	bx	lr

08003d06 <_ZN8touchgfx4RectC1Essss>:
     * @param  x      The x coordinate.
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8003d06:	b480      	push	{r7}
 8003d08:	b085      	sub	sp, #20
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	60f8      	str	r0, [r7, #12]
 8003d0e:	4608      	mov	r0, r1
 8003d10:	4611      	mov	r1, r2
 8003d12:	461a      	mov	r2, r3
 8003d14:	4603      	mov	r3, r0
 8003d16:	817b      	strh	r3, [r7, #10]
 8003d18:	460b      	mov	r3, r1
 8003d1a:	813b      	strh	r3, [r7, #8]
 8003d1c:	4613      	mov	r3, r2
 8003d1e:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	897a      	ldrh	r2, [r7, #10]
 8003d24:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8003d26:	68fb      	ldr	r3, [r7, #12]
 8003d28:	893a      	ldrh	r2, [r7, #8]
 8003d2a:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	88fa      	ldrh	r2, [r7, #6]
 8003d30:	809a      	strh	r2, [r3, #4]
        this->height = height;
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	8b3a      	ldrh	r2, [r7, #24]
 8003d36:	80da      	strh	r2, [r3, #6]
    }
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	4618      	mov	r0, r3
 8003d3c:	3714      	adds	r7, #20
 8003d3e:	46bd      	mov	sp, r7
 8003d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d44:	4770      	bx	lr

08003d46 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8003d46:	b480      	push	{r7}
 8003d48:	b083      	sub	sp, #12
 8003d4a:	af00      	add	r7, sp, #0
 8003d4c:	6078      	str	r0, [r7, #4]
 8003d4e:	460b      	mov	r3, r1
 8003d50:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	887a      	ldrh	r2, [r7, #2]
 8003d56:	801a      	strh	r2, [r3, #0]
    {
    }
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	4618      	mov	r0, r3
 8003d5c:	370c      	adds	r7, #12
 8003d5e:	46bd      	mov	sp, r7
 8003d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d64:	4770      	bx	lr
	...

08003d68 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8003d68:	b580      	push	{r7, lr}
 8003d6a:	b084      	sub	sp, #16
 8003d6c:	af02      	add	r7, sp, #8
 8003d6e:	6078      	str	r0, [r7, #4]
        : rect(0, 0, 0, 0),
          parent(0),
          nextSibling(0),
          nextDrawChainElement(0),
          touchable(false),
          visible(true)
 8003d70:	4a13      	ldr	r2, [pc, #76]	; (8003dc0 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	601a      	str	r2, [r3, #0]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	1d18      	adds	r0, r3, #4
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	9300      	str	r3, [sp, #0]
 8003d7e:	2300      	movs	r3, #0
 8003d80:	2200      	movs	r2, #0
 8003d82:	2100      	movs	r1, #0
 8003d84:	f7ff ffbf 	bl	8003d06 <_ZN8touchgfx4RectC1Essss>
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	330c      	adds	r3, #12
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	f7fd fde1 	bl	8001954 <_ZN8touchgfx4RectC1Ev>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	2200      	movs	r2, #0
 8003d96:	615a      	str	r2, [r3, #20]
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	2200      	movs	r2, #0
 8003d9c:	619a      	str	r2, [r3, #24]
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	2200      	movs	r2, #0
 8003da2:	61da      	str	r2, [r3, #28]
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	2200      	movs	r2, #0
 8003da8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	2201      	movs	r2, #1
 8003db0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	4618      	mov	r0, r3
 8003db8:	3708      	adds	r7, #8
 8003dba:	46bd      	mov	sp, r7
 8003dbc:	bd80      	pop	{r7, pc}
 8003dbe:	bf00      	nop
 8003dc0:	0801e86c 	.word	0x0801e86c

08003dc4 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8003dc4:	b480      	push	{r7}
 8003dc6:	b083      	sub	sp, #12
 8003dc8:	af00      	add	r7, sp, #0
 8003dca:	6078      	str	r0, [r7, #4]
    {
 8003dcc:	4a04      	ldr	r2, [pc, #16]	; (8003de0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	601a      	str	r2, [r3, #0]
    }
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	4618      	mov	r0, r3
 8003dd6:	370c      	adds	r7, #12
 8003dd8:	46bd      	mov	sp, r7
 8003dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dde:	4770      	bx	lr
 8003de0:	0801e86c 	.word	0x0801e86c

08003de4 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8003de4:	b580      	push	{r7, lr}
 8003de6:	b082      	sub	sp, #8
 8003de8:	af00      	add	r7, sp, #0
 8003dea:	6078      	str	r0, [r7, #4]
    }
 8003dec:	6878      	ldr	r0, [r7, #4]
 8003dee:	f7ff ffe9 	bl	8003dc4 <_ZN8touchgfx8DrawableD1Ev>
 8003df2:	2128      	movs	r1, #40	; 0x28
 8003df4:	6878      	ldr	r0, [r7, #4]
 8003df6:	f017 fbab 	bl	801b550 <_ZdlPvj>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	4618      	mov	r0, r3
 8003dfe:	3708      	adds	r7, #8
 8003e00:	46bd      	mov	sp, r7
 8003e02:	bd80      	pop	{r7, pc}

08003e04 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8003e04:	b480      	push	{r7}
 8003e06:	b083      	sub	sp, #12
 8003e08:	af00      	add	r7, sp, #0
 8003e0a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8003e0c:	2300      	movs	r3, #0
    }
 8003e0e:	4618      	mov	r0, r3
 8003e10:	370c      	adds	r7, #12
 8003e12:	46bd      	mov	sp, r7
 8003e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e18:	4770      	bx	lr

08003e1a <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003e1a:	b580      	push	{r7, lr}
 8003e1c:	b084      	sub	sp, #16
 8003e1e:	af00      	add	r7, sp, #0
 8003e20:	60f8      	str	r0, [r7, #12]
 8003e22:	4608      	mov	r0, r1
 8003e24:	4611      	mov	r1, r2
 8003e26:	461a      	mov	r2, r3
 8003e28:	4603      	mov	r3, r0
 8003e2a:	817b      	strh	r3, [r7, #10]
 8003e2c:	460b      	mov	r3, r1
 8003e2e:	813b      	strh	r3, [r7, #8]
 8003e30:	4613      	mov	r3, r2
 8003e32:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8003e34:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003e38:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003e3c:	4619      	mov	r1, r3
 8003e3e:	68f8      	ldr	r0, [r7, #12]
 8003e40:	f000 f82a 	bl	8003e98 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003e44:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8003e48:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003e4c:	4619      	mov	r1, r3
 8003e4e:	68f8      	ldr	r0, [r7, #12]
 8003e50:	f000 f87e 	bl	8003f50 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8003e54:	bf00      	nop
 8003e56:	3710      	adds	r7, #16
 8003e58:	46bd      	mov	sp, r7
 8003e5a:	bd80      	pop	{r7, pc}

08003e5c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8003e5c:	b480      	push	{r7}
 8003e5e:	b083      	sub	sp, #12
 8003e60:	af00      	add	r7, sp, #0
 8003e62:	6078      	str	r0, [r7, #4]
 8003e64:	460b      	mov	r3, r1
 8003e66:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	887a      	ldrh	r2, [r7, #2]
 8003e6c:	809a      	strh	r2, [r3, #4]
    }
 8003e6e:	bf00      	nop
 8003e70:	370c      	adds	r7, #12
 8003e72:	46bd      	mov	sp, r7
 8003e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e78:	4770      	bx	lr

08003e7a <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8003e7a:	b480      	push	{r7}
 8003e7c:	b083      	sub	sp, #12
 8003e7e:	af00      	add	r7, sp, #0
 8003e80:	6078      	str	r0, [r7, #4]
 8003e82:	460b      	mov	r3, r1
 8003e84:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	887a      	ldrh	r2, [r7, #2]
 8003e8a:	80da      	strh	r2, [r3, #6]
    }
 8003e8c:	bf00      	nop
 8003e8e:	370c      	adds	r7, #12
 8003e90:	46bd      	mov	sp, r7
 8003e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e96:	4770      	bx	lr

08003e98 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8003e98:	b580      	push	{r7, lr}
 8003e9a:	b082      	sub	sp, #8
 8003e9c:	af00      	add	r7, sp, #0
 8003e9e:	6078      	str	r0, [r7, #4]
 8003ea0:	460b      	mov	r3, r1
 8003ea2:	807b      	strh	r3, [r7, #2]
 8003ea4:	4613      	mov	r3, r2
 8003ea6:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	332c      	adds	r3, #44	; 0x2c
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8003eb4:	4611      	mov	r1, r2
 8003eb6:	6878      	ldr	r0, [r7, #4]
 8003eb8:	4798      	blx	r3
        setY(y);
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	3330      	adds	r3, #48	; 0x30
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	f9b7 2000 	ldrsh.w	r2, [r7]
 8003ec6:	4611      	mov	r1, r2
 8003ec8:	6878      	ldr	r0, [r7, #4]
 8003eca:	4798      	blx	r3
    }
 8003ecc:	bf00      	nop
 8003ece:	3708      	adds	r7, #8
 8003ed0:	46bd      	mov	sp, r7
 8003ed2:	bd80      	pop	{r7, pc}

08003ed4 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8003ed4:	b480      	push	{r7}
 8003ed6:	b083      	sub	sp, #12
 8003ed8:	af00      	add	r7, sp, #0
 8003eda:	6078      	str	r0, [r7, #4]
 8003edc:	460b      	mov	r3, r1
 8003ede:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	887a      	ldrh	r2, [r7, #2]
 8003ee4:	811a      	strh	r2, [r3, #8]
    }
 8003ee6:	bf00      	nop
 8003ee8:	370c      	adds	r7, #12
 8003eea:	46bd      	mov	sp, r7
 8003eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ef0:	4770      	bx	lr

08003ef2 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8003ef2:	b480      	push	{r7}
 8003ef4:	b083      	sub	sp, #12
 8003ef6:	af00      	add	r7, sp, #0
 8003ef8:	6078      	str	r0, [r7, #4]
 8003efa:	460b      	mov	r3, r1
 8003efc:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	887a      	ldrh	r2, [r7, #2]
 8003f02:	815a      	strh	r2, [r3, #10]
    }
 8003f04:	bf00      	nop
 8003f06:	370c      	adds	r7, #12
 8003f08:	46bd      	mov	sp, r7
 8003f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f0e:	4770      	bx	lr

08003f10 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8003f10:	b480      	push	{r7}
 8003f12:	b083      	sub	sp, #12
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	6078      	str	r0, [r7, #4]
    {
    }
 8003f18:	bf00      	nop
 8003f1a:	370c      	adds	r7, #12
 8003f1c:	46bd      	mov	sp, r7
 8003f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f22:	4770      	bx	lr

08003f24 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
 8003f24:	b480      	push	{r7}
 8003f26:	b083      	sub	sp, #12
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	6078      	str	r0, [r7, #4]
 8003f2c:	6039      	str	r1, [r7, #0]
    {
    }
 8003f2e:	bf00      	nop
 8003f30:	370c      	adds	r7, #12
 8003f32:	46bd      	mov	sp, r7
 8003f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f38:	4770      	bx	lr

08003f3a <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
 8003f3a:	b480      	push	{r7}
 8003f3c:	b083      	sub	sp, #12
 8003f3e:	af00      	add	r7, sp, #0
 8003f40:	6078      	str	r0, [r7, #4]
 8003f42:	6039      	str	r1, [r7, #0]
    {
    }
 8003f44:	bf00      	nop
 8003f46:	370c      	adds	r7, #12
 8003f48:	46bd      	mov	sp, r7
 8003f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f4e:	4770      	bx	lr

08003f50 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8003f50:	b580      	push	{r7, lr}
 8003f52:	b082      	sub	sp, #8
 8003f54:	af00      	add	r7, sp, #0
 8003f56:	6078      	str	r0, [r7, #4]
 8003f58:	460b      	mov	r3, r1
 8003f5a:	807b      	strh	r3, [r7, #2]
 8003f5c:	4613      	mov	r3, r2
 8003f5e:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	3334      	adds	r3, #52	; 0x34
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8003f6c:	4611      	mov	r1, r2
 8003f6e:	6878      	ldr	r0, [r7, #4]
 8003f70:	4798      	blx	r3
        setHeight(height);
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	3338      	adds	r3, #56	; 0x38
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	f9b7 2000 	ldrsh.w	r2, [r7]
 8003f7e:	4611      	mov	r1, r2
 8003f80:	6878      	ldr	r0, [r7, #4]
 8003f82:	4798      	blx	r3
    }
 8003f84:	bf00      	nop
 8003f86:	3708      	adds	r7, #8
 8003f88:	46bd      	mov	sp, r7
 8003f8a:	bd80      	pop	{r7, pc}

08003f8c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
 8003f8c:	b480      	push	{r7}
 8003f8e:	b083      	sub	sp, #12
 8003f90:	af00      	add	r7, sp, #0
 8003f92:	6078      	str	r0, [r7, #4]
 8003f94:	6039      	str	r1, [r7, #0]
    {
    }
 8003f96:	bf00      	nop
 8003f98:	370c      	adds	r7, #12
 8003f9a:	46bd      	mov	sp, r7
 8003f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fa0:	4770      	bx	lr

08003fa2 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8003fa2:	b480      	push	{r7}
 8003fa4:	b083      	sub	sp, #12
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	6078      	str	r0, [r7, #4]
    {
    }
 8003faa:	bf00      	nop
 8003fac:	370c      	adds	r7, #12
 8003fae:	46bd      	mov	sp, r7
 8003fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb4:	4770      	bx	lr

08003fb6 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8003fb6:	b480      	push	{r7}
 8003fb8:	b083      	sub	sp, #12
 8003fba:	af00      	add	r7, sp, #0
 8003fbc:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8003fc4:	4618      	mov	r0, r3
 8003fc6:	370c      	adds	r7, #12
 8003fc8:	46bd      	mov	sp, r7
 8003fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fce:	4770      	bx	lr

08003fd0 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8003fd0:	b480      	push	{r7}
 8003fd2:	b083      	sub	sp, #12
 8003fd4:	af00      	add	r7, sp, #0
 8003fd6:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8003fde:	4618      	mov	r0, r3
 8003fe0:	370c      	adds	r7, #12
 8003fe2:	46bd      	mov	sp, r7
 8003fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe8:	4770      	bx	lr

08003fea <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003fea:	b580      	push	{r7, lr}
 8003fec:	b082      	sub	sp, #8
 8003fee:	af00      	add	r7, sp, #0
 8003ff0:	6078      	str	r0, [r7, #4]
 8003ff2:	460b      	mov	r3, r1
 8003ff4:	807b      	strh	r3, [r7, #2]
 8003ff6:	4613      	mov	r3, r2
 8003ff8:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	3350      	adds	r3, #80	; 0x50
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	8879      	ldrh	r1, [r7, #2]
 8004004:	687a      	ldr	r2, [r7, #4]
 8004006:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800400a:	b292      	uxth	r2, r2
 800400c:	1a8a      	subs	r2, r1, r2
 800400e:	b292      	uxth	r2, r2
 8004010:	b210      	sxth	r0, r2
 8004012:	8839      	ldrh	r1, [r7, #0]
 8004014:	687a      	ldr	r2, [r7, #4]
 8004016:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800401a:	b292      	uxth	r2, r2
 800401c:	1a8a      	subs	r2, r1, r2
 800401e:	b292      	uxth	r2, r2
 8004020:	b212      	sxth	r2, r2
 8004022:	4601      	mov	r1, r0
 8004024:	6878      	ldr	r0, [r7, #4]
 8004026:	4798      	blx	r3
    }
 8004028:	bf00      	nop
 800402a:	3708      	adds	r7, #8
 800402c:	46bd      	mov	sp, r7
 800402e:	bd80      	pop	{r7, pc}

08004030 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8004030:	b480      	push	{r7}
 8004032:	b083      	sub	sp, #12
 8004034:	af00      	add	r7, sp, #0
 8004036:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800403e:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004046:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800404e:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 8004050:	bf00      	nop
 8004052:	370c      	adds	r7, #12
 8004054:	46bd      	mov	sp, r7
 8004056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800405a:	4770      	bx	lr

0800405c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800405c:	b580      	push	{r7, lr}
 800405e:	b084      	sub	sp, #16
 8004060:	af00      	add	r7, sp, #0
 8004062:	60f8      	str	r0, [r7, #12]
 8004064:	60b9      	str	r1, [r7, #8]
 8004066:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 8004068:	68f8      	ldr	r0, [r7, #12]
 800406a:	f7ff ffe1 	bl	8004030 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681a      	ldr	r2, [r3, #0]
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	68fa      	ldr	r2, [r7, #12]
 800407a:	601a      	str	r2, [r3, #0]
    }
 800407c:	bf00      	nop
 800407e:	3710      	adds	r7, #16
 8004080:	46bd      	mov	sp, r7
 8004082:	bd80      	pop	{r7, pc}

08004084 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8004084:	b580      	push	{r7, lr}
 8004086:	b082      	sub	sp, #8
 8004088:	af00      	add	r7, sp, #0
 800408a:	6078      	str	r0, [r7, #4]
    {
 800408c:	4a06      	ldr	r2, [pc, #24]	; (80040a8 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	601a      	str	r2, [r3, #0]
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	3304      	adds	r3, #4
 8004096:	4618      	mov	r0, r3
 8004098:	f000 fc32 	bl	8004900 <_ZN8touchgfx9ContainerD1Ev>
    }
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	4618      	mov	r0, r3
 80040a0:	3708      	adds	r7, #8
 80040a2:	46bd      	mov	sp, r7
 80040a4:	bd80      	pop	{r7, pc}
 80040a6:	bf00      	nop
 80040a8:	0801e960 	.word	0x0801e960

080040ac <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 80040ac:	b580      	push	{r7, lr}
 80040ae:	b082      	sub	sp, #8
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
    }
 80040b4:	6878      	ldr	r0, [r7, #4]
 80040b6:	f7ff ffe5 	bl	8004084 <_ZN8touchgfx6ScreenD1Ev>
 80040ba:	213c      	movs	r1, #60	; 0x3c
 80040bc:	6878      	ldr	r0, [r7, #4]
 80040be:	f017 fa47 	bl	801b550 <_ZdlPvj>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	4618      	mov	r0, r3
 80040c6:	3708      	adds	r7, #8
 80040c8:	46bd      	mov	sp, r7
 80040ca:	bd80      	pop	{r7, pc}

080040cc <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 80040cc:	b480      	push	{r7}
 80040ce:	b083      	sub	sp, #12
 80040d0:	af00      	add	r7, sp, #0
 80040d2:	6078      	str	r0, [r7, #4]
    {
    }
 80040d4:	bf00      	nop
 80040d6:	370c      	adds	r7, #12
 80040d8:	46bd      	mov	sp, r7
 80040da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040de:	4770      	bx	lr

080040e0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 80040e0:	b480      	push	{r7}
 80040e2:	b083      	sub	sp, #12
 80040e4:	af00      	add	r7, sp, #0
 80040e6:	6078      	str	r0, [r7, #4]
    {
    }
 80040e8:	bf00      	nop
 80040ea:	370c      	adds	r7, #12
 80040ec:	46bd      	mov	sp, r7
 80040ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f2:	4770      	bx	lr

080040f4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 80040f4:	b480      	push	{r7}
 80040f6:	b083      	sub	sp, #12
 80040f8:	af00      	add	r7, sp, #0
 80040fa:	6078      	str	r0, [r7, #4]
    {
    }
 80040fc:	bf00      	nop
 80040fe:	370c      	adds	r7, #12
 8004100:	46bd      	mov	sp, r7
 8004102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004106:	4770      	bx	lr

08004108 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8004108:	b480      	push	{r7}
 800410a:	b083      	sub	sp, #12
 800410c:	af00      	add	r7, sp, #0
 800410e:	6078      	str	r0, [r7, #4]
    {
    }
 8004110:	bf00      	nop
 8004112:	370c      	adds	r7, #12
 8004114:	46bd      	mov	sp, r7
 8004116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800411a:	4770      	bx	lr

0800411c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800411c:	b480      	push	{r7}
 800411e:	b083      	sub	sp, #12
 8004120:	af00      	add	r7, sp, #0
 8004122:	6078      	str	r0, [r7, #4]
 8004124:	460b      	mov	r3, r1
 8004126:	70fb      	strb	r3, [r7, #3]
    {
    }
 8004128:	bf00      	nop
 800412a:	370c      	adds	r7, #12
 800412c:	46bd      	mov	sp, r7
 800412e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004132:	4770      	bx	lr

08004134 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8004134:	b580      	push	{r7, lr}
 8004136:	b082      	sub	sp, #8
 8004138:	af00      	add	r7, sp, #0
 800413a:	6078      	str	r0, [r7, #4]
 800413c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	3304      	adds	r3, #4
 8004142:	6839      	ldr	r1, [r7, #0]
 8004144:	4618      	mov	r0, r3
 8004146:	f006 f929 	bl	800a39c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800414a:	bf00      	nop
 800414c:	3708      	adds	r7, #8
 800414e:	46bd      	mov	sp, r7
 8004150:	bd80      	pop	{r7, pc}

08004152 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param       x    Not used since this Widget is the only "child".
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8004152:	b580      	push	{r7, lr}
 8004154:	b084      	sub	sp, #16
 8004156:	af00      	add	r7, sp, #0
 8004158:	60f8      	str	r0, [r7, #12]
 800415a:	607b      	str	r3, [r7, #4]
 800415c:	460b      	mov	r3, r1
 800415e:	817b      	strh	r3, [r7, #10]
 8004160:	4613      	mov	r3, r2
 8004162:	813b      	strh	r3, [r7, #8]
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	4618      	mov	r0, r3
 8004168:	f7ff ff25 	bl	8003fb6 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800416c:	4603      	mov	r3, r0
 800416e:	2b00      	cmp	r3, #0
 8004170:	d008      	beq.n	8004184 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	4618      	mov	r0, r3
 8004176:	f7ff ff2b 	bl	8003fd0 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800417a:	4603      	mov	r3, r0
 800417c:	2b00      	cmp	r3, #0
 800417e:	d001      	beq.n	8004184 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8004180:	2301      	movs	r3, #1
 8004182:	e000      	b.n	8004186 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8004184:	2300      	movs	r3, #0
 8004186:	2b00      	cmp	r3, #0
 8004188:	d002      	beq.n	8004190 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800418a:	68fa      	ldr	r2, [r7, #12]
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	601a      	str	r2, [r3, #0]
        }
    }
 8004190:	bf00      	nop
 8004192:	3710      	adds	r7, #16
 8004194:	46bd      	mov	sp, r7
 8004196:	bd80      	pop	{r7, pc}

08004198 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8004198:	b580      	push	{r7, lr}
 800419a:	b082      	sub	sp, #8
 800419c:	af00      	add	r7, sp, #0
 800419e:	6078      	str	r0, [r7, #4]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	4618      	mov	r0, r3
 80041a4:	f7ff fde0 	bl	8003d68 <_ZN8touchgfx8DrawableC1Ev>
 80041a8:	4a03      	ldr	r2, [pc, #12]	; (80041b8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	601a      	str	r2, [r3, #0]
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	4618      	mov	r0, r3
 80041b2:	3708      	adds	r7, #8
 80041b4:	46bd      	mov	sp, r7
 80041b6:	bd80      	pop	{r7, pc}
 80041b8:	0801d6a4 	.word	0x0801d6a4

080041bc <_ZN8touchgfx6WidgetD1Ev>:
 80041bc:	b580      	push	{r7, lr}
 80041be:	b082      	sub	sp, #8
 80041c0:	af00      	add	r7, sp, #0
 80041c2:	6078      	str	r0, [r7, #4]
 80041c4:	4a05      	ldr	r2, [pc, #20]	; (80041dc <_ZN8touchgfx6WidgetD1Ev+0x20>)
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	601a      	str	r2, [r3, #0]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	4618      	mov	r0, r3
 80041ce:	f7ff fdf9 	bl	8003dc4 <_ZN8touchgfx8DrawableD1Ev>
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	4618      	mov	r0, r3
 80041d6:	3708      	adds	r7, #8
 80041d8:	46bd      	mov	sp, r7
 80041da:	bd80      	pop	{r7, pc}
 80041dc:	0801d6a4 	.word	0x0801d6a4

080041e0 <_ZN8touchgfx6WidgetD0Ev>:
 80041e0:	b580      	push	{r7, lr}
 80041e2:	b082      	sub	sp, #8
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	6078      	str	r0, [r7, #4]
 80041e8:	6878      	ldr	r0, [r7, #4]
 80041ea:	f7ff ffe7 	bl	80041bc <_ZN8touchgfx6WidgetD1Ev>
 80041ee:	2128      	movs	r1, #40	; 0x28
 80041f0:	6878      	ldr	r0, [r7, #4]
 80041f2:	f017 f9ad 	bl	801b550 <_ZdlPvj>
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	4618      	mov	r0, r3
 80041fa:	3708      	adds	r7, #8
 80041fc:	46bd      	mov	sp, r7
 80041fe:	bd80      	pop	{r7, pc}

08004200 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 8004200:	b480      	push	{r7}
 8004202:	b083      	sub	sp, #12
 8004204:	af00      	add	r7, sp, #0
 8004206:	6078      	str	r0, [r7, #4]
 8004208:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	683a      	ldr	r2, [r7, #0]
 800420e:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8004210:	bf00      	nop
 8004212:	370c      	adds	r7, #12
 8004214:	46bd      	mov	sp, r7
 8004216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800421a:	4770      	bx	lr

0800421c <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800421c:	b580      	push	{r7, lr}
 800421e:	b082      	sub	sp, #8
 8004220:	af00      	add	r7, sp, #0
 8004222:	6078      	str	r0, [r7, #4]
 8004224:	4a05      	ldr	r2, [pc, #20]	; (800423c <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	601a      	str	r2, [r3, #0]
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	4618      	mov	r0, r3
 800422e:	f7ff ffc5 	bl	80041bc <_ZN8touchgfx6WidgetD1Ev>
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	4618      	mov	r0, r3
 8004236:	3708      	adds	r7, #8
 8004238:	46bd      	mov	sp, r7
 800423a:	bd80      	pop	{r7, pc}
 800423c:	0801e300 	.word	0x0801e300

08004240 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8004240:	b580      	push	{r7, lr}
 8004242:	b082      	sub	sp, #8
 8004244:	af00      	add	r7, sp, #0
 8004246:	6078      	str	r0, [r7, #4]
 8004248:	6878      	ldr	r0, [r7, #4]
 800424a:	f7ff ffe7 	bl	800421c <_ZN8touchgfx14AbstractButtonD1Ev>
 800424e:	2130      	movs	r1, #48	; 0x30
 8004250:	6878      	ldr	r0, [r7, #4]
 8004252:	f017 f97d 	bl	801b550 <_ZdlPvj>
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	4618      	mov	r0, r3
 800425a:	3708      	adds	r7, #8
 800425c:	46bd      	mov	sp, r7
 800425e:	bd80      	pop	{r7, pc}

08004260 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8004260:	b580      	push	{r7, lr}
 8004262:	b082      	sub	sp, #8
 8004264:	af00      	add	r7, sp, #0
 8004266:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	4618      	mov	r0, r3
 800426c:	2326      	movs	r3, #38	; 0x26
 800426e:	461a      	mov	r2, r3
 8004270:	2100      	movs	r1, #0
 8004272:	f017 fa22 	bl	801b6ba <memset>
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	4618      	mov	r0, r3
 800427a:	f7ff ff8d 	bl	8004198 <_ZN8touchgfx6WidgetC1Ev>
 800427e:	4a09      	ldr	r2, [pc, #36]	; (80042a4 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	601a      	str	r2, [r3, #0]
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	22ff      	movs	r2, #255	; 0xff
 8004288:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	3328      	adds	r3, #40	; 0x28
 8004290:	2100      	movs	r1, #0
 8004292:	4618      	mov	r0, r3
 8004294:	f7ff fd28 	bl	8003ce8 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	4618      	mov	r0, r3
 800429c:	3708      	adds	r7, #8
 800429e:	46bd      	mov	sp, r7
 80042a0:	bd80      	pop	{r7, pc}
 80042a2:	bf00      	nop
 80042a4:	0801e36c 	.word	0x0801e36c

080042a8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  color The color of the box.
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
 80042a8:	b480      	push	{r7}
 80042aa:	b083      	sub	sp, #12
 80042ac:	af00      	add	r7, sp, #0
 80042ae:	6078      	str	r0, [r7, #4]
 80042b0:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	683a      	ldr	r2, [r7, #0]
 80042b6:	629a      	str	r2, [r3, #40]	; 0x28
    }
 80042b8:	bf00      	nop
 80042ba:	370c      	adds	r7, #12
 80042bc:	46bd      	mov	sp, r7
 80042be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c2:	4770      	bx	lr

080042c4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
 80042c4:	b580      	push	{r7, lr}
 80042c6:	b082      	sub	sp, #8
 80042c8:	af00      	add	r7, sp, #0
 80042ca:	6078      	str	r0, [r7, #4]
 80042cc:	6039      	str	r1, [r7, #0]
        : Widget(), alpha(255)
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	4618      	mov	r0, r3
 80042d2:	2326      	movs	r3, #38	; 0x26
 80042d4:	461a      	mov	r2, r3
 80042d6:	2100      	movs	r1, #0
 80042d8:	f017 f9ef 	bl	801b6ba <memset>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	4618      	mov	r0, r3
 80042e0:	f7ff ff5a 	bl	8004198 <_ZN8touchgfx6WidgetC1Ev>
 80042e4:	4a0b      	ldr	r2, [pc, #44]	; (8004314 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x50>)
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	601a      	str	r2, [r3, #0]
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	3326      	adds	r3, #38	; 0x26
 80042ee:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80042f2:	4618      	mov	r0, r3
 80042f4:	f7ff fd27 	bl	8003d46 <_ZN8touchgfx6BitmapC1Et>
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	22ff      	movs	r2, #255	; 0xff
 80042fc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        setBitmap(bitmap);
 8004300:	6839      	ldr	r1, [r7, #0]
 8004302:	6878      	ldr	r0, [r7, #4]
 8004304:	f007 f978 	bl	800b5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	4618      	mov	r0, r3
 800430c:	3708      	adds	r7, #8
 800430e:	46bd      	mov	sp, r7
 8004310:	bd80      	pop	{r7, pc}
 8004312:	bf00      	nop
 8004314:	0801e4d8 	.word	0x0801e4d8

08004318 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8004318:	b480      	push	{r7}
 800431a:	b083      	sub	sp, #12
 800431c:	af00      	add	r7, sp, #0
 800431e:	6078      	str	r0, [r7, #4]
 8004320:	460b      	mov	r3, r1
 8004322:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8004324:	4a06      	ldr	r2, [pc, #24]	; (8004340 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	601a      	str	r2, [r3, #0]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	887a      	ldrh	r2, [r7, #2]
 800432e:	809a      	strh	r2, [r3, #4]
    }
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	4618      	mov	r0, r3
 8004334:	370c      	adds	r7, #12
 8004336:	46bd      	mov	sp, r7
 8004338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800433c:	4770      	bx	lr
 800433e:	bf00      	nop
 8004340:	0801d1c8 	.word	0x0801d1c8

08004344 <_ZN8touchgfx9TypedTextaSERKS0_>:
class TypedText
 8004344:	b480      	push	{r7}
 8004346:	b083      	sub	sp, #12
 8004348:	af00      	add	r7, sp, #0
 800434a:	6078      	str	r0, [r7, #4]
 800434c:	6039      	str	r1, [r7, #0]
 800434e:	683b      	ldr	r3, [r7, #0]
 8004350:	889a      	ldrh	r2, [r3, #4]
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	809a      	strh	r2, [r3, #4]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	4618      	mov	r0, r3
 800435a:	370c      	adds	r7, #12
 800435c:	46bd      	mov	sp, r7
 800435e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004362:	4770      	bx	lr

08004364 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>:
     *
     * @param  t The text to display.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelText(TypedText t)
 8004364:	b580      	push	{r7, lr}
 8004366:	b082      	sub	sp, #8
 8004368:	af00      	add	r7, sp, #0
 800436a:	6078      	str	r0, [r7, #4]
 800436c:	6039      	str	r1, [r7, #0]
    {
        typedText = t;
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	3334      	adds	r3, #52	; 0x34
 8004372:	6839      	ldr	r1, [r7, #0]
 8004374:	4618      	mov	r0, r3
 8004376:	f7ff ffe5 	bl	8004344 <_ZN8touchgfx9TypedTextaSERKS0_>
        updateTextPosition();
 800437a:	6878      	ldr	r0, [r7, #4]
 800437c:	f000 f820 	bl	80043c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    }
 8004380:	bf00      	nop
 8004382:	3708      	adds	r7, #8
 8004384:	46bd      	mov	sp, r7
 8004386:	bd80      	pop	{r7, pc}

08004388 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>:
     *
     * @note If the button is currently in the normal, released state, the button should be forced
     *       to redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColor(colortype col)
 8004388:	b480      	push	{r7}
 800438a:	b083      	sub	sp, #12
 800438c:	af00      	add	r7, sp, #0
 800438e:	6078      	str	r0, [r7, #4]
 8004390:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	683a      	ldr	r2, [r7, #0]
 8004396:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8004398:	bf00      	nop
 800439a:	370c      	adds	r7, #12
 800439c:	46bd      	mov	sp, r7
 800439e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043a2:	4770      	bx	lr

080043a4 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>:
     *
     * @note If the button is currently in the pressed state, the button should be forced to
     *       redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColorPressed(colortype col)
 80043a4:	b480      	push	{r7}
 80043a6:	b083      	sub	sp, #12
 80043a8:	af00      	add	r7, sp, #0
 80043aa:	6078      	str	r0, [r7, #4]
 80043ac:	6039      	str	r1, [r7, #0]
    {
        colorPressed = col;
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	683a      	ldr	r2, [r7, #0]
 80043b2:	641a      	str	r2, [r3, #64]	; 0x40
    }
 80043b4:	bf00      	nop
 80043b6:	370c      	adds	r7, #12
 80043b8:	46bd      	mov	sp, r7
 80043ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043be:	4770      	bx	lr

080043c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80043c0:	b590      	push	{r4, r7, lr}
 80043c2:	b08b      	sub	sp, #44	; 0x2c
 80043c4:	af00      	add	r7, sp, #0
 80043c6:	6078      	str	r0, [r7, #4]
    {
        if (typedText.hasValidId())
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	3334      	adds	r3, #52	; 0x34
 80043cc:	61fb      	str	r3, [r7, #28]
        return typedTextId != TYPED_TEXT_INVALID;
 80043ce:	69fb      	ldr	r3, [r7, #28]
 80043d0:	889b      	ldrh	r3, [r3, #4]
 80043d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80043d6:	4293      	cmp	r3, r2
 80043d8:	bf14      	ite	ne
 80043da:	2301      	movne	r3, #1
 80043dc:	2300      	moveq	r3, #0
 80043de:	b2db      	uxtb	r3, r3
 80043e0:	2b00      	cmp	r3, #0
 80043e2:	d06f      	beq.n	80044c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x104>
        {
            const Font* f = typedText.getFont();
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	3334      	adds	r3, #52	; 0x34
 80043e8:	613b      	str	r3, [r7, #16]
 80043ea:	693b      	ldr	r3, [r7, #16]
 80043ec:	60fb      	str	r3, [r7, #12]

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043ee:	4b39      	ldr	r3, [pc, #228]	; (80044d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x114>)
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d105      	bne.n	8004402 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x42>
 80043f6:	4b38      	ldr	r3, [pc, #224]	; (80044d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x118>)
 80043f8:	4a38      	ldr	r2, [pc, #224]	; (80044dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11c>)
 80043fa:	21b1      	movs	r1, #177	; 0xb1
 80043fc:	4838      	ldr	r0, [pc, #224]	; (80044e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x120>)
 80043fe:	f017 f8d3 	bl	801b5a8 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	889a      	ldrh	r2, [r3, #4]
 8004406:	4b37      	ldr	r3, [pc, #220]	; (80044e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x124>)
 8004408:	881b      	ldrh	r3, [r3, #0]
 800440a:	429a      	cmp	r2, r3
 800440c:	d305      	bcc.n	800441a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5a>
 800440e:	4b36      	ldr	r3, [pc, #216]	; (80044e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x128>)
 8004410:	4a32      	ldr	r2, [pc, #200]	; (80044dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11c>)
 8004412:	21b2      	movs	r1, #178	; 0xb2
 8004414:	4832      	ldr	r0, [pc, #200]	; (80044e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x120>)
 8004416:	f017 f8c7 	bl	801b5a8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800441a:	4b34      	ldr	r3, [pc, #208]	; (80044ec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800441c:	681a      	ldr	r2, [r3, #0]
 800441e:	4b2d      	ldr	r3, [pc, #180]	; (80044d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x114>)
 8004420:	6819      	ldr	r1, [r3, #0]
 8004422:	693b      	ldr	r3, [r7, #16]
 8004424:	889b      	ldrh	r3, [r3, #4]
 8004426:	005b      	lsls	r3, r3, #1
 8004428:	440b      	add	r3, r1
 800442a:	781b      	ldrb	r3, [r3, #0]
 800442c:	009b      	lsls	r3, r3, #2
 800442e:	4413      	add	r3, r2
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	627b      	str	r3, [r7, #36]	; 0x24
            const Unicode::UnicodeChar* s = typedText.getText();
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	3334      	adds	r3, #52	; 0x34
 8004438:	61bb      	str	r3, [r7, #24]
 800443a:	69bb      	ldr	r3, [r7, #24]
 800443c:	617b      	str	r3, [r7, #20]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800443e:	4b25      	ldr	r3, [pc, #148]	; (80044d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x114>)
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	2b00      	cmp	r3, #0
 8004444:	d105      	bne.n	8004452 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x92>
 8004446:	4b24      	ldr	r3, [pc, #144]	; (80044d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x118>)
 8004448:	4a24      	ldr	r2, [pc, #144]	; (80044dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11c>)
 800444a:	21b1      	movs	r1, #177	; 0xb1
 800444c:	4824      	ldr	r0, [pc, #144]	; (80044e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x120>)
 800444e:	f017 f8ab 	bl	801b5a8 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004452:	697b      	ldr	r3, [r7, #20]
 8004454:	889a      	ldrh	r2, [r3, #4]
 8004456:	4b23      	ldr	r3, [pc, #140]	; (80044e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x124>)
 8004458:	881b      	ldrh	r3, [r3, #0]
 800445a:	429a      	cmp	r2, r3
 800445c:	d305      	bcc.n	800446a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xaa>
 800445e:	4b22      	ldr	r3, [pc, #136]	; (80044e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x128>)
 8004460:	4a1e      	ldr	r2, [pc, #120]	; (80044dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11c>)
 8004462:	21b2      	movs	r1, #178	; 0xb2
 8004464:	481e      	ldr	r0, [pc, #120]	; (80044e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x120>)
 8004466:	f017 f89f 	bl	801b5a8 <__assert_func>
        return texts->getText(typedTextId);
 800446a:	4b21      	ldr	r3, [pc, #132]	; (80044f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800446c:	681a      	ldr	r2, [r3, #0]
 800446e:	69bb      	ldr	r3, [r7, #24]
 8004470:	889b      	ldrh	r3, [r3, #4]
 8004472:	4619      	mov	r1, r3
 8004474:	4610      	mov	r0, r2
 8004476:	f7ff fbe1 	bl	8003c3c <_ZNK8touchgfx5Texts7getTextEt>
 800447a:	4603      	mov	r3, r0
 800447c:	623b      	str	r3, [r7, #32]
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800447e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	3328      	adds	r3, #40	; 0x28
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	6a39      	ldr	r1, [r7, #32]
 8004488:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800448a:	4798      	blx	r3
 800448c:	4603      	mov	r3, r0
 800448e:	b2dc      	uxtb	r4, r3
 8004490:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	3340      	adds	r3, #64	; 0x40
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	6a39      	ldr	r1, [r7, #32]
 800449a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800449c:	4798      	blx	r3
 800449e:	4603      	mov	r3, r0
 80044a0:	b2db      	uxtb	r3, r3
 80044a2:	fb14 f303 	smulbb	r3, r4, r3
 80044a6:	b2dc      	uxtb	r4, r3
 80044a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	3324      	adds	r3, #36	; 0x24
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	6a39      	ldr	r1, [r7, #32]
 80044b2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80044b4:	4798      	blx	r3
 80044b6:	4603      	mov	r3, r0
 80044b8:	4423      	add	r3, r4
 80044ba:	b2da      	uxtb	r2, r3
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80044c2:	e003      	b.n	80044cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x10c>
            textHeightIncludingSpacing = 0;
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2200      	movs	r2, #0
 80044c8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
    }
 80044cc:	bf00      	nop
 80044ce:	372c      	adds	r7, #44	; 0x2c
 80044d0:	46bd      	mov	sp, r7
 80044d2:	bd90      	pop	{r4, r7, pc}
 80044d4:	200089e0 	.word	0x200089e0
 80044d8:	0801ca70 	.word	0x0801ca70
 80044dc:	0801d700 	.word	0x0801d700
 80044e0:	0801cab4 	.word	0x0801cab4
 80044e4:	200089e4 	.word	0x200089e4
 80044e8:	0801cafc 	.word	0x0801cafc
 80044ec:	200089e8 	.word	0x200089e8
 80044f0:	200089ec 	.word	0x200089ec

080044f4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 80044f4:	b580      	push	{r7, lr}
 80044f6:	b082      	sub	sp, #8
 80044f8:	af00      	add	r7, sp, #0
 80044fa:	6078      	str	r0, [r7, #4]
 80044fc:	4a05      	ldr	r2, [pc, #20]	; (8004514 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	601a      	str	r2, [r3, #0]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	4618      	mov	r0, r3
 8004506:	f7ff fdbd 	bl	8004084 <_ZN8touchgfx6ScreenD1Ev>
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	4618      	mov	r0, r3
 800450e:	3708      	adds	r7, #8
 8004510:	46bd      	mov	sp, r7
 8004512:	bd80      	pop	{r7, pc}
 8004514:	0801d658 	.word	0x0801d658

08004518 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 8004518:	b580      	push	{r7, lr}
 800451a:	b082      	sub	sp, #8
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
 8004520:	6878      	ldr	r0, [r7, #4]
 8004522:	f7ff ffe7 	bl	80044f4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8004526:	2140      	movs	r1, #64	; 0x40
 8004528:	6878      	ldr	r0, [r7, #4]
 800452a:	f017 f811 	bl	801b550 <_ZdlPvj>
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	4618      	mov	r0, r3
 8004532:	3708      	adds	r7, #8
 8004534:	46bd      	mov	sp, r7
 8004536:	bd80      	pop	{r7, pc}

08004538 <_ZN14screenViewBaseD1Ev>:

class screenViewBase : public touchgfx::View<screenPresenter>
{
public:
    screenViewBase();
    virtual ~screenViewBase() {}
 8004538:	b580      	push	{r7, lr}
 800453a:	b082      	sub	sp, #8
 800453c:	af00      	add	r7, sp, #0
 800453e:	6078      	str	r0, [r7, #4]
 8004540:	4a0f      	ldr	r2, [pc, #60]	; (8004580 <_ZN14screenViewBaseD1Ev+0x48>)
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	33e0      	adds	r3, #224	; 0xe0
 800454a:	4618      	mov	r0, r3
 800454c:	f000 f9b6 	bl	80048bc <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	3398      	adds	r3, #152	; 0x98
 8004554:	4618      	mov	r0, r3
 8004556:	f000 fa5b 	bl	8004a10 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	336c      	adds	r3, #108	; 0x6c
 800455e:	4618      	mov	r0, r3
 8004560:	f000 fa12 	bl	8004988 <_ZN8touchgfx5ImageD1Ev>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	3340      	adds	r3, #64	; 0x40
 8004568:	4618      	mov	r0, r3
 800456a:	f000 f9eb 	bl	8004944 <_ZN8touchgfx3BoxD1Ev>
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	4618      	mov	r0, r3
 8004572:	f7ff ffbf 	bl	80044f4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	4618      	mov	r0, r3
 800457a:	3708      	adds	r7, #8
 800457c:	46bd      	mov	sp, r7
 800457e:	bd80      	pop	{r7, pc}
 8004580:	0801d608 	.word	0x0801d608

08004584 <_ZN14screenViewBaseD0Ev>:
 8004584:	b580      	push	{r7, lr}
 8004586:	b082      	sub	sp, #8
 8004588:	af00      	add	r7, sp, #0
 800458a:	6078      	str	r0, [r7, #4]
 800458c:	6878      	ldr	r0, [r7, #4]
 800458e:	f7ff ffd3 	bl	8004538 <_ZN14screenViewBaseD1Ev>
 8004592:	21f0      	movs	r1, #240	; 0xf0
 8004594:	6878      	ldr	r0, [r7, #4]
 8004596:	f016 ffdb 	bl	801b550 <_ZdlPvj>
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	4618      	mov	r0, r3
 800459e:	3708      	adds	r7, #8
 80045a0:	46bd      	mov	sp, r7
 80045a2:	bd80      	pop	{r7, pc}

080045a4 <_ZN14screenViewBase22HandleClickHerePressedEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void HandleClickHerePressed()
 80045a4:	b480      	push	{r7}
 80045a6:	b083      	sub	sp, #12
 80045a8:	af00      	add	r7, sp, #0
 80045aa:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 80045ac:	bf00      	nop
 80045ae:	370c      	adds	r7, #12
 80045b0:	46bd      	mov	sp, r7
 80045b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b6:	4770      	bx	lr

080045b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80045b8:	b590      	push	{r4, r7, lr}
 80045ba:	b083      	sub	sp, #12
 80045bc:	af00      	add	r7, sp, #0
 80045be:	4603      	mov	r3, r0
 80045c0:	71fb      	strb	r3, [r7, #7]
 80045c2:	460b      	mov	r3, r1
 80045c4:	71bb      	strb	r3, [r7, #6]
 80045c6:	4613      	mov	r3, r2
 80045c8:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80045ca:	f7fe f9db 	bl	8002984 <_ZN8touchgfx3HAL11getInstanceEv>
 80045ce:	4603      	mov	r3, r0
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d105      	bne.n	80045e0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 80045d4:	4b0a      	ldr	r3, [pc, #40]	; (8004600 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 80045d6:	4a0b      	ldr	r2, [pc, #44]	; (8004604 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 80045d8:	2135      	movs	r1, #53	; 0x35
 80045da:	480b      	ldr	r0, [pc, #44]	; (8004608 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 80045dc:	f016 ffe4 	bl	801b5a8 <__assert_func>
 80045e0:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80045e2:	f7fe fc9d 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 80045e6:	6803      	ldr	r3, [r0, #0]
 80045e8:	3328      	adds	r3, #40	; 0x28
 80045ea:	681c      	ldr	r4, [r3, #0]
 80045ec:	797b      	ldrb	r3, [r7, #5]
 80045ee:	79ba      	ldrb	r2, [r7, #6]
 80045f0:	79f9      	ldrb	r1, [r7, #7]
 80045f2:	47a0      	blx	r4
 80045f4:	4603      	mov	r3, r0
    }
 80045f6:	4618      	mov	r0, r3
 80045f8:	370c      	adds	r7, #12
 80045fa:	46bd      	mov	sp, r7
 80045fc:	bd90      	pop	{r4, r7, pc}
 80045fe:	bf00      	nop
 8004600:	0801cb50 	.word	0x0801cb50
 8004604:	0801d730 	.word	0x0801d730
 8004608:	0801cb94 	.word	0x0801cb94

0800460c <_ZN14screenViewBaseC1Ev>:
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
 800460c:	b590      	push	{r4, r7, lr}
 800460e:	b08d      	sub	sp, #52	; 0x34
 8004610:	af02      	add	r7, sp, #8
 8004612:	6078      	str	r0, [r7, #4]
    buttonCallback(this, &screenViewBase::buttonCallbackHandler)
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	4618      	mov	r0, r3
 8004618:	f000 f8ea 	bl	80047f0 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 800461c:	4a63      	ldr	r2, [pc, #396]	; (80047ac <_ZN14screenViewBaseC1Ev+0x1a0>)
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	601a      	str	r2, [r3, #0]
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	3340      	adds	r3, #64	; 0x40
 8004626:	4618      	mov	r0, r3
 8004628:	f7ff fe1a 	bl	8004260 <_ZN8touchgfx3BoxC1Ev>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8004632:	f107 0308 	add.w	r3, r7, #8
 8004636:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800463a:	4618      	mov	r0, r3
 800463c:	f7ff fb83 	bl	8003d46 <_ZN8touchgfx6BitmapC1Et>
 8004640:	f107 0308 	add.w	r3, r7, #8
 8004644:	4619      	mov	r1, r3
 8004646:	4620      	mov	r0, r4
 8004648:	f7ff fe3c 	bl	80042c4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	3398      	adds	r3, #152	; 0x98
 8004650:	4618      	mov	r0, r3
 8004652:	f007 f905 	bl	800b860 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	f103 00e0 	add.w	r0, r3, #224	; 0xe0
 800465c:	4b54      	ldr	r3, [pc, #336]	; (80047b0 <_ZN14screenViewBaseC1Ev+0x1a4>)
 800465e:	60fb      	str	r3, [r7, #12]
 8004660:	2300      	movs	r3, #0
 8004662:	613b      	str	r3, [r7, #16]
 8004664:	f107 030c 	add.w	r3, r7, #12
 8004668:	cb0c      	ldmia	r3, {r2, r3}
 800466a:	6879      	ldr	r1, [r7, #4]
 800466c:	f000 f8e6 	bl	800483c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{

    __background.setPosition(0, 0, 240, 320);
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	f103 0040 	add.w	r0, r3, #64	; 0x40
 8004676:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800467a:	9300      	str	r3, [sp, #0]
 800467c:	23f0      	movs	r3, #240	; 0xf0
 800467e:	2200      	movs	r2, #0
 8004680:	2100      	movs	r1, #0
 8004682:	f7ff fbca 	bl	8003e1a <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800468c:	2200      	movs	r2, #0
 800468e:	2100      	movs	r1, #0
 8004690:	2000      	movs	r0, #0
 8004692:	f7ff ff91 	bl	80045b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8004696:	4603      	mov	r3, r0
 8004698:	4619      	mov	r1, r3
 800469a:	4620      	mov	r0, r4
 800469c:	f7ff fe04 	bl	80042a8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    image1.setXY(0, 0);
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	336c      	adds	r3, #108	; 0x6c
 80046a4:	2200      	movs	r2, #0
 80046a6:	2100      	movs	r1, #0
 80046a8:	4618      	mov	r0, r3
 80046aa:	f7ff fbf5 	bl	8003e98 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_IMG_ID));
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 80046b4:	f107 0314 	add.w	r3, r7, #20
 80046b8:	2102      	movs	r1, #2
 80046ba:	4618      	mov	r0, r3
 80046bc:	f7ff fb43 	bl	8003d46 <_ZN8touchgfx6BitmapC1Et>
 80046c0:	f107 0314 	add.w	r3, r7, #20
 80046c4:	4619      	mov	r1, r3
 80046c6:	4620      	mov	r0, r4
 80046c8:	f006 ff96 	bl	800b5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    buttonWithLabel1.setXY(35, 232);
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	3398      	adds	r3, #152	; 0x98
 80046d0:	22e8      	movs	r2, #232	; 0xe8
 80046d2:	2123      	movs	r1, #35	; 0x23
 80046d4:	4618      	mov	r0, r3
 80046d6:	f7ff fbdf 	bl	8003e98 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	f103 0498 	add.w	r4, r3, #152	; 0x98
 80046e0:	f107 0318 	add.w	r3, r7, #24
 80046e4:	2100      	movs	r1, #0
 80046e6:	4618      	mov	r0, r3
 80046e8:	f7ff fb2d 	bl	8003d46 <_ZN8touchgfx6BitmapC1Et>
 80046ec:	f107 031c 	add.w	r3, r7, #28
 80046f0:	2101      	movs	r1, #1
 80046f2:	4618      	mov	r0, r3
 80046f4:	f7ff fb27 	bl	8003d46 <_ZN8touchgfx6BitmapC1Et>
 80046f8:	f107 021c 	add.w	r2, r7, #28
 80046fc:	f107 0318 	add.w	r3, r7, #24
 8004700:	4619      	mov	r1, r3
 8004702:	4620      	mov	r0, r4
 8004704:	f006 feb8 	bl	800b478 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID1));
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800470e:	f107 0320 	add.w	r3, r7, #32
 8004712:	2100      	movs	r1, #0
 8004714:	4618      	mov	r0, r3
 8004716:	f7ff fdff 	bl	8004318 <_ZN8touchgfx9TypedTextC1Et>
 800471a:	f107 0320 	add.w	r3, r7, #32
 800471e:	4619      	mov	r1, r3
 8004720:	4620      	mov	r0, r4
 8004722:	f7ff fe1f 	bl	8004364 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 8004726:	f107 0320 	add.w	r3, r7, #32
 800472a:	4618      	mov	r0, r3
 800472c:	f7fe fbcc 	bl	8002ec8 <_ZN8touchgfx9TypedTextD1Ev>
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8004736:	22ff      	movs	r2, #255	; 0xff
 8004738:	21ff      	movs	r1, #255	; 0xff
 800473a:	20ff      	movs	r0, #255	; 0xff
 800473c:	f7ff ff3c 	bl	80045b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8004740:	4603      	mov	r3, r0
 8004742:	4619      	mov	r1, r3
 8004744:	4620      	mov	r0, r4
 8004746:	f7ff fe1f 	bl	8004388 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8004750:	22ff      	movs	r2, #255	; 0xff
 8004752:	21ff      	movs	r1, #255	; 0xff
 8004754:	20ff      	movs	r0, #255	; 0xff
 8004756:	f7ff ff2f 	bl	80045b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800475a:	4603      	mov	r3, r0
 800475c:	4619      	mov	r1, r3
 800475e:	4620      	mov	r0, r4
 8004760:	f7ff fe20 	bl	80043a4 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    buttonWithLabel1.setAction(buttonCallback);
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	f103 0298 	add.w	r2, r3, #152	; 0x98
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	33e0      	adds	r3, #224	; 0xe0
 800476e:	4619      	mov	r1, r3
 8004770:	4610      	mov	r0, r2
 8004772:	f7ff fd45 	bl	8004200 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    add(__background);
 8004776:	687a      	ldr	r2, [r7, #4]
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	3340      	adds	r3, #64	; 0x40
 800477c:	4619      	mov	r1, r3
 800477e:	4610      	mov	r0, r2
 8004780:	f7ff fcd8 	bl	8004134 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(image1);
 8004784:	687a      	ldr	r2, [r7, #4]
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	336c      	adds	r3, #108	; 0x6c
 800478a:	4619      	mov	r1, r3
 800478c:	4610      	mov	r0, r2
 800478e:	f7ff fcd1 	bl	8004134 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(buttonWithLabel1);
 8004792:	687a      	ldr	r2, [r7, #4]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	3398      	adds	r3, #152	; 0x98
 8004798:	4619      	mov	r1, r3
 800479a:	4610      	mov	r0, r2
 800479c:	f7ff fcca 	bl	8004134 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	4618      	mov	r0, r3
 80047a4:	372c      	adds	r7, #44	; 0x2c
 80047a6:	46bd      	mov	sp, r7
 80047a8:	bd90      	pop	{r4, r7, pc}
 80047aa:	bf00      	nop
 80047ac:	0801d608 	.word	0x0801d608
 80047b0:	080047c9 	.word	0x080047c9

080047b4 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 80047b4:	b480      	push	{r7}
 80047b6:	b083      	sub	sp, #12
 80047b8:	af00      	add	r7, sp, #0
 80047ba:	6078      	str	r0, [r7, #4]

}
 80047bc:	bf00      	nop
 80047be:	370c      	adds	r7, #12
 80047c0:	46bd      	mov	sp, r7
 80047c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047c6:	4770      	bx	lr

080047c8 <_ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80047c8:	b580      	push	{r7, lr}
 80047ca:	b082      	sub	sp, #8
 80047cc:	af00      	add	r7, sp, #0
 80047ce:	6078      	str	r0, [r7, #4]
 80047d0:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithLabel1)
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	3398      	adds	r3, #152	; 0x98
 80047d6:	683a      	ldr	r2, [r7, #0]
 80047d8:	429a      	cmp	r2, r3
 80047da:	d105      	bne.n	80047e8 <_ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When buttonWithLabel1 clicked call virtual function
        //Call HandleClickHerePressed
        HandleClickHerePressed();
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	332c      	adds	r3, #44	; 0x2c
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	6878      	ldr	r0, [r7, #4]
 80047e6:	4798      	blx	r3
    }
}
 80047e8:	bf00      	nop
 80047ea:	3708      	adds	r7, #8
 80047ec:	46bd      	mov	sp, r7
 80047ee:	bd80      	pop	{r7, pc}

080047f0 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 80047f0:	b580      	push	{r7, lr}
 80047f2:	b082      	sub	sp, #8
 80047f4:	af00      	add	r7, sp, #0
 80047f6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	4618      	mov	r0, r3
 80047fc:	f009 fed2 	bl	800e5a4 <_ZN8touchgfx6ScreenC1Ev>
 8004800:	4a05      	ldr	r2, [pc, #20]	; (8004818 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	601a      	str	r2, [r3, #0]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	2200      	movs	r2, #0
 800480a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	4618      	mov	r0, r3
 8004810:	3708      	adds	r7, #8
 8004812:	46bd      	mov	sp, r7
 8004814:	bd80      	pop	{r7, pc}
 8004816:	bf00      	nop
 8004818:	0801d658 	.word	0x0801d658

0800481c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800481c:	b480      	push	{r7}
 800481e:	b083      	sub	sp, #12
 8004820:	af00      	add	r7, sp, #0
 8004822:	6078      	str	r0, [r7, #4]
 8004824:	4a04      	ldr	r2, [pc, #16]	; (8004838 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	601a      	str	r2, [r3, #0]
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	4618      	mov	r0, r3
 800482e:	370c      	adds	r7, #12
 8004830:	46bd      	mov	sp, r7
 8004832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004836:	4770      	bx	lr
 8004838:	0801d68c 	.word	0x0801d68c

0800483c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_1)(T1))
 800483c:	b580      	push	{r7, lr}
 800483e:	b084      	sub	sp, #16
 8004840:	af00      	add	r7, sp, #0
 8004842:	60f8      	str	r0, [r7, #12]
 8004844:	60b9      	str	r1, [r7, #8]
 8004846:	4639      	mov	r1, r7
 8004848:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	4618      	mov	r0, r3
 8004850:	f7ff ffe4 	bl	800481c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 8004854:	4a08      	ldr	r2, [pc, #32]	; (8004878 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	68ba      	ldr	r2, [r7, #8]
 800485e:	605a      	str	r2, [r3, #4]
        this->pmemfun_1 = pmemfun_1;
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	3308      	adds	r3, #8
 8004864:	463a      	mov	r2, r7
 8004866:	e892 0003 	ldmia.w	r2, {r0, r1}
 800486a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	4618      	mov	r0, r3
 8004872:	3710      	adds	r7, #16
 8004874:	46bd      	mov	sp, r7
 8004876:	bd80      	pop	{r7, pc}
 8004878:	0801d640 	.word	0x0801d640

0800487c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800487c:	b480      	push	{r7}
 800487e:	b083      	sub	sp, #12
 8004880:	af00      	add	r7, sp, #0
 8004882:	6078      	str	r0, [r7, #4]
    }
 8004884:	4a04      	ldr	r2, [pc, #16]	; (8004898 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	601a      	str	r2, [r3, #0]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	4618      	mov	r0, r3
 800488e:	370c      	adds	r7, #12
 8004890:	46bd      	mov	sp, r7
 8004892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004896:	4770      	bx	lr
 8004898:	0801d68c 	.word	0x0801d68c

0800489c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800489c:	b580      	push	{r7, lr}
 800489e:	b082      	sub	sp, #8
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	6078      	str	r0, [r7, #4]
    }
 80048a4:	6878      	ldr	r0, [r7, #4]
 80048a6:	f7ff ffe9 	bl	800487c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 80048aa:	2104      	movs	r1, #4
 80048ac:	6878      	ldr	r0, [r7, #4]
 80048ae:	f016 fe4f 	bl	801b550 <_ZdlPvj>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	4618      	mov	r0, r3
 80048b6:	3708      	adds	r7, #8
 80048b8:	46bd      	mov	sp, r7
 80048ba:	bd80      	pop	{r7, pc}

080048bc <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80048bc:	b580      	push	{r7, lr}
 80048be:	b082      	sub	sp, #8
 80048c0:	af00      	add	r7, sp, #0
 80048c2:	6078      	str	r0, [r7, #4]
 80048c4:	4a05      	ldr	r2, [pc, #20]	; (80048dc <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	601a      	str	r2, [r3, #0]
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	4618      	mov	r0, r3
 80048ce:	f7ff ffd5 	bl	800487c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	4618      	mov	r0, r3
 80048d6:	3708      	adds	r7, #8
 80048d8:	46bd      	mov	sp, r7
 80048da:	bd80      	pop	{r7, pc}
 80048dc:	0801d640 	.word	0x0801d640

080048e0 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 80048e0:	b580      	push	{r7, lr}
 80048e2:	b082      	sub	sp, #8
 80048e4:	af00      	add	r7, sp, #0
 80048e6:	6078      	str	r0, [r7, #4]
 80048e8:	6878      	ldr	r0, [r7, #4]
 80048ea:	f7ff ffe7 	bl	80048bc <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 80048ee:	2110      	movs	r1, #16
 80048f0:	6878      	ldr	r0, [r7, #4]
 80048f2:	f016 fe2d 	bl	801b550 <_ZdlPvj>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	4618      	mov	r0, r3
 80048fa:	3708      	adds	r7, #8
 80048fc:	46bd      	mov	sp, r7
 80048fe:	bd80      	pop	{r7, pc}

08004900 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 8004900:	b580      	push	{r7, lr}
 8004902:	b082      	sub	sp, #8
 8004904:	af00      	add	r7, sp, #0
 8004906:	6078      	str	r0, [r7, #4]
 8004908:	4a05      	ldr	r2, [pc, #20]	; (8004920 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	601a      	str	r2, [r3, #0]
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	4618      	mov	r0, r3
 8004912:	f7ff fa57 	bl	8003dc4 <_ZN8touchgfx8DrawableD1Ev>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	4618      	mov	r0, r3
 800491a:	3708      	adds	r7, #8
 800491c:	46bd      	mov	sp, r7
 800491e:	bd80      	pop	{r7, pc}
 8004920:	0801daec 	.word	0x0801daec

08004924 <_ZN8touchgfx9ContainerD0Ev>:
 8004924:	b580      	push	{r7, lr}
 8004926:	b082      	sub	sp, #8
 8004928:	af00      	add	r7, sp, #0
 800492a:	6078      	str	r0, [r7, #4]
 800492c:	6878      	ldr	r0, [r7, #4]
 800492e:	f7ff ffe7 	bl	8004900 <_ZN8touchgfx9ContainerD1Ev>
 8004932:	212c      	movs	r1, #44	; 0x2c
 8004934:	6878      	ldr	r0, [r7, #4]
 8004936:	f016 fe0b 	bl	801b550 <_ZdlPvj>
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	4618      	mov	r0, r3
 800493e:	3708      	adds	r7, #8
 8004940:	46bd      	mov	sp, r7
 8004942:	bd80      	pop	{r7, pc}

08004944 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 8004944:	b580      	push	{r7, lr}
 8004946:	b082      	sub	sp, #8
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
 800494c:	4a05      	ldr	r2, [pc, #20]	; (8004964 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800494e:	687b      	ldr	r3, [r7, #4]
 8004950:	601a      	str	r2, [r3, #0]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	4618      	mov	r0, r3
 8004956:	f7ff fc31 	bl	80041bc <_ZN8touchgfx6WidgetD1Ev>
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	4618      	mov	r0, r3
 800495e:	3708      	adds	r7, #8
 8004960:	46bd      	mov	sp, r7
 8004962:	bd80      	pop	{r7, pc}
 8004964:	0801e36c 	.word	0x0801e36c

08004968 <_ZN8touchgfx3BoxD0Ev>:
 8004968:	b580      	push	{r7, lr}
 800496a:	b082      	sub	sp, #8
 800496c:	af00      	add	r7, sp, #0
 800496e:	6078      	str	r0, [r7, #4]
 8004970:	6878      	ldr	r0, [r7, #4]
 8004972:	f7ff ffe7 	bl	8004944 <_ZN8touchgfx3BoxD1Ev>
 8004976:	212c      	movs	r1, #44	; 0x2c
 8004978:	6878      	ldr	r0, [r7, #4]
 800497a:	f016 fde9 	bl	801b550 <_ZdlPvj>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	4618      	mov	r0, r3
 8004982:	3708      	adds	r7, #8
 8004984:	46bd      	mov	sp, r7
 8004986:	bd80      	pop	{r7, pc}

08004988 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 8004988:	b580      	push	{r7, lr}
 800498a:	b082      	sub	sp, #8
 800498c:	af00      	add	r7, sp, #0
 800498e:	6078      	str	r0, [r7, #4]
 8004990:	4a05      	ldr	r2, [pc, #20]	; (80049a8 <_ZN8touchgfx5ImageD1Ev+0x20>)
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	601a      	str	r2, [r3, #0]
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	4618      	mov	r0, r3
 800499a:	f7ff fc0f 	bl	80041bc <_ZN8touchgfx6WidgetD1Ev>
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	4618      	mov	r0, r3
 80049a2:	3708      	adds	r7, #8
 80049a4:	46bd      	mov	sp, r7
 80049a6:	bd80      	pop	{r7, pc}
 80049a8:	0801e4d8 	.word	0x0801e4d8

080049ac <_ZN8touchgfx5ImageD0Ev>:
 80049ac:	b580      	push	{r7, lr}
 80049ae:	b082      	sub	sp, #8
 80049b0:	af00      	add	r7, sp, #0
 80049b2:	6078      	str	r0, [r7, #4]
 80049b4:	6878      	ldr	r0, [r7, #4]
 80049b6:	f7ff ffe7 	bl	8004988 <_ZN8touchgfx5ImageD1Ev>
 80049ba:	212c      	movs	r1, #44	; 0x2c
 80049bc:	6878      	ldr	r0, [r7, #4]
 80049be:	f016 fdc7 	bl	801b550 <_ZdlPvj>
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	4618      	mov	r0, r3
 80049c6:	3708      	adds	r7, #8
 80049c8:	46bd      	mov	sp, r7
 80049ca:	bd80      	pop	{r7, pc}

080049cc <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 80049cc:	b580      	push	{r7, lr}
 80049ce:	b082      	sub	sp, #8
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	6078      	str	r0, [r7, #4]
 80049d4:	4a05      	ldr	r2, [pc, #20]	; (80049ec <_ZN8touchgfx6ButtonD1Ev+0x20>)
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	601a      	str	r2, [r3, #0]
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	4618      	mov	r0, r3
 80049de:	f7ff fc1d 	bl	800421c <_ZN8touchgfx14AbstractButtonD1Ev>
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	4618      	mov	r0, r3
 80049e6:	3708      	adds	r7, #8
 80049e8:	46bd      	mov	sp, r7
 80049ea:	bd80      	pop	{r7, pc}
 80049ec:	0801e434 	.word	0x0801e434

080049f0 <_ZN8touchgfx6ButtonD0Ev>:
 80049f0:	b580      	push	{r7, lr}
 80049f2:	b082      	sub	sp, #8
 80049f4:	af00      	add	r7, sp, #0
 80049f6:	6078      	str	r0, [r7, #4]
 80049f8:	6878      	ldr	r0, [r7, #4]
 80049fa:	f7ff ffe7 	bl	80049cc <_ZN8touchgfx6ButtonD1Ev>
 80049fe:	2134      	movs	r1, #52	; 0x34
 8004a00:	6878      	ldr	r0, [r7, #4]
 8004a02:	f016 fda5 	bl	801b550 <_ZdlPvj>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	4618      	mov	r0, r3
 8004a0a:	3708      	adds	r7, #8
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}

08004a10 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
class ButtonWithLabel : public Button
 8004a10:	b580      	push	{r7, lr}
 8004a12:	b082      	sub	sp, #8
 8004a14:	af00      	add	r7, sp, #0
 8004a16:	6078      	str	r0, [r7, #4]
 8004a18:	4a08      	ldr	r2, [pc, #32]	; (8004a3c <_ZN8touchgfx15ButtonWithLabelD1Ev+0x2c>)
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	601a      	str	r2, [r3, #0]
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	3334      	adds	r3, #52	; 0x34
 8004a22:	4618      	mov	r0, r3
 8004a24:	f7fe fa50 	bl	8002ec8 <_ZN8touchgfx9TypedTextD1Ev>
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	4618      	mov	r0, r3
 8004a2c:	f7ff ffce 	bl	80049cc <_ZN8touchgfx6ButtonD1Ev>
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	4618      	mov	r0, r3
 8004a34:	3708      	adds	r7, #8
 8004a36:	46bd      	mov	sp, r7
 8004a38:	bd80      	pop	{r7, pc}
 8004a3a:	bf00      	nop
 8004a3c:	0801e600 	.word	0x0801e600

08004a40 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8004a40:	b580      	push	{r7, lr}
 8004a42:	b082      	sub	sp, #8
 8004a44:	af00      	add	r7, sp, #0
 8004a46:	6078      	str	r0, [r7, #4]
 8004a48:	6878      	ldr	r0, [r7, #4]
 8004a4a:	f7ff ffe1 	bl	8004a10 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 8004a4e:	2148      	movs	r1, #72	; 0x48
 8004a50:	6878      	ldr	r0, [r7, #4]
 8004a52:	f016 fd7d 	bl	801b550 <_ZdlPvj>
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	4618      	mov	r0, r3
 8004a5a:	3708      	adds	r7, #8
 8004a5c:	46bd      	mov	sp, r7
 8004a5e:	bd80      	pop	{r7, pc}

08004a60 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004a60:	b580      	push	{r7, lr}
 8004a62:	b082      	sub	sp, #8
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	6078      	str	r0, [r7, #4]
 8004a68:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun_1)(t1);
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	685b      	ldr	r3, [r3, #4]
 8004a6e:	687a      	ldr	r2, [r7, #4]
 8004a70:	68d2      	ldr	r2, [r2, #12]
 8004a72:	1052      	asrs	r2, r2, #1
 8004a74:	1898      	adds	r0, r3, r2
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	68db      	ldr	r3, [r3, #12]
 8004a7a:	f003 0301 	and.w	r3, r3, #1
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d102      	bne.n	8004a88 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	689b      	ldr	r3, [r3, #8]
 8004a86:	e00a      	b.n	8004a9e <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	685b      	ldr	r3, [r3, #4]
 8004a8c:	687a      	ldr	r2, [r7, #4]
 8004a8e:	68d2      	ldr	r2, [r2, #12]
 8004a90:	1052      	asrs	r2, r2, #1
 8004a92:	4413      	add	r3, r2
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	687a      	ldr	r2, [r7, #4]
 8004a98:	6892      	ldr	r2, [r2, #8]
 8004a9a:	4413      	add	r3, r2
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	6839      	ldr	r1, [r7, #0]
 8004aa0:	4798      	blx	r3
    }
 8004aa2:	bf00      	nop
 8004aa4:	3708      	adds	r7, #8
 8004aa6:	46bd      	mov	sp, r7
 8004aa8:	bd80      	pop	{r7, pc}

08004aaa <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8004aaa:	b480      	push	{r7}
 8004aac:	b083      	sub	sp, #12
 8004aae:	af00      	add	r7, sp, #0
 8004ab0:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun_1 != 0);
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	685b      	ldr	r3, [r3, #4]
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d010      	beq.n	8004adc <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	689b      	ldr	r3, [r3, #8]
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	d107      	bne.n	8004ad2 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	68db      	ldr	r3, [r3, #12]
 8004ac6:	f003 0301 	and.w	r3, r3, #1
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d101      	bne.n	8004ad2 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 8004ace:	2301      	movs	r3, #1
 8004ad0:	e000      	b.n	8004ad4 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 8004ad2:	2300      	movs	r3, #0
 8004ad4:	2b01      	cmp	r3, #1
 8004ad6:	d001      	beq.n	8004adc <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 8004ad8:	2301      	movs	r3, #1
 8004ada:	e000      	b.n	8004ade <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 8004adc:	2300      	movs	r3, #0
    }
 8004ade:	4618      	mov	r0, r3
 8004ae0:	370c      	adds	r7, #12
 8004ae2:	46bd      	mov	sp, r7
 8004ae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae8:	4770      	bx	lr
	...

08004aec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004aec:	b580      	push	{r7, lr}
 8004aee:	b084      	sub	sp, #16
 8004af0:	af00      	add	r7, sp, #0
 8004af2:	60f8      	str	r0, [r7, #12]
 8004af4:	60b9      	str	r1, [r7, #8]
 8004af6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	687a      	ldr	r2, [r7, #4]
 8004afc:	68b9      	ldr	r1, [r7, #8]
 8004afe:	4618      	mov	r0, r3
 8004b00:	f7fe fae6 	bl	80030d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004b04:	4a03      	ldr	r2, [pc, #12]	; (8004b14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	601a      	str	r2, [r3, #0]
{

}
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	4618      	mov	r0, r3
 8004b0e:	3710      	adds	r7, #16
 8004b10:	46bd      	mov	sp, r7
 8004b12:	bd80      	pop	{r7, pc}
 8004b14:	0801cec0 	.word	0x0801cec0

08004b18 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004b18:	b480      	push	{r7}
 8004b1a:	b083      	sub	sp, #12
 8004b1c:	af00      	add	r7, sp, #0
 8004b1e:	6078      	str	r0, [r7, #4]
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	2200      	movs	r2, #0
 8004b24:	601a      	str	r2, [r3, #0]
{

}
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	4618      	mov	r0, r3
 8004b2a:	370c      	adds	r7, #12
 8004b2c:	46bd      	mov	sp, r7
 8004b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b32:	4770      	bx	lr

08004b34 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004b34:	b480      	push	{r7}
 8004b36:	b083      	sub	sp, #12
 8004b38:	af00      	add	r7, sp, #0
 8004b3a:	6078      	str	r0, [r7, #4]

}
 8004b3c:	bf00      	nop
 8004b3e:	370c      	adds	r7, #12
 8004b40:	46bd      	mov	sp, r7
 8004b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b46:	4770      	bx	lr

08004b48 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8004b48:	b480      	push	{r7}
 8004b4a:	b083      	sub	sp, #12
 8004b4c:	af00      	add	r7, sp, #0
 8004b4e:	6078      	str	r0, [r7, #4]
    {
    }
 8004b50:	bf00      	nop
 8004b52:	370c      	adds	r7, #12
 8004b54:	46bd      	mov	sp, r7
 8004b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b5a:	4770      	bx	lr

08004b5c <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8004b5c:	b480      	push	{r7}
 8004b5e:	b083      	sub	sp, #12
 8004b60:	af00      	add	r7, sp, #0
 8004b62:	6078      	str	r0, [r7, #4]
    {
    }
 8004b64:	bf00      	nop
 8004b66:	370c      	adds	r7, #12
 8004b68:	46bd      	mov	sp, r7
 8004b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b6e:	4770      	bx	lr

08004b70 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 8004b70:	b480      	push	{r7}
 8004b72:	b083      	sub	sp, #12
 8004b74:	af00      	add	r7, sp, #0
 8004b76:	6078      	str	r0, [r7, #4]
    {
 8004b78:	4a04      	ldr	r2, [pc, #16]	; (8004b8c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	601a      	str	r2, [r3, #0]
    }
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	4618      	mov	r0, r3
 8004b82:	370c      	adds	r7, #12
 8004b84:	46bd      	mov	sp, r7
 8004b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b8a:	4770      	bx	lr
 8004b8c:	0801d7cc 	.word	0x0801d7cc

08004b90 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8004b90:	b580      	push	{r7, lr}
 8004b92:	b082      	sub	sp, #8
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	6078      	str	r0, [r7, #4]
    }
 8004b98:	6878      	ldr	r0, [r7, #4]
 8004b9a:	f7ff ffe9 	bl	8004b70 <_ZN8touchgfx9PresenterD1Ev>
 8004b9e:	2104      	movs	r1, #4
 8004ba0:	6878      	ldr	r0, [r7, #4]
 8004ba2:	f016 fcd5 	bl	801b550 <_ZdlPvj>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	4618      	mov	r0, r3
 8004baa:	3708      	adds	r7, #8
 8004bac:	46bd      	mov	sp, r7
 8004bae:	bd80      	pop	{r7, pc}

08004bb0 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 8004bb0:	b480      	push	{r7}
 8004bb2:	b083      	sub	sp, #12
 8004bb4:	af00      	add	r7, sp, #0
 8004bb6:	6078      	str	r0, [r7, #4]
    {
 8004bb8:	4a04      	ldr	r2, [pc, #16]	; (8004bcc <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	601a      	str	r2, [r3, #0]
    }
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	4618      	mov	r0, r3
 8004bc2:	370c      	adds	r7, #12
 8004bc4:	46bd      	mov	sp, r7
 8004bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bca:	4770      	bx	lr
 8004bcc:	0801d7cc 	.word	0x0801d7cc

08004bd0 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8004bd0:	b480      	push	{r7}
 8004bd2:	b083      	sub	sp, #12
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
 8004bd8:	4a06      	ldr	r2, [pc, #24]	; (8004bf4 <_ZN13ModelListenerC1Ev+0x24>)
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	601a      	str	r2, [r3, #0]
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	2200      	movs	r2, #0
 8004be2:	605a      	str	r2, [r3, #4]
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	4618      	mov	r0, r3
 8004be8:	370c      	adds	r7, #12
 8004bea:	46bd      	mov	sp, r7
 8004bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bf0:	4770      	bx	lr
 8004bf2:	bf00      	nop
 8004bf4:	0801d7bc 	.word	0x0801d7bc

08004bf8 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8004bf8:	b480      	push	{r7}
 8004bfa:	b083      	sub	sp, #12
 8004bfc:	af00      	add	r7, sp, #0
 8004bfe:	6078      	str	r0, [r7, #4]
 8004c00:	4a04      	ldr	r2, [pc, #16]	; (8004c14 <_ZN13ModelListenerD1Ev+0x1c>)
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	601a      	str	r2, [r3, #0]
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	4618      	mov	r0, r3
 8004c0a:	370c      	adds	r7, #12
 8004c0c:	46bd      	mov	sp, r7
 8004c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c12:	4770      	bx	lr
 8004c14:	0801d7bc 	.word	0x0801d7bc

08004c18 <_ZN13ModelListenerD0Ev>:
 8004c18:	b580      	push	{r7, lr}
 8004c1a:	b082      	sub	sp, #8
 8004c1c:	af00      	add	r7, sp, #0
 8004c1e:	6078      	str	r0, [r7, #4]
 8004c20:	6878      	ldr	r0, [r7, #4]
 8004c22:	f7ff ffe9 	bl	8004bf8 <_ZN13ModelListenerD1Ev>
 8004c26:	2108      	movs	r1, #8
 8004c28:	6878      	ldr	r0, [r7, #4]
 8004c2a:	f016 fc91 	bl	801b550 <_ZdlPvj>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	4618      	mov	r0, r3
 8004c32:	3708      	adds	r7, #8
 8004c34:	46bd      	mov	sp, r7
 8004c36:	bd80      	pop	{r7, pc}

08004c38 <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {};
 8004c38:	b580      	push	{r7, lr}
 8004c3a:	b082      	sub	sp, #8
 8004c3c:	af00      	add	r7, sp, #0
 8004c3e:	6078      	str	r0, [r7, #4]
 8004c40:	4a09      	ldr	r2, [pc, #36]	; (8004c68 <_ZN15screenPresenterD1Ev+0x30>)
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	601a      	str	r2, [r3, #0]
 8004c46:	4a09      	ldr	r2, [pc, #36]	; (8004c6c <_ZN15screenPresenterD1Ev+0x34>)
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	605a      	str	r2, [r3, #4]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	3304      	adds	r3, #4
 8004c50:	4618      	mov	r0, r3
 8004c52:	f7ff ffd1 	bl	8004bf8 <_ZN13ModelListenerD1Ev>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	4618      	mov	r0, r3
 8004c5a:	f7ff ff89 	bl	8004b70 <_ZN8touchgfx9PresenterD1Ev>
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	4618      	mov	r0, r3
 8004c62:	3708      	adds	r7, #8
 8004c64:	46bd      	mov	sp, r7
 8004c66:	bd80      	pop	{r7, pc}
 8004c68:	0801d794 	.word	0x0801d794
 8004c6c:	0801d7ac 	.word	0x0801d7ac

08004c70 <_ZThn4_N15screenPresenterD1Ev>:
 8004c70:	f1a0 0004 	sub.w	r0, r0, #4
 8004c74:	e7e0      	b.n	8004c38 <_ZN15screenPresenterD1Ev>
 8004c76:	bf00      	nop

08004c78 <_ZN15screenPresenterD0Ev>:
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b082      	sub	sp, #8
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
 8004c80:	6878      	ldr	r0, [r7, #4]
 8004c82:	f7ff ffd9 	bl	8004c38 <_ZN15screenPresenterD1Ev>
 8004c86:	2110      	movs	r1, #16
 8004c88:	6878      	ldr	r0, [r7, #4]
 8004c8a:	f016 fc61 	bl	801b550 <_ZdlPvj>
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	4618      	mov	r0, r3
 8004c92:	3708      	adds	r7, #8
 8004c94:	46bd      	mov	sp, r7
 8004c96:	bd80      	pop	{r7, pc}

08004c98 <_ZThn4_N15screenPresenterD0Ev>:
 8004c98:	f1a0 0004 	sub.w	r0, r0, #4
 8004c9c:	e7ec      	b.n	8004c78 <_ZN15screenPresenterD0Ev>
	...

08004ca0 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 8004ca0:	b580      	push	{r7, lr}
 8004ca2:	b082      	sub	sp, #8
 8004ca4:	af00      	add	r7, sp, #0
 8004ca6:	6078      	str	r0, [r7, #4]
 8004ca8:	6039      	str	r1, [r7, #0]
    : view(v)
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	4618      	mov	r0, r3
 8004cae:	f7ff ff7f 	bl	8004bb0 <_ZN8touchgfx9PresenterC1Ev>
 8004cb2:	687b      	ldr	r3, [r7, #4]
 8004cb4:	3304      	adds	r3, #4
 8004cb6:	4618      	mov	r0, r3
 8004cb8:	f7ff ff8a 	bl	8004bd0 <_ZN13ModelListenerC1Ev>
 8004cbc:	4a06      	ldr	r2, [pc, #24]	; (8004cd8 <_ZN15screenPresenterC1ER10screenView+0x38>)
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	601a      	str	r2, [r3, #0]
 8004cc2:	4a06      	ldr	r2, [pc, #24]	; (8004cdc <_ZN15screenPresenterC1ER10screenView+0x3c>)
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	605a      	str	r2, [r3, #4]
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	683a      	ldr	r2, [r7, #0]
 8004ccc:	60da      	str	r2, [r3, #12]
{

}
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	4618      	mov	r0, r3
 8004cd2:	3708      	adds	r7, #8
 8004cd4:	46bd      	mov	sp, r7
 8004cd6:	bd80      	pop	{r7, pc}
 8004cd8:	0801d794 	.word	0x0801d794
 8004cdc:	0801d7ac 	.word	0x0801d7ac

08004ce0 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 8004ce0:	b480      	push	{r7}
 8004ce2:	b083      	sub	sp, #12
 8004ce4:	af00      	add	r7, sp, #0
 8004ce6:	6078      	str	r0, [r7, #4]

}
 8004ce8:	bf00      	nop
 8004cea:	370c      	adds	r7, #12
 8004cec:	46bd      	mov	sp, r7
 8004cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cf2:	4770      	bx	lr

08004cf4 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 8004cf4:	b480      	push	{r7}
 8004cf6:	b083      	sub	sp, #12
 8004cf8:	af00      	add	r7, sp, #0
 8004cfa:	6078      	str	r0, [r7, #4]

}
 8004cfc:	bf00      	nop
 8004cfe:	370c      	adds	r7, #12
 8004d00:	46bd      	mov	sp, r7
 8004d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d06:	4770      	bx	lr

08004d08 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 8004d08:	b580      	push	{r7, lr}
 8004d0a:	b082      	sub	sp, #8
 8004d0c:	af00      	add	r7, sp, #0
 8004d0e:	6078      	str	r0, [r7, #4]
 8004d10:	4a05      	ldr	r2, [pc, #20]	; (8004d28 <_ZN10screenViewD1Ev+0x20>)
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	601a      	str	r2, [r3, #0]
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	4618      	mov	r0, r3
 8004d1a:	f7ff fc0d 	bl	8004538 <_ZN14screenViewBaseD1Ev>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	4618      	mov	r0, r3
 8004d22:	3708      	adds	r7, #8
 8004d24:	46bd      	mov	sp, r7
 8004d26:	bd80      	pop	{r7, pc}
 8004d28:	0801d7e4 	.word	0x0801d7e4

08004d2c <_ZN10screenViewD0Ev>:
 8004d2c:	b580      	push	{r7, lr}
 8004d2e:	b082      	sub	sp, #8
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	6078      	str	r0, [r7, #4]
 8004d34:	6878      	ldr	r0, [r7, #4]
 8004d36:	f7ff ffe7 	bl	8004d08 <_ZN10screenViewD1Ev>
 8004d3a:	21f0      	movs	r1, #240	; 0xf0
 8004d3c:	6878      	ldr	r0, [r7, #4]
 8004d3e:	f016 fc07 	bl	801b550 <_ZdlPvj>
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	4618      	mov	r0, r3
 8004d46:	3708      	adds	r7, #8
 8004d48:	46bd      	mov	sp, r7
 8004d4a:	bd80      	pop	{r7, pc}

08004d4c <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 8004d4c:	b580      	push	{r7, lr}
 8004d4e:	b082      	sub	sp, #8
 8004d50:	af00      	add	r7, sp, #0
 8004d52:	6078      	str	r0, [r7, #4]
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	4618      	mov	r0, r3
 8004d58:	f7ff fc58 	bl	800460c <_ZN14screenViewBaseC1Ev>
 8004d5c:	4a03      	ldr	r2, [pc, #12]	; (8004d6c <_ZN10screenViewC1Ev+0x20>)
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	601a      	str	r2, [r3, #0]
{

}
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	4618      	mov	r0, r3
 8004d66:	3708      	adds	r7, #8
 8004d68:	46bd      	mov	sp, r7
 8004d6a:	bd80      	pop	{r7, pc}
 8004d6c:	0801d7e4 	.word	0x0801d7e4

08004d70 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 8004d70:	b580      	push	{r7, lr}
 8004d72:	b082      	sub	sp, #8
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	4618      	mov	r0, r3
 8004d7c:	f7ff fd1a 	bl	80047b4 <_ZN14screenViewBase11setupScreenEv>
}
 8004d80:	bf00      	nop
 8004d82:	3708      	adds	r7, #8
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bd80      	pop	{r7, pc}

08004d88 <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 8004d88:	b580      	push	{r7, lr}
 8004d8a:	b082      	sub	sp, #8
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	4618      	mov	r0, r3
 8004d94:	f7ff f9ae 	bl	80040f4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8004d98:	bf00      	nop
 8004d9a:	3708      	adds	r7, #8
 8004d9c:	46bd      	mov	sp, r7
 8004d9e:	bd80      	pop	{r7, pc}

08004da0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8004da0:	b480      	push	{r7}
 8004da2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004da4:	4b08      	ldr	r3, [pc, #32]	; (8004dc8 <SystemInit+0x28>)
 8004da6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004daa:	4a07      	ldr	r2, [pc, #28]	; (8004dc8 <SystemInit+0x28>)
 8004dac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004db0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004db4:	4b04      	ldr	r3, [pc, #16]	; (8004dc8 <SystemInit+0x28>)
 8004db6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004dba:	609a      	str	r2, [r3, #8]
#endif
}
 8004dbc:	bf00      	nop
 8004dbe:	46bd      	mov	sp, r7
 8004dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dc4:	4770      	bx	lr
 8004dc6:	bf00      	nop
 8004dc8:	e000ed00 	.word	0xe000ed00

08004dcc <ili9341_WriteData>:
#include "stm32f4xx_hal_spi.h"

static SPI_HandleTypeDef SpiHandle;

void ili9341_WriteData(uint16_t RegValue)
{
 8004dcc:	b580      	push	{r7, lr}
 8004dce:	b082      	sub	sp, #8
 8004dd0:	af00      	add	r7, sp, #0
 8004dd2:	4603      	mov	r3, r0
 8004dd4:	80fb      	strh	r3, [r7, #6]
    /* Set WRX to send data */
  LCD_WRX_HIGH();
 8004dd6:	2201      	movs	r2, #1
 8004dd8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004ddc:	480b      	ldr	r0, [pc, #44]	; (8004e0c <ili9341_WriteData+0x40>)
 8004dde:	f000 fd77 	bl	80058d0 <HAL_GPIO_WritePin>
  
  /* Reset LCD control line(/CS) and Send data */  
  LCD_CS_LOW();
 8004de2:	2200      	movs	r2, #0
 8004de4:	2104      	movs	r1, #4
 8004de6:	480a      	ldr	r0, [pc, #40]	; (8004e10 <ili9341_WriteData+0x44>)
 8004de8:	f000 fd72 	bl	80058d0 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&SpiHandle, (uint8_t*) &RegValue, 1, SPIx_TIMEOUT_MAX);
 8004dec:	1db9      	adds	r1, r7, #6
 8004dee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004df2:	2201      	movs	r2, #1
 8004df4:	4807      	ldr	r0, [pc, #28]	; (8004e14 <ili9341_WriteData+0x48>)
 8004df6:	f002 f8d4 	bl	8006fa2 <HAL_SPI_Transmit>
  
  /* Deselect: Chip Select high */
  LCD_CS_HIGH();
 8004dfa:	2201      	movs	r2, #1
 8004dfc:	2104      	movs	r1, #4
 8004dfe:	4804      	ldr	r0, [pc, #16]	; (8004e10 <ili9341_WriteData+0x44>)
 8004e00:	f000 fd66 	bl	80058d0 <HAL_GPIO_WritePin>
}
 8004e04:	bf00      	nop
 8004e06:	3708      	adds	r7, #8
 8004e08:	46bd      	mov	sp, r7
 8004e0a:	bd80      	pop	{r7, pc}
 8004e0c:	40020c00 	.word	0x40020c00
 8004e10:	40020800 	.word	0x40020800
 8004e14:	200007e0 	.word	0x200007e0

08004e18 <ili9341_WriteReg>:

void ili9341_WriteReg(uint8_t LCD_Reg)
{
 8004e18:	b580      	push	{r7, lr}
 8004e1a:	b082      	sub	sp, #8
 8004e1c:	af00      	add	r7, sp, #0
 8004e1e:	4603      	mov	r3, r0
 8004e20:	71fb      	strb	r3, [r7, #7]
    /* Reset WRX to send command */
  LCD_WRX_LOW();
 8004e22:	2200      	movs	r2, #0
 8004e24:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004e28:	480b      	ldr	r0, [pc, #44]	; (8004e58 <ili9341_WriteReg+0x40>)
 8004e2a:	f000 fd51 	bl	80058d0 <HAL_GPIO_WritePin>
  
  /* Reset LCD control line(/CS) and Send command */
  LCD_CS_LOW();
 8004e2e:	2200      	movs	r2, #0
 8004e30:	2104      	movs	r1, #4
 8004e32:	480a      	ldr	r0, [pc, #40]	; (8004e5c <ili9341_WriteReg+0x44>)
 8004e34:	f000 fd4c 	bl	80058d0 <HAL_GPIO_WritePin>
  
  HAL_SPI_Transmit(&SpiHandle, (uint8_t*) &LCD_Reg, 1, SPIx_TIMEOUT_MAX);
 8004e38:	1df9      	adds	r1, r7, #7
 8004e3a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004e3e:	2201      	movs	r2, #1
 8004e40:	4807      	ldr	r0, [pc, #28]	; (8004e60 <ili9341_WriteReg+0x48>)
 8004e42:	f002 f8ae 	bl	8006fa2 <HAL_SPI_Transmit>
  
  
  /* Deselect: Chip Select high */
  LCD_CS_HIGH();
 8004e46:	2201      	movs	r2, #1
 8004e48:	2104      	movs	r1, #4
 8004e4a:	4804      	ldr	r0, [pc, #16]	; (8004e5c <ili9341_WriteReg+0x44>)
 8004e4c:	f000 fd40 	bl	80058d0 <HAL_GPIO_WritePin>
}
 8004e50:	bf00      	nop
 8004e52:	3708      	adds	r7, #8
 8004e54:	46bd      	mov	sp, r7
 8004e56:	bd80      	pop	{r7, pc}
 8004e58:	40020c00 	.word	0x40020c00
 8004e5c:	40020800 	.word	0x40020800
 8004e60:	200007e0 	.word	0x200007e0

08004e64 <SPIx_Init>:


static void SPIx_Init(void)
{
 8004e64:	b580      	push	{r7, lr}
 8004e66:	b082      	sub	sp, #8
 8004e68:	af00      	add	r7, sp, #0
  if(HAL_SPI_GetState(&SpiHandle) == HAL_SPI_STATE_RESET)
 8004e6a:	4831      	ldr	r0, [pc, #196]	; (8004f30 <SPIx_Init+0xcc>)
 8004e6c:	f002 f9cd 	bl	800720a <HAL_SPI_GetState>
 8004e70:	4603      	mov	r3, r0
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d158      	bne.n	8004f28 <SPIx_Init+0xc4>
  {
    /* SPI configuration -----------------------------------------------------*/
    SpiHandle.Instance = SPI5;
 8004e76:	4b2e      	ldr	r3, [pc, #184]	; (8004f30 <SPIx_Init+0xcc>)
 8004e78:	4a2e      	ldr	r2, [pc, #184]	; (8004f34 <SPIx_Init+0xd0>)
 8004e7a:	601a      	str	r2, [r3, #0]
       to verify these constraints:
       - ILI9341 LCD SPI interface max baudrate is 10MHz for write and 6.66MHz for read
       - l3gd20 SPI interface max baudrate is 10MHz for write/read
       - PCLK2 frequency is set to 90 MHz 
    */  
    SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8004e7c:	4b2c      	ldr	r3, [pc, #176]	; (8004f30 <SPIx_Init+0xcc>)
 8004e7e:	2208      	movs	r2, #8
 8004e80:	61da      	str	r2, [r3, #28]

    /* On STM32F429I-Discovery, LCD ID cannot be read then keep a common configuration */
    /* for LCD and GYRO (SPI_DIRECTION_2LINES) */
    /* Note: To read a register a LCD, SPI_DIRECTION_1LINE should be set */
    SpiHandle.Init.Direction      = SPI_DIRECTION_2LINES;
 8004e82:	4b2b      	ldr	r3, [pc, #172]	; (8004f30 <SPIx_Init+0xcc>)
 8004e84:	2200      	movs	r2, #0
 8004e86:	609a      	str	r2, [r3, #8]
    SpiHandle.Init.CLKPhase       = SPI_PHASE_1EDGE;
 8004e88:	4b29      	ldr	r3, [pc, #164]	; (8004f30 <SPIx_Init+0xcc>)
 8004e8a:	2200      	movs	r2, #0
 8004e8c:	615a      	str	r2, [r3, #20]
    SpiHandle.Init.CLKPolarity    = SPI_POLARITY_LOW;
 8004e8e:	4b28      	ldr	r3, [pc, #160]	; (8004f30 <SPIx_Init+0xcc>)
 8004e90:	2200      	movs	r2, #0
 8004e92:	611a      	str	r2, [r3, #16]
    SpiHandle.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
 8004e94:	4b26      	ldr	r3, [pc, #152]	; (8004f30 <SPIx_Init+0xcc>)
 8004e96:	2200      	movs	r2, #0
 8004e98:	629a      	str	r2, [r3, #40]	; 0x28
    SpiHandle.Init.CRCPolynomial  = 7;
 8004e9a:	4b25      	ldr	r3, [pc, #148]	; (8004f30 <SPIx_Init+0xcc>)
 8004e9c:	2207      	movs	r2, #7
 8004e9e:	62da      	str	r2, [r3, #44]	; 0x2c
    SpiHandle.Init.DataSize       = SPI_DATASIZE_8BIT;
 8004ea0:	4b23      	ldr	r3, [pc, #140]	; (8004f30 <SPIx_Init+0xcc>)
 8004ea2:	2200      	movs	r2, #0
 8004ea4:	60da      	str	r2, [r3, #12]
    SpiHandle.Init.FirstBit       = SPI_FIRSTBIT_MSB;
 8004ea6:	4b22      	ldr	r3, [pc, #136]	; (8004f30 <SPIx_Init+0xcc>)
 8004ea8:	2200      	movs	r2, #0
 8004eaa:	621a      	str	r2, [r3, #32]
    SpiHandle.Init.NSS            = SPI_NSS_SOFT;
 8004eac:	4b20      	ldr	r3, [pc, #128]	; (8004f30 <SPIx_Init+0xcc>)
 8004eae:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004eb2:	619a      	str	r2, [r3, #24]
    SpiHandle.Init.TIMode         = SPI_TIMODE_DISABLED;
 8004eb4:	4b1e      	ldr	r3, [pc, #120]	; (8004f30 <SPIx_Init+0xcc>)
 8004eb6:	2200      	movs	r2, #0
 8004eb8:	625a      	str	r2, [r3, #36]	; 0x24
    SpiHandle.Init.Mode           = SPI_MODE_MASTER;
 8004eba:	4b1d      	ldr	r3, [pc, #116]	; (8004f30 <SPIx_Init+0xcc>)
 8004ebc:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004ec0:	605a      	str	r2, [r3, #4]
  
    __HAL_RCC_SPI5_CLK_ENABLE();
 8004ec2:	2300      	movs	r3, #0
 8004ec4:	607b      	str	r3, [r7, #4]
 8004ec6:	4b1c      	ldr	r3, [pc, #112]	; (8004f38 <SPIx_Init+0xd4>)
 8004ec8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004eca:	4a1b      	ldr	r2, [pc, #108]	; (8004f38 <SPIx_Init+0xd4>)
 8004ecc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004ed0:	6453      	str	r3, [r2, #68]	; 0x44
 8004ed2:	4b19      	ldr	r3, [pc, #100]	; (8004f38 <SPIx_Init+0xd4>)
 8004ed4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ed6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004eda:	607b      	str	r3, [r7, #4]
 8004edc:	687b      	ldr	r3, [r7, #4]

    /* Enable DISCOVERY_SPI GPIO clock */
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004ede:	2300      	movs	r3, #0
 8004ee0:	603b      	str	r3, [r7, #0]
 8004ee2:	4b15      	ldr	r3, [pc, #84]	; (8004f38 <SPIx_Init+0xd4>)
 8004ee4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ee6:	4a14      	ldr	r2, [pc, #80]	; (8004f38 <SPIx_Init+0xd4>)
 8004ee8:	f043 0320 	orr.w	r3, r3, #32
 8004eec:	6313      	str	r3, [r2, #48]	; 0x30
 8004eee:	4b12      	ldr	r3, [pc, #72]	; (8004f38 <SPIx_Init+0xd4>)
 8004ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ef2:	f003 0320 	and.w	r3, r3, #32
 8004ef6:	603b      	str	r3, [r7, #0]
 8004ef8:	683b      	ldr	r3, [r7, #0]

    /* configure SPI SCK, MOSI and MISO */
    GPIO_InitStructure.Pin    = (GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9);
 8004efa:	4b10      	ldr	r3, [pc, #64]	; (8004f3c <SPIx_Init+0xd8>)
 8004efc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8004f00:	601a      	str	r2, [r3, #0]
    GPIO_InitStructure.Mode   = GPIO_MODE_AF_PP;
 8004f02:	4b0e      	ldr	r3, [pc, #56]	; (8004f3c <SPIx_Init+0xd8>)
 8004f04:	2202      	movs	r2, #2
 8004f06:	605a      	str	r2, [r3, #4]
    GPIO_InitStructure.Pull   = GPIO_PULLDOWN;
 8004f08:	4b0c      	ldr	r3, [pc, #48]	; (8004f3c <SPIx_Init+0xd8>)
 8004f0a:	2202      	movs	r2, #2
 8004f0c:	609a      	str	r2, [r3, #8]
    GPIO_InitStructure.Speed  = GPIO_SPEED_MEDIUM;
 8004f0e:	4b0b      	ldr	r3, [pc, #44]	; (8004f3c <SPIx_Init+0xd8>)
 8004f10:	2201      	movs	r2, #1
 8004f12:	60da      	str	r2, [r3, #12]
    GPIO_InitStructure.Alternate = GPIO_AF5_SPI5;
 8004f14:	4b09      	ldr	r3, [pc, #36]	; (8004f3c <SPIx_Init+0xd8>)
 8004f16:	2205      	movs	r2, #5
 8004f18:	611a      	str	r2, [r3, #16]
                                    /* GPIOF */
    HAL_GPIO_Init(GPIOF, &GPIO_InitStructure);
 8004f1a:	4908      	ldr	r1, [pc, #32]	; (8004f3c <SPIx_Init+0xd8>)
 8004f1c:	4808      	ldr	r0, [pc, #32]	; (8004f40 <SPIx_Init+0xdc>)
 8004f1e:	f000 fb2d 	bl	800557c <HAL_GPIO_Init>
    HAL_SPI_Init(&SpiHandle);
 8004f22:	4803      	ldr	r0, [pc, #12]	; (8004f30 <SPIx_Init+0xcc>)
 8004f24:	f001 ffcf 	bl	8006ec6 <HAL_SPI_Init>
  } 
}
 8004f28:	bf00      	nop
 8004f2a:	3708      	adds	r7, #8
 8004f2c:	46bd      	mov	sp, r7
 8004f2e:	bd80      	pop	{r7, pc}
 8004f30:	200007e0 	.word	0x200007e0
 8004f34:	40015000 	.word	0x40015000
 8004f38:	40023800 	.word	0x40023800
 8004f3c:	20008cf4 	.word	0x20008cf4
 8004f40:	40021400 	.word	0x40021400

08004f44 <LCD_IO_Init>:

void LCD_IO_Init(void)
{
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b088      	sub	sp, #32
 8004f48:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStructure;
    
    /* Configure NCS in Output Push-Pull mode */
    LCD_WRX_GPIO_CLK_ENABLE();
 8004f4a:	2300      	movs	r3, #0
 8004f4c:	60bb      	str	r3, [r7, #8]
 8004f4e:	4b32      	ldr	r3, [pc, #200]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f52:	4a31      	ldr	r2, [pc, #196]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f54:	f043 0308 	orr.w	r3, r3, #8
 8004f58:	6313      	str	r3, [r2, #48]	; 0x30
 8004f5a:	4b2f      	ldr	r3, [pc, #188]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f5e:	f003 0308 	and.w	r3, r3, #8
 8004f62:	60bb      	str	r3, [r7, #8]
 8004f64:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStructure.Pin     = LCD_WRX_PIN;
 8004f66:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004f6a:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 8004f6c:	2301      	movs	r3, #1
 8004f6e:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 8004f70:	2300      	movs	r3, #0
 8004f72:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 8004f74:	2302      	movs	r3, #2
 8004f76:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_WRX_GPIO_PORT, &GPIO_InitStructure);
 8004f78:	f107 030c 	add.w	r3, r7, #12
 8004f7c:	4619      	mov	r1, r3
 8004f7e:	4827      	ldr	r0, [pc, #156]	; (800501c <LCD_IO_Init+0xd8>)
 8004f80:	f000 fafc 	bl	800557c <HAL_GPIO_Init>
    
    LCD_RDX_GPIO_CLK_ENABLE();
 8004f84:	2300      	movs	r3, #0
 8004f86:	607b      	str	r3, [r7, #4]
 8004f88:	4b23      	ldr	r3, [pc, #140]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f8c:	4a22      	ldr	r2, [pc, #136]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f8e:	f043 0308 	orr.w	r3, r3, #8
 8004f92:	6313      	str	r3, [r2, #48]	; 0x30
 8004f94:	4b20      	ldr	r3, [pc, #128]	; (8005018 <LCD_IO_Init+0xd4>)
 8004f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f98:	f003 0308 	and.w	r3, r3, #8
 8004f9c:	607b      	str	r3, [r7, #4]
 8004f9e:	687b      	ldr	r3, [r7, #4]
    GPIO_InitStructure.Pin     = LCD_RDX_PIN;
 8004fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004fa4:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 8004faa:	2300      	movs	r3, #0
 8004fac:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 8004fae:	2302      	movs	r3, #2
 8004fb0:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_RDX_GPIO_PORT, &GPIO_InitStructure);
 8004fb2:	f107 030c 	add.w	r3, r7, #12
 8004fb6:	4619      	mov	r1, r3
 8004fb8:	4818      	ldr	r0, [pc, #96]	; (800501c <LCD_IO_Init+0xd8>)
 8004fba:	f000 fadf 	bl	800557c <HAL_GPIO_Init>
    
    /* Configure the LCD Control pins ----------------------------------------*/
    LCD_NCS_GPIO_CLK_ENABLE();
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	603b      	str	r3, [r7, #0]
 8004fc2:	4b15      	ldr	r3, [pc, #84]	; (8005018 <LCD_IO_Init+0xd4>)
 8004fc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fc6:	4a14      	ldr	r2, [pc, #80]	; (8005018 <LCD_IO_Init+0xd4>)
 8004fc8:	f043 0304 	orr.w	r3, r3, #4
 8004fcc:	6313      	str	r3, [r2, #48]	; 0x30
 8004fce:	4b12      	ldr	r3, [pc, #72]	; (8005018 <LCD_IO_Init+0xd4>)
 8004fd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fd2:	f003 0304 	and.w	r3, r3, #4
 8004fd6:	603b      	str	r3, [r7, #0]
 8004fd8:	683b      	ldr	r3, [r7, #0]
    
    /* Configure NCS in Output Push-Pull mode */
    GPIO_InitStructure.Pin     = LCD_NCS_PIN;
 8004fda:	2304      	movs	r3, #4
 8004fdc:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 8004fde:	2301      	movs	r3, #1
 8004fe0:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 8004fe2:	2300      	movs	r3, #0
 8004fe4:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 8004fe6:	2302      	movs	r3, #2
 8004fe8:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_NCS_GPIO_PORT, &GPIO_InitStructure);
 8004fea:	f107 030c 	add.w	r3, r7, #12
 8004fee:	4619      	mov	r1, r3
 8004ff0:	480b      	ldr	r0, [pc, #44]	; (8005020 <LCD_IO_Init+0xdc>)
 8004ff2:	f000 fac3 	bl	800557c <HAL_GPIO_Init>
    
    /* Set or Reset the control line */
    LCD_CS_LOW();
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	2104      	movs	r1, #4
 8004ffa:	4809      	ldr	r0, [pc, #36]	; (8005020 <LCD_IO_Init+0xdc>)
 8004ffc:	f000 fc68 	bl	80058d0 <HAL_GPIO_WritePin>
    LCD_CS_HIGH();
 8005000:	2201      	movs	r2, #1
 8005002:	2104      	movs	r1, #4
 8005004:	4806      	ldr	r0, [pc, #24]	; (8005020 <LCD_IO_Init+0xdc>)
 8005006:	f000 fc63 	bl	80058d0 <HAL_GPIO_WritePin>
    
    SPIx_Init();
 800500a:	f7ff ff2b 	bl	8004e64 <SPIx_Init>
}
 800500e:	bf00      	nop
 8005010:	3720      	adds	r7, #32
 8005012:	46bd      	mov	sp, r7
 8005014:	bd80      	pop	{r7, pc}
 8005016:	bf00      	nop
 8005018:	40023800 	.word	0x40023800
 800501c:	40020c00 	.word	0x40020c00
 8005020:	40020800 	.word	0x40020800

08005024 <ili9341_Init>:

void ili9341_Init(void)
{
 8005024:	b580      	push	{r7, lr}
 8005026:	af00      	add	r7, sp, #0
  /* Initialize ILI9341 low level bus layer ----------------------------------*/
  LCD_IO_Init();
 8005028:	f7ff ff8c 	bl	8004f44 <LCD_IO_Init>
  
  /* Configure LCD */
  ili9341_WriteReg(0xCA);
 800502c:	20ca      	movs	r0, #202	; 0xca
 800502e:	f7ff fef3 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0xC3);
 8005032:	20c3      	movs	r0, #195	; 0xc3
 8005034:	f7ff feca 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x08);
 8005038:	2008      	movs	r0, #8
 800503a:	f7ff fec7 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x50);
 800503e:	2050      	movs	r0, #80	; 0x50
 8005040:	f7ff fec4 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWERB);
 8005044:	20cf      	movs	r0, #207	; 0xcf
 8005046:	f7ff fee7 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 800504a:	2000      	movs	r0, #0
 800504c:	f7ff febe 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0xC1);
 8005050:	20c1      	movs	r0, #193	; 0xc1
 8005052:	f7ff febb 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x30);
 8005056:	2030      	movs	r0, #48	; 0x30
 8005058:	f7ff feb8 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER_SEQ);
 800505c:	20ed      	movs	r0, #237	; 0xed
 800505e:	f7ff fedb 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x64);
 8005062:	2064      	movs	r0, #100	; 0x64
 8005064:	f7ff feb2 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x03);
 8005068:	2003      	movs	r0, #3
 800506a:	f7ff feaf 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x12);
 800506e:	2012      	movs	r0, #18
 8005070:	f7ff feac 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x81);
 8005074:	2081      	movs	r0, #129	; 0x81
 8005076:	f7ff fea9 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_DTCA);
 800507a:	20e8      	movs	r0, #232	; 0xe8
 800507c:	f7ff fecc 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x85);
 8005080:	2085      	movs	r0, #133	; 0x85
 8005082:	f7ff fea3 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8005086:	2000      	movs	r0, #0
 8005088:	f7ff fea0 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x78);
 800508c:	2078      	movs	r0, #120	; 0x78
 800508e:	f7ff fe9d 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWERA);
 8005092:	20cb      	movs	r0, #203	; 0xcb
 8005094:	f7ff fec0 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x39);
 8005098:	2039      	movs	r0, #57	; 0x39
 800509a:	f7ff fe97 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x2C);
 800509e:	202c      	movs	r0, #44	; 0x2c
 80050a0:	f7ff fe94 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 80050a4:	2000      	movs	r0, #0
 80050a6:	f7ff fe91 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x34);
 80050aa:	2034      	movs	r0, #52	; 0x34
 80050ac:	f7ff fe8e 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x02);
 80050b0:	2002      	movs	r0, #2
 80050b2:	f7ff fe8b 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_PRC);
 80050b6:	20f7      	movs	r0, #247	; 0xf7
 80050b8:	f7ff feae 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x20);
 80050bc:	2020      	movs	r0, #32
 80050be:	f7ff fe85 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_DTCB);
 80050c2:	20ea      	movs	r0, #234	; 0xea
 80050c4:	f7ff fea8 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 80050c8:	2000      	movs	r0, #0
 80050ca:	f7ff fe7f 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 80050ce:	2000      	movs	r0, #0
 80050d0:	f7ff fe7c 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_FRMCTR1);
 80050d4:	20b1      	movs	r0, #177	; 0xb1
 80050d6:	f7ff fe9f 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 80050da:	2000      	movs	r0, #0
 80050dc:	f7ff fe76 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x1B);
 80050e0:	201b      	movs	r0, #27
 80050e2:	f7ff fe73 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_DFC);
 80050e6:	20b6      	movs	r0, #182	; 0xb6
 80050e8:	f7ff fe96 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x0A);
 80050ec:	200a      	movs	r0, #10
 80050ee:	f7ff fe6d 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0xA2);
 80050f2:	20a2      	movs	r0, #162	; 0xa2
 80050f4:	f7ff fe6a 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER1);
 80050f8:	20c0      	movs	r0, #192	; 0xc0
 80050fa:	f7ff fe8d 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x10);
 80050fe:	2010      	movs	r0, #16
 8005100:	f7ff fe64 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER2);
 8005104:	20c1      	movs	r0, #193	; 0xc1
 8005106:	f7ff fe87 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x10);
 800510a:	2010      	movs	r0, #16
 800510c:	f7ff fe5e 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_VCOM1);
 8005110:	20c5      	movs	r0, #197	; 0xc5
 8005112:	f7ff fe81 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x45);
 8005116:	2045      	movs	r0, #69	; 0x45
 8005118:	f7ff fe58 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x15);
 800511c:	2015      	movs	r0, #21
 800511e:	f7ff fe55 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_VCOM2);
 8005122:	20c7      	movs	r0, #199	; 0xc7
 8005124:	f7ff fe78 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x90);
 8005128:	2090      	movs	r0, #144	; 0x90
 800512a:	f7ff fe4f 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_MAC);
 800512e:	2036      	movs	r0, #54	; 0x36
 8005130:	f7ff fe72 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0xC8);
 8005134:	20c8      	movs	r0, #200	; 0xc8
 8005136:	f7ff fe49 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_3GAMMA_EN);
 800513a:	20f2      	movs	r0, #242	; 0xf2
 800513c:	f7ff fe6c 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8005140:	2000      	movs	r0, #0
 8005142:	f7ff fe43 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_RGB_INTERFACE);
 8005146:	20b0      	movs	r0, #176	; 0xb0
 8005148:	f7ff fe66 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0xC2);
 800514c:	20c2      	movs	r0, #194	; 0xc2
 800514e:	f7ff fe3d 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_DFC);
 8005152:	20b6      	movs	r0, #182	; 0xb6
 8005154:	f7ff fe60 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x0A);
 8005158:	200a      	movs	r0, #10
 800515a:	f7ff fe37 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0xA7);
 800515e:	20a7      	movs	r0, #167	; 0xa7
 8005160:	f7ff fe34 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x27);
 8005164:	2027      	movs	r0, #39	; 0x27
 8005166:	f7ff fe31 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x04);
 800516a:	2004      	movs	r0, #4
 800516c:	f7ff fe2e 	bl	8004dcc <ili9341_WriteData>
  
  /* Colomn address set */
  ili9341_WriteReg(LCD_COLUMN_ADDR);
 8005170:	202a      	movs	r0, #42	; 0x2a
 8005172:	f7ff fe51 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8005176:	2000      	movs	r0, #0
 8005178:	f7ff fe28 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 800517c:	2000      	movs	r0, #0
 800517e:	f7ff fe25 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8005182:	2000      	movs	r0, #0
 8005184:	f7ff fe22 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0xEF);
 8005188:	20ef      	movs	r0, #239	; 0xef
 800518a:	f7ff fe1f 	bl	8004dcc <ili9341_WriteData>
  /* Page address set */
  ili9341_WriteReg(LCD_PAGE_ADDR);
 800518e:	202b      	movs	r0, #43	; 0x2b
 8005190:	f7ff fe42 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8005194:	2000      	movs	r0, #0
 8005196:	f7ff fe19 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 800519a:	2000      	movs	r0, #0
 800519c:	f7ff fe16 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x01);
 80051a0:	2001      	movs	r0, #1
 80051a2:	f7ff fe13 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x3F);
 80051a6:	203f      	movs	r0, #63	; 0x3f
 80051a8:	f7ff fe10 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_INTERFACE);
 80051ac:	20f6      	movs	r0, #246	; 0xf6
 80051ae:	f7ff fe33 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x01);
 80051b2:	2001      	movs	r0, #1
 80051b4:	f7ff fe0a 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 80051b8:	2000      	movs	r0, #0
 80051ba:	f7ff fe07 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x06);
 80051be:	2006      	movs	r0, #6
 80051c0:	f7ff fe04 	bl	8004dcc <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_GRAM);
 80051c4:	202c      	movs	r0, #44	; 0x2c
 80051c6:	f7ff fe27 	bl	8004e18 <ili9341_WriteReg>
  HAL_Delay(200);
 80051ca:	20c8      	movs	r0, #200	; 0xc8
 80051cc:	f000 f8b6 	bl	800533c <HAL_Delay>
  
  ili9341_WriteReg(LCD_GAMMA);
 80051d0:	2026      	movs	r0, #38	; 0x26
 80051d2:	f7ff fe21 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x01);
 80051d6:	2001      	movs	r0, #1
 80051d8:	f7ff fdf8 	bl	8004dcc <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_PGAMMA);
 80051dc:	20e0      	movs	r0, #224	; 0xe0
 80051de:	f7ff fe1b 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x0F);
 80051e2:	200f      	movs	r0, #15
 80051e4:	f7ff fdf2 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x29);
 80051e8:	2029      	movs	r0, #41	; 0x29
 80051ea:	f7ff fdef 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x24);
 80051ee:	2024      	movs	r0, #36	; 0x24
 80051f0:	f7ff fdec 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x0C);
 80051f4:	200c      	movs	r0, #12
 80051f6:	f7ff fde9 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x0E);
 80051fa:	200e      	movs	r0, #14
 80051fc:	f7ff fde6 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x09);
 8005200:	2009      	movs	r0, #9
 8005202:	f7ff fde3 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x4E);
 8005206:	204e      	movs	r0, #78	; 0x4e
 8005208:	f7ff fde0 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x78);
 800520c:	2078      	movs	r0, #120	; 0x78
 800520e:	f7ff fddd 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x3C);
 8005212:	203c      	movs	r0, #60	; 0x3c
 8005214:	f7ff fdda 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x09);
 8005218:	2009      	movs	r0, #9
 800521a:	f7ff fdd7 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x13);
 800521e:	2013      	movs	r0, #19
 8005220:	f7ff fdd4 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x05);
 8005224:	2005      	movs	r0, #5
 8005226:	f7ff fdd1 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x17);
 800522a:	2017      	movs	r0, #23
 800522c:	f7ff fdce 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x11);
 8005230:	2011      	movs	r0, #17
 8005232:	f7ff fdcb 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8005236:	2000      	movs	r0, #0
 8005238:	f7ff fdc8 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteReg(LCD_NGAMMA);
 800523c:	20e1      	movs	r0, #225	; 0xe1
 800523e:	f7ff fdeb 	bl	8004e18 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8005242:	2000      	movs	r0, #0
 8005244:	f7ff fdc2 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x16);
 8005248:	2016      	movs	r0, #22
 800524a:	f7ff fdbf 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x1B);
 800524e:	201b      	movs	r0, #27
 8005250:	f7ff fdbc 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x04);
 8005254:	2004      	movs	r0, #4
 8005256:	f7ff fdb9 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x11);
 800525a:	2011      	movs	r0, #17
 800525c:	f7ff fdb6 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x07);
 8005260:	2007      	movs	r0, #7
 8005262:	f7ff fdb3 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x31);
 8005266:	2031      	movs	r0, #49	; 0x31
 8005268:	f7ff fdb0 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x33);
 800526c:	2033      	movs	r0, #51	; 0x33
 800526e:	f7ff fdad 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x42);
 8005272:	2042      	movs	r0, #66	; 0x42
 8005274:	f7ff fdaa 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x05);
 8005278:	2005      	movs	r0, #5
 800527a:	f7ff fda7 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x0C);
 800527e:	200c      	movs	r0, #12
 8005280:	f7ff fda4 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x0A);
 8005284:	200a      	movs	r0, #10
 8005286:	f7ff fda1 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x28);
 800528a:	2028      	movs	r0, #40	; 0x28
 800528c:	f7ff fd9e 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x2F);
 8005290:	202f      	movs	r0, #47	; 0x2f
 8005292:	f7ff fd9b 	bl	8004dcc <ili9341_WriteData>
  ili9341_WriteData(0x0F);
 8005296:	200f      	movs	r0, #15
 8005298:	f7ff fd98 	bl	8004dcc <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_SLEEP_OUT);
 800529c:	2011      	movs	r0, #17
 800529e:	f7ff fdbb 	bl	8004e18 <ili9341_WriteReg>
  HAL_Delay(200);
 80052a2:	20c8      	movs	r0, #200	; 0xc8
 80052a4:	f000 f84a 	bl	800533c <HAL_Delay>
  ili9341_WriteReg(LCD_DISPLAY_ON);
 80052a8:	2029      	movs	r0, #41	; 0x29
 80052aa:	f7ff fdb5 	bl	8004e18 <ili9341_WriteReg>
  /* GRAM start writing */
  ili9341_WriteReg(LCD_GRAM);
 80052ae:	202c      	movs	r0, #44	; 0x2c
 80052b0:	f7ff fdb2 	bl	8004e18 <ili9341_WriteReg>
}
 80052b4:	bf00      	nop
 80052b6:	bd80      	pop	{r7, pc}

080052b8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80052b8:	b580      	push	{r7, lr}
 80052ba:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80052bc:	4b0e      	ldr	r3, [pc, #56]	; (80052f8 <HAL_Init+0x40>)
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	4a0d      	ldr	r2, [pc, #52]	; (80052f8 <HAL_Init+0x40>)
 80052c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80052c6:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80052c8:	4b0b      	ldr	r3, [pc, #44]	; (80052f8 <HAL_Init+0x40>)
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	4a0a      	ldr	r2, [pc, #40]	; (80052f8 <HAL_Init+0x40>)
 80052ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80052d2:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80052d4:	4b08      	ldr	r3, [pc, #32]	; (80052f8 <HAL_Init+0x40>)
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	4a07      	ldr	r2, [pc, #28]	; (80052f8 <HAL_Init+0x40>)
 80052da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80052de:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80052e0:	2003      	movs	r0, #3
 80052e2:	f000 f8fa 	bl	80054da <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80052e6:	2000      	movs	r0, #0
 80052e8:	f7fb fe7c 	bl	8000fe4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80052ec:	f7fb fc6a 	bl	8000bc4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80052f0:	2300      	movs	r3, #0
}
 80052f2:	4618      	mov	r0, r3
 80052f4:	bd80      	pop	{r7, pc}
 80052f6:	bf00      	nop
 80052f8:	40023c00 	.word	0x40023c00

080052fc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80052fc:	b480      	push	{r7}
 80052fe:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8005300:	4b06      	ldr	r3, [pc, #24]	; (800531c <HAL_IncTick+0x20>)
 8005302:	781b      	ldrb	r3, [r3, #0]
 8005304:	461a      	mov	r2, r3
 8005306:	4b06      	ldr	r3, [pc, #24]	; (8005320 <HAL_IncTick+0x24>)
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	4413      	add	r3, r2
 800530c:	4a04      	ldr	r2, [pc, #16]	; (8005320 <HAL_IncTick+0x24>)
 800530e:	6013      	str	r3, [r2, #0]
}
 8005310:	bf00      	nop
 8005312:	46bd      	mov	sp, r7
 8005314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005318:	4770      	bx	lr
 800531a:	bf00      	nop
 800531c:	20000010 	.word	0x20000010
 8005320:	20008d7c 	.word	0x20008d7c

08005324 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8005324:	b480      	push	{r7}
 8005326:	af00      	add	r7, sp, #0
  return uwTick;
 8005328:	4b03      	ldr	r3, [pc, #12]	; (8005338 <HAL_GetTick+0x14>)
 800532a:	681b      	ldr	r3, [r3, #0]
}
 800532c:	4618      	mov	r0, r3
 800532e:	46bd      	mov	sp, r7
 8005330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005334:	4770      	bx	lr
 8005336:	bf00      	nop
 8005338:	20008d7c 	.word	0x20008d7c

0800533c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800533c:	b580      	push	{r7, lr}
 800533e:	b084      	sub	sp, #16
 8005340:	af00      	add	r7, sp, #0
 8005342:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8005344:	f7ff ffee 	bl	8005324 <HAL_GetTick>
 8005348:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005354:	d005      	beq.n	8005362 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8005356:	4b09      	ldr	r3, [pc, #36]	; (800537c <HAL_Delay+0x40>)
 8005358:	781b      	ldrb	r3, [r3, #0]
 800535a:	461a      	mov	r2, r3
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	4413      	add	r3, r2
 8005360:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005362:	bf00      	nop
 8005364:	f7ff ffde 	bl	8005324 <HAL_GetTick>
 8005368:	4602      	mov	r2, r0
 800536a:	68bb      	ldr	r3, [r7, #8]
 800536c:	1ad3      	subs	r3, r2, r3
 800536e:	68fa      	ldr	r2, [r7, #12]
 8005370:	429a      	cmp	r2, r3
 8005372:	d8f7      	bhi.n	8005364 <HAL_Delay+0x28>
  {
  }
}
 8005374:	bf00      	nop
 8005376:	3710      	adds	r7, #16
 8005378:	46bd      	mov	sp, r7
 800537a:	bd80      	pop	{r7, pc}
 800537c:	20000010 	.word	0x20000010

08005380 <__NVIC_SetPriorityGrouping>:
{
 8005380:	b480      	push	{r7}
 8005382:	b085      	sub	sp, #20
 8005384:	af00      	add	r7, sp, #0
 8005386:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	f003 0307 	and.w	r3, r3, #7
 800538e:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005390:	4b0c      	ldr	r3, [pc, #48]	; (80053c4 <__NVIC_SetPriorityGrouping+0x44>)
 8005392:	68db      	ldr	r3, [r3, #12]
 8005394:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005396:	68ba      	ldr	r2, [r7, #8]
 8005398:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800539c:	4013      	ands	r3, r2
 800539e:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80053a4:	68bb      	ldr	r3, [r7, #8]
 80053a6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80053a8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80053ac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80053b0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80053b2:	4a04      	ldr	r2, [pc, #16]	; (80053c4 <__NVIC_SetPriorityGrouping+0x44>)
 80053b4:	68bb      	ldr	r3, [r7, #8]
 80053b6:	60d3      	str	r3, [r2, #12]
}
 80053b8:	bf00      	nop
 80053ba:	3714      	adds	r7, #20
 80053bc:	46bd      	mov	sp, r7
 80053be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053c2:	4770      	bx	lr
 80053c4:	e000ed00 	.word	0xe000ed00

080053c8 <__NVIC_GetPriorityGrouping>:
{
 80053c8:	b480      	push	{r7}
 80053ca:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80053cc:	4b04      	ldr	r3, [pc, #16]	; (80053e0 <__NVIC_GetPriorityGrouping+0x18>)
 80053ce:	68db      	ldr	r3, [r3, #12]
 80053d0:	0a1b      	lsrs	r3, r3, #8
 80053d2:	f003 0307 	and.w	r3, r3, #7
}
 80053d6:	4618      	mov	r0, r3
 80053d8:	46bd      	mov	sp, r7
 80053da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053de:	4770      	bx	lr
 80053e0:	e000ed00 	.word	0xe000ed00

080053e4 <__NVIC_EnableIRQ>:
{
 80053e4:	b480      	push	{r7}
 80053e6:	b083      	sub	sp, #12
 80053e8:	af00      	add	r7, sp, #0
 80053ea:	4603      	mov	r3, r0
 80053ec:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80053ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80053f2:	2b00      	cmp	r3, #0
 80053f4:	db0b      	blt.n	800540e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80053f6:	79fb      	ldrb	r3, [r7, #7]
 80053f8:	f003 021f 	and.w	r2, r3, #31
 80053fc:	4907      	ldr	r1, [pc, #28]	; (800541c <__NVIC_EnableIRQ+0x38>)
 80053fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005402:	095b      	lsrs	r3, r3, #5
 8005404:	2001      	movs	r0, #1
 8005406:	fa00 f202 	lsl.w	r2, r0, r2
 800540a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800540e:	bf00      	nop
 8005410:	370c      	adds	r7, #12
 8005412:	46bd      	mov	sp, r7
 8005414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005418:	4770      	bx	lr
 800541a:	bf00      	nop
 800541c:	e000e100 	.word	0xe000e100

08005420 <__NVIC_SetPriority>:
{
 8005420:	b480      	push	{r7}
 8005422:	b083      	sub	sp, #12
 8005424:	af00      	add	r7, sp, #0
 8005426:	4603      	mov	r3, r0
 8005428:	6039      	str	r1, [r7, #0]
 800542a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800542c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005430:	2b00      	cmp	r3, #0
 8005432:	db0a      	blt.n	800544a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005434:	683b      	ldr	r3, [r7, #0]
 8005436:	b2da      	uxtb	r2, r3
 8005438:	490c      	ldr	r1, [pc, #48]	; (800546c <__NVIC_SetPriority+0x4c>)
 800543a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800543e:	0112      	lsls	r2, r2, #4
 8005440:	b2d2      	uxtb	r2, r2
 8005442:	440b      	add	r3, r1
 8005444:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8005448:	e00a      	b.n	8005460 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800544a:	683b      	ldr	r3, [r7, #0]
 800544c:	b2da      	uxtb	r2, r3
 800544e:	4908      	ldr	r1, [pc, #32]	; (8005470 <__NVIC_SetPriority+0x50>)
 8005450:	79fb      	ldrb	r3, [r7, #7]
 8005452:	f003 030f 	and.w	r3, r3, #15
 8005456:	3b04      	subs	r3, #4
 8005458:	0112      	lsls	r2, r2, #4
 800545a:	b2d2      	uxtb	r2, r2
 800545c:	440b      	add	r3, r1
 800545e:	761a      	strb	r2, [r3, #24]
}
 8005460:	bf00      	nop
 8005462:	370c      	adds	r7, #12
 8005464:	46bd      	mov	sp, r7
 8005466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800546a:	4770      	bx	lr
 800546c:	e000e100 	.word	0xe000e100
 8005470:	e000ed00 	.word	0xe000ed00

08005474 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005474:	b480      	push	{r7}
 8005476:	b089      	sub	sp, #36	; 0x24
 8005478:	af00      	add	r7, sp, #0
 800547a:	60f8      	str	r0, [r7, #12]
 800547c:	60b9      	str	r1, [r7, #8]
 800547e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	f003 0307 	and.w	r3, r3, #7
 8005486:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005488:	69fb      	ldr	r3, [r7, #28]
 800548a:	f1c3 0307 	rsb	r3, r3, #7
 800548e:	2b04      	cmp	r3, #4
 8005490:	bf28      	it	cs
 8005492:	2304      	movcs	r3, #4
 8005494:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005496:	69fb      	ldr	r3, [r7, #28]
 8005498:	3304      	adds	r3, #4
 800549a:	2b06      	cmp	r3, #6
 800549c:	d902      	bls.n	80054a4 <NVIC_EncodePriority+0x30>
 800549e:	69fb      	ldr	r3, [r7, #28]
 80054a0:	3b03      	subs	r3, #3
 80054a2:	e000      	b.n	80054a6 <NVIC_EncodePriority+0x32>
 80054a4:	2300      	movs	r3, #0
 80054a6:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80054a8:	f04f 32ff 	mov.w	r2, #4294967295
 80054ac:	69bb      	ldr	r3, [r7, #24]
 80054ae:	fa02 f303 	lsl.w	r3, r2, r3
 80054b2:	43da      	mvns	r2, r3
 80054b4:	68bb      	ldr	r3, [r7, #8]
 80054b6:	401a      	ands	r2, r3
 80054b8:	697b      	ldr	r3, [r7, #20]
 80054ba:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80054bc:	f04f 31ff 	mov.w	r1, #4294967295
 80054c0:	697b      	ldr	r3, [r7, #20]
 80054c2:	fa01 f303 	lsl.w	r3, r1, r3
 80054c6:	43d9      	mvns	r1, r3
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80054cc:	4313      	orrs	r3, r2
         );
}
 80054ce:	4618      	mov	r0, r3
 80054d0:	3724      	adds	r7, #36	; 0x24
 80054d2:	46bd      	mov	sp, r7
 80054d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054d8:	4770      	bx	lr

080054da <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80054da:	b580      	push	{r7, lr}
 80054dc:	b082      	sub	sp, #8
 80054de:	af00      	add	r7, sp, #0
 80054e0:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80054e2:	6878      	ldr	r0, [r7, #4]
 80054e4:	f7ff ff4c 	bl	8005380 <__NVIC_SetPriorityGrouping>
}
 80054e8:	bf00      	nop
 80054ea:	3708      	adds	r7, #8
 80054ec:	46bd      	mov	sp, r7
 80054ee:	bd80      	pop	{r7, pc}

080054f0 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80054f0:	b580      	push	{r7, lr}
 80054f2:	b086      	sub	sp, #24
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	4603      	mov	r3, r0
 80054f8:	60b9      	str	r1, [r7, #8]
 80054fa:	607a      	str	r2, [r7, #4]
 80054fc:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80054fe:	2300      	movs	r3, #0
 8005500:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8005502:	f7ff ff61 	bl	80053c8 <__NVIC_GetPriorityGrouping>
 8005506:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8005508:	687a      	ldr	r2, [r7, #4]
 800550a:	68b9      	ldr	r1, [r7, #8]
 800550c:	6978      	ldr	r0, [r7, #20]
 800550e:	f7ff ffb1 	bl	8005474 <NVIC_EncodePriority>
 8005512:	4602      	mov	r2, r0
 8005514:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005518:	4611      	mov	r1, r2
 800551a:	4618      	mov	r0, r3
 800551c:	f7ff ff80 	bl	8005420 <__NVIC_SetPriority>
}
 8005520:	bf00      	nop
 8005522:	3718      	adds	r7, #24
 8005524:	46bd      	mov	sp, r7
 8005526:	bd80      	pop	{r7, pc}

08005528 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8005528:	b580      	push	{r7, lr}
 800552a:	b082      	sub	sp, #8
 800552c:	af00      	add	r7, sp, #0
 800552e:	4603      	mov	r3, r0
 8005530:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8005532:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005536:	4618      	mov	r0, r3
 8005538:	f7ff ff54 	bl	80053e4 <__NVIC_EnableIRQ>
}
 800553c:	bf00      	nop
 800553e:	3708      	adds	r7, #8
 8005540:	46bd      	mov	sp, r7
 8005542:	bd80      	pop	{r7, pc}

08005544 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005544:	b580      	push	{r7, lr}
 8005546:	b082      	sub	sp, #8
 8005548:	af00      	add	r7, sp, #0
 800554a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	2b00      	cmp	r3, #0
 8005550:	d101      	bne.n	8005556 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8005552:	2301      	movs	r3, #1
 8005554:	e00e      	b.n	8005574 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	795b      	ldrb	r3, [r3, #5]
 800555a:	b2db      	uxtb	r3, r3
 800555c:	2b00      	cmp	r3, #0
 800555e:	d105      	bne.n	800556c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	2200      	movs	r2, #0
 8005564:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005566:	6878      	ldr	r0, [r7, #4]
 8005568:	f7fb fb58 	bl	8000c1c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	2201      	movs	r2, #1
 8005570:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8005572:	2300      	movs	r3, #0
}
 8005574:	4618      	mov	r0, r3
 8005576:	3708      	adds	r7, #8
 8005578:	46bd      	mov	sp, r7
 800557a:	bd80      	pop	{r7, pc}

0800557c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800557c:	b480      	push	{r7}
 800557e:	b089      	sub	sp, #36	; 0x24
 8005580:	af00      	add	r7, sp, #0
 8005582:	6078      	str	r0, [r7, #4]
 8005584:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8005586:	2300      	movs	r3, #0
 8005588:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800558a:	2300      	movs	r3, #0
 800558c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800558e:	2300      	movs	r3, #0
 8005590:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005592:	2300      	movs	r3, #0
 8005594:	61fb      	str	r3, [r7, #28]
 8005596:	e177      	b.n	8005888 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8005598:	2201      	movs	r2, #1
 800559a:	69fb      	ldr	r3, [r7, #28]
 800559c:	fa02 f303 	lsl.w	r3, r2, r3
 80055a0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80055a2:	683b      	ldr	r3, [r7, #0]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	697a      	ldr	r2, [r7, #20]
 80055a8:	4013      	ands	r3, r2
 80055aa:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80055ac:	693a      	ldr	r2, [r7, #16]
 80055ae:	697b      	ldr	r3, [r7, #20]
 80055b0:	429a      	cmp	r2, r3
 80055b2:	f040 8166 	bne.w	8005882 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80055b6:	683b      	ldr	r3, [r7, #0]
 80055b8:	685b      	ldr	r3, [r3, #4]
 80055ba:	2b01      	cmp	r3, #1
 80055bc:	d00b      	beq.n	80055d6 <HAL_GPIO_Init+0x5a>
 80055be:	683b      	ldr	r3, [r7, #0]
 80055c0:	685b      	ldr	r3, [r3, #4]
 80055c2:	2b02      	cmp	r3, #2
 80055c4:	d007      	beq.n	80055d6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80055c6:	683b      	ldr	r3, [r7, #0]
 80055c8:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80055ca:	2b11      	cmp	r3, #17
 80055cc:	d003      	beq.n	80055d6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80055ce:	683b      	ldr	r3, [r7, #0]
 80055d0:	685b      	ldr	r3, [r3, #4]
 80055d2:	2b12      	cmp	r3, #18
 80055d4:	d130      	bne.n	8005638 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	689b      	ldr	r3, [r3, #8]
 80055da:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80055dc:	69fb      	ldr	r3, [r7, #28]
 80055de:	005b      	lsls	r3, r3, #1
 80055e0:	2203      	movs	r2, #3
 80055e2:	fa02 f303 	lsl.w	r3, r2, r3
 80055e6:	43db      	mvns	r3, r3
 80055e8:	69ba      	ldr	r2, [r7, #24]
 80055ea:	4013      	ands	r3, r2
 80055ec:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80055ee:	683b      	ldr	r3, [r7, #0]
 80055f0:	68da      	ldr	r2, [r3, #12]
 80055f2:	69fb      	ldr	r3, [r7, #28]
 80055f4:	005b      	lsls	r3, r3, #1
 80055f6:	fa02 f303 	lsl.w	r3, r2, r3
 80055fa:	69ba      	ldr	r2, [r7, #24]
 80055fc:	4313      	orrs	r3, r2
 80055fe:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	69ba      	ldr	r2, [r7, #24]
 8005604:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	685b      	ldr	r3, [r3, #4]
 800560a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800560c:	2201      	movs	r2, #1
 800560e:	69fb      	ldr	r3, [r7, #28]
 8005610:	fa02 f303 	lsl.w	r3, r2, r3
 8005614:	43db      	mvns	r3, r3
 8005616:	69ba      	ldr	r2, [r7, #24]
 8005618:	4013      	ands	r3, r2
 800561a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800561c:	683b      	ldr	r3, [r7, #0]
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	091b      	lsrs	r3, r3, #4
 8005622:	f003 0201 	and.w	r2, r3, #1
 8005626:	69fb      	ldr	r3, [r7, #28]
 8005628:	fa02 f303 	lsl.w	r3, r2, r3
 800562c:	69ba      	ldr	r2, [r7, #24]
 800562e:	4313      	orrs	r3, r2
 8005630:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	69ba      	ldr	r2, [r7, #24]
 8005636:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	68db      	ldr	r3, [r3, #12]
 800563c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800563e:	69fb      	ldr	r3, [r7, #28]
 8005640:	005b      	lsls	r3, r3, #1
 8005642:	2203      	movs	r2, #3
 8005644:	fa02 f303 	lsl.w	r3, r2, r3
 8005648:	43db      	mvns	r3, r3
 800564a:	69ba      	ldr	r2, [r7, #24]
 800564c:	4013      	ands	r3, r2
 800564e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005650:	683b      	ldr	r3, [r7, #0]
 8005652:	689a      	ldr	r2, [r3, #8]
 8005654:	69fb      	ldr	r3, [r7, #28]
 8005656:	005b      	lsls	r3, r3, #1
 8005658:	fa02 f303 	lsl.w	r3, r2, r3
 800565c:	69ba      	ldr	r2, [r7, #24]
 800565e:	4313      	orrs	r3, r2
 8005660:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8005662:	687b      	ldr	r3, [r7, #4]
 8005664:	69ba      	ldr	r2, [r7, #24]
 8005666:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005668:	683b      	ldr	r3, [r7, #0]
 800566a:	685b      	ldr	r3, [r3, #4]
 800566c:	2b02      	cmp	r3, #2
 800566e:	d003      	beq.n	8005678 <HAL_GPIO_Init+0xfc>
 8005670:	683b      	ldr	r3, [r7, #0]
 8005672:	685b      	ldr	r3, [r3, #4]
 8005674:	2b12      	cmp	r3, #18
 8005676:	d123      	bne.n	80056c0 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8005678:	69fb      	ldr	r3, [r7, #28]
 800567a:	08da      	lsrs	r2, r3, #3
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	3208      	adds	r2, #8
 8005680:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005684:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005686:	69fb      	ldr	r3, [r7, #28]
 8005688:	f003 0307 	and.w	r3, r3, #7
 800568c:	009b      	lsls	r3, r3, #2
 800568e:	220f      	movs	r2, #15
 8005690:	fa02 f303 	lsl.w	r3, r2, r3
 8005694:	43db      	mvns	r3, r3
 8005696:	69ba      	ldr	r2, [r7, #24]
 8005698:	4013      	ands	r3, r2
 800569a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800569c:	683b      	ldr	r3, [r7, #0]
 800569e:	691a      	ldr	r2, [r3, #16]
 80056a0:	69fb      	ldr	r3, [r7, #28]
 80056a2:	f003 0307 	and.w	r3, r3, #7
 80056a6:	009b      	lsls	r3, r3, #2
 80056a8:	fa02 f303 	lsl.w	r3, r2, r3
 80056ac:	69ba      	ldr	r2, [r7, #24]
 80056ae:	4313      	orrs	r3, r2
 80056b0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80056b2:	69fb      	ldr	r3, [r7, #28]
 80056b4:	08da      	lsrs	r2, r3, #3
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	3208      	adds	r2, #8
 80056ba:	69b9      	ldr	r1, [r7, #24]
 80056bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80056c6:	69fb      	ldr	r3, [r7, #28]
 80056c8:	005b      	lsls	r3, r3, #1
 80056ca:	2203      	movs	r2, #3
 80056cc:	fa02 f303 	lsl.w	r3, r2, r3
 80056d0:	43db      	mvns	r3, r3
 80056d2:	69ba      	ldr	r2, [r7, #24]
 80056d4:	4013      	ands	r3, r2
 80056d6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80056d8:	683b      	ldr	r3, [r7, #0]
 80056da:	685b      	ldr	r3, [r3, #4]
 80056dc:	f003 0203 	and.w	r2, r3, #3
 80056e0:	69fb      	ldr	r3, [r7, #28]
 80056e2:	005b      	lsls	r3, r3, #1
 80056e4:	fa02 f303 	lsl.w	r3, r2, r3
 80056e8:	69ba      	ldr	r2, [r7, #24]
 80056ea:	4313      	orrs	r3, r2
 80056ec:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	69ba      	ldr	r2, [r7, #24]
 80056f2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80056f4:	683b      	ldr	r3, [r7, #0]
 80056f6:	685b      	ldr	r3, [r3, #4]
 80056f8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80056fc:	2b00      	cmp	r3, #0
 80056fe:	f000 80c0 	beq.w	8005882 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005702:	2300      	movs	r3, #0
 8005704:	60fb      	str	r3, [r7, #12]
 8005706:	4b65      	ldr	r3, [pc, #404]	; (800589c <HAL_GPIO_Init+0x320>)
 8005708:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800570a:	4a64      	ldr	r2, [pc, #400]	; (800589c <HAL_GPIO_Init+0x320>)
 800570c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005710:	6453      	str	r3, [r2, #68]	; 0x44
 8005712:	4b62      	ldr	r3, [pc, #392]	; (800589c <HAL_GPIO_Init+0x320>)
 8005714:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005716:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800571a:	60fb      	str	r3, [r7, #12]
 800571c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800571e:	4a60      	ldr	r2, [pc, #384]	; (80058a0 <HAL_GPIO_Init+0x324>)
 8005720:	69fb      	ldr	r3, [r7, #28]
 8005722:	089b      	lsrs	r3, r3, #2
 8005724:	3302      	adds	r3, #2
 8005726:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800572a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800572c:	69fb      	ldr	r3, [r7, #28]
 800572e:	f003 0303 	and.w	r3, r3, #3
 8005732:	009b      	lsls	r3, r3, #2
 8005734:	220f      	movs	r2, #15
 8005736:	fa02 f303 	lsl.w	r3, r2, r3
 800573a:	43db      	mvns	r3, r3
 800573c:	69ba      	ldr	r2, [r7, #24]
 800573e:	4013      	ands	r3, r2
 8005740:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	4a57      	ldr	r2, [pc, #348]	; (80058a4 <HAL_GPIO_Init+0x328>)
 8005746:	4293      	cmp	r3, r2
 8005748:	d037      	beq.n	80057ba <HAL_GPIO_Init+0x23e>
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	4a56      	ldr	r2, [pc, #344]	; (80058a8 <HAL_GPIO_Init+0x32c>)
 800574e:	4293      	cmp	r3, r2
 8005750:	d031      	beq.n	80057b6 <HAL_GPIO_Init+0x23a>
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	4a55      	ldr	r2, [pc, #340]	; (80058ac <HAL_GPIO_Init+0x330>)
 8005756:	4293      	cmp	r3, r2
 8005758:	d02b      	beq.n	80057b2 <HAL_GPIO_Init+0x236>
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	4a54      	ldr	r2, [pc, #336]	; (80058b0 <HAL_GPIO_Init+0x334>)
 800575e:	4293      	cmp	r3, r2
 8005760:	d025      	beq.n	80057ae <HAL_GPIO_Init+0x232>
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	4a53      	ldr	r2, [pc, #332]	; (80058b4 <HAL_GPIO_Init+0x338>)
 8005766:	4293      	cmp	r3, r2
 8005768:	d01f      	beq.n	80057aa <HAL_GPIO_Init+0x22e>
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	4a52      	ldr	r2, [pc, #328]	; (80058b8 <HAL_GPIO_Init+0x33c>)
 800576e:	4293      	cmp	r3, r2
 8005770:	d019      	beq.n	80057a6 <HAL_GPIO_Init+0x22a>
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	4a51      	ldr	r2, [pc, #324]	; (80058bc <HAL_GPIO_Init+0x340>)
 8005776:	4293      	cmp	r3, r2
 8005778:	d013      	beq.n	80057a2 <HAL_GPIO_Init+0x226>
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	4a50      	ldr	r2, [pc, #320]	; (80058c0 <HAL_GPIO_Init+0x344>)
 800577e:	4293      	cmp	r3, r2
 8005780:	d00d      	beq.n	800579e <HAL_GPIO_Init+0x222>
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	4a4f      	ldr	r2, [pc, #316]	; (80058c4 <HAL_GPIO_Init+0x348>)
 8005786:	4293      	cmp	r3, r2
 8005788:	d007      	beq.n	800579a <HAL_GPIO_Init+0x21e>
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	4a4e      	ldr	r2, [pc, #312]	; (80058c8 <HAL_GPIO_Init+0x34c>)
 800578e:	4293      	cmp	r3, r2
 8005790:	d101      	bne.n	8005796 <HAL_GPIO_Init+0x21a>
 8005792:	2309      	movs	r3, #9
 8005794:	e012      	b.n	80057bc <HAL_GPIO_Init+0x240>
 8005796:	230a      	movs	r3, #10
 8005798:	e010      	b.n	80057bc <HAL_GPIO_Init+0x240>
 800579a:	2308      	movs	r3, #8
 800579c:	e00e      	b.n	80057bc <HAL_GPIO_Init+0x240>
 800579e:	2307      	movs	r3, #7
 80057a0:	e00c      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057a2:	2306      	movs	r3, #6
 80057a4:	e00a      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057a6:	2305      	movs	r3, #5
 80057a8:	e008      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057aa:	2304      	movs	r3, #4
 80057ac:	e006      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057ae:	2303      	movs	r3, #3
 80057b0:	e004      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057b2:	2302      	movs	r3, #2
 80057b4:	e002      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057b6:	2301      	movs	r3, #1
 80057b8:	e000      	b.n	80057bc <HAL_GPIO_Init+0x240>
 80057ba:	2300      	movs	r3, #0
 80057bc:	69fa      	ldr	r2, [r7, #28]
 80057be:	f002 0203 	and.w	r2, r2, #3
 80057c2:	0092      	lsls	r2, r2, #2
 80057c4:	4093      	lsls	r3, r2
 80057c6:	69ba      	ldr	r2, [r7, #24]
 80057c8:	4313      	orrs	r3, r2
 80057ca:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80057cc:	4934      	ldr	r1, [pc, #208]	; (80058a0 <HAL_GPIO_Init+0x324>)
 80057ce:	69fb      	ldr	r3, [r7, #28]
 80057d0:	089b      	lsrs	r3, r3, #2
 80057d2:	3302      	adds	r3, #2
 80057d4:	69ba      	ldr	r2, [r7, #24]
 80057d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80057da:	4b3c      	ldr	r3, [pc, #240]	; (80058cc <HAL_GPIO_Init+0x350>)
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80057e0:	693b      	ldr	r3, [r7, #16]
 80057e2:	43db      	mvns	r3, r3
 80057e4:	69ba      	ldr	r2, [r7, #24]
 80057e6:	4013      	ands	r3, r2
 80057e8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80057ea:	683b      	ldr	r3, [r7, #0]
 80057ec:	685b      	ldr	r3, [r3, #4]
 80057ee:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d003      	beq.n	80057fe <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80057f6:	69ba      	ldr	r2, [r7, #24]
 80057f8:	693b      	ldr	r3, [r7, #16]
 80057fa:	4313      	orrs	r3, r2
 80057fc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80057fe:	4a33      	ldr	r2, [pc, #204]	; (80058cc <HAL_GPIO_Init+0x350>)
 8005800:	69bb      	ldr	r3, [r7, #24]
 8005802:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8005804:	4b31      	ldr	r3, [pc, #196]	; (80058cc <HAL_GPIO_Init+0x350>)
 8005806:	685b      	ldr	r3, [r3, #4]
 8005808:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800580a:	693b      	ldr	r3, [r7, #16]
 800580c:	43db      	mvns	r3, r3
 800580e:	69ba      	ldr	r2, [r7, #24]
 8005810:	4013      	ands	r3, r2
 8005812:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8005814:	683b      	ldr	r3, [r7, #0]
 8005816:	685b      	ldr	r3, [r3, #4]
 8005818:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800581c:	2b00      	cmp	r3, #0
 800581e:	d003      	beq.n	8005828 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8005820:	69ba      	ldr	r2, [r7, #24]
 8005822:	693b      	ldr	r3, [r7, #16]
 8005824:	4313      	orrs	r3, r2
 8005826:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8005828:	4a28      	ldr	r2, [pc, #160]	; (80058cc <HAL_GPIO_Init+0x350>)
 800582a:	69bb      	ldr	r3, [r7, #24]
 800582c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800582e:	4b27      	ldr	r3, [pc, #156]	; (80058cc <HAL_GPIO_Init+0x350>)
 8005830:	689b      	ldr	r3, [r3, #8]
 8005832:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8005834:	693b      	ldr	r3, [r7, #16]
 8005836:	43db      	mvns	r3, r3
 8005838:	69ba      	ldr	r2, [r7, #24]
 800583a:	4013      	ands	r3, r2
 800583c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800583e:	683b      	ldr	r3, [r7, #0]
 8005840:	685b      	ldr	r3, [r3, #4]
 8005842:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005846:	2b00      	cmp	r3, #0
 8005848:	d003      	beq.n	8005852 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800584a:	69ba      	ldr	r2, [r7, #24]
 800584c:	693b      	ldr	r3, [r7, #16]
 800584e:	4313      	orrs	r3, r2
 8005850:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8005852:	4a1e      	ldr	r2, [pc, #120]	; (80058cc <HAL_GPIO_Init+0x350>)
 8005854:	69bb      	ldr	r3, [r7, #24]
 8005856:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8005858:	4b1c      	ldr	r3, [pc, #112]	; (80058cc <HAL_GPIO_Init+0x350>)
 800585a:	68db      	ldr	r3, [r3, #12]
 800585c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800585e:	693b      	ldr	r3, [r7, #16]
 8005860:	43db      	mvns	r3, r3
 8005862:	69ba      	ldr	r2, [r7, #24]
 8005864:	4013      	ands	r3, r2
 8005866:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005868:	683b      	ldr	r3, [r7, #0]
 800586a:	685b      	ldr	r3, [r3, #4]
 800586c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005870:	2b00      	cmp	r3, #0
 8005872:	d003      	beq.n	800587c <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8005874:	69ba      	ldr	r2, [r7, #24]
 8005876:	693b      	ldr	r3, [r7, #16]
 8005878:	4313      	orrs	r3, r2
 800587a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800587c:	4a13      	ldr	r2, [pc, #76]	; (80058cc <HAL_GPIO_Init+0x350>)
 800587e:	69bb      	ldr	r3, [r7, #24]
 8005880:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005882:	69fb      	ldr	r3, [r7, #28]
 8005884:	3301      	adds	r3, #1
 8005886:	61fb      	str	r3, [r7, #28]
 8005888:	69fb      	ldr	r3, [r7, #28]
 800588a:	2b0f      	cmp	r3, #15
 800588c:	f67f ae84 	bls.w	8005598 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8005890:	bf00      	nop
 8005892:	3724      	adds	r7, #36	; 0x24
 8005894:	46bd      	mov	sp, r7
 8005896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800589a:	4770      	bx	lr
 800589c:	40023800 	.word	0x40023800
 80058a0:	40013800 	.word	0x40013800
 80058a4:	40020000 	.word	0x40020000
 80058a8:	40020400 	.word	0x40020400
 80058ac:	40020800 	.word	0x40020800
 80058b0:	40020c00 	.word	0x40020c00
 80058b4:	40021000 	.word	0x40021000
 80058b8:	40021400 	.word	0x40021400
 80058bc:	40021800 	.word	0x40021800
 80058c0:	40021c00 	.word	0x40021c00
 80058c4:	40022000 	.word	0x40022000
 80058c8:	40022400 	.word	0x40022400
 80058cc:	40013c00 	.word	0x40013c00

080058d0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80058d0:	b480      	push	{r7}
 80058d2:	b083      	sub	sp, #12
 80058d4:	af00      	add	r7, sp, #0
 80058d6:	6078      	str	r0, [r7, #4]
 80058d8:	460b      	mov	r3, r1
 80058da:	807b      	strh	r3, [r7, #2]
 80058dc:	4613      	mov	r3, r2
 80058de:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80058e0:	787b      	ldrb	r3, [r7, #1]
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d003      	beq.n	80058ee <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80058e6:	887a      	ldrh	r2, [r7, #2]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80058ec:	e003      	b.n	80058f6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80058ee:	887b      	ldrh	r3, [r7, #2]
 80058f0:	041a      	lsls	r2, r3, #16
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	619a      	str	r2, [r3, #24]
}
 80058f6:	bf00      	nop
 80058f8:	370c      	adds	r7, #12
 80058fa:	46bd      	mov	sp, r7
 80058fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005900:	4770      	bx	lr

08005902 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8005902:	b480      	push	{r7}
 8005904:	b083      	sub	sp, #12
 8005906:	af00      	add	r7, sp, #0
 8005908:	6078      	str	r0, [r7, #4]
 800590a:	460b      	mov	r3, r1
 800590c:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	695a      	ldr	r2, [r3, #20]
 8005912:	887b      	ldrh	r3, [r7, #2]
 8005914:	401a      	ands	r2, r3
 8005916:	887b      	ldrh	r3, [r7, #2]
 8005918:	429a      	cmp	r2, r3
 800591a:	d104      	bne.n	8005926 <HAL_GPIO_TogglePin+0x24>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800591c:	887b      	ldrh	r3, [r7, #2]
 800591e:	041a      	lsls	r2, r3, #16
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
  }
}
 8005924:	e002      	b.n	800592c <HAL_GPIO_TogglePin+0x2a>
    GPIOx->BSRR = GPIO_Pin;
 8005926:	887a      	ldrh	r2, [r7, #2]
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	619a      	str	r2, [r3, #24]
}
 800592c:	bf00      	nop
 800592e:	370c      	adds	r7, #12
 8005930:	46bd      	mov	sp, r7
 8005932:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005936:	4770      	bx	lr

08005938 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8005938:	b580      	push	{r7, lr}
 800593a:	b084      	sub	sp, #16
 800593c:	af00      	add	r7, sp, #0
 800593e:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	2b00      	cmp	r3, #0
 8005944:	d101      	bne.n	800594a <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 8005946:	2301      	movs	r3, #1
 8005948:	e0bf      	b.n	8005aca <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8005950:	b2db      	uxtb	r3, r3
 8005952:	2b00      	cmp	r3, #0
 8005954:	d106      	bne.n	8005964 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	2200      	movs	r2, #0
 800595a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 800595e:	6878      	ldr	r0, [r7, #4]
 8005960:	f7fb f97e 	bl	8000c60 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	2202      	movs	r2, #2
 8005968:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	699a      	ldr	r2, [r3, #24]
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800597a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	6999      	ldr	r1, [r3, #24]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	685a      	ldr	r2, [r3, #4]
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	689b      	ldr	r3, [r3, #8]
 800598a:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005990:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	691b      	ldr	r3, [r3, #16]
 8005996:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	430a      	orrs	r2, r1
 800599e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	6899      	ldr	r1, [r3, #8]
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	681a      	ldr	r2, [r3, #0]
 80059aa:	4b4a      	ldr	r3, [pc, #296]	; (8005ad4 <HAL_LTDC_Init+0x19c>)
 80059ac:	400b      	ands	r3, r1
 80059ae:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	695b      	ldr	r3, [r3, #20]
 80059b4:	041b      	lsls	r3, r3, #16
 80059b6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	6899      	ldr	r1, [r3, #8]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	699a      	ldr	r2, [r3, #24]
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	431a      	orrs	r2, r3
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	430a      	orrs	r2, r1
 80059cc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	68d9      	ldr	r1, [r3, #12]
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	681a      	ldr	r2, [r3, #0]
 80059d8:	4b3e      	ldr	r3, [pc, #248]	; (8005ad4 <HAL_LTDC_Init+0x19c>)
 80059da:	400b      	ands	r3, r1
 80059dc:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	69db      	ldr	r3, [r3, #28]
 80059e2:	041b      	lsls	r3, r3, #16
 80059e4:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	68d9      	ldr	r1, [r3, #12]
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	6a1a      	ldr	r2, [r3, #32]
 80059f0:	68fb      	ldr	r3, [r7, #12]
 80059f2:	431a      	orrs	r2, r3
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	430a      	orrs	r2, r1
 80059fa:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	681b      	ldr	r3, [r3, #0]
 8005a00:	6919      	ldr	r1, [r3, #16]
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	681a      	ldr	r2, [r3, #0]
 8005a06:	4b33      	ldr	r3, [pc, #204]	; (8005ad4 <HAL_LTDC_Init+0x19c>)
 8005a08:	400b      	ands	r3, r1
 8005a0a:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a10:	041b      	lsls	r3, r3, #16
 8005a12:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	6919      	ldr	r1, [r3, #16]
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005a1e:	68fb      	ldr	r3, [r7, #12]
 8005a20:	431a      	orrs	r2, r3
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	430a      	orrs	r2, r1
 8005a28:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	6959      	ldr	r1, [r3, #20]
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681a      	ldr	r2, [r3, #0]
 8005a34:	4b27      	ldr	r3, [pc, #156]	; (8005ad4 <HAL_LTDC_Init+0x19c>)
 8005a36:	400b      	ands	r3, r1
 8005a38:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a3e:	041b      	lsls	r3, r3, #16
 8005a40:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	6959      	ldr	r1, [r3, #20]
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	431a      	orrs	r2, r3
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	430a      	orrs	r2, r1
 8005a56:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005a5e:	021b      	lsls	r3, r3, #8
 8005a60:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8005a68:	041b      	lsls	r3, r3, #16
 8005a6a:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8005a7a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005a82:	68ba      	ldr	r2, [r7, #8]
 8005a84:	68fb      	ldr	r3, [r7, #12]
 8005a86:	4313      	orrs	r3, r2
 8005a88:	687a      	ldr	r2, [r7, #4]
 8005a8a:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8005a8e:	431a      	orrs	r2, r3
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	430a      	orrs	r2, r1
 8005a96:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	681b      	ldr	r3, [r3, #0]
 8005aa2:	f042 0206 	orr.w	r2, r2, #6
 8005aa6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	699a      	ldr	r2, [r3, #24]
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	f042 0201 	orr.w	r2, r2, #1
 8005ab6:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	2200      	movs	r2, #0
 8005abc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	2201      	movs	r2, #1
 8005ac4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8005ac8:	2300      	movs	r3, #0
}
 8005aca:	4618      	mov	r0, r3
 8005acc:	3710      	adds	r7, #16
 8005ace:	46bd      	mov	sp, r7
 8005ad0:	bd80      	pop	{r7, pc}
 8005ad2:	bf00      	nop
 8005ad4:	f000f800 	.word	0xf000f800

08005ad8 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8005ad8:	b580      	push	{r7, lr}
 8005ada:	b084      	sub	sp, #16
 8005adc:	af00      	add	r7, sp, #0
 8005ade:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005ae6:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005aee:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	f003 0304 	and.w	r3, r3, #4
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	d023      	beq.n	8005b42 <HAL_LTDC_IRQHandler+0x6a>
 8005afa:	68bb      	ldr	r3, [r7, #8]
 8005afc:	f003 0304 	and.w	r3, r3, #4
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	d01e      	beq.n	8005b42 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	f022 0204 	bic.w	r2, r2, #4
 8005b12:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	2204      	movs	r2, #4
 8005b1a:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005b22:	f043 0201 	orr.w	r2, r3, #1
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	2204      	movs	r2, #4
 8005b30:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	2200      	movs	r2, #0
 8005b38:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005b3c:	6878      	ldr	r0, [r7, #4]
 8005b3e:	f000 f86f 	bl	8005c20 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005b42:	68fb      	ldr	r3, [r7, #12]
 8005b44:	f003 0302 	and.w	r3, r3, #2
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	d023      	beq.n	8005b94 <HAL_LTDC_IRQHandler+0xbc>
 8005b4c:	68bb      	ldr	r3, [r7, #8]
 8005b4e:	f003 0302 	and.w	r3, r3, #2
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d01e      	beq.n	8005b94 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	f022 0202 	bic.w	r2, r2, #2
 8005b64:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	2202      	movs	r2, #2
 8005b6c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005b74:	f043 0202 	orr.w	r2, r3, #2
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	2204      	movs	r2, #4
 8005b82:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	2200      	movs	r2, #0
 8005b8a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005b8e:	6878      	ldr	r0, [r7, #4]
 8005b90:	f000 f846 	bl	8005c20 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	f003 0301 	and.w	r3, r3, #1
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d01b      	beq.n	8005bd6 <HAL_LTDC_IRQHandler+0xfe>
 8005b9e:	68bb      	ldr	r3, [r7, #8]
 8005ba0:	f003 0301 	and.w	r3, r3, #1
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	d016      	beq.n	8005bd6 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	681b      	ldr	r3, [r3, #0]
 8005bb2:	f022 0201 	bic.w	r2, r2, #1
 8005bb6:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	2201      	movs	r2, #1
 8005bbe:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	2201      	movs	r2, #1
 8005bc4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	2200      	movs	r2, #0
 8005bcc:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8005bd0:	6878      	ldr	r0, [r7, #4]
 8005bd2:	f7fd f82d 	bl	8002c30 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	f003 0308 	and.w	r3, r3, #8
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d01b      	beq.n	8005c18 <HAL_LTDC_IRQHandler+0x140>
 8005be0:	68bb      	ldr	r3, [r7, #8]
 8005be2:	f003 0308 	and.w	r3, r3, #8
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	d016      	beq.n	8005c18 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	f022 0208 	bic.w	r2, r2, #8
 8005bf8:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	2208      	movs	r2, #8
 8005c00:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	2201      	movs	r2, #1
 8005c06:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	2200      	movs	r2, #0
 8005c0e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005c12:	6878      	ldr	r0, [r7, #4]
 8005c14:	f000 f80e 	bl	8005c34 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8005c18:	bf00      	nop
 8005c1a:	3710      	adds	r7, #16
 8005c1c:	46bd      	mov	sp, r7
 8005c1e:	bd80      	pop	{r7, pc}

08005c20 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8005c20:	b480      	push	{r7}
 8005c22:	b083      	sub	sp, #12
 8005c24:	af00      	add	r7, sp, #0
 8005c26:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8005c28:	bf00      	nop
 8005c2a:	370c      	adds	r7, #12
 8005c2c:	46bd      	mov	sp, r7
 8005c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c32:	4770      	bx	lr

08005c34 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8005c34:	b480      	push	{r7}
 8005c36:	b083      	sub	sp, #12
 8005c38:	af00      	add	r7, sp, #0
 8005c3a:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8005c3c:	bf00      	nop
 8005c3e:	370c      	adds	r7, #12
 8005c40:	46bd      	mov	sp, r7
 8005c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c46:	4770      	bx	lr

08005c48 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005c48:	b5b0      	push	{r4, r5, r7, lr}
 8005c4a:	b084      	sub	sp, #16
 8005c4c:	af00      	add	r7, sp, #0
 8005c4e:	60f8      	str	r0, [r7, #12]
 8005c50:	60b9      	str	r1, [r7, #8]
 8005c52:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8005c5a:	2b01      	cmp	r3, #1
 8005c5c:	d101      	bne.n	8005c62 <HAL_LTDC_ConfigLayer+0x1a>
 8005c5e:	2302      	movs	r3, #2
 8005c60:	e02c      	b.n	8005cbc <HAL_LTDC_ConfigLayer+0x74>
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	2201      	movs	r2, #1
 8005c66:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	2202      	movs	r2, #2
 8005c6e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005c72:	68fa      	ldr	r2, [r7, #12]
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	2134      	movs	r1, #52	; 0x34
 8005c78:	fb01 f303 	mul.w	r3, r1, r3
 8005c7c:	4413      	add	r3, r2
 8005c7e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8005c82:	68bb      	ldr	r3, [r7, #8]
 8005c84:	4614      	mov	r4, r2
 8005c86:	461d      	mov	r5, r3
 8005c88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c90:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c94:	682b      	ldr	r3, [r5, #0]
 8005c96:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005c98:	687a      	ldr	r2, [r7, #4]
 8005c9a:	68b9      	ldr	r1, [r7, #8]
 8005c9c:	68f8      	ldr	r0, [r7, #12]
 8005c9e:	f000 f849 	bl	8005d34 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	2201      	movs	r2, #1
 8005ca8:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	2201      	movs	r2, #1
 8005cae:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	2200      	movs	r2, #0
 8005cb6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8005cba:	2300      	movs	r3, #0
}
 8005cbc:	4618      	mov	r0, r3
 8005cbe:	3710      	adds	r7, #16
 8005cc0:	46bd      	mov	sp, r7
 8005cc2:	bdb0      	pop	{r4, r5, r7, pc}

08005cc4 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8005cc4:	b480      	push	{r7}
 8005cc6:	b083      	sub	sp, #12
 8005cc8:	af00      	add	r7, sp, #0
 8005cca:	6078      	str	r0, [r7, #4]
 8005ccc:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8005cd4:	2b01      	cmp	r3, #1
 8005cd6:	d101      	bne.n	8005cdc <HAL_LTDC_ProgramLineEvent+0x18>
 8005cd8:	2302      	movs	r3, #2
 8005cda:	e023      	b.n	8005d24 <HAL_LTDC_ProgramLineEvent+0x60>
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	2201      	movs	r2, #1
 8005ce0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	2202      	movs	r2, #2
 8005ce8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	f022 0201 	bic.w	r2, r2, #1
 8005cfa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8005cfc:	4a0c      	ldr	r2, [pc, #48]	; (8005d30 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8005cfe:	683b      	ldr	r3, [r7, #0]
 8005d00:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	681b      	ldr	r3, [r3, #0]
 8005d06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	f042 0201 	orr.w	r2, r2, #1
 8005d10:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	2201      	movs	r2, #1
 8005d16:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	2200      	movs	r2, #0
 8005d1e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8005d22:	2300      	movs	r3, #0
}
 8005d24:	4618      	mov	r0, r3
 8005d26:	370c      	adds	r7, #12
 8005d28:	46bd      	mov	sp, r7
 8005d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d2e:	4770      	bx	lr
 8005d30:	40016800 	.word	0x40016800

08005d34 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005d34:	b480      	push	{r7}
 8005d36:	b089      	sub	sp, #36	; 0x24
 8005d38:	af00      	add	r7, sp, #0
 8005d3a:	60f8      	str	r0, [r7, #12]
 8005d3c:	60b9      	str	r1, [r7, #8]
 8005d3e:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d40:	68bb      	ldr	r3, [r7, #8]
 8005d42:	685a      	ldr	r2, [r3, #4]
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	68db      	ldr	r3, [r3, #12]
 8005d4a:	0c1b      	lsrs	r3, r3, #16
 8005d4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005d50:	4413      	add	r3, r2
 8005d52:	041b      	lsls	r3, r3, #16
 8005d54:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	461a      	mov	r2, r3
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	01db      	lsls	r3, r3, #7
 8005d60:	4413      	add	r3, r2
 8005d62:	3384      	adds	r3, #132	; 0x84
 8005d64:	685b      	ldr	r3, [r3, #4]
 8005d66:	68fa      	ldr	r2, [r7, #12]
 8005d68:	6812      	ldr	r2, [r2, #0]
 8005d6a:	4611      	mov	r1, r2
 8005d6c:	687a      	ldr	r2, [r7, #4]
 8005d6e:	01d2      	lsls	r2, r2, #7
 8005d70:	440a      	add	r2, r1
 8005d72:	3284      	adds	r2, #132	; 0x84
 8005d74:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8005d78:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d7a:	68bb      	ldr	r3, [r7, #8]
 8005d7c:	681a      	ldr	r2, [r3, #0]
 8005d7e:	68fb      	ldr	r3, [r7, #12]
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	68db      	ldr	r3, [r3, #12]
 8005d84:	0c1b      	lsrs	r3, r3, #16
 8005d86:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005d8a:	4413      	add	r3, r2
 8005d8c:	1c5a      	adds	r2, r3, #1
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	4619      	mov	r1, r3
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	01db      	lsls	r3, r3, #7
 8005d98:	440b      	add	r3, r1
 8005d9a:	3384      	adds	r3, #132	; 0x84
 8005d9c:	4619      	mov	r1, r3
 8005d9e:	69fb      	ldr	r3, [r7, #28]
 8005da0:	4313      	orrs	r3, r2
 8005da2:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005da4:	68bb      	ldr	r3, [r7, #8]
 8005da6:	68da      	ldr	r2, [r3, #12]
 8005da8:	68fb      	ldr	r3, [r7, #12]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	68db      	ldr	r3, [r3, #12]
 8005dae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005db2:	4413      	add	r3, r2
 8005db4:	041b      	lsls	r3, r3, #16
 8005db6:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005db8:	68fb      	ldr	r3, [r7, #12]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	461a      	mov	r2, r3
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	01db      	lsls	r3, r3, #7
 8005dc2:	4413      	add	r3, r2
 8005dc4:	3384      	adds	r3, #132	; 0x84
 8005dc6:	689b      	ldr	r3, [r3, #8]
 8005dc8:	68fa      	ldr	r2, [r7, #12]
 8005dca:	6812      	ldr	r2, [r2, #0]
 8005dcc:	4611      	mov	r1, r2
 8005dce:	687a      	ldr	r2, [r7, #4]
 8005dd0:	01d2      	lsls	r2, r2, #7
 8005dd2:	440a      	add	r2, r1
 8005dd4:	3284      	adds	r2, #132	; 0x84
 8005dd6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8005dda:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005ddc:	68bb      	ldr	r3, [r7, #8]
 8005dde:	689a      	ldr	r2, [r3, #8]
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	68db      	ldr	r3, [r3, #12]
 8005de6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005dea:	4413      	add	r3, r2
 8005dec:	1c5a      	adds	r2, r3, #1
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	4619      	mov	r1, r3
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	01db      	lsls	r3, r3, #7
 8005df8:	440b      	add	r3, r1
 8005dfa:	3384      	adds	r3, #132	; 0x84
 8005dfc:	4619      	mov	r1, r3
 8005dfe:	69fb      	ldr	r3, [r7, #28]
 8005e00:	4313      	orrs	r3, r2
 8005e02:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	681b      	ldr	r3, [r3, #0]
 8005e08:	461a      	mov	r2, r3
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	01db      	lsls	r3, r3, #7
 8005e0e:	4413      	add	r3, r2
 8005e10:	3384      	adds	r3, #132	; 0x84
 8005e12:	691b      	ldr	r3, [r3, #16]
 8005e14:	68fa      	ldr	r2, [r7, #12]
 8005e16:	6812      	ldr	r2, [r2, #0]
 8005e18:	4611      	mov	r1, r2
 8005e1a:	687a      	ldr	r2, [r7, #4]
 8005e1c:	01d2      	lsls	r2, r2, #7
 8005e1e:	440a      	add	r2, r1
 8005e20:	3284      	adds	r2, #132	; 0x84
 8005e22:	f023 0307 	bic.w	r3, r3, #7
 8005e26:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005e28:	68fb      	ldr	r3, [r7, #12]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	461a      	mov	r2, r3
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	01db      	lsls	r3, r3, #7
 8005e32:	4413      	add	r3, r2
 8005e34:	3384      	adds	r3, #132	; 0x84
 8005e36:	461a      	mov	r2, r3
 8005e38:	68bb      	ldr	r3, [r7, #8]
 8005e3a:	691b      	ldr	r3, [r3, #16]
 8005e3c:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005e3e:	68bb      	ldr	r3, [r7, #8]
 8005e40:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8005e44:	021b      	lsls	r3, r3, #8
 8005e46:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005e48:	68bb      	ldr	r3, [r7, #8]
 8005e4a:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8005e4e:	041b      	lsls	r3, r3, #16
 8005e50:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005e52:	68bb      	ldr	r3, [r7, #8]
 8005e54:	699b      	ldr	r3, [r3, #24]
 8005e56:	061b      	lsls	r3, r3, #24
 8005e58:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	461a      	mov	r2, r3
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	01db      	lsls	r3, r3, #7
 8005e64:	4413      	add	r3, r2
 8005e66:	3384      	adds	r3, #132	; 0x84
 8005e68:	699b      	ldr	r3, [r3, #24]
 8005e6a:	68fb      	ldr	r3, [r7, #12]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	461a      	mov	r2, r3
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	01db      	lsls	r3, r3, #7
 8005e74:	4413      	add	r3, r2
 8005e76:	3384      	adds	r3, #132	; 0x84
 8005e78:	461a      	mov	r2, r3
 8005e7a:	2300      	movs	r3, #0
 8005e7c:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005e7e:	68bb      	ldr	r3, [r7, #8]
 8005e80:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8005e84:	461a      	mov	r2, r3
 8005e86:	69fb      	ldr	r3, [r7, #28]
 8005e88:	431a      	orrs	r2, r3
 8005e8a:	69bb      	ldr	r3, [r7, #24]
 8005e8c:	431a      	orrs	r2, r3
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	4619      	mov	r1, r3
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	01db      	lsls	r3, r3, #7
 8005e98:	440b      	add	r3, r1
 8005e9a:	3384      	adds	r3, #132	; 0x84
 8005e9c:	4619      	mov	r1, r3
 8005e9e:	697b      	ldr	r3, [r7, #20]
 8005ea0:	4313      	orrs	r3, r2
 8005ea2:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	461a      	mov	r2, r3
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	01db      	lsls	r3, r3, #7
 8005eae:	4413      	add	r3, r2
 8005eb0:	3384      	adds	r3, #132	; 0x84
 8005eb2:	695b      	ldr	r3, [r3, #20]
 8005eb4:	68fa      	ldr	r2, [r7, #12]
 8005eb6:	6812      	ldr	r2, [r2, #0]
 8005eb8:	4611      	mov	r1, r2
 8005eba:	687a      	ldr	r2, [r7, #4]
 8005ebc:	01d2      	lsls	r2, r2, #7
 8005ebe:	440a      	add	r2, r1
 8005ec0:	3284      	adds	r2, #132	; 0x84
 8005ec2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005ec6:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	681b      	ldr	r3, [r3, #0]
 8005ecc:	461a      	mov	r2, r3
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	01db      	lsls	r3, r3, #7
 8005ed2:	4413      	add	r3, r2
 8005ed4:	3384      	adds	r3, #132	; 0x84
 8005ed6:	461a      	mov	r2, r3
 8005ed8:	68bb      	ldr	r3, [r7, #8]
 8005eda:	695b      	ldr	r3, [r3, #20]
 8005edc:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005ede:	68fb      	ldr	r3, [r7, #12]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	461a      	mov	r2, r3
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	01db      	lsls	r3, r3, #7
 8005ee8:	4413      	add	r3, r2
 8005eea:	3384      	adds	r3, #132	; 0x84
 8005eec:	69db      	ldr	r3, [r3, #28]
 8005eee:	68fa      	ldr	r2, [r7, #12]
 8005ef0:	6812      	ldr	r2, [r2, #0]
 8005ef2:	4611      	mov	r1, r2
 8005ef4:	687a      	ldr	r2, [r7, #4]
 8005ef6:	01d2      	lsls	r2, r2, #7
 8005ef8:	440a      	add	r2, r1
 8005efa:	3284      	adds	r2, #132	; 0x84
 8005efc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005f00:	f023 0307 	bic.w	r3, r3, #7
 8005f04:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005f06:	68bb      	ldr	r3, [r7, #8]
 8005f08:	69da      	ldr	r2, [r3, #28]
 8005f0a:	68bb      	ldr	r3, [r7, #8]
 8005f0c:	6a1b      	ldr	r3, [r3, #32]
 8005f0e:	68f9      	ldr	r1, [r7, #12]
 8005f10:	6809      	ldr	r1, [r1, #0]
 8005f12:	4608      	mov	r0, r1
 8005f14:	6879      	ldr	r1, [r7, #4]
 8005f16:	01c9      	lsls	r1, r1, #7
 8005f18:	4401      	add	r1, r0
 8005f1a:	3184      	adds	r1, #132	; 0x84
 8005f1c:	4313      	orrs	r3, r2
 8005f1e:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005f20:	68fb      	ldr	r3, [r7, #12]
 8005f22:	681b      	ldr	r3, [r3, #0]
 8005f24:	461a      	mov	r2, r3
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	01db      	lsls	r3, r3, #7
 8005f2a:	4413      	add	r3, r2
 8005f2c:	3384      	adds	r3, #132	; 0x84
 8005f2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	461a      	mov	r2, r3
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	01db      	lsls	r3, r3, #7
 8005f3a:	4413      	add	r3, r2
 8005f3c:	3384      	adds	r3, #132	; 0x84
 8005f3e:	461a      	mov	r2, r3
 8005f40:	2300      	movs	r3, #0
 8005f42:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005f44:	68fb      	ldr	r3, [r7, #12]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	461a      	mov	r2, r3
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	01db      	lsls	r3, r3, #7
 8005f4e:	4413      	add	r3, r2
 8005f50:	3384      	adds	r3, #132	; 0x84
 8005f52:	461a      	mov	r2, r3
 8005f54:	68bb      	ldr	r3, [r7, #8]
 8005f56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f58:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005f5a:	68bb      	ldr	r3, [r7, #8]
 8005f5c:	691b      	ldr	r3, [r3, #16]
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	d102      	bne.n	8005f68 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8005f62:	2304      	movs	r3, #4
 8005f64:	61fb      	str	r3, [r7, #28]
 8005f66:	e01b      	b.n	8005fa0 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005f68:	68bb      	ldr	r3, [r7, #8]
 8005f6a:	691b      	ldr	r3, [r3, #16]
 8005f6c:	2b01      	cmp	r3, #1
 8005f6e:	d102      	bne.n	8005f76 <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8005f70:	2303      	movs	r3, #3
 8005f72:	61fb      	str	r3, [r7, #28]
 8005f74:	e014      	b.n	8005fa0 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005f76:	68bb      	ldr	r3, [r7, #8]
 8005f78:	691b      	ldr	r3, [r3, #16]
 8005f7a:	2b04      	cmp	r3, #4
 8005f7c:	d00b      	beq.n	8005f96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005f7e:	68bb      	ldr	r3, [r7, #8]
 8005f80:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005f82:	2b02      	cmp	r3, #2
 8005f84:	d007      	beq.n	8005f96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005f86:	68bb      	ldr	r3, [r7, #8]
 8005f88:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005f8a:	2b03      	cmp	r3, #3
 8005f8c:	d003      	beq.n	8005f96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8005f8e:	68bb      	ldr	r3, [r7, #8]
 8005f90:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005f92:	2b07      	cmp	r3, #7
 8005f94:	d102      	bne.n	8005f9c <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 8005f96:	2302      	movs	r3, #2
 8005f98:	61fb      	str	r3, [r7, #28]
 8005f9a:	e001      	b.n	8005fa0 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8005f9c:	2301      	movs	r3, #1
 8005f9e:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	461a      	mov	r2, r3
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	01db      	lsls	r3, r3, #7
 8005faa:	4413      	add	r3, r2
 8005fac:	3384      	adds	r3, #132	; 0x84
 8005fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fb0:	68fa      	ldr	r2, [r7, #12]
 8005fb2:	6812      	ldr	r2, [r2, #0]
 8005fb4:	4611      	mov	r1, r2
 8005fb6:	687a      	ldr	r2, [r7, #4]
 8005fb8:	01d2      	lsls	r2, r2, #7
 8005fba:	440a      	add	r2, r1
 8005fbc:	3284      	adds	r2, #132	; 0x84
 8005fbe:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8005fc2:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005fc4:	68bb      	ldr	r3, [r7, #8]
 8005fc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005fc8:	69fa      	ldr	r2, [r7, #28]
 8005fca:	fb02 f303 	mul.w	r3, r2, r3
 8005fce:	041a      	lsls	r2, r3, #16
 8005fd0:	68bb      	ldr	r3, [r7, #8]
 8005fd2:	6859      	ldr	r1, [r3, #4]
 8005fd4:	68bb      	ldr	r3, [r7, #8]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	1acb      	subs	r3, r1, r3
 8005fda:	69f9      	ldr	r1, [r7, #28]
 8005fdc:	fb01 f303 	mul.w	r3, r1, r3
 8005fe0:	3303      	adds	r3, #3
 8005fe2:	68f9      	ldr	r1, [r7, #12]
 8005fe4:	6809      	ldr	r1, [r1, #0]
 8005fe6:	4608      	mov	r0, r1
 8005fe8:	6879      	ldr	r1, [r7, #4]
 8005fea:	01c9      	lsls	r1, r1, #7
 8005fec:	4401      	add	r1, r0
 8005fee:	3184      	adds	r1, #132	; 0x84
 8005ff0:	4313      	orrs	r3, r2
 8005ff2:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	681b      	ldr	r3, [r3, #0]
 8005ff8:	461a      	mov	r2, r3
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	01db      	lsls	r3, r3, #7
 8005ffe:	4413      	add	r3, r2
 8006000:	3384      	adds	r3, #132	; 0x84
 8006002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006004:	68fa      	ldr	r2, [r7, #12]
 8006006:	6812      	ldr	r2, [r2, #0]
 8006008:	4611      	mov	r1, r2
 800600a:	687a      	ldr	r2, [r7, #4]
 800600c:	01d2      	lsls	r2, r2, #7
 800600e:	440a      	add	r2, r1
 8006010:	3284      	adds	r2, #132	; 0x84
 8006012:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8006016:	f023 0307 	bic.w	r3, r3, #7
 800601a:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	461a      	mov	r2, r3
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	01db      	lsls	r3, r3, #7
 8006026:	4413      	add	r3, r2
 8006028:	3384      	adds	r3, #132	; 0x84
 800602a:	461a      	mov	r2, r3
 800602c:	68bb      	ldr	r3, [r7, #8]
 800602e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006030:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	461a      	mov	r2, r3
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	01db      	lsls	r3, r3, #7
 800603c:	4413      	add	r3, r2
 800603e:	3384      	adds	r3, #132	; 0x84
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	68fa      	ldr	r2, [r7, #12]
 8006044:	6812      	ldr	r2, [r2, #0]
 8006046:	4611      	mov	r1, r2
 8006048:	687a      	ldr	r2, [r7, #4]
 800604a:	01d2      	lsls	r2, r2, #7
 800604c:	440a      	add	r2, r1
 800604e:	3284      	adds	r2, #132	; 0x84
 8006050:	f043 0301 	orr.w	r3, r3, #1
 8006054:	6013      	str	r3, [r2, #0]
}
 8006056:	bf00      	nop
 8006058:	3724      	adds	r7, #36	; 0x24
 800605a:	46bd      	mov	sp, r7
 800605c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006060:	4770      	bx	lr
	...

08006064 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8006064:	b580      	push	{r7, lr}
 8006066:	b082      	sub	sp, #8
 8006068:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 800606a:	2300      	movs	r3, #0
 800606c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800606e:	2300      	movs	r3, #0
 8006070:	603b      	str	r3, [r7, #0]
 8006072:	4b20      	ldr	r3, [pc, #128]	; (80060f4 <HAL_PWREx_EnableOverDrive+0x90>)
 8006074:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006076:	4a1f      	ldr	r2, [pc, #124]	; (80060f4 <HAL_PWREx_EnableOverDrive+0x90>)
 8006078:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800607c:	6413      	str	r3, [r2, #64]	; 0x40
 800607e:	4b1d      	ldr	r3, [pc, #116]	; (80060f4 <HAL_PWREx_EnableOverDrive+0x90>)
 8006080:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006082:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006086:	603b      	str	r3, [r7, #0]
 8006088:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800608a:	4b1b      	ldr	r3, [pc, #108]	; (80060f8 <HAL_PWREx_EnableOverDrive+0x94>)
 800608c:	2201      	movs	r2, #1
 800608e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006090:	f7ff f948 	bl	8005324 <HAL_GetTick>
 8006094:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006096:	e009      	b.n	80060ac <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006098:	f7ff f944 	bl	8005324 <HAL_GetTick>
 800609c:	4602      	mov	r2, r0
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	1ad3      	subs	r3, r2, r3
 80060a2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80060a6:	d901      	bls.n	80060ac <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80060a8:	2303      	movs	r3, #3
 80060aa:	e01f      	b.n	80060ec <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80060ac:	4b13      	ldr	r3, [pc, #76]	; (80060fc <HAL_PWREx_EnableOverDrive+0x98>)
 80060ae:	685b      	ldr	r3, [r3, #4]
 80060b0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80060b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80060b8:	d1ee      	bne.n	8006098 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80060ba:	4b11      	ldr	r3, [pc, #68]	; (8006100 <HAL_PWREx_EnableOverDrive+0x9c>)
 80060bc:	2201      	movs	r2, #1
 80060be:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80060c0:	f7ff f930 	bl	8005324 <HAL_GetTick>
 80060c4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80060c6:	e009      	b.n	80060dc <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80060c8:	f7ff f92c 	bl	8005324 <HAL_GetTick>
 80060cc:	4602      	mov	r2, r0
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	1ad3      	subs	r3, r2, r3
 80060d2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80060d6:	d901      	bls.n	80060dc <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80060d8:	2303      	movs	r3, #3
 80060da:	e007      	b.n	80060ec <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80060dc:	4b07      	ldr	r3, [pc, #28]	; (80060fc <HAL_PWREx_EnableOverDrive+0x98>)
 80060de:	685b      	ldr	r3, [r3, #4]
 80060e0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80060e4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80060e8:	d1ee      	bne.n	80060c8 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80060ea:	2300      	movs	r3, #0
}
 80060ec:	4618      	mov	r0, r3
 80060ee:	3708      	adds	r7, #8
 80060f0:	46bd      	mov	sp, r7
 80060f2:	bd80      	pop	{r7, pc}
 80060f4:	40023800 	.word	0x40023800
 80060f8:	420e0040 	.word	0x420e0040
 80060fc:	40007000 	.word	0x40007000
 8006100:	420e0044 	.word	0x420e0044

08006104 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006104:	b580      	push	{r7, lr}
 8006106:	b086      	sub	sp, #24
 8006108:	af00      	add	r7, sp, #0
 800610a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	2b00      	cmp	r3, #0
 8006110:	d101      	bne.n	8006116 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006112:	2301      	movs	r3, #1
 8006114:	e25b      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	f003 0301 	and.w	r3, r3, #1
 800611e:	2b00      	cmp	r3, #0
 8006120:	d075      	beq.n	800620e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006122:	4ba3      	ldr	r3, [pc, #652]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006124:	689b      	ldr	r3, [r3, #8]
 8006126:	f003 030c 	and.w	r3, r3, #12
 800612a:	2b04      	cmp	r3, #4
 800612c:	d00c      	beq.n	8006148 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800612e:	4ba0      	ldr	r3, [pc, #640]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006130:	689b      	ldr	r3, [r3, #8]
 8006132:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006136:	2b08      	cmp	r3, #8
 8006138:	d112      	bne.n	8006160 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800613a:	4b9d      	ldr	r3, [pc, #628]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 800613c:	685b      	ldr	r3, [r3, #4]
 800613e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006142:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006146:	d10b      	bne.n	8006160 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006148:	4b99      	ldr	r3, [pc, #612]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006150:	2b00      	cmp	r3, #0
 8006152:	d05b      	beq.n	800620c <HAL_RCC_OscConfig+0x108>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	685b      	ldr	r3, [r3, #4]
 8006158:	2b00      	cmp	r3, #0
 800615a:	d157      	bne.n	800620c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 800615c:	2301      	movs	r3, #1
 800615e:	e236      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	685b      	ldr	r3, [r3, #4]
 8006164:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006168:	d106      	bne.n	8006178 <HAL_RCC_OscConfig+0x74>
 800616a:	4b91      	ldr	r3, [pc, #580]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	4a90      	ldr	r2, [pc, #576]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006170:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006174:	6013      	str	r3, [r2, #0]
 8006176:	e01d      	b.n	80061b4 <HAL_RCC_OscConfig+0xb0>
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	685b      	ldr	r3, [r3, #4]
 800617c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006180:	d10c      	bne.n	800619c <HAL_RCC_OscConfig+0x98>
 8006182:	4b8b      	ldr	r3, [pc, #556]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	4a8a      	ldr	r2, [pc, #552]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006188:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800618c:	6013      	str	r3, [r2, #0]
 800618e:	4b88      	ldr	r3, [pc, #544]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	4a87      	ldr	r2, [pc, #540]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006194:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006198:	6013      	str	r3, [r2, #0]
 800619a:	e00b      	b.n	80061b4 <HAL_RCC_OscConfig+0xb0>
 800619c:	4b84      	ldr	r3, [pc, #528]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	4a83      	ldr	r2, [pc, #524]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80061a2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80061a6:	6013      	str	r3, [r2, #0]
 80061a8:	4b81      	ldr	r3, [pc, #516]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	4a80      	ldr	r2, [pc, #512]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80061ae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80061b2:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	685b      	ldr	r3, [r3, #4]
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d013      	beq.n	80061e4 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80061bc:	f7ff f8b2 	bl	8005324 <HAL_GetTick>
 80061c0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80061c2:	e008      	b.n	80061d6 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80061c4:	f7ff f8ae 	bl	8005324 <HAL_GetTick>
 80061c8:	4602      	mov	r2, r0
 80061ca:	693b      	ldr	r3, [r7, #16]
 80061cc:	1ad3      	subs	r3, r2, r3
 80061ce:	2b64      	cmp	r3, #100	; 0x64
 80061d0:	d901      	bls.n	80061d6 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 80061d2:	2303      	movs	r3, #3
 80061d4:	e1fb      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80061d6:	4b76      	ldr	r3, [pc, #472]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d0f0      	beq.n	80061c4 <HAL_RCC_OscConfig+0xc0>
 80061e2:	e014      	b.n	800620e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80061e4:	f7ff f89e 	bl	8005324 <HAL_GetTick>
 80061e8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80061ea:	e008      	b.n	80061fe <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80061ec:	f7ff f89a 	bl	8005324 <HAL_GetTick>
 80061f0:	4602      	mov	r2, r0
 80061f2:	693b      	ldr	r3, [r7, #16]
 80061f4:	1ad3      	subs	r3, r2, r3
 80061f6:	2b64      	cmp	r3, #100	; 0x64
 80061f8:	d901      	bls.n	80061fe <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80061fa:	2303      	movs	r3, #3
 80061fc:	e1e7      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80061fe:	4b6c      	ldr	r3, [pc, #432]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006200:	681b      	ldr	r3, [r3, #0]
 8006202:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006206:	2b00      	cmp	r3, #0
 8006208:	d1f0      	bne.n	80061ec <HAL_RCC_OscConfig+0xe8>
 800620a:	e000      	b.n	800620e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800620c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f003 0302 	and.w	r3, r3, #2
 8006216:	2b00      	cmp	r3, #0
 8006218:	d063      	beq.n	80062e2 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800621a:	4b65      	ldr	r3, [pc, #404]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 800621c:	689b      	ldr	r3, [r3, #8]
 800621e:	f003 030c 	and.w	r3, r3, #12
 8006222:	2b00      	cmp	r3, #0
 8006224:	d00b      	beq.n	800623e <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006226:	4b62      	ldr	r3, [pc, #392]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006228:	689b      	ldr	r3, [r3, #8]
 800622a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800622e:	2b08      	cmp	r3, #8
 8006230:	d11c      	bne.n	800626c <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006232:	4b5f      	ldr	r3, [pc, #380]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006234:	685b      	ldr	r3, [r3, #4]
 8006236:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800623a:	2b00      	cmp	r3, #0
 800623c:	d116      	bne.n	800626c <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800623e:	4b5c      	ldr	r3, [pc, #368]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	f003 0302 	and.w	r3, r3, #2
 8006246:	2b00      	cmp	r3, #0
 8006248:	d005      	beq.n	8006256 <HAL_RCC_OscConfig+0x152>
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	68db      	ldr	r3, [r3, #12]
 800624e:	2b01      	cmp	r3, #1
 8006250:	d001      	beq.n	8006256 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8006252:	2301      	movs	r3, #1
 8006254:	e1bb      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006256:	4b56      	ldr	r3, [pc, #344]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	691b      	ldr	r3, [r3, #16]
 8006262:	00db      	lsls	r3, r3, #3
 8006264:	4952      	ldr	r1, [pc, #328]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006266:	4313      	orrs	r3, r2
 8006268:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800626a:	e03a      	b.n	80062e2 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	68db      	ldr	r3, [r3, #12]
 8006270:	2b00      	cmp	r3, #0
 8006272:	d020      	beq.n	80062b6 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8006274:	4b4f      	ldr	r3, [pc, #316]	; (80063b4 <HAL_RCC_OscConfig+0x2b0>)
 8006276:	2201      	movs	r2, #1
 8006278:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800627a:	f7ff f853 	bl	8005324 <HAL_GetTick>
 800627e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006280:	e008      	b.n	8006294 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006282:	f7ff f84f 	bl	8005324 <HAL_GetTick>
 8006286:	4602      	mov	r2, r0
 8006288:	693b      	ldr	r3, [r7, #16]
 800628a:	1ad3      	subs	r3, r2, r3
 800628c:	2b02      	cmp	r3, #2
 800628e:	d901      	bls.n	8006294 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8006290:	2303      	movs	r3, #3
 8006292:	e19c      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006294:	4b46      	ldr	r3, [pc, #280]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	f003 0302 	and.w	r3, r3, #2
 800629c:	2b00      	cmp	r3, #0
 800629e:	d0f0      	beq.n	8006282 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80062a0:	4b43      	ldr	r3, [pc, #268]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	691b      	ldr	r3, [r3, #16]
 80062ac:	00db      	lsls	r3, r3, #3
 80062ae:	4940      	ldr	r1, [pc, #256]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80062b0:	4313      	orrs	r3, r2
 80062b2:	600b      	str	r3, [r1, #0]
 80062b4:	e015      	b.n	80062e2 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80062b6:	4b3f      	ldr	r3, [pc, #252]	; (80063b4 <HAL_RCC_OscConfig+0x2b0>)
 80062b8:	2200      	movs	r2, #0
 80062ba:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80062bc:	f7ff f832 	bl	8005324 <HAL_GetTick>
 80062c0:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80062c2:	e008      	b.n	80062d6 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80062c4:	f7ff f82e 	bl	8005324 <HAL_GetTick>
 80062c8:	4602      	mov	r2, r0
 80062ca:	693b      	ldr	r3, [r7, #16]
 80062cc:	1ad3      	subs	r3, r2, r3
 80062ce:	2b02      	cmp	r3, #2
 80062d0:	d901      	bls.n	80062d6 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80062d2:	2303      	movs	r3, #3
 80062d4:	e17b      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80062d6:	4b36      	ldr	r3, [pc, #216]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f003 0302 	and.w	r3, r3, #2
 80062de:	2b00      	cmp	r3, #0
 80062e0:	d1f0      	bne.n	80062c4 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80062e2:	687b      	ldr	r3, [r7, #4]
 80062e4:	681b      	ldr	r3, [r3, #0]
 80062e6:	f003 0308 	and.w	r3, r3, #8
 80062ea:	2b00      	cmp	r3, #0
 80062ec:	d030      	beq.n	8006350 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80062ee:	687b      	ldr	r3, [r7, #4]
 80062f0:	695b      	ldr	r3, [r3, #20]
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	d016      	beq.n	8006324 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80062f6:	4b30      	ldr	r3, [pc, #192]	; (80063b8 <HAL_RCC_OscConfig+0x2b4>)
 80062f8:	2201      	movs	r2, #1
 80062fa:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80062fc:	f7ff f812 	bl	8005324 <HAL_GetTick>
 8006300:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006302:	e008      	b.n	8006316 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006304:	f7ff f80e 	bl	8005324 <HAL_GetTick>
 8006308:	4602      	mov	r2, r0
 800630a:	693b      	ldr	r3, [r7, #16]
 800630c:	1ad3      	subs	r3, r2, r3
 800630e:	2b02      	cmp	r3, #2
 8006310:	d901      	bls.n	8006316 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8006312:	2303      	movs	r3, #3
 8006314:	e15b      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006316:	4b26      	ldr	r3, [pc, #152]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006318:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800631a:	f003 0302 	and.w	r3, r3, #2
 800631e:	2b00      	cmp	r3, #0
 8006320:	d0f0      	beq.n	8006304 <HAL_RCC_OscConfig+0x200>
 8006322:	e015      	b.n	8006350 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8006324:	4b24      	ldr	r3, [pc, #144]	; (80063b8 <HAL_RCC_OscConfig+0x2b4>)
 8006326:	2200      	movs	r2, #0
 8006328:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800632a:	f7fe fffb 	bl	8005324 <HAL_GetTick>
 800632e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006330:	e008      	b.n	8006344 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006332:	f7fe fff7 	bl	8005324 <HAL_GetTick>
 8006336:	4602      	mov	r2, r0
 8006338:	693b      	ldr	r3, [r7, #16]
 800633a:	1ad3      	subs	r3, r2, r3
 800633c:	2b02      	cmp	r3, #2
 800633e:	d901      	bls.n	8006344 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8006340:	2303      	movs	r3, #3
 8006342:	e144      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006344:	4b1a      	ldr	r3, [pc, #104]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006346:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006348:	f003 0302 	and.w	r3, r3, #2
 800634c:	2b00      	cmp	r3, #0
 800634e:	d1f0      	bne.n	8006332 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	f003 0304 	and.w	r3, r3, #4
 8006358:	2b00      	cmp	r3, #0
 800635a:	f000 80a0 	beq.w	800649e <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 800635e:	2300      	movs	r3, #0
 8006360:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006362:	4b13      	ldr	r3, [pc, #76]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006364:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006366:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800636a:	2b00      	cmp	r3, #0
 800636c:	d10f      	bne.n	800638e <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800636e:	2300      	movs	r3, #0
 8006370:	60bb      	str	r3, [r7, #8]
 8006372:	4b0f      	ldr	r3, [pc, #60]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006374:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006376:	4a0e      	ldr	r2, [pc, #56]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006378:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800637c:	6413      	str	r3, [r2, #64]	; 0x40
 800637e:	4b0c      	ldr	r3, [pc, #48]	; (80063b0 <HAL_RCC_OscConfig+0x2ac>)
 8006380:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006382:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006386:	60bb      	str	r3, [r7, #8]
 8006388:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800638a:	2301      	movs	r3, #1
 800638c:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800638e:	4b0b      	ldr	r3, [pc, #44]	; (80063bc <HAL_RCC_OscConfig+0x2b8>)
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006396:	2b00      	cmp	r3, #0
 8006398:	d121      	bne.n	80063de <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800639a:	4b08      	ldr	r3, [pc, #32]	; (80063bc <HAL_RCC_OscConfig+0x2b8>)
 800639c:	681b      	ldr	r3, [r3, #0]
 800639e:	4a07      	ldr	r2, [pc, #28]	; (80063bc <HAL_RCC_OscConfig+0x2b8>)
 80063a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80063a4:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80063a6:	f7fe ffbd 	bl	8005324 <HAL_GetTick>
 80063aa:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80063ac:	e011      	b.n	80063d2 <HAL_RCC_OscConfig+0x2ce>
 80063ae:	bf00      	nop
 80063b0:	40023800 	.word	0x40023800
 80063b4:	42470000 	.word	0x42470000
 80063b8:	42470e80 	.word	0x42470e80
 80063bc:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80063c0:	f7fe ffb0 	bl	8005324 <HAL_GetTick>
 80063c4:	4602      	mov	r2, r0
 80063c6:	693b      	ldr	r3, [r7, #16]
 80063c8:	1ad3      	subs	r3, r2, r3
 80063ca:	2b02      	cmp	r3, #2
 80063cc:	d901      	bls.n	80063d2 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 80063ce:	2303      	movs	r3, #3
 80063d0:	e0fd      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80063d2:	4b81      	ldr	r3, [pc, #516]	; (80065d8 <HAL_RCC_OscConfig+0x4d4>)
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d0f0      	beq.n	80063c0 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	689b      	ldr	r3, [r3, #8]
 80063e2:	2b01      	cmp	r3, #1
 80063e4:	d106      	bne.n	80063f4 <HAL_RCC_OscConfig+0x2f0>
 80063e6:	4b7d      	ldr	r3, [pc, #500]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 80063e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80063ea:	4a7c      	ldr	r2, [pc, #496]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 80063ec:	f043 0301 	orr.w	r3, r3, #1
 80063f0:	6713      	str	r3, [r2, #112]	; 0x70
 80063f2:	e01c      	b.n	800642e <HAL_RCC_OscConfig+0x32a>
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	689b      	ldr	r3, [r3, #8]
 80063f8:	2b05      	cmp	r3, #5
 80063fa:	d10c      	bne.n	8006416 <HAL_RCC_OscConfig+0x312>
 80063fc:	4b77      	ldr	r3, [pc, #476]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 80063fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006400:	4a76      	ldr	r2, [pc, #472]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006402:	f043 0304 	orr.w	r3, r3, #4
 8006406:	6713      	str	r3, [r2, #112]	; 0x70
 8006408:	4b74      	ldr	r3, [pc, #464]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 800640a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800640c:	4a73      	ldr	r2, [pc, #460]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 800640e:	f043 0301 	orr.w	r3, r3, #1
 8006412:	6713      	str	r3, [r2, #112]	; 0x70
 8006414:	e00b      	b.n	800642e <HAL_RCC_OscConfig+0x32a>
 8006416:	4b71      	ldr	r3, [pc, #452]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006418:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800641a:	4a70      	ldr	r2, [pc, #448]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 800641c:	f023 0301 	bic.w	r3, r3, #1
 8006420:	6713      	str	r3, [r2, #112]	; 0x70
 8006422:	4b6e      	ldr	r3, [pc, #440]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006424:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006426:	4a6d      	ldr	r2, [pc, #436]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006428:	f023 0304 	bic.w	r3, r3, #4
 800642c:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	689b      	ldr	r3, [r3, #8]
 8006432:	2b00      	cmp	r3, #0
 8006434:	d015      	beq.n	8006462 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006436:	f7fe ff75 	bl	8005324 <HAL_GetTick>
 800643a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800643c:	e00a      	b.n	8006454 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800643e:	f7fe ff71 	bl	8005324 <HAL_GetTick>
 8006442:	4602      	mov	r2, r0
 8006444:	693b      	ldr	r3, [r7, #16]
 8006446:	1ad3      	subs	r3, r2, r3
 8006448:	f241 3288 	movw	r2, #5000	; 0x1388
 800644c:	4293      	cmp	r3, r2
 800644e:	d901      	bls.n	8006454 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8006450:	2303      	movs	r3, #3
 8006452:	e0bc      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006454:	4b61      	ldr	r3, [pc, #388]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006456:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006458:	f003 0302 	and.w	r3, r3, #2
 800645c:	2b00      	cmp	r3, #0
 800645e:	d0ee      	beq.n	800643e <HAL_RCC_OscConfig+0x33a>
 8006460:	e014      	b.n	800648c <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8006462:	f7fe ff5f 	bl	8005324 <HAL_GetTick>
 8006466:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006468:	e00a      	b.n	8006480 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800646a:	f7fe ff5b 	bl	8005324 <HAL_GetTick>
 800646e:	4602      	mov	r2, r0
 8006470:	693b      	ldr	r3, [r7, #16]
 8006472:	1ad3      	subs	r3, r2, r3
 8006474:	f241 3288 	movw	r2, #5000	; 0x1388
 8006478:	4293      	cmp	r3, r2
 800647a:	d901      	bls.n	8006480 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 800647c:	2303      	movs	r3, #3
 800647e:	e0a6      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006480:	4b56      	ldr	r3, [pc, #344]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006482:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006484:	f003 0302 	and.w	r3, r3, #2
 8006488:	2b00      	cmp	r3, #0
 800648a:	d1ee      	bne.n	800646a <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800648c:	7dfb      	ldrb	r3, [r7, #23]
 800648e:	2b01      	cmp	r3, #1
 8006490:	d105      	bne.n	800649e <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8006492:	4b52      	ldr	r3, [pc, #328]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006494:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006496:	4a51      	ldr	r2, [pc, #324]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006498:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800649c:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	699b      	ldr	r3, [r3, #24]
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	f000 8092 	beq.w	80065cc <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80064a8:	4b4c      	ldr	r3, [pc, #304]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 80064aa:	689b      	ldr	r3, [r3, #8]
 80064ac:	f003 030c 	and.w	r3, r3, #12
 80064b0:	2b08      	cmp	r3, #8
 80064b2:	d05c      	beq.n	800656e <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	699b      	ldr	r3, [r3, #24]
 80064b8:	2b02      	cmp	r3, #2
 80064ba:	d141      	bne.n	8006540 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80064bc:	4b48      	ldr	r3, [pc, #288]	; (80065e0 <HAL_RCC_OscConfig+0x4dc>)
 80064be:	2200      	movs	r2, #0
 80064c0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80064c2:	f7fe ff2f 	bl	8005324 <HAL_GetTick>
 80064c6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80064c8:	e008      	b.n	80064dc <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80064ca:	f7fe ff2b 	bl	8005324 <HAL_GetTick>
 80064ce:	4602      	mov	r2, r0
 80064d0:	693b      	ldr	r3, [r7, #16]
 80064d2:	1ad3      	subs	r3, r2, r3
 80064d4:	2b02      	cmp	r3, #2
 80064d6:	d901      	bls.n	80064dc <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 80064d8:	2303      	movs	r3, #3
 80064da:	e078      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80064dc:	4b3f      	ldr	r3, [pc, #252]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 80064de:	681b      	ldr	r3, [r3, #0]
 80064e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d1f0      	bne.n	80064ca <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	69da      	ldr	r2, [r3, #28]
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	6a1b      	ldr	r3, [r3, #32]
 80064f0:	431a      	orrs	r2, r3
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064f6:	019b      	lsls	r3, r3, #6
 80064f8:	431a      	orrs	r2, r3
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80064fe:	085b      	lsrs	r3, r3, #1
 8006500:	3b01      	subs	r3, #1
 8006502:	041b      	lsls	r3, r3, #16
 8006504:	431a      	orrs	r2, r3
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800650a:	061b      	lsls	r3, r3, #24
 800650c:	4933      	ldr	r1, [pc, #204]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 800650e:	4313      	orrs	r3, r2
 8006510:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8006512:	4b33      	ldr	r3, [pc, #204]	; (80065e0 <HAL_RCC_OscConfig+0x4dc>)
 8006514:	2201      	movs	r2, #1
 8006516:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006518:	f7fe ff04 	bl	8005324 <HAL_GetTick>
 800651c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800651e:	e008      	b.n	8006532 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006520:	f7fe ff00 	bl	8005324 <HAL_GetTick>
 8006524:	4602      	mov	r2, r0
 8006526:	693b      	ldr	r3, [r7, #16]
 8006528:	1ad3      	subs	r3, r2, r3
 800652a:	2b02      	cmp	r3, #2
 800652c:	d901      	bls.n	8006532 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 800652e:	2303      	movs	r3, #3
 8006530:	e04d      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006532:	4b2a      	ldr	r3, [pc, #168]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006534:	681b      	ldr	r3, [r3, #0]
 8006536:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800653a:	2b00      	cmp	r3, #0
 800653c:	d0f0      	beq.n	8006520 <HAL_RCC_OscConfig+0x41c>
 800653e:	e045      	b.n	80065cc <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006540:	4b27      	ldr	r3, [pc, #156]	; (80065e0 <HAL_RCC_OscConfig+0x4dc>)
 8006542:	2200      	movs	r2, #0
 8006544:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8006546:	f7fe feed 	bl	8005324 <HAL_GetTick>
 800654a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800654c:	e008      	b.n	8006560 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800654e:	f7fe fee9 	bl	8005324 <HAL_GetTick>
 8006552:	4602      	mov	r2, r0
 8006554:	693b      	ldr	r3, [r7, #16]
 8006556:	1ad3      	subs	r3, r2, r3
 8006558:	2b02      	cmp	r3, #2
 800655a:	d901      	bls.n	8006560 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 800655c:	2303      	movs	r3, #3
 800655e:	e036      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006560:	4b1e      	ldr	r3, [pc, #120]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006568:	2b00      	cmp	r3, #0
 800656a:	d1f0      	bne.n	800654e <HAL_RCC_OscConfig+0x44a>
 800656c:	e02e      	b.n	80065cc <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	699b      	ldr	r3, [r3, #24]
 8006572:	2b01      	cmp	r3, #1
 8006574:	d101      	bne.n	800657a <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 8006576:	2301      	movs	r3, #1
 8006578:	e029      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 800657a:	4b18      	ldr	r3, [pc, #96]	; (80065dc <HAL_RCC_OscConfig+0x4d8>)
 800657c:	685b      	ldr	r3, [r3, #4]
 800657e:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	69db      	ldr	r3, [r3, #28]
 800658a:	429a      	cmp	r2, r3
 800658c:	d11c      	bne.n	80065c8 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800658e:	68fb      	ldr	r3, [r7, #12]
 8006590:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006598:	429a      	cmp	r2, r3
 800659a:	d115      	bne.n	80065c8 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800659c:	68fa      	ldr	r2, [r7, #12]
 800659e:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80065a2:	4013      	ands	r3, r2
 80065a4:	687a      	ldr	r2, [r7, #4]
 80065a6:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80065a8:	4293      	cmp	r3, r2
 80065aa:	d10d      	bne.n	80065c8 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80065ac:	68fb      	ldr	r3, [r7, #12]
 80065ae:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80065b6:	429a      	cmp	r2, r3
 80065b8:	d106      	bne.n	80065c8 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 80065ba:	68fb      	ldr	r3, [r7, #12]
 80065bc:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80065c0:	687b      	ldr	r3, [r7, #4]
 80065c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80065c4:	429a      	cmp	r2, r3
 80065c6:	d001      	beq.n	80065cc <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 80065c8:	2301      	movs	r3, #1
 80065ca:	e000      	b.n	80065ce <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 80065cc:	2300      	movs	r3, #0
}
 80065ce:	4618      	mov	r0, r3
 80065d0:	3718      	adds	r7, #24
 80065d2:	46bd      	mov	sp, r7
 80065d4:	bd80      	pop	{r7, pc}
 80065d6:	bf00      	nop
 80065d8:	40007000 	.word	0x40007000
 80065dc:	40023800 	.word	0x40023800
 80065e0:	42470060 	.word	0x42470060

080065e4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80065e4:	b580      	push	{r7, lr}
 80065e6:	b084      	sub	sp, #16
 80065e8:	af00      	add	r7, sp, #0
 80065ea:	6078      	str	r0, [r7, #4]
 80065ec:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d101      	bne.n	80065f8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80065f4:	2301      	movs	r3, #1
 80065f6:	e0cc      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80065f8:	4b68      	ldr	r3, [pc, #416]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 80065fa:	681b      	ldr	r3, [r3, #0]
 80065fc:	f003 030f 	and.w	r3, r3, #15
 8006600:	683a      	ldr	r2, [r7, #0]
 8006602:	429a      	cmp	r2, r3
 8006604:	d90c      	bls.n	8006620 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006606:	4b65      	ldr	r3, [pc, #404]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 8006608:	683a      	ldr	r2, [r7, #0]
 800660a:	b2d2      	uxtb	r2, r2
 800660c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800660e:	4b63      	ldr	r3, [pc, #396]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	f003 030f 	and.w	r3, r3, #15
 8006616:	683a      	ldr	r2, [r7, #0]
 8006618:	429a      	cmp	r2, r3
 800661a:	d001      	beq.n	8006620 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800661c:	2301      	movs	r3, #1
 800661e:	e0b8      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	681b      	ldr	r3, [r3, #0]
 8006624:	f003 0302 	and.w	r3, r3, #2
 8006628:	2b00      	cmp	r3, #0
 800662a:	d020      	beq.n	800666e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	f003 0304 	and.w	r3, r3, #4
 8006634:	2b00      	cmp	r3, #0
 8006636:	d005      	beq.n	8006644 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006638:	4b59      	ldr	r3, [pc, #356]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 800663a:	689b      	ldr	r3, [r3, #8]
 800663c:	4a58      	ldr	r2, [pc, #352]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 800663e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8006642:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f003 0308 	and.w	r3, r3, #8
 800664c:	2b00      	cmp	r3, #0
 800664e:	d005      	beq.n	800665c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006650:	4b53      	ldr	r3, [pc, #332]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006652:	689b      	ldr	r3, [r3, #8]
 8006654:	4a52      	ldr	r2, [pc, #328]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006656:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800665a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800665c:	4b50      	ldr	r3, [pc, #320]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 800665e:	689b      	ldr	r3, [r3, #8]
 8006660:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	689b      	ldr	r3, [r3, #8]
 8006668:	494d      	ldr	r1, [pc, #308]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 800666a:	4313      	orrs	r3, r2
 800666c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	f003 0301 	and.w	r3, r3, #1
 8006676:	2b00      	cmp	r3, #0
 8006678:	d044      	beq.n	8006704 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	685b      	ldr	r3, [r3, #4]
 800667e:	2b01      	cmp	r3, #1
 8006680:	d107      	bne.n	8006692 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006682:	4b47      	ldr	r3, [pc, #284]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800668a:	2b00      	cmp	r3, #0
 800668c:	d119      	bne.n	80066c2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800668e:	2301      	movs	r3, #1
 8006690:	e07f      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	685b      	ldr	r3, [r3, #4]
 8006696:	2b02      	cmp	r3, #2
 8006698:	d003      	beq.n	80066a2 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800669e:	2b03      	cmp	r3, #3
 80066a0:	d107      	bne.n	80066b2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80066a2:	4b3f      	ldr	r3, [pc, #252]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d109      	bne.n	80066c2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80066ae:	2301      	movs	r3, #1
 80066b0:	e06f      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066b2:	4b3b      	ldr	r3, [pc, #236]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	f003 0302 	and.w	r3, r3, #2
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d101      	bne.n	80066c2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80066be:	2301      	movs	r3, #1
 80066c0:	e067      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80066c2:	4b37      	ldr	r3, [pc, #220]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 80066c4:	689b      	ldr	r3, [r3, #8]
 80066c6:	f023 0203 	bic.w	r2, r3, #3
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	685b      	ldr	r3, [r3, #4]
 80066ce:	4934      	ldr	r1, [pc, #208]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 80066d0:	4313      	orrs	r3, r2
 80066d2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80066d4:	f7fe fe26 	bl	8005324 <HAL_GetTick>
 80066d8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80066da:	e00a      	b.n	80066f2 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80066dc:	f7fe fe22 	bl	8005324 <HAL_GetTick>
 80066e0:	4602      	mov	r2, r0
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	1ad3      	subs	r3, r2, r3
 80066e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80066ea:	4293      	cmp	r3, r2
 80066ec:	d901      	bls.n	80066f2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80066ee:	2303      	movs	r3, #3
 80066f0:	e04f      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80066f2:	4b2b      	ldr	r3, [pc, #172]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 80066f4:	689b      	ldr	r3, [r3, #8]
 80066f6:	f003 020c 	and.w	r2, r3, #12
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	685b      	ldr	r3, [r3, #4]
 80066fe:	009b      	lsls	r3, r3, #2
 8006700:	429a      	cmp	r2, r3
 8006702:	d1eb      	bne.n	80066dc <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006704:	4b25      	ldr	r3, [pc, #148]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	f003 030f 	and.w	r3, r3, #15
 800670c:	683a      	ldr	r2, [r7, #0]
 800670e:	429a      	cmp	r2, r3
 8006710:	d20c      	bcs.n	800672c <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006712:	4b22      	ldr	r3, [pc, #136]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 8006714:	683a      	ldr	r2, [r7, #0]
 8006716:	b2d2      	uxtb	r2, r2
 8006718:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800671a:	4b20      	ldr	r3, [pc, #128]	; (800679c <HAL_RCC_ClockConfig+0x1b8>)
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	f003 030f 	and.w	r3, r3, #15
 8006722:	683a      	ldr	r2, [r7, #0]
 8006724:	429a      	cmp	r2, r3
 8006726:	d001      	beq.n	800672c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8006728:	2301      	movs	r3, #1
 800672a:	e032      	b.n	8006792 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	f003 0304 	and.w	r3, r3, #4
 8006734:	2b00      	cmp	r3, #0
 8006736:	d008      	beq.n	800674a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006738:	4b19      	ldr	r3, [pc, #100]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 800673a:	689b      	ldr	r3, [r3, #8]
 800673c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	68db      	ldr	r3, [r3, #12]
 8006744:	4916      	ldr	r1, [pc, #88]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006746:	4313      	orrs	r3, r2
 8006748:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f003 0308 	and.w	r3, r3, #8
 8006752:	2b00      	cmp	r3, #0
 8006754:	d009      	beq.n	800676a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006756:	4b12      	ldr	r3, [pc, #72]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006758:	689b      	ldr	r3, [r3, #8]
 800675a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	691b      	ldr	r3, [r3, #16]
 8006762:	00db      	lsls	r3, r3, #3
 8006764:	490e      	ldr	r1, [pc, #56]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006766:	4313      	orrs	r3, r2
 8006768:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800676a:	f000 f821 	bl	80067b0 <HAL_RCC_GetSysClockFreq>
 800676e:	4601      	mov	r1, r0
 8006770:	4b0b      	ldr	r3, [pc, #44]	; (80067a0 <HAL_RCC_ClockConfig+0x1bc>)
 8006772:	689b      	ldr	r3, [r3, #8]
 8006774:	091b      	lsrs	r3, r3, #4
 8006776:	f003 030f 	and.w	r3, r3, #15
 800677a:	4a0a      	ldr	r2, [pc, #40]	; (80067a4 <HAL_RCC_ClockConfig+0x1c0>)
 800677c:	5cd3      	ldrb	r3, [r2, r3]
 800677e:	fa21 f303 	lsr.w	r3, r1, r3
 8006782:	4a09      	ldr	r2, [pc, #36]	; (80067a8 <HAL_RCC_ClockConfig+0x1c4>)
 8006784:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8006786:	4b09      	ldr	r3, [pc, #36]	; (80067ac <HAL_RCC_ClockConfig+0x1c8>)
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	4618      	mov	r0, r3
 800678c:	f7fa fc2a 	bl	8000fe4 <HAL_InitTick>

  return HAL_OK;
 8006790:	2300      	movs	r3, #0
}
 8006792:	4618      	mov	r0, r3
 8006794:	3710      	adds	r7, #16
 8006796:	46bd      	mov	sp, r7
 8006798:	bd80      	pop	{r7, pc}
 800679a:	bf00      	nop
 800679c:	40023c00 	.word	0x40023c00
 80067a0:	40023800 	.word	0x40023800
 80067a4:	0801d814 	.word	0x0801d814
 80067a8:	20000008 	.word	0x20000008
 80067ac:	2000000c 	.word	0x2000000c

080067b0 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80067b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067b2:	b085      	sub	sp, #20
 80067b4:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80067b6:	2300      	movs	r3, #0
 80067b8:	607b      	str	r3, [r7, #4]
 80067ba:	2300      	movs	r3, #0
 80067bc:	60fb      	str	r3, [r7, #12]
 80067be:	2300      	movs	r3, #0
 80067c0:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 80067c2:	2300      	movs	r3, #0
 80067c4:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80067c6:	4b63      	ldr	r3, [pc, #396]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 80067c8:	689b      	ldr	r3, [r3, #8]
 80067ca:	f003 030c 	and.w	r3, r3, #12
 80067ce:	2b04      	cmp	r3, #4
 80067d0:	d007      	beq.n	80067e2 <HAL_RCC_GetSysClockFreq+0x32>
 80067d2:	2b08      	cmp	r3, #8
 80067d4:	d008      	beq.n	80067e8 <HAL_RCC_GetSysClockFreq+0x38>
 80067d6:	2b00      	cmp	r3, #0
 80067d8:	f040 80b4 	bne.w	8006944 <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80067dc:	4b5e      	ldr	r3, [pc, #376]	; (8006958 <HAL_RCC_GetSysClockFreq+0x1a8>)
 80067de:	60bb      	str	r3, [r7, #8]
       break;
 80067e0:	e0b3      	b.n	800694a <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80067e2:	4b5e      	ldr	r3, [pc, #376]	; (800695c <HAL_RCC_GetSysClockFreq+0x1ac>)
 80067e4:	60bb      	str	r3, [r7, #8]
      break;
 80067e6:	e0b0      	b.n	800694a <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80067e8:	4b5a      	ldr	r3, [pc, #360]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 80067ea:	685b      	ldr	r3, [r3, #4]
 80067ec:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80067f0:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80067f2:	4b58      	ldr	r3, [pc, #352]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 80067f4:	685b      	ldr	r3, [r3, #4]
 80067f6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d04a      	beq.n	8006894 <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80067fe:	4b55      	ldr	r3, [pc, #340]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8006800:	685b      	ldr	r3, [r3, #4]
 8006802:	099b      	lsrs	r3, r3, #6
 8006804:	f04f 0400 	mov.w	r4, #0
 8006808:	f240 11ff 	movw	r1, #511	; 0x1ff
 800680c:	f04f 0200 	mov.w	r2, #0
 8006810:	ea03 0501 	and.w	r5, r3, r1
 8006814:	ea04 0602 	and.w	r6, r4, r2
 8006818:	4629      	mov	r1, r5
 800681a:	4632      	mov	r2, r6
 800681c:	f04f 0300 	mov.w	r3, #0
 8006820:	f04f 0400 	mov.w	r4, #0
 8006824:	0154      	lsls	r4, r2, #5
 8006826:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800682a:	014b      	lsls	r3, r1, #5
 800682c:	4619      	mov	r1, r3
 800682e:	4622      	mov	r2, r4
 8006830:	1b49      	subs	r1, r1, r5
 8006832:	eb62 0206 	sbc.w	r2, r2, r6
 8006836:	f04f 0300 	mov.w	r3, #0
 800683a:	f04f 0400 	mov.w	r4, #0
 800683e:	0194      	lsls	r4, r2, #6
 8006840:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8006844:	018b      	lsls	r3, r1, #6
 8006846:	1a5b      	subs	r3, r3, r1
 8006848:	eb64 0402 	sbc.w	r4, r4, r2
 800684c:	f04f 0100 	mov.w	r1, #0
 8006850:	f04f 0200 	mov.w	r2, #0
 8006854:	00e2      	lsls	r2, r4, #3
 8006856:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800685a:	00d9      	lsls	r1, r3, #3
 800685c:	460b      	mov	r3, r1
 800685e:	4614      	mov	r4, r2
 8006860:	195b      	adds	r3, r3, r5
 8006862:	eb44 0406 	adc.w	r4, r4, r6
 8006866:	f04f 0100 	mov.w	r1, #0
 800686a:	f04f 0200 	mov.w	r2, #0
 800686e:	0262      	lsls	r2, r4, #9
 8006870:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8006874:	0259      	lsls	r1, r3, #9
 8006876:	460b      	mov	r3, r1
 8006878:	4614      	mov	r4, r2
 800687a:	4618      	mov	r0, r3
 800687c:	4621      	mov	r1, r4
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	f04f 0400 	mov.w	r4, #0
 8006884:	461a      	mov	r2, r3
 8006886:	4623      	mov	r3, r4
 8006888:	f7f9 fd02 	bl	8000290 <__aeabi_uldivmod>
 800688c:	4603      	mov	r3, r0
 800688e:	460c      	mov	r4, r1
 8006890:	60fb      	str	r3, [r7, #12]
 8006892:	e049      	b.n	8006928 <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006894:	4b2f      	ldr	r3, [pc, #188]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8006896:	685b      	ldr	r3, [r3, #4]
 8006898:	099b      	lsrs	r3, r3, #6
 800689a:	f04f 0400 	mov.w	r4, #0
 800689e:	f240 11ff 	movw	r1, #511	; 0x1ff
 80068a2:	f04f 0200 	mov.w	r2, #0
 80068a6:	ea03 0501 	and.w	r5, r3, r1
 80068aa:	ea04 0602 	and.w	r6, r4, r2
 80068ae:	4629      	mov	r1, r5
 80068b0:	4632      	mov	r2, r6
 80068b2:	f04f 0300 	mov.w	r3, #0
 80068b6:	f04f 0400 	mov.w	r4, #0
 80068ba:	0154      	lsls	r4, r2, #5
 80068bc:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80068c0:	014b      	lsls	r3, r1, #5
 80068c2:	4619      	mov	r1, r3
 80068c4:	4622      	mov	r2, r4
 80068c6:	1b49      	subs	r1, r1, r5
 80068c8:	eb62 0206 	sbc.w	r2, r2, r6
 80068cc:	f04f 0300 	mov.w	r3, #0
 80068d0:	f04f 0400 	mov.w	r4, #0
 80068d4:	0194      	lsls	r4, r2, #6
 80068d6:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80068da:	018b      	lsls	r3, r1, #6
 80068dc:	1a5b      	subs	r3, r3, r1
 80068de:	eb64 0402 	sbc.w	r4, r4, r2
 80068e2:	f04f 0100 	mov.w	r1, #0
 80068e6:	f04f 0200 	mov.w	r2, #0
 80068ea:	00e2      	lsls	r2, r4, #3
 80068ec:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80068f0:	00d9      	lsls	r1, r3, #3
 80068f2:	460b      	mov	r3, r1
 80068f4:	4614      	mov	r4, r2
 80068f6:	195b      	adds	r3, r3, r5
 80068f8:	eb44 0406 	adc.w	r4, r4, r6
 80068fc:	f04f 0100 	mov.w	r1, #0
 8006900:	f04f 0200 	mov.w	r2, #0
 8006904:	02a2      	lsls	r2, r4, #10
 8006906:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800690a:	0299      	lsls	r1, r3, #10
 800690c:	460b      	mov	r3, r1
 800690e:	4614      	mov	r4, r2
 8006910:	4618      	mov	r0, r3
 8006912:	4621      	mov	r1, r4
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	f04f 0400 	mov.w	r4, #0
 800691a:	461a      	mov	r2, r3
 800691c:	4623      	mov	r3, r4
 800691e:	f7f9 fcb7 	bl	8000290 <__aeabi_uldivmod>
 8006922:	4603      	mov	r3, r0
 8006924:	460c      	mov	r4, r1
 8006926:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006928:	4b0a      	ldr	r3, [pc, #40]	; (8006954 <HAL_RCC_GetSysClockFreq+0x1a4>)
 800692a:	685b      	ldr	r3, [r3, #4]
 800692c:	0c1b      	lsrs	r3, r3, #16
 800692e:	f003 0303 	and.w	r3, r3, #3
 8006932:	3301      	adds	r3, #1
 8006934:	005b      	lsls	r3, r3, #1
 8006936:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 8006938:	68fa      	ldr	r2, [r7, #12]
 800693a:	683b      	ldr	r3, [r7, #0]
 800693c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006940:	60bb      	str	r3, [r7, #8]
      break;
 8006942:	e002      	b.n	800694a <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8006944:	4b04      	ldr	r3, [pc, #16]	; (8006958 <HAL_RCC_GetSysClockFreq+0x1a8>)
 8006946:	60bb      	str	r3, [r7, #8]
      break;
 8006948:	bf00      	nop
    }
  }
  return sysclockfreq;
 800694a:	68bb      	ldr	r3, [r7, #8]
}
 800694c:	4618      	mov	r0, r3
 800694e:	3714      	adds	r7, #20
 8006950:	46bd      	mov	sp, r7
 8006952:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006954:	40023800 	.word	0x40023800
 8006958:	00f42400 	.word	0x00f42400
 800695c:	007a1200 	.word	0x007a1200

08006960 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006960:	b480      	push	{r7}
 8006962:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8006964:	4b03      	ldr	r3, [pc, #12]	; (8006974 <HAL_RCC_GetHCLKFreq+0x14>)
 8006966:	681b      	ldr	r3, [r3, #0]
}
 8006968:	4618      	mov	r0, r3
 800696a:	46bd      	mov	sp, r7
 800696c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006970:	4770      	bx	lr
 8006972:	bf00      	nop
 8006974:	20000008 	.word	0x20000008

08006978 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8006978:	b580      	push	{r7, lr}
 800697a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800697c:	f7ff fff0 	bl	8006960 <HAL_RCC_GetHCLKFreq>
 8006980:	4601      	mov	r1, r0
 8006982:	4b05      	ldr	r3, [pc, #20]	; (8006998 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006984:	689b      	ldr	r3, [r3, #8]
 8006986:	0b5b      	lsrs	r3, r3, #13
 8006988:	f003 0307 	and.w	r3, r3, #7
 800698c:	4a03      	ldr	r2, [pc, #12]	; (800699c <HAL_RCC_GetPCLK2Freq+0x24>)
 800698e:	5cd3      	ldrb	r3, [r2, r3]
 8006990:	fa21 f303 	lsr.w	r3, r1, r3
}
 8006994:	4618      	mov	r0, r3
 8006996:	bd80      	pop	{r7, pc}
 8006998:	40023800 	.word	0x40023800
 800699c:	0801d824 	.word	0x0801d824

080069a0 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 80069a0:	b480      	push	{r7}
 80069a2:	b083      	sub	sp, #12
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	6078      	str	r0, [r7, #4]
 80069a8:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	220f      	movs	r2, #15
 80069ae:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80069b0:	4b12      	ldr	r3, [pc, #72]	; (80069fc <HAL_RCC_GetClockConfig+0x5c>)
 80069b2:	689b      	ldr	r3, [r3, #8]
 80069b4:	f003 0203 	and.w	r2, r3, #3
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80069bc:	4b0f      	ldr	r3, [pc, #60]	; (80069fc <HAL_RCC_GetClockConfig+0x5c>)
 80069be:	689b      	ldr	r3, [r3, #8]
 80069c0:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80069c8:	4b0c      	ldr	r3, [pc, #48]	; (80069fc <HAL_RCC_GetClockConfig+0x5c>)
 80069ca:	689b      	ldr	r3, [r3, #8]
 80069cc:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80069d4:	4b09      	ldr	r3, [pc, #36]	; (80069fc <HAL_RCC_GetClockConfig+0x5c>)
 80069d6:	689b      	ldr	r3, [r3, #8]
 80069d8:	08db      	lsrs	r3, r3, #3
 80069da:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80069e2:	4b07      	ldr	r3, [pc, #28]	; (8006a00 <HAL_RCC_GetClockConfig+0x60>)
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	f003 020f 	and.w	r2, r3, #15
 80069ea:	683b      	ldr	r3, [r7, #0]
 80069ec:	601a      	str	r2, [r3, #0]
}
 80069ee:	bf00      	nop
 80069f0:	370c      	adds	r7, #12
 80069f2:	46bd      	mov	sp, r7
 80069f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069f8:	4770      	bx	lr
 80069fa:	bf00      	nop
 80069fc:	40023800 	.word	0x40023800
 8006a00:	40023c00 	.word	0x40023c00

08006a04 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006a04:	b580      	push	{r7, lr}
 8006a06:	b086      	sub	sp, #24
 8006a08:	af00      	add	r7, sp, #0
 8006a0a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8006a0c:	2300      	movs	r3, #0
 8006a0e:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8006a10:	2300      	movs	r3, #0
 8006a12:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	681b      	ldr	r3, [r3, #0]
 8006a18:	f003 0301 	and.w	r3, r3, #1
 8006a1c:	2b00      	cmp	r3, #0
 8006a1e:	d10b      	bne.n	8006a38 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006a28:	2b00      	cmp	r3, #0
 8006a2a:	d105      	bne.n	8006a38 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	681b      	ldr	r3, [r3, #0]
 8006a30:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d075      	beq.n	8006b24 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8006a38:	4bad      	ldr	r3, [pc, #692]	; (8006cf0 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8006a3a:	2200      	movs	r2, #0
 8006a3c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006a3e:	f7fe fc71 	bl	8005324 <HAL_GetTick>
 8006a42:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006a44:	e008      	b.n	8006a58 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006a46:	f7fe fc6d 	bl	8005324 <HAL_GetTick>
 8006a4a:	4602      	mov	r2, r0
 8006a4c:	697b      	ldr	r3, [r7, #20]
 8006a4e:	1ad3      	subs	r3, r2, r3
 8006a50:	2b02      	cmp	r3, #2
 8006a52:	d901      	bls.n	8006a58 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006a54:	2303      	movs	r3, #3
 8006a56:	e18b      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006a58:	4ba6      	ldr	r3, [pc, #664]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006a60:	2b00      	cmp	r3, #0
 8006a62:	d1f0      	bne.n	8006a46 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	681b      	ldr	r3, [r3, #0]
 8006a68:	f003 0301 	and.w	r3, r3, #1
 8006a6c:	2b00      	cmp	r3, #0
 8006a6e:	d009      	beq.n	8006a84 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	685b      	ldr	r3, [r3, #4]
 8006a74:	019a      	lsls	r2, r3, #6
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	689b      	ldr	r3, [r3, #8]
 8006a7a:	071b      	lsls	r3, r3, #28
 8006a7c:	499d      	ldr	r1, [pc, #628]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006a7e:	4313      	orrs	r3, r2
 8006a80:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	f003 0302 	and.w	r3, r3, #2
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d01f      	beq.n	8006ad0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006a90:	4b98      	ldr	r3, [pc, #608]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006a92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006a96:	0f1b      	lsrs	r3, r3, #28
 8006a98:	f003 0307 	and.w	r3, r3, #7
 8006a9c:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	685b      	ldr	r3, [r3, #4]
 8006aa2:	019a      	lsls	r2, r3, #6
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	68db      	ldr	r3, [r3, #12]
 8006aa8:	061b      	lsls	r3, r3, #24
 8006aaa:	431a      	orrs	r2, r3
 8006aac:	693b      	ldr	r3, [r7, #16]
 8006aae:	071b      	lsls	r3, r3, #28
 8006ab0:	4990      	ldr	r1, [pc, #576]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006ab2:	4313      	orrs	r3, r2
 8006ab4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006ab8:	4b8e      	ldr	r3, [pc, #568]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006aba:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006abe:	f023 021f 	bic.w	r2, r3, #31
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	69db      	ldr	r3, [r3, #28]
 8006ac6:	3b01      	subs	r3, #1
 8006ac8:	498a      	ldr	r1, [pc, #552]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006aca:	4313      	orrs	r3, r2
 8006acc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006ad8:	2b00      	cmp	r3, #0
 8006ada:	d00d      	beq.n	8006af8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	685b      	ldr	r3, [r3, #4]
 8006ae0:	019a      	lsls	r2, r3, #6
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	68db      	ldr	r3, [r3, #12]
 8006ae6:	061b      	lsls	r3, r3, #24
 8006ae8:	431a      	orrs	r2, r3
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	689b      	ldr	r3, [r3, #8]
 8006aee:	071b      	lsls	r3, r3, #28
 8006af0:	4980      	ldr	r1, [pc, #512]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006af2:	4313      	orrs	r3, r2
 8006af4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8006af8:	4b7d      	ldr	r3, [pc, #500]	; (8006cf0 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8006afa:	2201      	movs	r2, #1
 8006afc:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006afe:	f7fe fc11 	bl	8005324 <HAL_GetTick>
 8006b02:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006b04:	e008      	b.n	8006b18 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006b06:	f7fe fc0d 	bl	8005324 <HAL_GetTick>
 8006b0a:	4602      	mov	r2, r0
 8006b0c:	697b      	ldr	r3, [r7, #20]
 8006b0e:	1ad3      	subs	r3, r2, r3
 8006b10:	2b02      	cmp	r3, #2
 8006b12:	d901      	bls.n	8006b18 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006b14:	2303      	movs	r3, #3
 8006b16:	e12b      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006b18:	4b76      	ldr	r3, [pc, #472]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006b1a:	681b      	ldr	r3, [r3, #0]
 8006b1c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006b20:	2b00      	cmp	r3, #0
 8006b22:	d0f0      	beq.n	8006b06 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	f003 0304 	and.w	r3, r3, #4
 8006b2c:	2b00      	cmp	r3, #0
 8006b2e:	d105      	bne.n	8006b3c <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006b38:	2b00      	cmp	r3, #0
 8006b3a:	d079      	beq.n	8006c30 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006b3c:	4b6e      	ldr	r3, [pc, #440]	; (8006cf8 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006b3e:	2200      	movs	r2, #0
 8006b40:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006b42:	f7fe fbef 	bl	8005324 <HAL_GetTick>
 8006b46:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006b48:	e008      	b.n	8006b5c <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006b4a:	f7fe fbeb 	bl	8005324 <HAL_GetTick>
 8006b4e:	4602      	mov	r2, r0
 8006b50:	697b      	ldr	r3, [r7, #20]
 8006b52:	1ad3      	subs	r3, r2, r3
 8006b54:	2b02      	cmp	r3, #2
 8006b56:	d901      	bls.n	8006b5c <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006b58:	2303      	movs	r3, #3
 8006b5a:	e109      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006b5c:	4b65      	ldr	r3, [pc, #404]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006b64:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006b68:	d0ef      	beq.n	8006b4a <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	681b      	ldr	r3, [r3, #0]
 8006b6e:	f003 0304 	and.w	r3, r3, #4
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d020      	beq.n	8006bb8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006b76:	4b5f      	ldr	r3, [pc, #380]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006b78:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006b7c:	0f1b      	lsrs	r3, r3, #28
 8006b7e:	f003 0307 	and.w	r3, r3, #7
 8006b82:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	691b      	ldr	r3, [r3, #16]
 8006b88:	019a      	lsls	r2, r3, #6
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	695b      	ldr	r3, [r3, #20]
 8006b8e:	061b      	lsls	r3, r3, #24
 8006b90:	431a      	orrs	r2, r3
 8006b92:	693b      	ldr	r3, [r7, #16]
 8006b94:	071b      	lsls	r3, r3, #28
 8006b96:	4957      	ldr	r1, [pc, #348]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006b98:	4313      	orrs	r3, r2
 8006b9a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006b9e:	4b55      	ldr	r3, [pc, #340]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006ba0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006ba4:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	6a1b      	ldr	r3, [r3, #32]
 8006bac:	3b01      	subs	r3, #1
 8006bae:	021b      	lsls	r3, r3, #8
 8006bb0:	4950      	ldr	r1, [pc, #320]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006bb2:	4313      	orrs	r3, r2
 8006bb4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	f003 0308 	and.w	r3, r3, #8
 8006bc0:	2b00      	cmp	r3, #0
 8006bc2:	d01e      	beq.n	8006c02 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006bc4:	4b4b      	ldr	r3, [pc, #300]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006bc6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006bca:	0e1b      	lsrs	r3, r3, #24
 8006bcc:	f003 030f 	and.w	r3, r3, #15
 8006bd0:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	691b      	ldr	r3, [r3, #16]
 8006bd6:	019a      	lsls	r2, r3, #6
 8006bd8:	693b      	ldr	r3, [r7, #16]
 8006bda:	061b      	lsls	r3, r3, #24
 8006bdc:	431a      	orrs	r2, r3
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	699b      	ldr	r3, [r3, #24]
 8006be2:	071b      	lsls	r3, r3, #28
 8006be4:	4943      	ldr	r1, [pc, #268]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006be6:	4313      	orrs	r3, r2
 8006be8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006bec:	4b41      	ldr	r3, [pc, #260]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006bee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006bf2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bfa:	493e      	ldr	r1, [pc, #248]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006bfc:	4313      	orrs	r3, r2
 8006bfe:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006c02:	4b3d      	ldr	r3, [pc, #244]	; (8006cf8 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006c04:	2201      	movs	r2, #1
 8006c06:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006c08:	f7fe fb8c 	bl	8005324 <HAL_GetTick>
 8006c0c:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006c0e:	e008      	b.n	8006c22 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006c10:	f7fe fb88 	bl	8005324 <HAL_GetTick>
 8006c14:	4602      	mov	r2, r0
 8006c16:	697b      	ldr	r3, [r7, #20]
 8006c18:	1ad3      	subs	r3, r2, r3
 8006c1a:	2b02      	cmp	r3, #2
 8006c1c:	d901      	bls.n	8006c22 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006c1e:	2303      	movs	r3, #3
 8006c20:	e0a6      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006c22:	4b34      	ldr	r3, [pc, #208]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006c24:	681b      	ldr	r3, [r3, #0]
 8006c26:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006c2a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006c2e:	d1ef      	bne.n	8006c10 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	f003 0320 	and.w	r3, r3, #32
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	f000 808d 	beq.w	8006d58 <HAL_RCCEx_PeriphCLKConfig+0x354>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006c3e:	2300      	movs	r3, #0
 8006c40:	60fb      	str	r3, [r7, #12]
 8006c42:	4b2c      	ldr	r3, [pc, #176]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006c44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c46:	4a2b      	ldr	r2, [pc, #172]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006c48:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006c4c:	6413      	str	r3, [r2, #64]	; 0x40
 8006c4e:	4b29      	ldr	r3, [pc, #164]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006c50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006c56:	60fb      	str	r3, [r7, #12]
 8006c58:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006c5a:	4b28      	ldr	r3, [pc, #160]	; (8006cfc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	4a27      	ldr	r2, [pc, #156]	; (8006cfc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8006c60:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c64:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006c66:	f7fe fb5d 	bl	8005324 <HAL_GetTick>
 8006c6a:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006c6c:	e008      	b.n	8006c80 <HAL_RCCEx_PeriphCLKConfig+0x27c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006c6e:	f7fe fb59 	bl	8005324 <HAL_GetTick>
 8006c72:	4602      	mov	r2, r0
 8006c74:	697b      	ldr	r3, [r7, #20]
 8006c76:	1ad3      	subs	r3, r2, r3
 8006c78:	2b02      	cmp	r3, #2
 8006c7a:	d901      	bls.n	8006c80 <HAL_RCCEx_PeriphCLKConfig+0x27c>
      {
        return HAL_TIMEOUT;
 8006c7c:	2303      	movs	r3, #3
 8006c7e:	e077      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006c80:	4b1e      	ldr	r3, [pc, #120]	; (8006cfc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006c88:	2b00      	cmp	r3, #0
 8006c8a:	d0f0      	beq.n	8006c6e <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006c8c:	4b19      	ldr	r3, [pc, #100]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006c8e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c90:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006c94:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006c96:	693b      	ldr	r3, [r7, #16]
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	d039      	beq.n	8006d10 <HAL_RCCEx_PeriphCLKConfig+0x30c>
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ca0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006ca4:	693a      	ldr	r2, [r7, #16]
 8006ca6:	429a      	cmp	r2, r3
 8006ca8:	d032      	beq.n	8006d10 <HAL_RCCEx_PeriphCLKConfig+0x30c>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006caa:	4b12      	ldr	r3, [pc, #72]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006cac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006cae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006cb2:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8006cb4:	4b12      	ldr	r3, [pc, #72]	; (8006d00 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8006cb6:	2201      	movs	r2, #1
 8006cb8:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006cba:	4b11      	ldr	r3, [pc, #68]	; (8006d00 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8006cbc:	2200      	movs	r2, #0
 8006cbe:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8006cc0:	4a0c      	ldr	r2, [pc, #48]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006cc2:	693b      	ldr	r3, [r7, #16]
 8006cc4:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006cc6:	4b0b      	ldr	r3, [pc, #44]	; (8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006cc8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006cca:	f003 0301 	and.w	r3, r3, #1
 8006cce:	2b01      	cmp	r3, #1
 8006cd0:	d11e      	bne.n	8006d10 <HAL_RCCEx_PeriphCLKConfig+0x30c>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8006cd2:	f7fe fb27 	bl	8005324 <HAL_GetTick>
 8006cd6:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006cd8:	e014      	b.n	8006d04 <HAL_RCCEx_PeriphCLKConfig+0x300>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006cda:	f7fe fb23 	bl	8005324 <HAL_GetTick>
 8006cde:	4602      	mov	r2, r0
 8006ce0:	697b      	ldr	r3, [r7, #20]
 8006ce2:	1ad3      	subs	r3, r2, r3
 8006ce4:	f241 3288 	movw	r2, #5000	; 0x1388
 8006ce8:	4293      	cmp	r3, r2
 8006cea:	d90b      	bls.n	8006d04 <HAL_RCCEx_PeriphCLKConfig+0x300>
          {
            return HAL_TIMEOUT;
 8006cec:	2303      	movs	r3, #3
 8006cee:	e03f      	b.n	8006d70 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8006cf0:	42470068 	.word	0x42470068
 8006cf4:	40023800 	.word	0x40023800
 8006cf8:	42470070 	.word	0x42470070
 8006cfc:	40007000 	.word	0x40007000
 8006d00:	42470e40 	.word	0x42470e40
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006d04:	4b1c      	ldr	r3, [pc, #112]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006d08:	f003 0302 	and.w	r3, r3, #2
 8006d0c:	2b00      	cmp	r3, #0
 8006d0e:	d0e4      	beq.n	8006cda <HAL_RCCEx_PeriphCLKConfig+0x2d6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d14:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006d18:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006d1c:	d10d      	bne.n	8006d3a <HAL_RCCEx_PeriphCLKConfig+0x336>
 8006d1e:	4b16      	ldr	r3, [pc, #88]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d20:	689b      	ldr	r3, [r3, #8]
 8006d22:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d2a:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8006d2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006d32:	4911      	ldr	r1, [pc, #68]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d34:	4313      	orrs	r3, r2
 8006d36:	608b      	str	r3, [r1, #8]
 8006d38:	e005      	b.n	8006d46 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8006d3a:	4b0f      	ldr	r3, [pc, #60]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d3c:	689b      	ldr	r3, [r3, #8]
 8006d3e:	4a0e      	ldr	r2, [pc, #56]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d40:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8006d44:	6093      	str	r3, [r2, #8]
 8006d46:	4b0c      	ldr	r3, [pc, #48]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d48:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006d52:	4909      	ldr	r1, [pc, #36]	; (8006d78 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006d54:	4313      	orrs	r3, r2
 8006d56:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	681b      	ldr	r3, [r3, #0]
 8006d5c:	f003 0310 	and.w	r3, r3, #16
 8006d60:	2b00      	cmp	r3, #0
 8006d62:	d004      	beq.n	8006d6e <HAL_RCCEx_PeriphCLKConfig+0x36a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8006d6a:	4b04      	ldr	r3, [pc, #16]	; (8006d7c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8006d6c:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 8006d6e:	2300      	movs	r3, #0
}
 8006d70:	4618      	mov	r0, r3
 8006d72:	3718      	adds	r7, #24
 8006d74:	46bd      	mov	sp, r7
 8006d76:	bd80      	pop	{r7, pc}
 8006d78:	40023800 	.word	0x40023800
 8006d7c:	424711e0 	.word	0x424711e0

08006d80 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006d80:	b580      	push	{r7, lr}
 8006d82:	b082      	sub	sp, #8
 8006d84:	af00      	add	r7, sp, #0
 8006d86:	6078      	str	r0, [r7, #4]
 8006d88:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	2b00      	cmp	r3, #0
 8006d8e:	d101      	bne.n	8006d94 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8006d90:	2301      	movs	r3, #1
 8006d92:	e025      	b.n	8006de0 <HAL_SDRAM_Init+0x60>
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006d9a:	b2db      	uxtb	r3, r3
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d106      	bne.n	8006dae <HAL_SDRAM_Init+0x2e>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	2200      	movs	r2, #0
 8006da4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006da8:	6878      	ldr	r0, [r7, #4]
 8006daa:	f7fa f911 	bl	8000fd0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	2202      	movs	r2, #2
 8006db2:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	681a      	ldr	r2, [r3, #0]
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	3304      	adds	r3, #4
 8006dbe:	4619      	mov	r1, r3
 8006dc0:	4610      	mov	r0, r2
 8006dc2:	f000 fd1b 	bl	80077fc <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	6818      	ldr	r0, [r3, #0]
 8006dca:	687b      	ldr	r3, [r7, #4]
 8006dcc:	685b      	ldr	r3, [r3, #4]
 8006dce:	461a      	mov	r2, r3
 8006dd0:	6839      	ldr	r1, [r7, #0]
 8006dd2:	f000 fd86 	bl	80078e2 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	2201      	movs	r2, #1
 8006dda:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 8006dde:	2300      	movs	r3, #0
}
 8006de0:	4618      	mov	r0, r3
 8006de2:	3708      	adds	r7, #8
 8006de4:	46bd      	mov	sp, r7
 8006de6:	bd80      	pop	{r7, pc}

08006de8 <HAL_SDRAM_IRQHandler>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
*/
void HAL_SDRAM_IRQHandler(SDRAM_HandleTypeDef *hsdram)
{
 8006de8:	b580      	push	{r7, lr}
 8006dea:	b082      	sub	sp, #8
 8006dec:	af00      	add	r7, sp, #0
 8006dee:	6078      	str	r0, [r7, #4]
  /* Check SDRAM interrupt Rising edge flag */
  if(__FMC_SDRAM_GET_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_IT))
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	699b      	ldr	r3, [r3, #24]
 8006df6:	f003 0301 	and.w	r3, r3, #1
 8006dfa:	2b01      	cmp	r3, #1
 8006dfc:	d10a      	bne.n	8006e14 <HAL_SDRAM_IRQHandler+0x2c>
  {
    /* SDRAM refresh error interrupt callback */
#if (USE_HAL_SDRAM_REGISTER_CALLBACKS == 1)
    hsdram->RefreshErrorCallback(hsdram);
#else
    HAL_SDRAM_RefreshErrorCallback(hsdram);
 8006dfe:	6878      	ldr	r0, [r7, #4]
 8006e00:	f000 f80c 	bl	8006e1c <HAL_SDRAM_RefreshErrorCallback>
#endif

    /* Clear SDRAM refresh error interrupt pending bit */
    __FMC_SDRAM_CLEAR_FLAG(hsdram->Instance, FMC_SDRAM_FLAG_REFRESH_ERROR);
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	695a      	ldr	r2, [r3, #20]
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	f042 0201 	orr.w	r2, r2, #1
 8006e12:	615a      	str	r2, [r3, #20]
  }
}
 8006e14:	bf00      	nop
 8006e16:	3708      	adds	r7, #8
 8006e18:	46bd      	mov	sp, r7
 8006e1a:	bd80      	pop	{r7, pc}

08006e1c <HAL_SDRAM_RefreshErrorCallback>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module. 
  * @retval None
  */
__weak void HAL_SDRAM_RefreshErrorCallback(SDRAM_HandleTypeDef *hsdram)
{
 8006e1c:	b480      	push	{r7}
 8006e1e:	b083      	sub	sp, #12
 8006e20:	af00      	add	r7, sp, #0
 8006e22:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hsdram);
  /* NOTE: This function Should not be modified, when the callback is needed,
            the HAL_SDRAM_RefreshErrorCallback could be implemented in the user file
   */ 
}
 8006e24:	bf00      	nop
 8006e26:	370c      	adds	r7, #12
 8006e28:	46bd      	mov	sp, r7
 8006e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2e:	4770      	bx	lr

08006e30 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006e30:	b580      	push	{r7, lr}
 8006e32:	b084      	sub	sp, #16
 8006e34:	af00      	add	r7, sp, #0
 8006e36:	60f8      	str	r0, [r7, #12]
 8006e38:	60b9      	str	r1, [r7, #8]
 8006e3a:	607a      	str	r2, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006e42:	b2db      	uxtb	r3, r3
 8006e44:	2b02      	cmp	r3, #2
 8006e46:	d101      	bne.n	8006e4c <HAL_SDRAM_SendCommand+0x1c>
  {
    return HAL_BUSY;
 8006e48:	2302      	movs	r3, #2
 8006e4a:	e018      	b.n	8006e7e <HAL_SDRAM_SendCommand+0x4e>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	2202      	movs	r2, #2
 8006e50:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	681b      	ldr	r3, [r3, #0]
 8006e58:	687a      	ldr	r2, [r7, #4]
 8006e5a:	68b9      	ldr	r1, [r7, #8]
 8006e5c:	4618      	mov	r0, r3
 8006e5e:	f000 fdbf 	bl	80079e0 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e62:	68bb      	ldr	r3, [r7, #8]
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	2b02      	cmp	r3, #2
 8006e68:	d104      	bne.n	8006e74 <HAL_SDRAM_SendCommand+0x44>
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006e6a:	68fb      	ldr	r3, [r7, #12]
 8006e6c:	2205      	movs	r2, #5
 8006e6e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8006e72:	e003      	b.n	8006e7c <HAL_SDRAM_SendCommand+0x4c>
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e74:	68fb      	ldr	r3, [r7, #12]
 8006e76:	2201      	movs	r2, #1
 8006e78:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006e7c:	2300      	movs	r3, #0
}
 8006e7e:	4618      	mov	r0, r3
 8006e80:	3710      	adds	r7, #16
 8006e82:	46bd      	mov	sp, r7
 8006e84:	bd80      	pop	{r7, pc}

08006e86 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006e86:	b580      	push	{r7, lr}
 8006e88:	b082      	sub	sp, #8
 8006e8a:	af00      	add	r7, sp, #0
 8006e8c:	6078      	str	r0, [r7, #4]
 8006e8e:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006e96:	b2db      	uxtb	r3, r3
 8006e98:	2b02      	cmp	r3, #2
 8006e9a:	d101      	bne.n	8006ea0 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8006e9c:	2302      	movs	r3, #2
 8006e9e:	e00e      	b.n	8006ebe <HAL_SDRAM_ProgramRefreshRate+0x38>
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	2202      	movs	r2, #2
 8006ea4:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	6839      	ldr	r1, [r7, #0]
 8006eae:	4618      	mov	r0, r3
 8006eb0:	f000 fdd2 	bl	8007a58 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	2201      	movs	r2, #1
 8006eb8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;   
 8006ebc:	2300      	movs	r3, #0
}
 8006ebe:	4618      	mov	r0, r3
 8006ec0:	3708      	adds	r7, #8
 8006ec2:	46bd      	mov	sp, r7
 8006ec4:	bd80      	pop	{r7, pc}

08006ec6 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006ec6:	b580      	push	{r7, lr}
 8006ec8:	b082      	sub	sp, #8
 8006eca:	af00      	add	r7, sp, #0
 8006ecc:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	2b00      	cmp	r3, #0
 8006ed2:	d101      	bne.n	8006ed8 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006ed4:	2301      	movs	r3, #1
 8006ed6:	e056      	b.n	8006f86 <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006ed8:	687b      	ldr	r3, [r7, #4]
 8006eda:	2200      	movs	r2, #0
 8006edc:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006ee4:	b2db      	uxtb	r3, r3
 8006ee6:	2b00      	cmp	r3, #0
 8006ee8:	d106      	bne.n	8006ef8 <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	2200      	movs	r2, #0
 8006eee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006ef2:	6878      	ldr	r0, [r7, #4]
 8006ef4:	f000 f84b 	bl	8006f8e <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	2202      	movs	r2, #2
 8006efc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	681a      	ldr	r2, [r3, #0]
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	681b      	ldr	r3, [r3, #0]
 8006f0a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006f0e:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	685a      	ldr	r2, [r3, #4]
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	689b      	ldr	r3, [r3, #8]
 8006f18:	431a      	orrs	r2, r3
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	68db      	ldr	r3, [r3, #12]
 8006f1e:	431a      	orrs	r2, r3
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	691b      	ldr	r3, [r3, #16]
 8006f24:	431a      	orrs	r2, r3
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	695b      	ldr	r3, [r3, #20]
 8006f2a:	431a      	orrs	r2, r3
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	699b      	ldr	r3, [r3, #24]
 8006f30:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006f34:	431a      	orrs	r2, r3
 8006f36:	687b      	ldr	r3, [r7, #4]
 8006f38:	69db      	ldr	r3, [r3, #28]
 8006f3a:	431a      	orrs	r2, r3
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	6a1b      	ldr	r3, [r3, #32]
 8006f40:	ea42 0103 	orr.w	r1, r2, r3
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	430a      	orrs	r2, r1
 8006f4e:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	699b      	ldr	r3, [r3, #24]
 8006f54:	0c1b      	lsrs	r3, r3, #16
 8006f56:	f003 0104 	and.w	r1, r3, #4
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	430a      	orrs	r2, r1
 8006f64:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	69da      	ldr	r2, [r3, #28]
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006f74:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	2200      	movs	r2, #0
 8006f7a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	2201      	movs	r2, #1
 8006f80:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8006f84:	2300      	movs	r3, #0
}
 8006f86:	4618      	mov	r0, r3
 8006f88:	3708      	adds	r7, #8
 8006f8a:	46bd      	mov	sp, r7
 8006f8c:	bd80      	pop	{r7, pc}

08006f8e <HAL_SPI_MspInit>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
{
 8006f8e:	b480      	push	{r7}
 8006f90:	b083      	sub	sp, #12
 8006f92:	af00      	add	r7, sp, #0
 8006f94:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_MspInit should be implemented in the user file
   */
}
 8006f96:	bf00      	nop
 8006f98:	370c      	adds	r7, #12
 8006f9a:	46bd      	mov	sp, r7
 8006f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fa0:	4770      	bx	lr

08006fa2 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006fa2:	b580      	push	{r7, lr}
 8006fa4:	b088      	sub	sp, #32
 8006fa6:	af00      	add	r7, sp, #0
 8006fa8:	60f8      	str	r0, [r7, #12]
 8006faa:	60b9      	str	r1, [r7, #8]
 8006fac:	603b      	str	r3, [r7, #0]
 8006fae:	4613      	mov	r3, r2
 8006fb0:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006fbc:	2b01      	cmp	r3, #1
 8006fbe:	d101      	bne.n	8006fc4 <HAL_SPI_Transmit+0x22>
 8006fc0:	2302      	movs	r3, #2
 8006fc2:	e11e      	b.n	8007202 <HAL_SPI_Transmit+0x260>
 8006fc4:	68fb      	ldr	r3, [r7, #12]
 8006fc6:	2201      	movs	r2, #1
 8006fc8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006fcc:	f7fe f9aa 	bl	8005324 <HAL_GetTick>
 8006fd0:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8006fd2:	88fb      	ldrh	r3, [r7, #6]
 8006fd4:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006fdc:	b2db      	uxtb	r3, r3
 8006fde:	2b01      	cmp	r3, #1
 8006fe0:	d002      	beq.n	8006fe8 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8006fe2:	2302      	movs	r3, #2
 8006fe4:	77fb      	strb	r3, [r7, #31]
    goto error;
 8006fe6:	e103      	b.n	80071f0 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 8006fe8:	68bb      	ldr	r3, [r7, #8]
 8006fea:	2b00      	cmp	r3, #0
 8006fec:	d002      	beq.n	8006ff4 <HAL_SPI_Transmit+0x52>
 8006fee:	88fb      	ldrh	r3, [r7, #6]
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	d102      	bne.n	8006ffa <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8006ff4:	2301      	movs	r3, #1
 8006ff6:	77fb      	strb	r3, [r7, #31]
    goto error;
 8006ff8:	e0fa      	b.n	80071f0 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	2203      	movs	r2, #3
 8006ffe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	2200      	movs	r2, #0
 8007006:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	68ba      	ldr	r2, [r7, #8]
 800700c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800700e:	68fb      	ldr	r3, [r7, #12]
 8007010:	88fa      	ldrh	r2, [r7, #6]
 8007012:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8007014:	68fb      	ldr	r3, [r7, #12]
 8007016:	88fa      	ldrh	r2, [r7, #6]
 8007018:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800701a:	68fb      	ldr	r3, [r7, #12]
 800701c:	2200      	movs	r2, #0
 800701e:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8007020:	68fb      	ldr	r3, [r7, #12]
 8007022:	2200      	movs	r2, #0
 8007024:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8007026:	68fb      	ldr	r3, [r7, #12]
 8007028:	2200      	movs	r2, #0
 800702a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 800702c:	68fb      	ldr	r3, [r7, #12]
 800702e:	2200      	movs	r2, #0
 8007030:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8007032:	68fb      	ldr	r3, [r7, #12]
 8007034:	2200      	movs	r2, #0
 8007036:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007038:	68fb      	ldr	r3, [r7, #12]
 800703a:	689b      	ldr	r3, [r3, #8]
 800703c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007040:	d107      	bne.n	8007052 <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 8007042:	68fb      	ldr	r3, [r7, #12]
 8007044:	681b      	ldr	r3, [r3, #0]
 8007046:	681a      	ldr	r2, [r3, #0]
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007050:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800705c:	2b40      	cmp	r3, #64	; 0x40
 800705e:	d007      	beq.n	8007070 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007060:	68fb      	ldr	r3, [r7, #12]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	681a      	ldr	r2, [r3, #0]
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800706e:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007070:	68fb      	ldr	r3, [r7, #12]
 8007072:	68db      	ldr	r3, [r3, #12]
 8007074:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007078:	d14b      	bne.n	8007112 <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800707a:	68fb      	ldr	r3, [r7, #12]
 800707c:	685b      	ldr	r3, [r3, #4]
 800707e:	2b00      	cmp	r3, #0
 8007080:	d002      	beq.n	8007088 <HAL_SPI_Transmit+0xe6>
 8007082:	8afb      	ldrh	r3, [r7, #22]
 8007084:	2b01      	cmp	r3, #1
 8007086:	d13e      	bne.n	8007106 <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007088:	68fb      	ldr	r3, [r7, #12]
 800708a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800708c:	881a      	ldrh	r2, [r3, #0]
 800708e:	68fb      	ldr	r3, [r7, #12]
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007098:	1c9a      	adds	r2, r3, #2
 800709a:	68fb      	ldr	r3, [r7, #12]
 800709c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800709e:	68fb      	ldr	r3, [r7, #12]
 80070a0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80070a2:	b29b      	uxth	r3, r3
 80070a4:	3b01      	subs	r3, #1
 80070a6:	b29a      	uxth	r2, r3
 80070a8:	68fb      	ldr	r3, [r7, #12]
 80070aa:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80070ac:	e02b      	b.n	8007106 <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80070ae:	68fb      	ldr	r3, [r7, #12]
 80070b0:	681b      	ldr	r3, [r3, #0]
 80070b2:	689b      	ldr	r3, [r3, #8]
 80070b4:	f003 0302 	and.w	r3, r3, #2
 80070b8:	2b02      	cmp	r3, #2
 80070ba:	d112      	bne.n	80070e2 <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80070bc:	68fb      	ldr	r3, [r7, #12]
 80070be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070c0:	881a      	ldrh	r2, [r3, #0]
 80070c2:	68fb      	ldr	r3, [r7, #12]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80070c8:	68fb      	ldr	r3, [r7, #12]
 80070ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070cc:	1c9a      	adds	r2, r3, #2
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80070d2:	68fb      	ldr	r3, [r7, #12]
 80070d4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80070d6:	b29b      	uxth	r3, r3
 80070d8:	3b01      	subs	r3, #1
 80070da:	b29a      	uxth	r2, r3
 80070dc:	68fb      	ldr	r3, [r7, #12]
 80070de:	86da      	strh	r2, [r3, #54]	; 0x36
 80070e0:	e011      	b.n	8007106 <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80070e2:	f7fe f91f 	bl	8005324 <HAL_GetTick>
 80070e6:	4602      	mov	r2, r0
 80070e8:	69bb      	ldr	r3, [r7, #24]
 80070ea:	1ad3      	subs	r3, r2, r3
 80070ec:	683a      	ldr	r2, [r7, #0]
 80070ee:	429a      	cmp	r2, r3
 80070f0:	d803      	bhi.n	80070fa <HAL_SPI_Transmit+0x158>
 80070f2:	683b      	ldr	r3, [r7, #0]
 80070f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80070f8:	d102      	bne.n	8007100 <HAL_SPI_Transmit+0x15e>
 80070fa:	683b      	ldr	r3, [r7, #0]
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d102      	bne.n	8007106 <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 8007100:	2303      	movs	r3, #3
 8007102:	77fb      	strb	r3, [r7, #31]
          goto error;
 8007104:	e074      	b.n	80071f0 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800710a:	b29b      	uxth	r3, r3
 800710c:	2b00      	cmp	r3, #0
 800710e:	d1ce      	bne.n	80070ae <HAL_SPI_Transmit+0x10c>
 8007110:	e04c      	b.n	80071ac <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007112:	68fb      	ldr	r3, [r7, #12]
 8007114:	685b      	ldr	r3, [r3, #4]
 8007116:	2b00      	cmp	r3, #0
 8007118:	d002      	beq.n	8007120 <HAL_SPI_Transmit+0x17e>
 800711a:	8afb      	ldrh	r3, [r7, #22]
 800711c:	2b01      	cmp	r3, #1
 800711e:	d140      	bne.n	80071a2 <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007120:	68fb      	ldr	r3, [r7, #12]
 8007122:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007124:	68fb      	ldr	r3, [r7, #12]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	330c      	adds	r3, #12
 800712a:	7812      	ldrb	r2, [r2, #0]
 800712c:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007132:	1c5a      	adds	r2, r3, #1
 8007134:	68fb      	ldr	r3, [r7, #12]
 8007136:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8007138:	68fb      	ldr	r3, [r7, #12]
 800713a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800713c:	b29b      	uxth	r3, r3
 800713e:	3b01      	subs	r3, #1
 8007140:	b29a      	uxth	r2, r3
 8007142:	68fb      	ldr	r3, [r7, #12]
 8007144:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8007146:	e02c      	b.n	80071a2 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	681b      	ldr	r3, [r3, #0]
 800714c:	689b      	ldr	r3, [r3, #8]
 800714e:	f003 0302 	and.w	r3, r3, #2
 8007152:	2b02      	cmp	r3, #2
 8007154:	d113      	bne.n	800717e <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800715a:	68fb      	ldr	r3, [r7, #12]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	330c      	adds	r3, #12
 8007160:	7812      	ldrb	r2, [r2, #0]
 8007162:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007164:	68fb      	ldr	r3, [r7, #12]
 8007166:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007168:	1c5a      	adds	r2, r3, #1
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800716e:	68fb      	ldr	r3, [r7, #12]
 8007170:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007172:	b29b      	uxth	r3, r3
 8007174:	3b01      	subs	r3, #1
 8007176:	b29a      	uxth	r2, r3
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	86da      	strh	r2, [r3, #54]	; 0x36
 800717c:	e011      	b.n	80071a2 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800717e:	f7fe f8d1 	bl	8005324 <HAL_GetTick>
 8007182:	4602      	mov	r2, r0
 8007184:	69bb      	ldr	r3, [r7, #24]
 8007186:	1ad3      	subs	r3, r2, r3
 8007188:	683a      	ldr	r2, [r7, #0]
 800718a:	429a      	cmp	r2, r3
 800718c:	d803      	bhi.n	8007196 <HAL_SPI_Transmit+0x1f4>
 800718e:	683b      	ldr	r3, [r7, #0]
 8007190:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007194:	d102      	bne.n	800719c <HAL_SPI_Transmit+0x1fa>
 8007196:	683b      	ldr	r3, [r7, #0]
 8007198:	2b00      	cmp	r3, #0
 800719a:	d102      	bne.n	80071a2 <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 800719c:	2303      	movs	r3, #3
 800719e:	77fb      	strb	r3, [r7, #31]
          goto error;
 80071a0:	e026      	b.n	80071f0 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80071a6:	b29b      	uxth	r3, r3
 80071a8:	2b00      	cmp	r3, #0
 80071aa:	d1cd      	bne.n	8007148 <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80071ac:	69ba      	ldr	r2, [r7, #24]
 80071ae:	6839      	ldr	r1, [r7, #0]
 80071b0:	68f8      	ldr	r0, [r7, #12]
 80071b2:	f000 f8a3 	bl	80072fc <SPI_EndRxTxTransaction>
 80071b6:	4603      	mov	r3, r0
 80071b8:	2b00      	cmp	r3, #0
 80071ba:	d002      	beq.n	80071c2 <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	2220      	movs	r2, #32
 80071c0:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80071c2:	68fb      	ldr	r3, [r7, #12]
 80071c4:	689b      	ldr	r3, [r3, #8]
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	d10a      	bne.n	80071e0 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80071ca:	2300      	movs	r3, #0
 80071cc:	613b      	str	r3, [r7, #16]
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	68db      	ldr	r3, [r3, #12]
 80071d4:	613b      	str	r3, [r7, #16]
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	681b      	ldr	r3, [r3, #0]
 80071da:	689b      	ldr	r3, [r3, #8]
 80071dc:	613b      	str	r3, [r7, #16]
 80071de:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80071e4:	2b00      	cmp	r3, #0
 80071e6:	d002      	beq.n	80071ee <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 80071e8:	2301      	movs	r3, #1
 80071ea:	77fb      	strb	r3, [r7, #31]
 80071ec:	e000      	b.n	80071f0 <HAL_SPI_Transmit+0x24e>
  }

error:
 80071ee:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	2201      	movs	r2, #1
 80071f4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80071f8:	68fb      	ldr	r3, [r7, #12]
 80071fa:	2200      	movs	r2, #0
 80071fc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8007200:	7ffb      	ldrb	r3, [r7, #31]
}
 8007202:	4618      	mov	r0, r3
 8007204:	3720      	adds	r7, #32
 8007206:	46bd      	mov	sp, r7
 8007208:	bd80      	pop	{r7, pc}

0800720a <HAL_SPI_GetState>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval SPI state
  */
HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
{
 800720a:	b480      	push	{r7}
 800720c:	b083      	sub	sp, #12
 800720e:	af00      	add	r7, sp, #0
 8007210:	6078      	str	r0, [r7, #4]
  /* Return SPI handle state */
  return hspi->State;
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007218:	b2db      	uxtb	r3, r3
}
 800721a:	4618      	mov	r0, r3
 800721c:	370c      	adds	r7, #12
 800721e:	46bd      	mov	sp, r7
 8007220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007224:	4770      	bx	lr

08007226 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007226:	b580      	push	{r7, lr}
 8007228:	b084      	sub	sp, #16
 800722a:	af00      	add	r7, sp, #0
 800722c:	60f8      	str	r0, [r7, #12]
 800722e:	60b9      	str	r1, [r7, #8]
 8007230:	603b      	str	r3, [r7, #0]
 8007232:	4613      	mov	r3, r2
 8007234:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007236:	e04c      	b.n	80072d2 <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 8007238:	683b      	ldr	r3, [r7, #0]
 800723a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800723e:	d048      	beq.n	80072d2 <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007240:	f7fe f870 	bl	8005324 <HAL_GetTick>
 8007244:	4602      	mov	r2, r0
 8007246:	69bb      	ldr	r3, [r7, #24]
 8007248:	1ad3      	subs	r3, r2, r3
 800724a:	683a      	ldr	r2, [r7, #0]
 800724c:	429a      	cmp	r2, r3
 800724e:	d902      	bls.n	8007256 <SPI_WaitFlagStateUntilTimeout+0x30>
 8007250:	683b      	ldr	r3, [r7, #0]
 8007252:	2b00      	cmp	r3, #0
 8007254:	d13d      	bne.n	80072d2 <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007256:	68fb      	ldr	r3, [r7, #12]
 8007258:	681b      	ldr	r3, [r3, #0]
 800725a:	685a      	ldr	r2, [r3, #4]
 800725c:	68fb      	ldr	r3, [r7, #12]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007264:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	685b      	ldr	r3, [r3, #4]
 800726a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800726e:	d111      	bne.n	8007294 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	689b      	ldr	r3, [r3, #8]
 8007274:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007278:	d004      	beq.n	8007284 <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	689b      	ldr	r3, [r3, #8]
 800727e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007282:	d107      	bne.n	8007294 <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007284:	68fb      	ldr	r3, [r7, #12]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	681a      	ldr	r2, [r3, #0]
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007292:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007294:	68fb      	ldr	r3, [r7, #12]
 8007296:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007298:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800729c:	d10f      	bne.n	80072be <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	681a      	ldr	r2, [r3, #0]
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	681b      	ldr	r3, [r3, #0]
 80072a8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80072ac:	601a      	str	r2, [r3, #0]
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	681b      	ldr	r3, [r3, #0]
 80072b2:	681a      	ldr	r2, [r3, #0]
 80072b4:	68fb      	ldr	r3, [r7, #12]
 80072b6:	681b      	ldr	r3, [r3, #0]
 80072b8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80072bc:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80072be:	68fb      	ldr	r3, [r7, #12]
 80072c0:	2201      	movs	r2, #1
 80072c2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80072c6:	68fb      	ldr	r3, [r7, #12]
 80072c8:	2200      	movs	r2, #0
 80072ca:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 80072ce:	2303      	movs	r3, #3
 80072d0:	e00f      	b.n	80072f2 <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80072d2:	68fb      	ldr	r3, [r7, #12]
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	689a      	ldr	r2, [r3, #8]
 80072d8:	68bb      	ldr	r3, [r7, #8]
 80072da:	4013      	ands	r3, r2
 80072dc:	68ba      	ldr	r2, [r7, #8]
 80072de:	429a      	cmp	r2, r3
 80072e0:	bf0c      	ite	eq
 80072e2:	2301      	moveq	r3, #1
 80072e4:	2300      	movne	r3, #0
 80072e6:	b2db      	uxtb	r3, r3
 80072e8:	461a      	mov	r2, r3
 80072ea:	79fb      	ldrb	r3, [r7, #7]
 80072ec:	429a      	cmp	r2, r3
 80072ee:	d1a3      	bne.n	8007238 <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 80072f0:	2300      	movs	r3, #0
}
 80072f2:	4618      	mov	r0, r3
 80072f4:	3710      	adds	r7, #16
 80072f6:	46bd      	mov	sp, r7
 80072f8:	bd80      	pop	{r7, pc}
	...

080072fc <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80072fc:	b580      	push	{r7, lr}
 80072fe:	b088      	sub	sp, #32
 8007300:	af02      	add	r7, sp, #8
 8007302:	60f8      	str	r0, [r7, #12]
 8007304:	60b9      	str	r1, [r7, #8]
 8007306:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007308:	4b1b      	ldr	r3, [pc, #108]	; (8007378 <SPI_EndRxTxTransaction+0x7c>)
 800730a:	681b      	ldr	r3, [r3, #0]
 800730c:	4a1b      	ldr	r2, [pc, #108]	; (800737c <SPI_EndRxTxTransaction+0x80>)
 800730e:	fba2 2303 	umull	r2, r3, r2, r3
 8007312:	0d5b      	lsrs	r3, r3, #21
 8007314:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007318:	fb02 f303 	mul.w	r3, r2, r3
 800731c:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	685b      	ldr	r3, [r3, #4]
 8007322:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007326:	d112      	bne.n	800734e <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	9300      	str	r3, [sp, #0]
 800732c:	68bb      	ldr	r3, [r7, #8]
 800732e:	2200      	movs	r2, #0
 8007330:	2180      	movs	r1, #128	; 0x80
 8007332:	68f8      	ldr	r0, [r7, #12]
 8007334:	f7ff ff77 	bl	8007226 <SPI_WaitFlagStateUntilTimeout>
 8007338:	4603      	mov	r3, r0
 800733a:	2b00      	cmp	r3, #0
 800733c:	d016      	beq.n	800736c <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800733e:	68fb      	ldr	r3, [r7, #12]
 8007340:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007342:	f043 0220 	orr.w	r2, r3, #32
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 800734a:	2303      	movs	r3, #3
 800734c:	e00f      	b.n	800736e <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800734e:	697b      	ldr	r3, [r7, #20]
 8007350:	2b00      	cmp	r3, #0
 8007352:	d00a      	beq.n	800736a <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8007354:	697b      	ldr	r3, [r7, #20]
 8007356:	3b01      	subs	r3, #1
 8007358:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800735a:	68fb      	ldr	r3, [r7, #12]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	689b      	ldr	r3, [r3, #8]
 8007360:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007364:	2b80      	cmp	r3, #128	; 0x80
 8007366:	d0f2      	beq.n	800734e <SPI_EndRxTxTransaction+0x52>
 8007368:	e000      	b.n	800736c <SPI_EndRxTxTransaction+0x70>
        break;
 800736a:	bf00      	nop
  }

  return HAL_OK;
 800736c:	2300      	movs	r3, #0
}
 800736e:	4618      	mov	r0, r3
 8007370:	3718      	adds	r7, #24
 8007372:	46bd      	mov	sp, r7
 8007374:	bd80      	pop	{r7, pc}
 8007376:	bf00      	nop
 8007378:	20000008 	.word	0x20000008
 800737c:	165e9f81 	.word	0x165e9f81

08007380 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007380:	b580      	push	{r7, lr}
 8007382:	b082      	sub	sp, #8
 8007384:	af00      	add	r7, sp, #0
 8007386:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	2b00      	cmp	r3, #0
 800738c:	d101      	bne.n	8007392 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800738e:	2301      	movs	r3, #1
 8007390:	e01d      	b.n	80073ce <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007398:	b2db      	uxtb	r3, r3
 800739a:	2b00      	cmp	r3, #0
 800739c:	d106      	bne.n	80073ac <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	2200      	movs	r2, #0
 80073a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 80073a6:	6878      	ldr	r0, [r7, #4]
 80073a8:	f000 f815 	bl	80073d6 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	2202      	movs	r2, #2
 80073b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	681a      	ldr	r2, [r3, #0]
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	3304      	adds	r3, #4
 80073bc:	4619      	mov	r1, r3
 80073be:	4610      	mov	r0, r2
 80073c0:	f000 f968 	bl	8007694 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	2201      	movs	r2, #1
 80073c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80073cc:	2300      	movs	r3, #0
}
 80073ce:	4618      	mov	r0, r3
 80073d0:	3708      	adds	r7, #8
 80073d2:	46bd      	mov	sp, r7
 80073d4:	bd80      	pop	{r7, pc}

080073d6 <HAL_TIM_Base_MspInit>:
  * @brief  Initializes the TIM Base MSP.
  * @param  htim TIM Base handle
  * @retval None
  */
__weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
{
 80073d6:	b480      	push	{r7}
 80073d8:	b083      	sub	sp, #12
 80073da:	af00      	add	r7, sp, #0
 80073dc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80073de:	bf00      	nop
 80073e0:	370c      	adds	r7, #12
 80073e2:	46bd      	mov	sp, r7
 80073e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e8:	4770      	bx	lr

080073ea <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80073ea:	b480      	push	{r7}
 80073ec:	b085      	sub	sp, #20
 80073ee:	af00      	add	r7, sp, #0
 80073f0:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	68da      	ldr	r2, [r3, #12]
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	f042 0201 	orr.w	r2, r2, #1
 8007400:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007402:	687b      	ldr	r3, [r7, #4]
 8007404:	681b      	ldr	r3, [r3, #0]
 8007406:	689b      	ldr	r3, [r3, #8]
 8007408:	f003 0307 	and.w	r3, r3, #7
 800740c:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800740e:	68fb      	ldr	r3, [r7, #12]
 8007410:	2b06      	cmp	r3, #6
 8007412:	d007      	beq.n	8007424 <HAL_TIM_Base_Start_IT+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	681b      	ldr	r3, [r3, #0]
 8007418:	681a      	ldr	r2, [r3, #0]
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	f042 0201 	orr.w	r2, r2, #1
 8007422:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007424:	2300      	movs	r3, #0
}
 8007426:	4618      	mov	r0, r3
 8007428:	3714      	adds	r7, #20
 800742a:	46bd      	mov	sp, r7
 800742c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007430:	4770      	bx	lr

08007432 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8007432:	b580      	push	{r7, lr}
 8007434:	b082      	sub	sp, #8
 8007436:	af00      	add	r7, sp, #0
 8007438:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	681b      	ldr	r3, [r3, #0]
 800743e:	691b      	ldr	r3, [r3, #16]
 8007440:	f003 0302 	and.w	r3, r3, #2
 8007444:	2b02      	cmp	r3, #2
 8007446:	d122      	bne.n	800748e <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	68db      	ldr	r3, [r3, #12]
 800744e:	f003 0302 	and.w	r3, r3, #2
 8007452:	2b02      	cmp	r3, #2
 8007454:	d11b      	bne.n	800748e <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	f06f 0202 	mvn.w	r2, #2
 800745e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	2201      	movs	r2, #1
 8007464:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	681b      	ldr	r3, [r3, #0]
 800746a:	699b      	ldr	r3, [r3, #24]
 800746c:	f003 0303 	and.w	r3, r3, #3
 8007470:	2b00      	cmp	r3, #0
 8007472:	d003      	beq.n	800747c <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007474:	6878      	ldr	r0, [r7, #4]
 8007476:	f000 f8ee 	bl	8007656 <HAL_TIM_IC_CaptureCallback>
 800747a:	e005      	b.n	8007488 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800747c:	6878      	ldr	r0, [r7, #4]
 800747e:	f000 f8e0 	bl	8007642 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007482:	6878      	ldr	r0, [r7, #4]
 8007484:	f000 f8f1 	bl	800766a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	2200      	movs	r2, #0
 800748c:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800748e:	687b      	ldr	r3, [r7, #4]
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	691b      	ldr	r3, [r3, #16]
 8007494:	f003 0304 	and.w	r3, r3, #4
 8007498:	2b04      	cmp	r3, #4
 800749a:	d122      	bne.n	80074e2 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	68db      	ldr	r3, [r3, #12]
 80074a2:	f003 0304 	and.w	r3, r3, #4
 80074a6:	2b04      	cmp	r3, #4
 80074a8:	d11b      	bne.n	80074e2 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	681b      	ldr	r3, [r3, #0]
 80074ae:	f06f 0204 	mvn.w	r2, #4
 80074b2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80074b4:	687b      	ldr	r3, [r7, #4]
 80074b6:	2202      	movs	r2, #2
 80074b8:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	681b      	ldr	r3, [r3, #0]
 80074be:	699b      	ldr	r3, [r3, #24]
 80074c0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80074c4:	2b00      	cmp	r3, #0
 80074c6:	d003      	beq.n	80074d0 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80074c8:	6878      	ldr	r0, [r7, #4]
 80074ca:	f000 f8c4 	bl	8007656 <HAL_TIM_IC_CaptureCallback>
 80074ce:	e005      	b.n	80074dc <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80074d0:	6878      	ldr	r0, [r7, #4]
 80074d2:	f000 f8b6 	bl	8007642 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80074d6:	6878      	ldr	r0, [r7, #4]
 80074d8:	f000 f8c7 	bl	800766a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	2200      	movs	r2, #0
 80074e0:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	681b      	ldr	r3, [r3, #0]
 80074e6:	691b      	ldr	r3, [r3, #16]
 80074e8:	f003 0308 	and.w	r3, r3, #8
 80074ec:	2b08      	cmp	r3, #8
 80074ee:	d122      	bne.n	8007536 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	68db      	ldr	r3, [r3, #12]
 80074f6:	f003 0308 	and.w	r3, r3, #8
 80074fa:	2b08      	cmp	r3, #8
 80074fc:	d11b      	bne.n	8007536 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	681b      	ldr	r3, [r3, #0]
 8007502:	f06f 0208 	mvn.w	r2, #8
 8007506:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007508:	687b      	ldr	r3, [r7, #4]
 800750a:	2204      	movs	r2, #4
 800750c:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	681b      	ldr	r3, [r3, #0]
 8007512:	69db      	ldr	r3, [r3, #28]
 8007514:	f003 0303 	and.w	r3, r3, #3
 8007518:	2b00      	cmp	r3, #0
 800751a:	d003      	beq.n	8007524 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800751c:	6878      	ldr	r0, [r7, #4]
 800751e:	f000 f89a 	bl	8007656 <HAL_TIM_IC_CaptureCallback>
 8007522:	e005      	b.n	8007530 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007524:	6878      	ldr	r0, [r7, #4]
 8007526:	f000 f88c 	bl	8007642 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800752a:	6878      	ldr	r0, [r7, #4]
 800752c:	f000 f89d 	bl	800766a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	2200      	movs	r2, #0
 8007534:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	691b      	ldr	r3, [r3, #16]
 800753c:	f003 0310 	and.w	r3, r3, #16
 8007540:	2b10      	cmp	r3, #16
 8007542:	d122      	bne.n	800758a <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	68db      	ldr	r3, [r3, #12]
 800754a:	f003 0310 	and.w	r3, r3, #16
 800754e:	2b10      	cmp	r3, #16
 8007550:	d11b      	bne.n	800758a <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	f06f 0210 	mvn.w	r2, #16
 800755a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	2208      	movs	r2, #8
 8007560:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	681b      	ldr	r3, [r3, #0]
 8007566:	69db      	ldr	r3, [r3, #28]
 8007568:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800756c:	2b00      	cmp	r3, #0
 800756e:	d003      	beq.n	8007578 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007570:	6878      	ldr	r0, [r7, #4]
 8007572:	f000 f870 	bl	8007656 <HAL_TIM_IC_CaptureCallback>
 8007576:	e005      	b.n	8007584 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007578:	6878      	ldr	r0, [r7, #4]
 800757a:	f000 f862 	bl	8007642 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800757e:	6878      	ldr	r0, [r7, #4]
 8007580:	f000 f873 	bl	800766a <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	2200      	movs	r2, #0
 8007588:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	691b      	ldr	r3, [r3, #16]
 8007590:	f003 0301 	and.w	r3, r3, #1
 8007594:	2b01      	cmp	r3, #1
 8007596:	d10e      	bne.n	80075b6 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	68db      	ldr	r3, [r3, #12]
 800759e:	f003 0301 	and.w	r3, r3, #1
 80075a2:	2b01      	cmp	r3, #1
 80075a4:	d107      	bne.n	80075b6 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	681b      	ldr	r3, [r3, #0]
 80075aa:	f06f 0201 	mvn.w	r2, #1
 80075ae:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80075b0:	6878      	ldr	r0, [r7, #4]
 80075b2:	f7f9 faf1 	bl	8000b98 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	681b      	ldr	r3, [r3, #0]
 80075ba:	691b      	ldr	r3, [r3, #16]
 80075bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80075c0:	2b80      	cmp	r3, #128	; 0x80
 80075c2:	d10e      	bne.n	80075e2 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	681b      	ldr	r3, [r3, #0]
 80075c8:	68db      	ldr	r3, [r3, #12]
 80075ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80075ce:	2b80      	cmp	r3, #128	; 0x80
 80075d0:	d107      	bne.n	80075e2 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80075da:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80075dc:	6878      	ldr	r0, [r7, #4]
 80075de:	f000 f903 	bl	80077e8 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	681b      	ldr	r3, [r3, #0]
 80075e6:	691b      	ldr	r3, [r3, #16]
 80075e8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80075ec:	2b40      	cmp	r3, #64	; 0x40
 80075ee:	d10e      	bne.n	800760e <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	68db      	ldr	r3, [r3, #12]
 80075f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80075fa:	2b40      	cmp	r3, #64	; 0x40
 80075fc:	d107      	bne.n	800760e <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007606:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007608:	6878      	ldr	r0, [r7, #4]
 800760a:	f000 f838 	bl	800767e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	691b      	ldr	r3, [r3, #16]
 8007614:	f003 0320 	and.w	r3, r3, #32
 8007618:	2b20      	cmp	r3, #32
 800761a:	d10e      	bne.n	800763a <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	68db      	ldr	r3, [r3, #12]
 8007622:	f003 0320 	and.w	r3, r3, #32
 8007626:	2b20      	cmp	r3, #32
 8007628:	d107      	bne.n	800763a <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	f06f 0220 	mvn.w	r2, #32
 8007632:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007634:	6878      	ldr	r0, [r7, #4]
 8007636:	f000 f8cd 	bl	80077d4 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800763a:	bf00      	nop
 800763c:	3708      	adds	r7, #8
 800763e:	46bd      	mov	sp, r7
 8007640:	bd80      	pop	{r7, pc}

08007642 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007642:	b480      	push	{r7}
 8007644:	b083      	sub	sp, #12
 8007646:	af00      	add	r7, sp, #0
 8007648:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800764a:	bf00      	nop
 800764c:	370c      	adds	r7, #12
 800764e:	46bd      	mov	sp, r7
 8007650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007654:	4770      	bx	lr

08007656 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007656:	b480      	push	{r7}
 8007658:	b083      	sub	sp, #12
 800765a:	af00      	add	r7, sp, #0
 800765c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800765e:	bf00      	nop
 8007660:	370c      	adds	r7, #12
 8007662:	46bd      	mov	sp, r7
 8007664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007668:	4770      	bx	lr

0800766a <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800766a:	b480      	push	{r7}
 800766c:	b083      	sub	sp, #12
 800766e:	af00      	add	r7, sp, #0
 8007670:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8007672:	bf00      	nop
 8007674:	370c      	adds	r7, #12
 8007676:	46bd      	mov	sp, r7
 8007678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800767c:	4770      	bx	lr

0800767e <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800767e:	b480      	push	{r7}
 8007680:	b083      	sub	sp, #12
 8007682:	af00      	add	r7, sp, #0
 8007684:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007686:	bf00      	nop
 8007688:	370c      	adds	r7, #12
 800768a:	46bd      	mov	sp, r7
 800768c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007690:	4770      	bx	lr
	...

08007694 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8007694:	b480      	push	{r7}
 8007696:	b085      	sub	sp, #20
 8007698:	af00      	add	r7, sp, #0
 800769a:	6078      	str	r0, [r7, #4]
 800769c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	4a40      	ldr	r2, [pc, #256]	; (80077a8 <TIM_Base_SetConfig+0x114>)
 80076a8:	4293      	cmp	r3, r2
 80076aa:	d013      	beq.n	80076d4 <TIM_Base_SetConfig+0x40>
 80076ac:	687b      	ldr	r3, [r7, #4]
 80076ae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80076b2:	d00f      	beq.n	80076d4 <TIM_Base_SetConfig+0x40>
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	4a3d      	ldr	r2, [pc, #244]	; (80077ac <TIM_Base_SetConfig+0x118>)
 80076b8:	4293      	cmp	r3, r2
 80076ba:	d00b      	beq.n	80076d4 <TIM_Base_SetConfig+0x40>
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	4a3c      	ldr	r2, [pc, #240]	; (80077b0 <TIM_Base_SetConfig+0x11c>)
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d007      	beq.n	80076d4 <TIM_Base_SetConfig+0x40>
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	4a3b      	ldr	r2, [pc, #236]	; (80077b4 <TIM_Base_SetConfig+0x120>)
 80076c8:	4293      	cmp	r3, r2
 80076ca:	d003      	beq.n	80076d4 <TIM_Base_SetConfig+0x40>
 80076cc:	687b      	ldr	r3, [r7, #4]
 80076ce:	4a3a      	ldr	r2, [pc, #232]	; (80077b8 <TIM_Base_SetConfig+0x124>)
 80076d0:	4293      	cmp	r3, r2
 80076d2:	d108      	bne.n	80076e6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80076da:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80076dc:	683b      	ldr	r3, [r7, #0]
 80076de:	685b      	ldr	r3, [r3, #4]
 80076e0:	68fa      	ldr	r2, [r7, #12]
 80076e2:	4313      	orrs	r3, r2
 80076e4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	4a2f      	ldr	r2, [pc, #188]	; (80077a8 <TIM_Base_SetConfig+0x114>)
 80076ea:	4293      	cmp	r3, r2
 80076ec:	d02b      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80076f4:	d027      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	4a2c      	ldr	r2, [pc, #176]	; (80077ac <TIM_Base_SetConfig+0x118>)
 80076fa:	4293      	cmp	r3, r2
 80076fc:	d023      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	4a2b      	ldr	r2, [pc, #172]	; (80077b0 <TIM_Base_SetConfig+0x11c>)
 8007702:	4293      	cmp	r3, r2
 8007704:	d01f      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	4a2a      	ldr	r2, [pc, #168]	; (80077b4 <TIM_Base_SetConfig+0x120>)
 800770a:	4293      	cmp	r3, r2
 800770c:	d01b      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	4a29      	ldr	r2, [pc, #164]	; (80077b8 <TIM_Base_SetConfig+0x124>)
 8007712:	4293      	cmp	r3, r2
 8007714:	d017      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	4a28      	ldr	r2, [pc, #160]	; (80077bc <TIM_Base_SetConfig+0x128>)
 800771a:	4293      	cmp	r3, r2
 800771c:	d013      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	4a27      	ldr	r2, [pc, #156]	; (80077c0 <TIM_Base_SetConfig+0x12c>)
 8007722:	4293      	cmp	r3, r2
 8007724:	d00f      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	4a26      	ldr	r2, [pc, #152]	; (80077c4 <TIM_Base_SetConfig+0x130>)
 800772a:	4293      	cmp	r3, r2
 800772c:	d00b      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	4a25      	ldr	r2, [pc, #148]	; (80077c8 <TIM_Base_SetConfig+0x134>)
 8007732:	4293      	cmp	r3, r2
 8007734:	d007      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 8007736:	687b      	ldr	r3, [r7, #4]
 8007738:	4a24      	ldr	r2, [pc, #144]	; (80077cc <TIM_Base_SetConfig+0x138>)
 800773a:	4293      	cmp	r3, r2
 800773c:	d003      	beq.n	8007746 <TIM_Base_SetConfig+0xb2>
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	4a23      	ldr	r2, [pc, #140]	; (80077d0 <TIM_Base_SetConfig+0x13c>)
 8007742:	4293      	cmp	r3, r2
 8007744:	d108      	bne.n	8007758 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007746:	68fb      	ldr	r3, [r7, #12]
 8007748:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800774c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800774e:	683b      	ldr	r3, [r7, #0]
 8007750:	68db      	ldr	r3, [r3, #12]
 8007752:	68fa      	ldr	r2, [r7, #12]
 8007754:	4313      	orrs	r3, r2
 8007756:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007758:	68fb      	ldr	r3, [r7, #12]
 800775a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800775e:	683b      	ldr	r3, [r7, #0]
 8007760:	695b      	ldr	r3, [r3, #20]
 8007762:	4313      	orrs	r3, r2
 8007764:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	68fa      	ldr	r2, [r7, #12]
 800776a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800776c:	683b      	ldr	r3, [r7, #0]
 800776e:	689a      	ldr	r2, [r3, #8]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007774:	683b      	ldr	r3, [r7, #0]
 8007776:	681a      	ldr	r2, [r3, #0]
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	4a0a      	ldr	r2, [pc, #40]	; (80077a8 <TIM_Base_SetConfig+0x114>)
 8007780:	4293      	cmp	r3, r2
 8007782:	d003      	beq.n	800778c <TIM_Base_SetConfig+0xf8>
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	4a0c      	ldr	r2, [pc, #48]	; (80077b8 <TIM_Base_SetConfig+0x124>)
 8007788:	4293      	cmp	r3, r2
 800778a:	d103      	bne.n	8007794 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800778c:	683b      	ldr	r3, [r7, #0]
 800778e:	691a      	ldr	r2, [r3, #16]
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	2201      	movs	r2, #1
 8007798:	615a      	str	r2, [r3, #20]
}
 800779a:	bf00      	nop
 800779c:	3714      	adds	r7, #20
 800779e:	46bd      	mov	sp, r7
 80077a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077a4:	4770      	bx	lr
 80077a6:	bf00      	nop
 80077a8:	40010000 	.word	0x40010000
 80077ac:	40000400 	.word	0x40000400
 80077b0:	40000800 	.word	0x40000800
 80077b4:	40000c00 	.word	0x40000c00
 80077b8:	40010400 	.word	0x40010400
 80077bc:	40014000 	.word	0x40014000
 80077c0:	40014400 	.word	0x40014400
 80077c4:	40014800 	.word	0x40014800
 80077c8:	40001800 	.word	0x40001800
 80077cc:	40001c00 	.word	0x40001c00
 80077d0:	40002000 	.word	0x40002000

080077d4 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 80077d4:	b480      	push	{r7}
 80077d6:	b083      	sub	sp, #12
 80077d8:	af00      	add	r7, sp, #0
 80077da:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80077dc:	bf00      	nop
 80077de:	370c      	adds	r7, #12
 80077e0:	46bd      	mov	sp, r7
 80077e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077e6:	4770      	bx	lr

080077e8 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80077e8:	b480      	push	{r7}
 80077ea:	b083      	sub	sp, #12
 80077ec:	af00      	add	r7, sp, #0
 80077ee:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80077f0:	bf00      	nop
 80077f2:	370c      	adds	r7, #12
 80077f4:	46bd      	mov	sp, r7
 80077f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fa:	4770      	bx	lr

080077fc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80077fc:	b480      	push	{r7}
 80077fe:	b085      	sub	sp, #20
 8007800:	af00      	add	r7, sp, #0
 8007802:	6078      	str	r0, [r7, #4]
 8007804:	6039      	str	r1, [r7, #0]
  uint32_t tmpr1 = 0U;
 8007806:	2300      	movs	r3, #0
 8007808:	60fb      	str	r3, [r7, #12]
  uint32_t tmpr2 = 0U;
 800780a:	2300      	movs	r3, #0
 800780c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800780e:	683b      	ldr	r3, [r7, #0]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	2b01      	cmp	r3, #1
 8007814:	d029      	beq.n	800786a <FMC_SDRAM_Init+0x6e>
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8007822:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007826:	60fb      	str	r3, [r7, #12]
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007828:	683b      	ldr	r3, [r7, #0]
 800782a:	685a      	ldr	r2, [r3, #4]
                                               Init->RowBitsNumber      |\
 800782c:	683b      	ldr	r3, [r7, #0]
 800782e:	689b      	ldr	r3, [r3, #8]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007830:	431a      	orrs	r2, r3
                                               Init->MemoryDataWidth    |\
 8007832:	683b      	ldr	r3, [r7, #0]
 8007834:	68db      	ldr	r3, [r3, #12]
                                               Init->RowBitsNumber      |\
 8007836:	431a      	orrs	r2, r3
                                               Init->InternalBankNumber |\
 8007838:	683b      	ldr	r3, [r7, #0]
 800783a:	691b      	ldr	r3, [r3, #16]
                                               Init->MemoryDataWidth    |\
 800783c:	431a      	orrs	r2, r3
                                               Init->CASLatency         |\
 800783e:	683b      	ldr	r3, [r7, #0]
 8007840:	695b      	ldr	r3, [r3, #20]
                                               Init->InternalBankNumber |\
 8007842:	431a      	orrs	r2, r3
                                               Init->WriteProtection    |\
 8007844:	683b      	ldr	r3, [r7, #0]
 8007846:	699b      	ldr	r3, [r3, #24]
                                               Init->CASLatency         |\
 8007848:	431a      	orrs	r2, r3
                                               Init->SDClockPeriod      |\
 800784a:	683b      	ldr	r3, [r7, #0]
 800784c:	69db      	ldr	r3, [r3, #28]
                                               Init->WriteProtection    |\
 800784e:	431a      	orrs	r2, r3
                                               Init->ReadBurst          |\
 8007850:	683b      	ldr	r3, [r7, #0]
 8007852:	6a1b      	ldr	r3, [r3, #32]
                                               Init->SDClockPeriod      |\
 8007854:	431a      	orrs	r2, r3
                                               Init->ReadPipeDelay
 8007856:	683b      	ldr	r3, [r7, #0]
 8007858:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                                               Init->ReadBurst          |\
 800785a:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800785c:	68fa      	ldr	r2, [r7, #12]
 800785e:	4313      	orrs	r3, r2
 8007860:	60fb      	str	r3, [r7, #12]
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	68fa      	ldr	r2, [r7, #12]
 8007866:	601a      	str	r2, [r3, #0]
 8007868:	e034      	b.n	80078d4 <FMC_SDRAM_Init+0xd8>
  }
  else /* FMC_Bank2_SDRAM */                      
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007876:	60fb      	str	r3, [r7, #12]
    
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007878:	683b      	ldr	r3, [r7, #0]
 800787a:	69da      	ldr	r2, [r3, #28]
                        Init->ReadBurst          |\
 800787c:	683b      	ldr	r3, [r7, #0]
 800787e:	6a1b      	ldr	r3, [r3, #32]
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007880:	431a      	orrs	r2, r3
                        Init->ReadPipeDelay);  
 8007882:	683b      	ldr	r3, [r7, #0]
 8007884:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                        Init->ReadBurst          |\
 8007886:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007888:	68fa      	ldr	r2, [r7, #12]
 800788a:	4313      	orrs	r3, r2
 800788c:	60fb      	str	r3, [r7, #12]
    
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	685b      	ldr	r3, [r3, #4]
 8007892:	60bb      	str	r3, [r7, #8]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007894:	68bb      	ldr	r3, [r7, #8]
 8007896:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800789a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800789e:	60bb      	str	r3, [r7, #8]
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80078a0:	683b      	ldr	r3, [r7, #0]
 80078a2:	685a      	ldr	r2, [r3, #4]
                       Init->RowBitsNumber      |\
 80078a4:	683b      	ldr	r3, [r7, #0]
 80078a6:	689b      	ldr	r3, [r3, #8]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80078a8:	431a      	orrs	r2, r3
                       Init->MemoryDataWidth    |\
 80078aa:	683b      	ldr	r3, [r7, #0]
 80078ac:	68db      	ldr	r3, [r3, #12]
                       Init->RowBitsNumber      |\
 80078ae:	431a      	orrs	r2, r3
                       Init->InternalBankNumber |\
 80078b0:	683b      	ldr	r3, [r7, #0]
 80078b2:	691b      	ldr	r3, [r3, #16]
                       Init->MemoryDataWidth    |\
 80078b4:	431a      	orrs	r2, r3
                       Init->CASLatency         |\
 80078b6:	683b      	ldr	r3, [r7, #0]
 80078b8:	695b      	ldr	r3, [r3, #20]
                       Init->InternalBankNumber |\
 80078ba:	431a      	orrs	r2, r3
                       Init->WriteProtection);
 80078bc:	683b      	ldr	r3, [r7, #0]
 80078be:	699b      	ldr	r3, [r3, #24]
                       Init->CASLatency         |\
 80078c0:	4313      	orrs	r3, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80078c2:	68ba      	ldr	r2, [r7, #8]
 80078c4:	4313      	orrs	r3, r2
 80078c6:	60bb      	str	r3, [r7, #8]

    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	68fa      	ldr	r2, [r7, #12]
 80078cc:	601a      	str	r2, [r3, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	68ba      	ldr	r2, [r7, #8]
 80078d2:	605a      	str	r2, [r3, #4]
  }  
  
  return HAL_OK;
 80078d4:	2300      	movs	r3, #0
}
 80078d6:	4618      	mov	r0, r3
 80078d8:	3714      	adds	r7, #20
 80078da:	46bd      	mov	sp, r7
 80078dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e0:	4770      	bx	lr

080078e2 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80078e2:	b480      	push	{r7}
 80078e4:	b087      	sub	sp, #28
 80078e6:	af00      	add	r7, sp, #0
 80078e8:	60f8      	str	r0, [r7, #12]
 80078ea:	60b9      	str	r1, [r7, #8]
 80078ec:	607a      	str	r2, [r7, #4]
  uint32_t tmpr1 = 0U;
 80078ee:	2300      	movs	r3, #0
 80078f0:	617b      	str	r3, [r7, #20]
  uint32_t tmpr2 = 0U;
 80078f2:	2300      	movs	r3, #0
 80078f4:	613b      	str	r3, [r7, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	2b01      	cmp	r3, #1
 80078fa:	d02e      	beq.n	800795a <FMC_SDRAM_Timing_Init+0x78>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80078fc:	68fb      	ldr	r3, [r7, #12]
 80078fe:	689b      	ldr	r3, [r3, #8]
 8007900:	617b      	str	r3, [r7, #20]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007902:	697b      	ldr	r3, [r7, #20]
 8007904:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007908:	617b      	str	r3, [r7, #20]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800790a:	68bb      	ldr	r3, [r7, #8]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007910:	68bb      	ldr	r3, [r7, #8]
 8007912:	685b      	ldr	r3, [r3, #4]
 8007914:	3b01      	subs	r3, #1
 8007916:	011b      	lsls	r3, r3, #4
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007918:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800791a:	68bb      	ldr	r3, [r7, #8]
 800791c:	689b      	ldr	r3, [r3, #8]
 800791e:	3b01      	subs	r3, #1
 8007920:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007922:	431a      	orrs	r2, r3
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007924:	68bb      	ldr	r3, [r7, #8]
 8007926:	68db      	ldr	r3, [r3, #12]
 8007928:	3b01      	subs	r3, #1
 800792a:	031b      	lsls	r3, r3, #12
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800792c:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800792e:	68bb      	ldr	r3, [r7, #8]
 8007930:	691b      	ldr	r3, [r3, #16]
 8007932:	3b01      	subs	r3, #1
 8007934:	041b      	lsls	r3, r3, #16
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007936:	431a      	orrs	r2, r3
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007938:	68bb      	ldr	r3, [r7, #8]
 800793a:	695b      	ldr	r3, [r3, #20]
 800793c:	3b01      	subs	r3, #1
 800793e:	051b      	lsls	r3, r3, #20
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007940:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U));
 8007942:	68bb      	ldr	r3, [r7, #8]
 8007944:	699b      	ldr	r3, [r3, #24]
 8007946:	3b01      	subs	r3, #1
 8007948:	061b      	lsls	r3, r3, #24
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800794a:	4313      	orrs	r3, r2
 800794c:	697a      	ldr	r2, [r7, #20]
 800794e:	4313      	orrs	r3, r2
 8007950:	617b      	str	r3, [r7, #20]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007952:	68fb      	ldr	r3, [r7, #12]
 8007954:	697a      	ldr	r2, [r7, #20]
 8007956:	609a      	str	r2, [r3, #8]
 8007958:	e03b      	b.n	80079d2 <FMC_SDRAM_Timing_Init+0xf0>
  }
   else /* FMC_Bank2_SDRAM */
  {
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800795a:	68fb      	ldr	r3, [r7, #12]
 800795c:	689b      	ldr	r3, [r3, #8]
 800795e:	617b      	str	r3, [r7, #20]
    
    /* Clear TRC and TRP bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007960:	697b      	ldr	r3, [r7, #20]
 8007962:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007966:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800796a:	617b      	str	r3, [r7, #20]
    
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800796c:	68bb      	ldr	r3, [r7, #8]
 800796e:	68db      	ldr	r3, [r3, #12]
 8007970:	3b01      	subs	r3, #1
 8007972:	031a      	lsls	r2, r3, #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 8007974:	68bb      	ldr	r3, [r7, #8]
 8007976:	695b      	ldr	r3, [r3, #20]
 8007978:	3b01      	subs	r3, #1
 800797a:	051b      	lsls	r3, r3, #20
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800797c:	4313      	orrs	r3, r2
 800797e:	697a      	ldr	r2, [r7, #20]
 8007980:	4313      	orrs	r3, r2
 8007982:	617b      	str	r3, [r7, #20]
    
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007984:	68fb      	ldr	r3, [r7, #12]
 8007986:	68db      	ldr	r3, [r3, #12]
 8007988:	613b      	str	r3, [r7, #16]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800798a:	693b      	ldr	r3, [r7, #16]
 800798c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007990:	613b      	str	r3, [r7, #16]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007992:	68bb      	ldr	r3, [r7, #8]
 8007994:	681b      	ldr	r3, [r3, #0]
 8007996:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8007998:	68bb      	ldr	r3, [r7, #8]
 800799a:	685b      	ldr	r3, [r3, #4]
 800799c:	3b01      	subs	r3, #1
 800799e:	011b      	lsls	r3, r3, #4
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80079a0:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 80079a2:	68bb      	ldr	r3, [r7, #8]
 80079a4:	689b      	ldr	r3, [r3, #8]
 80079a6:	3b01      	subs	r3, #1
 80079a8:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 80079aa:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 80079ac:	68bb      	ldr	r3, [r7, #8]
 80079ae:	691b      	ldr	r3, [r3, #16]
 80079b0:	3b01      	subs	r3, #1
 80079b2:	041b      	lsls	r3, r3, #16
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 80079b4:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U)));   
 80079b6:	68bb      	ldr	r3, [r7, #8]
 80079b8:	699b      	ldr	r3, [r3, #24]
 80079ba:	3b01      	subs	r3, #1
 80079bc:	061b      	lsls	r3, r3, #24
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80079be:	4313      	orrs	r3, r2
 80079c0:	693a      	ldr	r2, [r7, #16]
 80079c2:	4313      	orrs	r3, r2
 80079c4:	613b      	str	r3, [r7, #16]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80079c6:	68fb      	ldr	r3, [r7, #12]
 80079c8:	697a      	ldr	r2, [r7, #20]
 80079ca:	609a      	str	r2, [r3, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	693a      	ldr	r2, [r7, #16]
 80079d0:	60da      	str	r2, [r3, #12]
  }
  return HAL_OK;
 80079d2:	2300      	movs	r3, #0
}
 80079d4:	4618      	mov	r0, r3
 80079d6:	371c      	adds	r7, #28
 80079d8:	46bd      	mov	sp, r7
 80079da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079de:	4770      	bx	lr

080079e0 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80079e0:	b580      	push	{r7, lr}
 80079e2:	b086      	sub	sp, #24
 80079e4:	af00      	add	r7, sp, #0
 80079e6:	60f8      	str	r0, [r7, #12]
 80079e8:	60b9      	str	r1, [r7, #8]
 80079ea:	607a      	str	r2, [r7, #4]
  __IO uint32_t tmpr = 0U;
 80079ec:	2300      	movs	r3, #0
 80079ee:	613b      	str	r3, [r7, #16]
  uint32_t tickstart = 0U;
 80079f0:	2300      	movs	r3, #0
 80079f2:	617b      	str	r3, [r7, #20]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80079f4:	68bb      	ldr	r3, [r7, #8]
 80079f6:	681a      	ldr	r2, [r3, #0]
                    (Command->CommandTarget)                |\
 80079f8:	68bb      	ldr	r3, [r7, #8]
 80079fa:	685b      	ldr	r3, [r3, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80079fc:	431a      	orrs	r2, r3
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80079fe:	68bb      	ldr	r3, [r7, #8]
 8007a00:	689b      	ldr	r3, [r3, #8]
 8007a02:	3b01      	subs	r3, #1
 8007a04:	015b      	lsls	r3, r3, #5
                    (Command->CommandTarget)                |\
 8007a06:	431a      	orrs	r2, r3
                    ((Command->ModeRegisterDefinition) << 9U)
 8007a08:	68bb      	ldr	r3, [r7, #8]
 8007a0a:	68db      	ldr	r3, [r3, #12]
 8007a0c:	025b      	lsls	r3, r3, #9
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007a0e:	4313      	orrs	r3, r2
 8007a10:	613b      	str	r3, [r7, #16]
                    );
    
  Device->SDCMR = tmpr;
 8007a12:	693a      	ldr	r2, [r7, #16]
 8007a14:	68fb      	ldr	r3, [r7, #12]
 8007a16:	611a      	str	r2, [r3, #16]

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007a18:	f7fd fc84 	bl	8005324 <HAL_GetTick>
 8007a1c:	6178      	str	r0, [r7, #20]

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007a1e:	e010      	b.n	8007a42 <FMC_SDRAM_SendCommand+0x62>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007a26:	d00c      	beq.n	8007a42 <FMC_SDRAM_SendCommand+0x62>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	d007      	beq.n	8007a3e <FMC_SDRAM_SendCommand+0x5e>
 8007a2e:	f7fd fc79 	bl	8005324 <HAL_GetTick>
 8007a32:	4602      	mov	r2, r0
 8007a34:	697b      	ldr	r3, [r7, #20]
 8007a36:	1ad3      	subs	r3, r2, r3
 8007a38:	687a      	ldr	r2, [r7, #4]
 8007a3a:	429a      	cmp	r2, r3
 8007a3c:	d201      	bcs.n	8007a42 <FMC_SDRAM_SendCommand+0x62>
      {
        return HAL_TIMEOUT;
 8007a3e:	2303      	movs	r3, #3
 8007a40:	e006      	b.n	8007a50 <FMC_SDRAM_SendCommand+0x70>
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007a42:	68fb      	ldr	r3, [r7, #12]
 8007a44:	699b      	ldr	r3, [r3, #24]
 8007a46:	f003 0320 	and.w	r3, r3, #32
 8007a4a:	2b20      	cmp	r3, #32
 8007a4c:	d0e8      	beq.n	8007a20 <FMC_SDRAM_SendCommand+0x40>
      }
    }
  }

  return HAL_OK;
 8007a4e:	2300      	movs	r3, #0
}
 8007a50:	4618      	mov	r0, r3
 8007a52:	3718      	adds	r7, #24
 8007a54:	46bd      	mov	sp, r7
 8007a56:	bd80      	pop	{r7, pc}

08007a58 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance  
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 8007a58:	b480      	push	{r7}
 8007a5a:	b083      	sub	sp, #12
 8007a5c:	af00      	add	r7, sp, #0
 8007a5e:	6078      	str	r0, [r7, #4]
 8007a60:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	695a      	ldr	r2, [r3, #20]
 8007a66:	683b      	ldr	r3, [r7, #0]
 8007a68:	005b      	lsls	r3, r3, #1
 8007a6a:	431a      	orrs	r2, r3
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	615a      	str	r2, [r3, #20]
  
  return HAL_OK;   
 8007a70:	2300      	movs	r3, #0
}
 8007a72:	4618      	mov	r0, r3
 8007a74:	370c      	adds	r7, #12
 8007a76:	46bd      	mov	sp, r7
 8007a78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a7c:	4770      	bx	lr

08007a7e <makeFreeRtosPriority>:

extern void xPortSysTickHandler(void);

/* Convert from CMSIS type osPriority to FreeRTOS priority number */
static unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority)
{
 8007a7e:	b480      	push	{r7}
 8007a80:	b085      	sub	sp, #20
 8007a82:	af00      	add	r7, sp, #0
 8007a84:	4603      	mov	r3, r0
 8007a86:	80fb      	strh	r3, [r7, #6]
  unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
 8007a88:	2300      	movs	r3, #0
 8007a8a:	60fb      	str	r3, [r7, #12]
  
  if (priority != osPriorityError) {
 8007a8c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007a90:	2b84      	cmp	r3, #132	; 0x84
 8007a92:	d005      	beq.n	8007aa0 <makeFreeRtosPriority+0x22>
    fpriority += (priority - osPriorityIdle);
 8007a94:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	4413      	add	r3, r2
 8007a9c:	3303      	adds	r3, #3
 8007a9e:	60fb      	str	r3, [r7, #12]
  }
  
  return fpriority;
 8007aa0:	68fb      	ldr	r3, [r7, #12]
}
 8007aa2:	4618      	mov	r0, r3
 8007aa4:	3714      	adds	r7, #20
 8007aa6:	46bd      	mov	sp, r7
 8007aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aac:	4770      	bx	lr

08007aae <inHandlerMode>:
#endif


/* Determine whether we are in thread mode or handler mode. */
static int inHandlerMode (void)
{
 8007aae:	b480      	push	{r7}
 8007ab0:	b083      	sub	sp, #12
 8007ab2:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ab4:	f3ef 8305 	mrs	r3, IPSR
 8007ab8:	607b      	str	r3, [r7, #4]
  return(result);
 8007aba:	687b      	ldr	r3, [r7, #4]
  return __get_IPSR() != 0;
 8007abc:	2b00      	cmp	r3, #0
 8007abe:	bf14      	ite	ne
 8007ac0:	2301      	movne	r3, #1
 8007ac2:	2300      	moveq	r3, #0
 8007ac4:	b2db      	uxtb	r3, r3
}
 8007ac6:	4618      	mov	r0, r3
 8007ac8:	370c      	adds	r7, #12
 8007aca:	46bd      	mov	sp, r7
 8007acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ad0:	4770      	bx	lr

08007ad2 <osKernelStart>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval status code that indicates the execution status of the function
* @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
*/
osStatus osKernelStart (void)
{
 8007ad2:	b580      	push	{r7, lr}
 8007ad4:	af00      	add	r7, sp, #0
  vTaskStartScheduler();
 8007ad6:	f001 fd11 	bl	80094fc <vTaskStartScheduler>
  
  return osOK;
 8007ada:	2300      	movs	r3, #0
}
 8007adc:	4618      	mov	r0, r3
 8007ade:	bd80      	pop	{r7, pc}

08007ae0 <osThreadCreate>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval thread ID for reference by other functions or NULL in case of error.
* @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
*/
osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
{
 8007ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ae2:	b089      	sub	sp, #36	; 0x24
 8007ae4:	af04      	add	r7, sp, #16
 8007ae6:	6078      	str	r0, [r7, #4]
 8007ae8:	6039      	str	r1, [r7, #0]
  TaskHandle_t handle;
  
#if( configSUPPORT_STATIC_ALLOCATION == 1 ) &&  ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
  if((thread_def->buffer != NULL) && (thread_def->controlblock != NULL)) {
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	695b      	ldr	r3, [r3, #20]
 8007aee:	2b00      	cmp	r3, #0
 8007af0:	d020      	beq.n	8007b34 <osThreadCreate+0x54>
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	699b      	ldr	r3, [r3, #24]
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d01c      	beq.n	8007b34 <osThreadCreate+0x54>
    handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	685c      	ldr	r4, [r3, #4]
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	681d      	ldr	r5, [r3, #0]
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	691e      	ldr	r6, [r3, #16]
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8007b0c:	4618      	mov	r0, r3
 8007b0e:	f7ff ffb6 	bl	8007a7e <makeFreeRtosPriority>
 8007b12:	4601      	mov	r1, r0
              thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
              thread_def->buffer, thread_def->controlblock);
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	695b      	ldr	r3, [r3, #20]
 8007b18:	687a      	ldr	r2, [r7, #4]
 8007b1a:	6992      	ldr	r2, [r2, #24]
    handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 8007b1c:	9202      	str	r2, [sp, #8]
 8007b1e:	9301      	str	r3, [sp, #4]
 8007b20:	9100      	str	r1, [sp, #0]
 8007b22:	683b      	ldr	r3, [r7, #0]
 8007b24:	4632      	mov	r2, r6
 8007b26:	4629      	mov	r1, r5
 8007b28:	4620      	mov	r0, r4
 8007b2a:	f001 fb24 	bl	8009176 <xTaskCreateStatic>
 8007b2e:	4603      	mov	r3, r0
 8007b30:	60fb      	str	r3, [r7, #12]
 8007b32:	e01c      	b.n	8007b6e <osThreadCreate+0x8e>
  }
  else {
    if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	685c      	ldr	r4, [r3, #4]
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681d      	ldr	r5, [r3, #0]
              thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	691b      	ldr	r3, [r3, #16]
    if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 8007b40:	b29e      	uxth	r6, r3
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8007b48:	4618      	mov	r0, r3
 8007b4a:	f7ff ff98 	bl	8007a7e <makeFreeRtosPriority>
 8007b4e:	4602      	mov	r2, r0
 8007b50:	f107 030c 	add.w	r3, r7, #12
 8007b54:	9301      	str	r3, [sp, #4]
 8007b56:	9200      	str	r2, [sp, #0]
 8007b58:	683b      	ldr	r3, [r7, #0]
 8007b5a:	4632      	mov	r2, r6
 8007b5c:	4629      	mov	r1, r5
 8007b5e:	4620      	mov	r0, r4
 8007b60:	f001 fb63 	bl	800922a <xTaskCreate>
 8007b64:	4603      	mov	r3, r0
 8007b66:	2b01      	cmp	r3, #1
 8007b68:	d001      	beq.n	8007b6e <osThreadCreate+0x8e>
              &handle) != pdPASS)  {
      return NULL;
 8007b6a:	2300      	movs	r3, #0
 8007b6c:	e000      	b.n	8007b70 <osThreadCreate+0x90>
                   &handle) != pdPASS)  {
    return NULL;
  }     
#endif
  
  return handle;
 8007b6e:	68fb      	ldr	r3, [r7, #12]
}
 8007b70:	4618      	mov	r0, r3
 8007b72:	3714      	adds	r7, #20
 8007b74:	46bd      	mov	sp, r7
 8007b76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007b78 <osDelay>:
* @brief   Wait for Timeout (Time Delay)
* @param   millisec      time delay value
* @retval  status code that indicates the execution status of the function.
*/
osStatus osDelay (uint32_t millisec)
{
 8007b78:	b580      	push	{r7, lr}
 8007b7a:	b084      	sub	sp, #16
 8007b7c:	af00      	add	r7, sp, #0
 8007b7e:	6078      	str	r0, [r7, #4]
#if INCLUDE_vTaskDelay
  TickType_t ticks = millisec / portTICK_PERIOD_MS;
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	60fb      	str	r3, [r7, #12]
  
  vTaskDelay(ticks ? ticks : 1);          /* Minimum delay = 1 tick */
 8007b84:	68fb      	ldr	r3, [r7, #12]
 8007b86:	2b00      	cmp	r3, #0
 8007b88:	d001      	beq.n	8007b8e <osDelay+0x16>
 8007b8a:	68fb      	ldr	r3, [r7, #12]
 8007b8c:	e000      	b.n	8007b90 <osDelay+0x18>
 8007b8e:	2301      	movs	r3, #1
 8007b90:	4618      	mov	r0, r3
 8007b92:	f001 fc7f 	bl	8009494 <vTaskDelay>
  
  return osOK;
 8007b96:	2300      	movs	r3, #0
#else
  (void) millisec;
  
  return osErrorResource;
#endif
}
 8007b98:	4618      	mov	r0, r3
 8007b9a:	3710      	adds	r7, #16
 8007b9c:	46bd      	mov	sp, r7
 8007b9e:	bd80      	pop	{r7, pc}

08007ba0 <osSemaphoreCreate>:
* @param count         number of available resources.
* @retval  semaphore ID for reference by other functions or NULL in case of error.
* @note   MUST REMAIN UNCHANGED: \b osSemaphoreCreate shall be consistent in every CMSIS-RTOS.
*/
osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count)
{ 
 8007ba0:	b580      	push	{r7, lr}
 8007ba2:	b086      	sub	sp, #24
 8007ba4:	af02      	add	r7, sp, #8
 8007ba6:	6078      	str	r0, [r7, #4]
 8007ba8:	6039      	str	r1, [r7, #0]
#if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )

  osSemaphoreId sema;
  
  if (semaphore_def->controlblock != NULL){
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	685b      	ldr	r3, [r3, #4]
 8007bae:	2b00      	cmp	r3, #0
 8007bb0:	d010      	beq.n	8007bd4 <osSemaphoreCreate+0x34>
    if (count == 1) {
 8007bb2:	683b      	ldr	r3, [r7, #0]
 8007bb4:	2b01      	cmp	r3, #1
 8007bb6:	d10b      	bne.n	8007bd0 <osSemaphoreCreate+0x30>
      return xSemaphoreCreateBinaryStatic( semaphore_def->controlblock );
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	685a      	ldr	r2, [r3, #4]
 8007bbc:	2303      	movs	r3, #3
 8007bbe:	9300      	str	r3, [sp, #0]
 8007bc0:	4613      	mov	r3, r2
 8007bc2:	2200      	movs	r2, #0
 8007bc4:	2100      	movs	r1, #0
 8007bc6:	2001      	movs	r0, #1
 8007bc8:	f000 fdd2 	bl	8008770 <xQueueGenericCreateStatic>
 8007bcc:	4603      	mov	r3, r0
 8007bce:	e016      	b.n	8007bfe <osSemaphoreCreate+0x5e>
    }
    else {
#if (configUSE_COUNTING_SEMAPHORES == 1 )
      return xSemaphoreCreateCountingStatic( count, count, semaphore_def->controlblock );
#else
      return NULL;
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	e014      	b.n	8007bfe <osSemaphoreCreate+0x5e>
#endif
    }
  }
  else {
    if (count == 1) {
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	2b01      	cmp	r3, #1
 8007bd8:	d110      	bne.n	8007bfc <osSemaphoreCreate+0x5c>
      vSemaphoreCreateBinary(sema);
 8007bda:	2203      	movs	r2, #3
 8007bdc:	2100      	movs	r1, #0
 8007bde:	2001      	movs	r0, #1
 8007be0:	f000 fe39 	bl	8008856 <xQueueGenericCreate>
 8007be4:	60f8      	str	r0, [r7, #12]
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	2b00      	cmp	r3, #0
 8007bea:	d005      	beq.n	8007bf8 <osSemaphoreCreate+0x58>
 8007bec:	2300      	movs	r3, #0
 8007bee:	2200      	movs	r2, #0
 8007bf0:	2100      	movs	r1, #0
 8007bf2:	68f8      	ldr	r0, [r7, #12]
 8007bf4:	f000 fe8e 	bl	8008914 <xQueueGenericSend>
      return sema;
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	e000      	b.n	8007bfe <osSemaphoreCreate+0x5e>
    }
    else {
#if (configUSE_COUNTING_SEMAPHORES == 1 )	
      return xSemaphoreCreateCounting(count, count);
#else
      return NULL;
 8007bfc:	2300      	movs	r3, #0
#else
    return NULL;
#endif
  }
#endif
}
 8007bfe:	4618      	mov	r0, r3
 8007c00:	3710      	adds	r7, #16
 8007c02:	46bd      	mov	sp, r7
 8007c04:	bd80      	pop	{r7, pc}
	...

08007c08 <osSemaphoreWait>:
* @param  millisec      timeout value or 0 in case of no time-out.
* @retval  number of available tokens, or -1 in case of incorrect parameters.
* @note   MUST REMAIN UNCHANGED: \b osSemaphoreWait shall be consistent in every CMSIS-RTOS.
*/
int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec)
{
 8007c08:	b580      	push	{r7, lr}
 8007c0a:	b084      	sub	sp, #16
 8007c0c:	af00      	add	r7, sp, #0
 8007c0e:	6078      	str	r0, [r7, #4]
 8007c10:	6039      	str	r1, [r7, #0]
  TickType_t ticks;
  portBASE_TYPE taskWoken = pdFALSE;  
 8007c12:	2300      	movs	r3, #0
 8007c14:	60bb      	str	r3, [r7, #8]
  
  
  if (semaphore_id == NULL) {
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	2b00      	cmp	r3, #0
 8007c1a:	d101      	bne.n	8007c20 <osSemaphoreWait+0x18>
    return osErrorParameter;
 8007c1c:	2380      	movs	r3, #128	; 0x80
 8007c1e:	e03a      	b.n	8007c96 <osSemaphoreWait+0x8e>
  }
  
  ticks = 0;
 8007c20:	2300      	movs	r3, #0
 8007c22:	60fb      	str	r3, [r7, #12]
  if (millisec == osWaitForever) {
 8007c24:	683b      	ldr	r3, [r7, #0]
 8007c26:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007c2a:	d103      	bne.n	8007c34 <osSemaphoreWait+0x2c>
    ticks = portMAX_DELAY;
 8007c2c:	f04f 33ff 	mov.w	r3, #4294967295
 8007c30:	60fb      	str	r3, [r7, #12]
 8007c32:	e009      	b.n	8007c48 <osSemaphoreWait+0x40>
  }
  else if (millisec != 0) {
 8007c34:	683b      	ldr	r3, [r7, #0]
 8007c36:	2b00      	cmp	r3, #0
 8007c38:	d006      	beq.n	8007c48 <osSemaphoreWait+0x40>
    ticks = millisec / portTICK_PERIOD_MS;
 8007c3a:	683b      	ldr	r3, [r7, #0]
 8007c3c:	60fb      	str	r3, [r7, #12]
    if (ticks == 0) {
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	2b00      	cmp	r3, #0
 8007c42:	d101      	bne.n	8007c48 <osSemaphoreWait+0x40>
      ticks = 1;
 8007c44:	2301      	movs	r3, #1
 8007c46:	60fb      	str	r3, [r7, #12]
    }
  }
  
  if (inHandlerMode()) {
 8007c48:	f7ff ff31 	bl	8007aae <inHandlerMode>
 8007c4c:	4603      	mov	r3, r0
 8007c4e:	2b00      	cmp	r3, #0
 8007c50:	d017      	beq.n	8007c82 <osSemaphoreWait+0x7a>
    if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 8007c52:	f107 0308 	add.w	r3, r7, #8
 8007c56:	461a      	mov	r2, r3
 8007c58:	2100      	movs	r1, #0
 8007c5a:	6878      	ldr	r0, [r7, #4]
 8007c5c:	f001 f8e6 	bl	8008e2c <xQueueReceiveFromISR>
 8007c60:	4603      	mov	r3, r0
 8007c62:	2b01      	cmp	r3, #1
 8007c64:	d001      	beq.n	8007c6a <osSemaphoreWait+0x62>
      return osErrorOS;
 8007c66:	23ff      	movs	r3, #255	; 0xff
 8007c68:	e015      	b.n	8007c96 <osSemaphoreWait+0x8e>
    }
	portEND_SWITCHING_ISR(taskWoken);
 8007c6a:	68bb      	ldr	r3, [r7, #8]
 8007c6c:	2b00      	cmp	r3, #0
 8007c6e:	d011      	beq.n	8007c94 <osSemaphoreWait+0x8c>
 8007c70:	4b0b      	ldr	r3, [pc, #44]	; (8007ca0 <osSemaphoreWait+0x98>)
 8007c72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c76:	601a      	str	r2, [r3, #0]
 8007c78:	f3bf 8f4f 	dsb	sy
 8007c7c:	f3bf 8f6f 	isb	sy
 8007c80:	e008      	b.n	8007c94 <osSemaphoreWait+0x8c>
  }  
  else if (xSemaphoreTake(semaphore_id, ticks) != pdTRUE) {
 8007c82:	68f9      	ldr	r1, [r7, #12]
 8007c84:	6878      	ldr	r0, [r7, #4]
 8007c86:	f000 ffc9 	bl	8008c1c <xQueueSemaphoreTake>
 8007c8a:	4603      	mov	r3, r0
 8007c8c:	2b01      	cmp	r3, #1
 8007c8e:	d001      	beq.n	8007c94 <osSemaphoreWait+0x8c>
    return osErrorOS;
 8007c90:	23ff      	movs	r3, #255	; 0xff
 8007c92:	e000      	b.n	8007c96 <osSemaphoreWait+0x8e>
  }
  
  return osOK;
 8007c94:	2300      	movs	r3, #0
}
 8007c96:	4618      	mov	r0, r3
 8007c98:	3710      	adds	r7, #16
 8007c9a:	46bd      	mov	sp, r7
 8007c9c:	bd80      	pop	{r7, pc}
 8007c9e:	bf00      	nop
 8007ca0:	e000ed04 	.word	0xe000ed04

08007ca4 <osSemaphoreRelease>:
* @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
* @retval  status code that indicates the execution status of the function.
* @note   MUST REMAIN UNCHANGED: \b osSemaphoreRelease shall be consistent in every CMSIS-RTOS.
*/
osStatus osSemaphoreRelease (osSemaphoreId semaphore_id)
{
 8007ca4:	b580      	push	{r7, lr}
 8007ca6:	b084      	sub	sp, #16
 8007ca8:	af00      	add	r7, sp, #0
 8007caa:	6078      	str	r0, [r7, #4]
  osStatus result = osOK;
 8007cac:	2300      	movs	r3, #0
 8007cae:	60fb      	str	r3, [r7, #12]
  portBASE_TYPE taskWoken = pdFALSE;
 8007cb0:	2300      	movs	r3, #0
 8007cb2:	60bb      	str	r3, [r7, #8]
  
  
  if (inHandlerMode()) {
 8007cb4:	f7ff fefb 	bl	8007aae <inHandlerMode>
 8007cb8:	4603      	mov	r3, r0
 8007cba:	2b00      	cmp	r3, #0
 8007cbc:	d016      	beq.n	8007cec <osSemaphoreRelease+0x48>
    if (xSemaphoreGiveFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 8007cbe:	f107 0308 	add.w	r3, r7, #8
 8007cc2:	4619      	mov	r1, r3
 8007cc4:	6878      	ldr	r0, [r7, #4]
 8007cc6:	f000 ff1f 	bl	8008b08 <xQueueGiveFromISR>
 8007cca:	4603      	mov	r3, r0
 8007ccc:	2b01      	cmp	r3, #1
 8007cce:	d001      	beq.n	8007cd4 <osSemaphoreRelease+0x30>
      return osErrorOS;
 8007cd0:	23ff      	movs	r3, #255	; 0xff
 8007cd2:	e017      	b.n	8007d04 <osSemaphoreRelease+0x60>
    }
    portEND_SWITCHING_ISR(taskWoken);
 8007cd4:	68bb      	ldr	r3, [r7, #8]
 8007cd6:	2b00      	cmp	r3, #0
 8007cd8:	d013      	beq.n	8007d02 <osSemaphoreRelease+0x5e>
 8007cda:	4b0c      	ldr	r3, [pc, #48]	; (8007d0c <osSemaphoreRelease+0x68>)
 8007cdc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ce0:	601a      	str	r2, [r3, #0]
 8007ce2:	f3bf 8f4f 	dsb	sy
 8007ce6:	f3bf 8f6f 	isb	sy
 8007cea:	e00a      	b.n	8007d02 <osSemaphoreRelease+0x5e>
  }
  else {
    if (xSemaphoreGive(semaphore_id) != pdTRUE) {
 8007cec:	2300      	movs	r3, #0
 8007cee:	2200      	movs	r2, #0
 8007cf0:	2100      	movs	r1, #0
 8007cf2:	6878      	ldr	r0, [r7, #4]
 8007cf4:	f000 fe0e 	bl	8008914 <xQueueGenericSend>
 8007cf8:	4603      	mov	r3, r0
 8007cfa:	2b01      	cmp	r3, #1
 8007cfc:	d001      	beq.n	8007d02 <osSemaphoreRelease+0x5e>
      result = osErrorOS;
 8007cfe:	23ff      	movs	r3, #255	; 0xff
 8007d00:	60fb      	str	r3, [r7, #12]
    }
  }
  
  return result;
 8007d02:	68fb      	ldr	r3, [r7, #12]
}
 8007d04:	4618      	mov	r0, r3
 8007d06:	3710      	adds	r7, #16
 8007d08:	46bd      	mov	sp, r7
 8007d0a:	bd80      	pop	{r7, pc}
 8007d0c:	e000ed04 	.word	0xe000ed04

08007d10 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 8007d10:	b580      	push	{r7, lr}
 8007d12:	b08a      	sub	sp, #40	; 0x28
 8007d14:	af00      	add	r7, sp, #0
 8007d16:	6078      	str	r0, [r7, #4]
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;
 8007d18:	2300      	movs	r3, #0
 8007d1a:	61fb      	str	r3, [r7, #28]

	vTaskSuspendAll();
 8007d1c:	f001 fc4c 	bl	80095b8 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 8007d20:	4b57      	ldr	r3, [pc, #348]	; (8007e80 <pvPortMalloc+0x170>)
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	2b00      	cmp	r3, #0
 8007d26:	d101      	bne.n	8007d2c <pvPortMalloc+0x1c>
		{
			prvHeapInit();
 8007d28:	f000 f90c 	bl	8007f44 <prvHeapInit>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007d2c:	4b55      	ldr	r3, [pc, #340]	; (8007e84 <pvPortMalloc+0x174>)
 8007d2e:	681a      	ldr	r2, [r3, #0]
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	4013      	ands	r3, r2
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	f040 808c 	bne.w	8007e52 <pvPortMalloc+0x142>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	2b00      	cmp	r3, #0
 8007d3e:	d01c      	beq.n	8007d7a <pvPortMalloc+0x6a>
			{
				xWantedSize += xHeapStructSize;
 8007d40:	2208      	movs	r2, #8
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	4413      	add	r3, r2
 8007d46:	607b      	str	r3, [r7, #4]

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007d48:	687b      	ldr	r3, [r7, #4]
 8007d4a:	f003 0307 	and.w	r3, r3, #7
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d013      	beq.n	8007d7a <pvPortMalloc+0x6a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007d52:	687b      	ldr	r3, [r7, #4]
 8007d54:	f023 0307 	bic.w	r3, r3, #7
 8007d58:	3308      	adds	r3, #8
 8007d5a:	607b      	str	r3, [r7, #4]
					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	f003 0307 	and.w	r3, r3, #7
 8007d62:	2b00      	cmp	r3, #0
 8007d64:	d009      	beq.n	8007d7a <pvPortMalloc+0x6a>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007d66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d6a:	f383 8811 	msr	BASEPRI, r3
 8007d6e:	f3bf 8f6f 	isb	sy
 8007d72:	f3bf 8f4f 	dsb	sy
 8007d76:	617b      	str	r3, [r7, #20]
 8007d78:	e7fe      	b.n	8007d78 <pvPortMalloc+0x68>
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d068      	beq.n	8007e52 <pvPortMalloc+0x142>
 8007d80:	4b41      	ldr	r3, [pc, #260]	; (8007e88 <pvPortMalloc+0x178>)
 8007d82:	681b      	ldr	r3, [r3, #0]
 8007d84:	687a      	ldr	r2, [r7, #4]
 8007d86:	429a      	cmp	r2, r3
 8007d88:	d863      	bhi.n	8007e52 <pvPortMalloc+0x142>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
 8007d8a:	4b40      	ldr	r3, [pc, #256]	; (8007e8c <pvPortMalloc+0x17c>)
 8007d8c:	623b      	str	r3, [r7, #32]
				pxBlock = xStart.pxNextFreeBlock;
 8007d8e:	4b3f      	ldr	r3, [pc, #252]	; (8007e8c <pvPortMalloc+0x17c>)
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	627b      	str	r3, [r7, #36]	; 0x24
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007d94:	e004      	b.n	8007da0 <pvPortMalloc+0x90>
				{
					pxPreviousBlock = pxBlock;
 8007d96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d98:	623b      	str	r3, [r7, #32]
					pxBlock = pxBlock->pxNextFreeBlock;
 8007d9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	627b      	str	r3, [r7, #36]	; 0x24
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007da0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007da2:	685b      	ldr	r3, [r3, #4]
 8007da4:	687a      	ldr	r2, [r7, #4]
 8007da6:	429a      	cmp	r2, r3
 8007da8:	d903      	bls.n	8007db2 <pvPortMalloc+0xa2>
 8007daa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	2b00      	cmp	r3, #0
 8007db0:	d1f1      	bne.n	8007d96 <pvPortMalloc+0x86>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 8007db2:	4b33      	ldr	r3, [pc, #204]	; (8007e80 <pvPortMalloc+0x170>)
 8007db4:	681b      	ldr	r3, [r3, #0]
 8007db6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007db8:	429a      	cmp	r2, r3
 8007dba:	d04a      	beq.n	8007e52 <pvPortMalloc+0x142>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007dbc:	6a3b      	ldr	r3, [r7, #32]
 8007dbe:	681b      	ldr	r3, [r3, #0]
 8007dc0:	2208      	movs	r2, #8
 8007dc2:	4413      	add	r3, r2
 8007dc4:	61fb      	str	r3, [r7, #28]

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007dc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007dc8:	681a      	ldr	r2, [r3, #0]
 8007dca:	6a3b      	ldr	r3, [r7, #32]
 8007dcc:	601a      	str	r2, [r3, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007dce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007dd0:	685a      	ldr	r2, [r3, #4]
 8007dd2:	687b      	ldr	r3, [r7, #4]
 8007dd4:	1ad2      	subs	r2, r2, r3
 8007dd6:	2308      	movs	r3, #8
 8007dd8:	005b      	lsls	r3, r3, #1
 8007dda:	429a      	cmp	r2, r3
 8007ddc:	d91e      	bls.n	8007e1c <pvPortMalloc+0x10c>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007dde:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	4413      	add	r3, r2
 8007de4:	61bb      	str	r3, [r7, #24]
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007de6:	69bb      	ldr	r3, [r7, #24]
 8007de8:	f003 0307 	and.w	r3, r3, #7
 8007dec:	2b00      	cmp	r3, #0
 8007dee:	d009      	beq.n	8007e04 <pvPortMalloc+0xf4>
 8007df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007df4:	f383 8811 	msr	BASEPRI, r3
 8007df8:	f3bf 8f6f 	isb	sy
 8007dfc:	f3bf 8f4f 	dsb	sy
 8007e00:	613b      	str	r3, [r7, #16]
 8007e02:	e7fe      	b.n	8007e02 <pvPortMalloc+0xf2>

						/* Calculate the sizes of two blocks split from the
						single block. */
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007e04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e06:	685a      	ldr	r2, [r3, #4]
 8007e08:	687b      	ldr	r3, [r7, #4]
 8007e0a:	1ad2      	subs	r2, r2, r3
 8007e0c:	69bb      	ldr	r3, [r7, #24]
 8007e0e:	605a      	str	r2, [r3, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007e10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e12:	687a      	ldr	r2, [r7, #4]
 8007e14:	605a      	str	r2, [r3, #4]

						/* Insert the new block into the list of free blocks. */
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007e16:	69b8      	ldr	r0, [r7, #24]
 8007e18:	f000 f8f6 	bl	8008008 <prvInsertBlockIntoFreeList>
					else
					{
						mtCOVERAGE_TEST_MARKER();
					}

					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007e1c:	4b1a      	ldr	r3, [pc, #104]	; (8007e88 <pvPortMalloc+0x178>)
 8007e1e:	681a      	ldr	r2, [r3, #0]
 8007e20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e22:	685b      	ldr	r3, [r3, #4]
 8007e24:	1ad3      	subs	r3, r2, r3
 8007e26:	4a18      	ldr	r2, [pc, #96]	; (8007e88 <pvPortMalloc+0x178>)
 8007e28:	6013      	str	r3, [r2, #0]

					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007e2a:	4b17      	ldr	r3, [pc, #92]	; (8007e88 <pvPortMalloc+0x178>)
 8007e2c:	681a      	ldr	r2, [r3, #0]
 8007e2e:	4b18      	ldr	r3, [pc, #96]	; (8007e90 <pvPortMalloc+0x180>)
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	429a      	cmp	r2, r3
 8007e34:	d203      	bcs.n	8007e3e <pvPortMalloc+0x12e>
					{
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007e36:	4b14      	ldr	r3, [pc, #80]	; (8007e88 <pvPortMalloc+0x178>)
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	4a15      	ldr	r2, [pc, #84]	; (8007e90 <pvPortMalloc+0x180>)
 8007e3c:	6013      	str	r3, [r2, #0]
						mtCOVERAGE_TEST_MARKER();
					}

					/* The block is being returned - it is allocated and owned
					by the application and has no "next" block. */
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007e3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e40:	685a      	ldr	r2, [r3, #4]
 8007e42:	4b10      	ldr	r3, [pc, #64]	; (8007e84 <pvPortMalloc+0x174>)
 8007e44:	681b      	ldr	r3, [r3, #0]
 8007e46:	431a      	orrs	r2, r3
 8007e48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e4a:	605a      	str	r2, [r3, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007e4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e4e:	2200      	movs	r2, #0
 8007e50:	601a      	str	r2, [r3, #0]
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 8007e52:	f001 fbbf 	bl	80095d4 <xTaskResumeAll>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007e56:	69fb      	ldr	r3, [r7, #28]
 8007e58:	f003 0307 	and.w	r3, r3, #7
 8007e5c:	2b00      	cmp	r3, #0
 8007e5e:	d009      	beq.n	8007e74 <pvPortMalloc+0x164>
 8007e60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e64:	f383 8811 	msr	BASEPRI, r3
 8007e68:	f3bf 8f6f 	isb	sy
 8007e6c:	f3bf 8f4f 	dsb	sy
 8007e70:	60fb      	str	r3, [r7, #12]
 8007e72:	e7fe      	b.n	8007e72 <pvPortMalloc+0x162>
	return pvReturn;
 8007e74:	69fb      	ldr	r3, [r7, #28]
}
 8007e76:	4618      	mov	r0, r3
 8007e78:	3728      	adds	r7, #40	; 0x28
 8007e7a:	46bd      	mov	sp, r7
 8007e7c:	bd80      	pop	{r7, pc}
 8007e7e:	bf00      	nop
 8007e80:	20008840 	.word	0x20008840
 8007e84:	2000884c 	.word	0x2000884c
 8007e88:	20008844 	.word	0x20008844
 8007e8c:	20008838 	.word	0x20008838
 8007e90:	20008848 	.word	0x20008848

08007e94 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
 8007e94:	b580      	push	{r7, lr}
 8007e96:	b086      	sub	sp, #24
 8007e98:	af00      	add	r7, sp, #0
 8007e9a:	6078      	str	r0, [r7, #4]
uint8_t *puc = ( uint8_t * ) pv;
 8007e9c:	687b      	ldr	r3, [r7, #4]
 8007e9e:	617b      	str	r3, [r7, #20]
BlockLink_t *pxLink;

	if( pv != NULL )
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	d046      	beq.n	8007f34 <vPortFree+0xa0>
	{
		/* The memory being freed will have an BlockLink_t structure immediately
		before it. */
		puc -= xHeapStructSize;
 8007ea6:	2308      	movs	r3, #8
 8007ea8:	425b      	negs	r3, r3
 8007eaa:	697a      	ldr	r2, [r7, #20]
 8007eac:	4413      	add	r3, r2
 8007eae:	617b      	str	r3, [r7, #20]

		/* This casting is to keep the compiler from issuing warnings. */
		pxLink = ( void * ) puc;
 8007eb0:	697b      	ldr	r3, [r7, #20]
 8007eb2:	613b      	str	r3, [r7, #16]

		/* Check the block is actually allocated. */
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007eb4:	693b      	ldr	r3, [r7, #16]
 8007eb6:	685a      	ldr	r2, [r3, #4]
 8007eb8:	4b20      	ldr	r3, [pc, #128]	; (8007f3c <vPortFree+0xa8>)
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	4013      	ands	r3, r2
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	d109      	bne.n	8007ed6 <vPortFree+0x42>
 8007ec2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ec6:	f383 8811 	msr	BASEPRI, r3
 8007eca:	f3bf 8f6f 	isb	sy
 8007ece:	f3bf 8f4f 	dsb	sy
 8007ed2:	60fb      	str	r3, [r7, #12]
 8007ed4:	e7fe      	b.n	8007ed4 <vPortFree+0x40>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007ed6:	693b      	ldr	r3, [r7, #16]
 8007ed8:	681b      	ldr	r3, [r3, #0]
 8007eda:	2b00      	cmp	r3, #0
 8007edc:	d009      	beq.n	8007ef2 <vPortFree+0x5e>
 8007ede:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ee2:	f383 8811 	msr	BASEPRI, r3
 8007ee6:	f3bf 8f6f 	isb	sy
 8007eea:	f3bf 8f4f 	dsb	sy
 8007eee:	60bb      	str	r3, [r7, #8]
 8007ef0:	e7fe      	b.n	8007ef0 <vPortFree+0x5c>

		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 8007ef2:	693b      	ldr	r3, [r7, #16]
 8007ef4:	685a      	ldr	r2, [r3, #4]
 8007ef6:	4b11      	ldr	r3, [pc, #68]	; (8007f3c <vPortFree+0xa8>)
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	4013      	ands	r3, r2
 8007efc:	2b00      	cmp	r3, #0
 8007efe:	d019      	beq.n	8007f34 <vPortFree+0xa0>
		{
			if( pxLink->pxNextFreeBlock == NULL )
 8007f00:	693b      	ldr	r3, [r7, #16]
 8007f02:	681b      	ldr	r3, [r3, #0]
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d115      	bne.n	8007f34 <vPortFree+0xa0>
			{
				/* The block is being returned to the heap - it is no longer
				allocated. */
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007f08:	693b      	ldr	r3, [r7, #16]
 8007f0a:	685a      	ldr	r2, [r3, #4]
 8007f0c:	4b0b      	ldr	r3, [pc, #44]	; (8007f3c <vPortFree+0xa8>)
 8007f0e:	681b      	ldr	r3, [r3, #0]
 8007f10:	43db      	mvns	r3, r3
 8007f12:	401a      	ands	r2, r3
 8007f14:	693b      	ldr	r3, [r7, #16]
 8007f16:	605a      	str	r2, [r3, #4]

				vTaskSuspendAll();
 8007f18:	f001 fb4e 	bl	80095b8 <vTaskSuspendAll>
				{
					/* Add this block to the list of free blocks. */
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007f1c:	693b      	ldr	r3, [r7, #16]
 8007f1e:	685a      	ldr	r2, [r3, #4]
 8007f20:	4b07      	ldr	r3, [pc, #28]	; (8007f40 <vPortFree+0xac>)
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	4413      	add	r3, r2
 8007f26:	4a06      	ldr	r2, [pc, #24]	; (8007f40 <vPortFree+0xac>)
 8007f28:	6013      	str	r3, [r2, #0]
					traceFREE( pv, pxLink->xBlockSize );
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007f2a:	6938      	ldr	r0, [r7, #16]
 8007f2c:	f000 f86c 	bl	8008008 <prvInsertBlockIntoFreeList>
				}
				( void ) xTaskResumeAll();
 8007f30:	f001 fb50 	bl	80095d4 <xTaskResumeAll>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
}
 8007f34:	bf00      	nop
 8007f36:	3718      	adds	r7, #24
 8007f38:	46bd      	mov	sp, r7
 8007f3a:	bd80      	pop	{r7, pc}
 8007f3c:	2000884c 	.word	0x2000884c
 8007f40:	20008844 	.word	0x20008844

08007f44 <prvHeapInit>:
	/* This just exists to keep the linker quiet. */
}
/*-----------------------------------------------------------*/

static void prvHeapInit( void )
{
 8007f44:	b480      	push	{r7}
 8007f46:	b085      	sub	sp, #20
 8007f48:	af00      	add	r7, sp, #0
BlockLink_t *pxFirstFreeBlock;
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007f4a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007f4e:	60bb      	str	r3, [r7, #8]

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
 8007f50:	4b27      	ldr	r3, [pc, #156]	; (8007ff0 <prvHeapInit+0xac>)
 8007f52:	60fb      	str	r3, [r7, #12]

	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007f54:	68fb      	ldr	r3, [r7, #12]
 8007f56:	f003 0307 	and.w	r3, r3, #7
 8007f5a:	2b00      	cmp	r3, #0
 8007f5c:	d00c      	beq.n	8007f78 <prvHeapInit+0x34>
	{
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	3307      	adds	r3, #7
 8007f62:	60fb      	str	r3, [r7, #12]
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007f64:	68fb      	ldr	r3, [r7, #12]
 8007f66:	f023 0307 	bic.w	r3, r3, #7
 8007f6a:	60fb      	str	r3, [r7, #12]
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007f6c:	68ba      	ldr	r2, [r7, #8]
 8007f6e:	68fb      	ldr	r3, [r7, #12]
 8007f70:	1ad3      	subs	r3, r2, r3
 8007f72:	4a1f      	ldr	r2, [pc, #124]	; (8007ff0 <prvHeapInit+0xac>)
 8007f74:	4413      	add	r3, r2
 8007f76:	60bb      	str	r3, [r7, #8]
	}

	pucAlignedHeap = ( uint8_t * ) uxAddress;
 8007f78:	68fb      	ldr	r3, [r7, #12]
 8007f7a:	607b      	str	r3, [r7, #4]

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007f7c:	4a1d      	ldr	r2, [pc, #116]	; (8007ff4 <prvHeapInit+0xb0>)
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8007f82:	4b1c      	ldr	r3, [pc, #112]	; (8007ff4 <prvHeapInit+0xb0>)
 8007f84:	2200      	movs	r2, #0
 8007f86:	605a      	str	r2, [r3, #4]

	/* pxEnd is used to mark the end of the list of free blocks and is inserted
	at the end of the heap space. */
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	68ba      	ldr	r2, [r7, #8]
 8007f8c:	4413      	add	r3, r2
 8007f8e:	60fb      	str	r3, [r7, #12]
	uxAddress -= xHeapStructSize;
 8007f90:	2208      	movs	r2, #8
 8007f92:	68fb      	ldr	r3, [r7, #12]
 8007f94:	1a9b      	subs	r3, r3, r2
 8007f96:	60fb      	str	r3, [r7, #12]
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007f98:	68fb      	ldr	r3, [r7, #12]
 8007f9a:	f023 0307 	bic.w	r3, r3, #7
 8007f9e:	60fb      	str	r3, [r7, #12]
	pxEnd = ( void * ) uxAddress;
 8007fa0:	68fb      	ldr	r3, [r7, #12]
 8007fa2:	4a15      	ldr	r2, [pc, #84]	; (8007ff8 <prvHeapInit+0xb4>)
 8007fa4:	6013      	str	r3, [r2, #0]
	pxEnd->xBlockSize = 0;
 8007fa6:	4b14      	ldr	r3, [pc, #80]	; (8007ff8 <prvHeapInit+0xb4>)
 8007fa8:	681b      	ldr	r3, [r3, #0]
 8007faa:	2200      	movs	r2, #0
 8007fac:	605a      	str	r2, [r3, #4]
	pxEnd->pxNextFreeBlock = NULL;
 8007fae:	4b12      	ldr	r3, [pc, #72]	; (8007ff8 <prvHeapInit+0xb4>)
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	2200      	movs	r2, #0
 8007fb4:	601a      	str	r2, [r3, #0]

	/* To start with there is a single free block that is sized to take up the
	entire heap space, minus the space taken by pxEnd. */
	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	603b      	str	r3, [r7, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007fba:	683b      	ldr	r3, [r7, #0]
 8007fbc:	68fa      	ldr	r2, [r7, #12]
 8007fbe:	1ad2      	subs	r2, r2, r3
 8007fc0:	683b      	ldr	r3, [r7, #0]
 8007fc2:	605a      	str	r2, [r3, #4]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007fc4:	4b0c      	ldr	r3, [pc, #48]	; (8007ff8 <prvHeapInit+0xb4>)
 8007fc6:	681a      	ldr	r2, [r3, #0]
 8007fc8:	683b      	ldr	r3, [r7, #0]
 8007fca:	601a      	str	r2, [r3, #0]

	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007fcc:	683b      	ldr	r3, [r7, #0]
 8007fce:	685b      	ldr	r3, [r3, #4]
 8007fd0:	4a0a      	ldr	r2, [pc, #40]	; (8007ffc <prvHeapInit+0xb8>)
 8007fd2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007fd4:	683b      	ldr	r3, [r7, #0]
 8007fd6:	685b      	ldr	r3, [r3, #4]
 8007fd8:	4a09      	ldr	r2, [pc, #36]	; (8008000 <prvHeapInit+0xbc>)
 8007fda:	6013      	str	r3, [r2, #0]

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007fdc:	4b09      	ldr	r3, [pc, #36]	; (8008004 <prvHeapInit+0xc0>)
 8007fde:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8007fe2:	601a      	str	r2, [r3, #0]
}
 8007fe4:	bf00      	nop
 8007fe6:	3714      	adds	r7, #20
 8007fe8:	46bd      	mov	sp, r7
 8007fea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fee:	4770      	bx	lr
 8007ff0:	20000838 	.word	0x20000838
 8007ff4:	20008838 	.word	0x20008838
 8007ff8:	20008840 	.word	0x20008840
 8007ffc:	20008848 	.word	0x20008848
 8008000:	20008844 	.word	0x20008844
 8008004:	2000884c 	.word	0x2000884c

08008008 <prvInsertBlockIntoFreeList>:
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008008:	b480      	push	{r7}
 800800a:	b085      	sub	sp, #20
 800800c:	af00      	add	r7, sp, #0
 800800e:	6078      	str	r0, [r7, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008010:	4b28      	ldr	r3, [pc, #160]	; (80080b4 <prvInsertBlockIntoFreeList+0xac>)
 8008012:	60fb      	str	r3, [r7, #12]
 8008014:	e002      	b.n	800801c <prvInsertBlockIntoFreeList+0x14>
 8008016:	68fb      	ldr	r3, [r7, #12]
 8008018:	681b      	ldr	r3, [r3, #0]
 800801a:	60fb      	str	r3, [r7, #12]
 800801c:	68fb      	ldr	r3, [r7, #12]
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	687a      	ldr	r2, [r7, #4]
 8008022:	429a      	cmp	r2, r3
 8008024:	d8f7      	bhi.n	8008016 <prvInsertBlockIntoFreeList+0xe>
		/* Nothing to do here, just iterate to the right position. */
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
 8008026:	68fb      	ldr	r3, [r7, #12]
 8008028:	60bb      	str	r3, [r7, #8]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800802a:	68fb      	ldr	r3, [r7, #12]
 800802c:	685b      	ldr	r3, [r3, #4]
 800802e:	68ba      	ldr	r2, [r7, #8]
 8008030:	4413      	add	r3, r2
 8008032:	687a      	ldr	r2, [r7, #4]
 8008034:	429a      	cmp	r2, r3
 8008036:	d108      	bne.n	800804a <prvInsertBlockIntoFreeList+0x42>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008038:	68fb      	ldr	r3, [r7, #12]
 800803a:	685a      	ldr	r2, [r3, #4]
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	685b      	ldr	r3, [r3, #4]
 8008040:	441a      	add	r2, r3
 8008042:	68fb      	ldr	r3, [r7, #12]
 8008044:	605a      	str	r2, [r3, #4]
		pxBlockToInsert = pxIterator;
 8008046:	68fb      	ldr	r3, [r7, #12]
 8008048:	607b      	str	r3, [r7, #4]
		mtCOVERAGE_TEST_MARKER();
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	60bb      	str	r3, [r7, #8]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	685b      	ldr	r3, [r3, #4]
 8008052:	68ba      	ldr	r2, [r7, #8]
 8008054:	441a      	add	r2, r3
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	681b      	ldr	r3, [r3, #0]
 800805a:	429a      	cmp	r2, r3
 800805c:	d118      	bne.n	8008090 <prvInsertBlockIntoFreeList+0x88>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800805e:	68fb      	ldr	r3, [r7, #12]
 8008060:	681a      	ldr	r2, [r3, #0]
 8008062:	4b15      	ldr	r3, [pc, #84]	; (80080b8 <prvInsertBlockIntoFreeList+0xb0>)
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	429a      	cmp	r2, r3
 8008068:	d00d      	beq.n	8008086 <prvInsertBlockIntoFreeList+0x7e>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800806a:	687b      	ldr	r3, [r7, #4]
 800806c:	685a      	ldr	r2, [r3, #4]
 800806e:	68fb      	ldr	r3, [r7, #12]
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	685b      	ldr	r3, [r3, #4]
 8008074:	441a      	add	r2, r3
 8008076:	687b      	ldr	r3, [r7, #4]
 8008078:	605a      	str	r2, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800807a:	68fb      	ldr	r3, [r7, #12]
 800807c:	681b      	ldr	r3, [r3, #0]
 800807e:	681a      	ldr	r2, [r3, #0]
 8008080:	687b      	ldr	r3, [r7, #4]
 8008082:	601a      	str	r2, [r3, #0]
 8008084:	e008      	b.n	8008098 <prvInsertBlockIntoFreeList+0x90>
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008086:	4b0c      	ldr	r3, [pc, #48]	; (80080b8 <prvInsertBlockIntoFreeList+0xb0>)
 8008088:	681a      	ldr	r2, [r3, #0]
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	601a      	str	r2, [r3, #0]
 800808e:	e003      	b.n	8008098 <prvInsertBlockIntoFreeList+0x90>
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008090:	68fb      	ldr	r3, [r7, #12]
 8008092:	681a      	ldr	r2, [r3, #0]
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	601a      	str	r2, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008098:	68fa      	ldr	r2, [r7, #12]
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	429a      	cmp	r2, r3
 800809e:	d002      	beq.n	80080a6 <prvInsertBlockIntoFreeList+0x9e>
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80080a0:	68fb      	ldr	r3, [r7, #12]
 80080a2:	687a      	ldr	r2, [r7, #4]
 80080a4:	601a      	str	r2, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80080a6:	bf00      	nop
 80080a8:	3714      	adds	r7, #20
 80080aa:	46bd      	mov	sp, r7
 80080ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080b0:	4770      	bx	lr
 80080b2:	bf00      	nop
 80080b4:	20008838 	.word	0x20008838
 80080b8:	20008840 	.word	0x20008840

080080bc <vListInitialise>:
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( List_t * const pxList )
{
 80080bc:	b480      	push	{r7}
 80080be:	b083      	sub	sp, #12
 80080c0:	af00      	add	r7, sp, #0
 80080c2:	6078      	str	r0, [r7, #4]
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080c4:	687b      	ldr	r3, [r7, #4]
 80080c6:	f103 0208 	add.w	r2, r3, #8
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	605a      	str	r2, [r3, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	f04f 32ff 	mov.w	r2, #4294967295
 80080d4:	609a      	str	r2, [r3, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	f103 0208 	add.w	r2, r3, #8
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	60da      	str	r2, [r3, #12]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	f103 0208 	add.w	r2, r3, #8
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	611a      	str	r2, [r3, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	2200      	movs	r2, #0
 80080ee:	601a      	str	r2, [r3, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80080f0:	bf00      	nop
 80080f2:	370c      	adds	r7, #12
 80080f4:	46bd      	mov	sp, r7
 80080f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080fa:	4770      	bx	lr

080080fc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
 80080fc:	b480      	push	{r7}
 80080fe:	b083      	sub	sp, #12
 8008100:	af00      	add	r7, sp, #0
 8008102:	6078      	str	r0, [r7, #4]
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	2200      	movs	r2, #0
 8008108:	611a      	str	r2, [r3, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800810a:	bf00      	nop
 800810c:	370c      	adds	r7, #12
 800810e:	46bd      	mov	sp, r7
 8008110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008114:	4770      	bx	lr

08008116 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008116:	b480      	push	{r7}
 8008118:	b085      	sub	sp, #20
 800811a:	af00      	add	r7, sp, #0
 800811c:	6078      	str	r0, [r7, #4]
 800811e:	6039      	str	r1, [r7, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	685b      	ldr	r3, [r3, #4]
 8008124:	60fb      	str	r3, [r7, #12]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008126:	683b      	ldr	r3, [r7, #0]
 8008128:	68fa      	ldr	r2, [r7, #12]
 800812a:	605a      	str	r2, [r3, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800812c:	68fb      	ldr	r3, [r7, #12]
 800812e:	689a      	ldr	r2, [r3, #8]
 8008130:	683b      	ldr	r3, [r7, #0]
 8008132:	609a      	str	r2, [r3, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008134:	68fb      	ldr	r3, [r7, #12]
 8008136:	689b      	ldr	r3, [r3, #8]
 8008138:	683a      	ldr	r2, [r7, #0]
 800813a:	605a      	str	r2, [r3, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	683a      	ldr	r2, [r7, #0]
 8008140:	609a      	str	r2, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;
 8008142:	683b      	ldr	r3, [r7, #0]
 8008144:	687a      	ldr	r2, [r7, #4]
 8008146:	611a      	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	1c5a      	adds	r2, r3, #1
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	601a      	str	r2, [r3, #0]
}
 8008152:	bf00      	nop
 8008154:	3714      	adds	r7, #20
 8008156:	46bd      	mov	sp, r7
 8008158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800815c:	4770      	bx	lr

0800815e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800815e:	b480      	push	{r7}
 8008160:	b085      	sub	sp, #20
 8008162:	af00      	add	r7, sp, #0
 8008164:	6078      	str	r0, [r7, #4]
 8008166:	6039      	str	r1, [r7, #0]
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008168:	683b      	ldr	r3, [r7, #0]
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	60bb      	str	r3, [r7, #8]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800816e:	68bb      	ldr	r3, [r7, #8]
 8008170:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008174:	d103      	bne.n	800817e <vListInsert+0x20>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	691b      	ldr	r3, [r3, #16]
 800817a:	60fb      	str	r3, [r7, #12]
 800817c:	e00c      	b.n	8008198 <vListInsert+0x3a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	3308      	adds	r3, #8
 8008182:	60fb      	str	r3, [r7, #12]
 8008184:	e002      	b.n	800818c <vListInsert+0x2e>
 8008186:	68fb      	ldr	r3, [r7, #12]
 8008188:	685b      	ldr	r3, [r3, #4]
 800818a:	60fb      	str	r3, [r7, #12]
 800818c:	68fb      	ldr	r3, [r7, #12]
 800818e:	685b      	ldr	r3, [r3, #4]
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	68ba      	ldr	r2, [r7, #8]
 8008194:	429a      	cmp	r2, r3
 8008196:	d2f6      	bcs.n	8008186 <vListInsert+0x28>
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008198:	68fb      	ldr	r3, [r7, #12]
 800819a:	685a      	ldr	r2, [r3, #4]
 800819c:	683b      	ldr	r3, [r7, #0]
 800819e:	605a      	str	r2, [r3, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80081a0:	683b      	ldr	r3, [r7, #0]
 80081a2:	685b      	ldr	r3, [r3, #4]
 80081a4:	683a      	ldr	r2, [r7, #0]
 80081a6:	609a      	str	r2, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80081a8:	683b      	ldr	r3, [r7, #0]
 80081aa:	68fa      	ldr	r2, [r7, #12]
 80081ac:	609a      	str	r2, [r3, #8]
	pxIterator->pxNext = pxNewListItem;
 80081ae:	68fb      	ldr	r3, [r7, #12]
 80081b0:	683a      	ldr	r2, [r7, #0]
 80081b2:	605a      	str	r2, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;
 80081b4:	683b      	ldr	r3, [r7, #0]
 80081b6:	687a      	ldr	r2, [r7, #4]
 80081b8:	611a      	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	1c5a      	adds	r2, r3, #1
 80081c0:	687b      	ldr	r3, [r7, #4]
 80081c2:	601a      	str	r2, [r3, #0]
}
 80081c4:	bf00      	nop
 80081c6:	3714      	adds	r7, #20
 80081c8:	46bd      	mov	sp, r7
 80081ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ce:	4770      	bx	lr

080081d0 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
 80081d0:	b480      	push	{r7}
 80081d2:	b085      	sub	sp, #20
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	6078      	str	r0, [r7, #4]
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	691b      	ldr	r3, [r3, #16]
 80081dc:	60fb      	str	r3, [r7, #12]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	685b      	ldr	r3, [r3, #4]
 80081e2:	687a      	ldr	r2, [r7, #4]
 80081e4:	6892      	ldr	r2, [r2, #8]
 80081e6:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	689b      	ldr	r3, [r3, #8]
 80081ec:	687a      	ldr	r2, [r7, #4]
 80081ee:	6852      	ldr	r2, [r2, #4]
 80081f0:	605a      	str	r2, [r3, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80081f2:	68fb      	ldr	r3, [r7, #12]
 80081f4:	685b      	ldr	r3, [r3, #4]
 80081f6:	687a      	ldr	r2, [r7, #4]
 80081f8:	429a      	cmp	r2, r3
 80081fa:	d103      	bne.n	8008204 <uxListRemove+0x34>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	689a      	ldr	r2, [r3, #8]
 8008200:	68fb      	ldr	r3, [r7, #12]
 8008202:	605a      	str	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	2200      	movs	r2, #0
 8008208:	611a      	str	r2, [r3, #16]
	( pxList->uxNumberOfItems )--;
 800820a:	68fb      	ldr	r3, [r7, #12]
 800820c:	681b      	ldr	r3, [r3, #0]
 800820e:	1e5a      	subs	r2, r3, #1
 8008210:	68fb      	ldr	r3, [r7, #12]
 8008212:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008214:	68fb      	ldr	r3, [r7, #12]
 8008216:	681b      	ldr	r3, [r3, #0]
}
 8008218:	4618      	mov	r0, r3
 800821a:	3714      	adds	r7, #20
 800821c:	46bd      	mov	sp, r7
 800821e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008222:	4770      	bx	lr

08008224 <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
{
 8008224:	b480      	push	{r7}
 8008226:	b085      	sub	sp, #20
 8008228:	af00      	add	r7, sp, #0
 800822a:	60f8      	str	r0, [r7, #12]
 800822c:	60b9      	str	r1, [r7, #8]
 800822e:	607a      	str	r2, [r7, #4]
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */

	/* Offset added to account for the way the MCU uses the stack on entry/exit
	of interrupts, and to ensure alignment. */
	pxTopOfStack--;
 8008230:	68fb      	ldr	r3, [r7, #12]
 8008232:	3b04      	subs	r3, #4
 8008234:	60fb      	str	r3, [r7, #12]

	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008236:	68fb      	ldr	r3, [r7, #12]
 8008238:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800823c:	601a      	str	r2, [r3, #0]
	pxTopOfStack--;
 800823e:	68fb      	ldr	r3, [r7, #12]
 8008240:	3b04      	subs	r3, #4
 8008242:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008244:	68bb      	ldr	r3, [r7, #8]
 8008246:	f023 0201 	bic.w	r2, r3, #1
 800824a:	68fb      	ldr	r3, [r7, #12]
 800824c:	601a      	str	r2, [r3, #0]
	pxTopOfStack--;
 800824e:	68fb      	ldr	r3, [r7, #12]
 8008250:	3b04      	subs	r3, #4
 8008252:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008254:	4a0c      	ldr	r2, [pc, #48]	; (8008288 <pxPortInitialiseStack+0x64>)
 8008256:	68fb      	ldr	r3, [r7, #12]
 8008258:	601a      	str	r2, [r3, #0]

	/* Save code space by skipping register initialisation. */
	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 800825a:	68fb      	ldr	r3, [r7, #12]
 800825c:	3b14      	subs	r3, #20
 800825e:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008260:	687a      	ldr	r2, [r7, #4]
 8008262:	68fb      	ldr	r3, [r7, #12]
 8008264:	601a      	str	r2, [r3, #0]

	/* A save method is being used that requires each task to maintain its
	own exec return value. */
	pxTopOfStack--;
 8008266:	68fb      	ldr	r3, [r7, #12]
 8008268:	3b04      	subs	r3, #4
 800826a:	60fb      	str	r3, [r7, #12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	f06f 0202 	mvn.w	r2, #2
 8008272:	601a      	str	r2, [r3, #0]

	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 8008274:	68fb      	ldr	r3, [r7, #12]
 8008276:	3b20      	subs	r3, #32
 8008278:	60fb      	str	r3, [r7, #12]

	return pxTopOfStack;
 800827a:	68fb      	ldr	r3, [r7, #12]
}
 800827c:	4618      	mov	r0, r3
 800827e:	3714      	adds	r7, #20
 8008280:	46bd      	mov	sp, r7
 8008282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008286:	4770      	bx	lr
 8008288:	0800828d 	.word	0x0800828d

0800828c <prvTaskExitError>:
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 800828c:	b480      	push	{r7}
 800828e:	b085      	sub	sp, #20
 8008290:	af00      	add	r7, sp, #0
volatile uint32_t ulDummy = 0;
 8008292:	2300      	movs	r3, #0
 8008294:	607b      	str	r3, [r7, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8008296:	4b11      	ldr	r3, [pc, #68]	; (80082dc <prvTaskExitError+0x50>)
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800829e:	d009      	beq.n	80082b4 <prvTaskExitError+0x28>
 80082a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082a4:	f383 8811 	msr	BASEPRI, r3
 80082a8:	f3bf 8f6f 	isb	sy
 80082ac:	f3bf 8f4f 	dsb	sy
 80082b0:	60fb      	str	r3, [r7, #12]
 80082b2:	e7fe      	b.n	80082b2 <prvTaskExitError+0x26>
 80082b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082b8:	f383 8811 	msr	BASEPRI, r3
 80082bc:	f3bf 8f6f 	isb	sy
 80082c0:	f3bf 8f4f 	dsb	sy
 80082c4:	60bb      	str	r3, [r7, #8]
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 80082c6:	bf00      	nop
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	2b00      	cmp	r3, #0
 80082cc:	d0fc      	beq.n	80082c8 <prvTaskExitError+0x3c>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 80082ce:	bf00      	nop
 80082d0:	3714      	adds	r7, #20
 80082d2:	46bd      	mov	sp, r7
 80082d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082d8:	4770      	bx	lr
 80082da:	bf00      	nop
 80082dc:	20000014 	.word	0x20000014

080082e0 <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
 80082e0:	4b07      	ldr	r3, [pc, #28]	; (8008300 <pxCurrentTCBConst2>)
 80082e2:	6819      	ldr	r1, [r3, #0]
 80082e4:	6808      	ldr	r0, [r1, #0]
 80082e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082ea:	f380 8809 	msr	PSP, r0
 80082ee:	f3bf 8f6f 	isb	sy
 80082f2:	f04f 0000 	mov.w	r0, #0
 80082f6:	f380 8811 	msr	BASEPRI, r0
 80082fa:	4770      	bx	lr
 80082fc:	f3af 8000 	nop.w

08008300 <pxCurrentTCBConst2>:
 8008300:	20008858 	.word	0x20008858
					"	bx r14							\n"
					"									\n"
					"	.align 4						\n"
					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
				);
}
 8008304:	bf00      	nop
 8008306:	bf00      	nop

08008308 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008308:	4808      	ldr	r0, [pc, #32]	; (800832c <prvPortStartFirstTask+0x24>)
 800830a:	6800      	ldr	r0, [r0, #0]
 800830c:	6800      	ldr	r0, [r0, #0]
 800830e:	f380 8808 	msr	MSP, r0
 8008312:	f04f 0000 	mov.w	r0, #0
 8008316:	f380 8814 	msr	CONTROL, r0
 800831a:	b662      	cpsie	i
 800831c:	b661      	cpsie	f
 800831e:	f3bf 8f4f 	dsb	sy
 8008322:	f3bf 8f6f 	isb	sy
 8008326:	df00      	svc	0
 8008328:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800832a:	bf00      	nop
 800832c:	e000ed08 	.word	0xe000ed08

08008330 <xPortStartScheduler>:

/*
 * See header file for description.
 */
BaseType_t xPortStartScheduler( void )
{
 8008330:	b580      	push	{r7, lr}
 8008332:	b086      	sub	sp, #24
 8008334:	af00      	add	r7, sp, #0
	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );

	/* This port can be used on all revisions of the Cortex-M7 core other than
	the r0p1 parts.  r0p1 parts should use the port from the
	/source/portable/GCC/ARM_CM7/r0p1 directory. */
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008336:	4b44      	ldr	r3, [pc, #272]	; (8008448 <xPortStartScheduler+0x118>)
 8008338:	681b      	ldr	r3, [r3, #0]
 800833a:	4a44      	ldr	r2, [pc, #272]	; (800844c <xPortStartScheduler+0x11c>)
 800833c:	4293      	cmp	r3, r2
 800833e:	d109      	bne.n	8008354 <xPortStartScheduler+0x24>
 8008340:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008344:	f383 8811 	msr	BASEPRI, r3
 8008348:	f3bf 8f6f 	isb	sy
 800834c:	f3bf 8f4f 	dsb	sy
 8008350:	613b      	str	r3, [r7, #16]
 8008352:	e7fe      	b.n	8008352 <xPortStartScheduler+0x22>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008354:	4b3c      	ldr	r3, [pc, #240]	; (8008448 <xPortStartScheduler+0x118>)
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	4a3d      	ldr	r2, [pc, #244]	; (8008450 <xPortStartScheduler+0x120>)
 800835a:	4293      	cmp	r3, r2
 800835c:	d109      	bne.n	8008372 <xPortStartScheduler+0x42>
 800835e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008362:	f383 8811 	msr	BASEPRI, r3
 8008366:	f3bf 8f6f 	isb	sy
 800836a:	f3bf 8f4f 	dsb	sy
 800836e:	60fb      	str	r3, [r7, #12]
 8008370:	e7fe      	b.n	8008370 <xPortStartScheduler+0x40>

	#if( configASSERT_DEFINED == 1 )
	{
		volatile uint32_t ulOriginalPriority;
		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_IP_REGISTERS_OFFSET_16 + portFIRST_USER_INTERRUPT_NUMBER );
 8008372:	4b38      	ldr	r3, [pc, #224]	; (8008454 <xPortStartScheduler+0x124>)
 8008374:	617b      	str	r3, [r7, #20]
		functions can be called.  ISR safe functions are those that end in
		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
		ensure interrupt entry is as fast and simple as possible.

		Save the interrupt priority value that is about to be clobbered. */
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008376:	697b      	ldr	r3, [r7, #20]
 8008378:	781b      	ldrb	r3, [r3, #0]
 800837a:	b2db      	uxtb	r3, r3
 800837c:	607b      	str	r3, [r7, #4]

		/* Determine the number of priority bits available.  First write to all
		possible bits. */
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800837e:	697b      	ldr	r3, [r7, #20]
 8008380:	22ff      	movs	r2, #255	; 0xff
 8008382:	701a      	strb	r2, [r3, #0]

		/* Read the value back to see how many bits stuck. */
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008384:	697b      	ldr	r3, [r7, #20]
 8008386:	781b      	ldrb	r3, [r3, #0]
 8008388:	b2db      	uxtb	r3, r3
 800838a:	70fb      	strb	r3, [r7, #3]

		/* Use the same mask on the maximum system call priority. */
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800838c:	78fb      	ldrb	r3, [r7, #3]
 800838e:	b2db      	uxtb	r3, r3
 8008390:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008394:	b2da      	uxtb	r2, r3
 8008396:	4b30      	ldr	r3, [pc, #192]	; (8008458 <xPortStartScheduler+0x128>)
 8008398:	701a      	strb	r2, [r3, #0]

		/* Calculate the maximum acceptable priority group value for the number
		of bits read back. */
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800839a:	4b30      	ldr	r3, [pc, #192]	; (800845c <xPortStartScheduler+0x12c>)
 800839c:	2207      	movs	r2, #7
 800839e:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80083a0:	e009      	b.n	80083b6 <xPortStartScheduler+0x86>
		{
			ulMaxPRIGROUPValue--;
 80083a2:	4b2e      	ldr	r3, [pc, #184]	; (800845c <xPortStartScheduler+0x12c>)
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	3b01      	subs	r3, #1
 80083a8:	4a2c      	ldr	r2, [pc, #176]	; (800845c <xPortStartScheduler+0x12c>)
 80083aa:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80083ac:	78fb      	ldrb	r3, [r7, #3]
 80083ae:	b2db      	uxtb	r3, r3
 80083b0:	005b      	lsls	r3, r3, #1
 80083b2:	b2db      	uxtb	r3, r3
 80083b4:	70fb      	strb	r3, [r7, #3]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80083b6:	78fb      	ldrb	r3, [r7, #3]
 80083b8:	b2db      	uxtb	r3, r3
 80083ba:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80083be:	2b80      	cmp	r3, #128	; 0x80
 80083c0:	d0ef      	beq.n	80083a2 <xPortStartScheduler+0x72>
		#ifdef configPRIO_BITS
		{
			/* Check the FreeRTOS configuration that defines the number of
			priority bits matches the number of priority bits actually queried
			from the hardware. */
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80083c2:	4b26      	ldr	r3, [pc, #152]	; (800845c <xPortStartScheduler+0x12c>)
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	f1c3 0307 	rsb	r3, r3, #7
 80083ca:	2b04      	cmp	r3, #4
 80083cc:	d009      	beq.n	80083e2 <xPortStartScheduler+0xb2>
 80083ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083d2:	f383 8811 	msr	BASEPRI, r3
 80083d6:	f3bf 8f6f 	isb	sy
 80083da:	f3bf 8f4f 	dsb	sy
 80083de:	60bb      	str	r3, [r7, #8]
 80083e0:	e7fe      	b.n	80083e0 <xPortStartScheduler+0xb0>
		}
		#endif

		/* Shift the priority group value back to its position within the AIRCR
		register. */
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 80083e2:	4b1e      	ldr	r3, [pc, #120]	; (800845c <xPortStartScheduler+0x12c>)
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	021b      	lsls	r3, r3, #8
 80083e8:	4a1c      	ldr	r2, [pc, #112]	; (800845c <xPortStartScheduler+0x12c>)
 80083ea:	6013      	str	r3, [r2, #0]
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80083ec:	4b1b      	ldr	r3, [pc, #108]	; (800845c <xPortStartScheduler+0x12c>)
 80083ee:	681b      	ldr	r3, [r3, #0]
 80083f0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80083f4:	4a19      	ldr	r2, [pc, #100]	; (800845c <xPortStartScheduler+0x12c>)
 80083f6:	6013      	str	r3, [r2, #0]

		/* Restore the clobbered interrupt priority register to its original
		value. */
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	b2da      	uxtb	r2, r3
 80083fc:	697b      	ldr	r3, [r7, #20]
 80083fe:	701a      	strb	r2, [r3, #0]
	}
	#endif /* conifgASSERT_DEFINED */

	/* Make PendSV and SysTick the lowest priority interrupts. */
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008400:	4b17      	ldr	r3, [pc, #92]	; (8008460 <xPortStartScheduler+0x130>)
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	4a16      	ldr	r2, [pc, #88]	; (8008460 <xPortStartScheduler+0x130>)
 8008406:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800840a:	6013      	str	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800840c:	4b14      	ldr	r3, [pc, #80]	; (8008460 <xPortStartScheduler+0x130>)
 800840e:	681b      	ldr	r3, [r3, #0]
 8008410:	4a13      	ldr	r2, [pc, #76]	; (8008460 <xPortStartScheduler+0x130>)
 8008412:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008416:	6013      	str	r3, [r2, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
 8008418:	f000 f8d6 	bl	80085c8 <vPortSetupTimerInterrupt>

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
 800841c:	4b11      	ldr	r3, [pc, #68]	; (8008464 <xPortStartScheduler+0x134>)
 800841e:	2200      	movs	r2, #0
 8008420:	601a      	str	r2, [r3, #0]

	/* Ensure the VFP is enabled - it should be anyway. */
	vPortEnableVFP();
 8008422:	f000 f8f5 	bl	8008610 <vPortEnableVFP>

	/* Lazy save always. */
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008426:	4b10      	ldr	r3, [pc, #64]	; (8008468 <xPortStartScheduler+0x138>)
 8008428:	681b      	ldr	r3, [r3, #0]
 800842a:	4a0f      	ldr	r2, [pc, #60]	; (8008468 <xPortStartScheduler+0x138>)
 800842c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008430:	6013      	str	r3, [r2, #0]

	/* Start the first task. */
	prvPortStartFirstTask();
 8008432:	f7ff ff69 	bl	8008308 <prvPortStartFirstTask>
	exit error function to prevent compiler warnings about a static function
	not being called in the case that the application writer overrides this
	functionality by defining configTASK_RETURN_ADDRESS.  Call
	vTaskSwitchContext() so link time optimisation does not remove the
	symbol. */
	vTaskSwitchContext();
 8008436:	f001 fa21 	bl	800987c <vTaskSwitchContext>
	prvTaskExitError();
 800843a:	f7ff ff27 	bl	800828c <prvTaskExitError>

	/* Should not get here! */
	return 0;
 800843e:	2300      	movs	r3, #0
}
 8008440:	4618      	mov	r0, r3
 8008442:	3718      	adds	r7, #24
 8008444:	46bd      	mov	sp, r7
 8008446:	bd80      	pop	{r7, pc}
 8008448:	e000ed00 	.word	0xe000ed00
 800844c:	410fc271 	.word	0x410fc271
 8008450:	410fc270 	.word	0x410fc270
 8008454:	e000e400 	.word	0xe000e400
 8008458:	20008850 	.word	0x20008850
 800845c:	20008854 	.word	0x20008854
 8008460:	e000ed20 	.word	0xe000ed20
 8008464:	20000014 	.word	0x20000014
 8008468:	e000ef34 	.word	0xe000ef34

0800846c <vPortEnterCritical>:
	configASSERT( uxCriticalNesting == 1000UL );
}
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
 800846c:	b480      	push	{r7}
 800846e:	b083      	sub	sp, #12
 8008470:	af00      	add	r7, sp, #0
 8008472:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008476:	f383 8811 	msr	BASEPRI, r3
 800847a:	f3bf 8f6f 	isb	sy
 800847e:	f3bf 8f4f 	dsb	sy
 8008482:	607b      	str	r3, [r7, #4]
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
 8008484:	4b0e      	ldr	r3, [pc, #56]	; (80084c0 <vPortEnterCritical+0x54>)
 8008486:	681b      	ldr	r3, [r3, #0]
 8008488:	3301      	adds	r3, #1
 800848a:	4a0d      	ldr	r2, [pc, #52]	; (80084c0 <vPortEnterCritical+0x54>)
 800848c:	6013      	str	r3, [r2, #0]
	/* This is not the interrupt safe version of the enter critical function so
	assert() if it is being called from an interrupt context.  Only API
	functions that end in "FromISR" can be used in an interrupt.  Only assert if
	the critical nesting count is 1 to protect against recursive calls if the
	assert function also uses a critical section. */
	if( uxCriticalNesting == 1 )
 800848e:	4b0c      	ldr	r3, [pc, #48]	; (80084c0 <vPortEnterCritical+0x54>)
 8008490:	681b      	ldr	r3, [r3, #0]
 8008492:	2b01      	cmp	r3, #1
 8008494:	d10e      	bne.n	80084b4 <vPortEnterCritical+0x48>
	{
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008496:	4b0b      	ldr	r3, [pc, #44]	; (80084c4 <vPortEnterCritical+0x58>)
 8008498:	681b      	ldr	r3, [r3, #0]
 800849a:	b2db      	uxtb	r3, r3
 800849c:	2b00      	cmp	r3, #0
 800849e:	d009      	beq.n	80084b4 <vPortEnterCritical+0x48>
 80084a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084a4:	f383 8811 	msr	BASEPRI, r3
 80084a8:	f3bf 8f6f 	isb	sy
 80084ac:	f3bf 8f4f 	dsb	sy
 80084b0:	603b      	str	r3, [r7, #0]
 80084b2:	e7fe      	b.n	80084b2 <vPortEnterCritical+0x46>
	}
}
 80084b4:	bf00      	nop
 80084b6:	370c      	adds	r7, #12
 80084b8:	46bd      	mov	sp, r7
 80084ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084be:	4770      	bx	lr
 80084c0:	20000014 	.word	0x20000014
 80084c4:	e000ed04 	.word	0xe000ed04

080084c8 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
 80084c8:	b480      	push	{r7}
 80084ca:	b083      	sub	sp, #12
 80084cc:	af00      	add	r7, sp, #0
	configASSERT( uxCriticalNesting );
 80084ce:	4b11      	ldr	r3, [pc, #68]	; (8008514 <vPortExitCritical+0x4c>)
 80084d0:	681b      	ldr	r3, [r3, #0]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d109      	bne.n	80084ea <vPortExitCritical+0x22>
 80084d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084da:	f383 8811 	msr	BASEPRI, r3
 80084de:	f3bf 8f6f 	isb	sy
 80084e2:	f3bf 8f4f 	dsb	sy
 80084e6:	607b      	str	r3, [r7, #4]
 80084e8:	e7fe      	b.n	80084e8 <vPortExitCritical+0x20>
	uxCriticalNesting--;
 80084ea:	4b0a      	ldr	r3, [pc, #40]	; (8008514 <vPortExitCritical+0x4c>)
 80084ec:	681b      	ldr	r3, [r3, #0]
 80084ee:	3b01      	subs	r3, #1
 80084f0:	4a08      	ldr	r2, [pc, #32]	; (8008514 <vPortExitCritical+0x4c>)
 80084f2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80084f4:	4b07      	ldr	r3, [pc, #28]	; (8008514 <vPortExitCritical+0x4c>)
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	2b00      	cmp	r3, #0
 80084fa:	d104      	bne.n	8008506 <vPortExitCritical+0x3e>
 80084fc:	2300      	movs	r3, #0
 80084fe:	603b      	str	r3, [r7, #0]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008500:	683b      	ldr	r3, [r7, #0]
 8008502:	f383 8811 	msr	BASEPRI, r3
	{
		portENABLE_INTERRUPTS();
	}
}
 8008506:	bf00      	nop
 8008508:	370c      	adds	r7, #12
 800850a:	46bd      	mov	sp, r7
 800850c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008510:	4770      	bx	lr
 8008512:	bf00      	nop
 8008514:	20000014 	.word	0x20000014
	...

08008520 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
 8008520:	f3ef 8009 	mrs	r0, PSP
 8008524:	f3bf 8f6f 	isb	sy
 8008528:	4b15      	ldr	r3, [pc, #84]	; (8008580 <pxCurrentTCBConst>)
 800852a:	681a      	ldr	r2, [r3, #0]
 800852c:	f01e 0f10 	tst.w	lr, #16
 8008530:	bf08      	it	eq
 8008532:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008536:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800853a:	6010      	str	r0, [r2, #0]
 800853c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008540:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008544:	f380 8811 	msr	BASEPRI, r0
 8008548:	f3bf 8f4f 	dsb	sy
 800854c:	f3bf 8f6f 	isb	sy
 8008550:	f001 f994 	bl	800987c <vTaskSwitchContext>
 8008554:	f04f 0000 	mov.w	r0, #0
 8008558:	f380 8811 	msr	BASEPRI, r0
 800855c:	bc09      	pop	{r0, r3}
 800855e:	6819      	ldr	r1, [r3, #0]
 8008560:	6808      	ldr	r0, [r1, #0]
 8008562:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008566:	f01e 0f10 	tst.w	lr, #16
 800856a:	bf08      	it	eq
 800856c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008570:	f380 8809 	msr	PSP, r0
 8008574:	f3bf 8f6f 	isb	sy
 8008578:	4770      	bx	lr
 800857a:	bf00      	nop
 800857c:	f3af 8000 	nop.w

08008580 <pxCurrentTCBConst>:
 8008580:	20008858 	.word	0x20008858
	"										\n"
	"	.align 4							\n"
	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
	);
}
 8008584:	bf00      	nop
 8008586:	bf00      	nop

08008588 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
 8008588:	b580      	push	{r7, lr}
 800858a:	b082      	sub	sp, #8
 800858c:	af00      	add	r7, sp, #0
	__asm volatile
 800858e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008592:	f383 8811 	msr	BASEPRI, r3
 8008596:	f3bf 8f6f 	isb	sy
 800859a:	f3bf 8f4f 	dsb	sy
 800859e:	607b      	str	r3, [r7, #4]
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
 80085a0:	f001 f8b4 	bl	800970c <xTaskIncrementTick>
 80085a4:	4603      	mov	r3, r0
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d003      	beq.n	80085b2 <SysTick_Handler+0x2a>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80085aa:	4b06      	ldr	r3, [pc, #24]	; (80085c4 <SysTick_Handler+0x3c>)
 80085ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80085b0:	601a      	str	r2, [r3, #0]
 80085b2:	2300      	movs	r3, #0
 80085b4:	603b      	str	r3, [r7, #0]
	__asm volatile
 80085b6:	683b      	ldr	r3, [r7, #0]
 80085b8:	f383 8811 	msr	BASEPRI, r3
		}
	}
	portENABLE_INTERRUPTS();
}
 80085bc:	bf00      	nop
 80085be:	3708      	adds	r7, #8
 80085c0:	46bd      	mov	sp, r7
 80085c2:	bd80      	pop	{r7, pc}
 80085c4:	e000ed04 	.word	0xe000ed04

080085c8 <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
 80085c8:	b480      	push	{r7}
 80085ca:	af00      	add	r7, sp, #0
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Stop and clear the SysTick. */
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80085cc:	4b0b      	ldr	r3, [pc, #44]	; (80085fc <vPortSetupTimerInterrupt+0x34>)
 80085ce:	2200      	movs	r2, #0
 80085d0:	601a      	str	r2, [r3, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80085d2:	4b0b      	ldr	r3, [pc, #44]	; (8008600 <vPortSetupTimerInterrupt+0x38>)
 80085d4:	2200      	movs	r2, #0
 80085d6:	601a      	str	r2, [r3, #0]

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80085d8:	4b0a      	ldr	r3, [pc, #40]	; (8008604 <vPortSetupTimerInterrupt+0x3c>)
 80085da:	681b      	ldr	r3, [r3, #0]
 80085dc:	4a0a      	ldr	r2, [pc, #40]	; (8008608 <vPortSetupTimerInterrupt+0x40>)
 80085de:	fba2 2303 	umull	r2, r3, r2, r3
 80085e2:	099b      	lsrs	r3, r3, #6
 80085e4:	4a09      	ldr	r2, [pc, #36]	; (800860c <vPortSetupTimerInterrupt+0x44>)
 80085e6:	3b01      	subs	r3, #1
 80085e8:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80085ea:	4b04      	ldr	r3, [pc, #16]	; (80085fc <vPortSetupTimerInterrupt+0x34>)
 80085ec:	2207      	movs	r2, #7
 80085ee:	601a      	str	r2, [r3, #0]
}
 80085f0:	bf00      	nop
 80085f2:	46bd      	mov	sp, r7
 80085f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop
 80085fc:	e000e010 	.word	0xe000e010
 8008600:	e000e018 	.word	0xe000e018
 8008604:	20000008 	.word	0x20000008
 8008608:	10624dd3 	.word	0x10624dd3
 800860c:	e000e014 	.word	0xe000e014

08008610 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008610:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008620 <vPortEnableVFP+0x10>
 8008614:	6801      	ldr	r1, [r0, #0]
 8008616:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800861a:	6001      	str	r1, [r0, #0]
 800861c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800861e:	bf00      	nop
 8008620:	e000ed88 	.word	0xe000ed88

08008624 <vPortValidateInterruptPriority>:
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
 8008624:	b480      	push	{r7}
 8008626:	b085      	sub	sp, #20
 8008628:	af00      	add	r7, sp, #0
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800862a:	f3ef 8305 	mrs	r3, IPSR
 800862e:	60fb      	str	r3, [r7, #12]

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	2b0f      	cmp	r3, #15
 8008634:	d913      	bls.n	800865e <vPortValidateInterruptPriority+0x3a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008636:	4a16      	ldr	r2, [pc, #88]	; (8008690 <vPortValidateInterruptPriority+0x6c>)
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	4413      	add	r3, r2
 800863c:	781b      	ldrb	r3, [r3, #0]
 800863e:	72fb      	strb	r3, [r7, #11]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008640:	4b14      	ldr	r3, [pc, #80]	; (8008694 <vPortValidateInterruptPriority+0x70>)
 8008642:	781b      	ldrb	r3, [r3, #0]
 8008644:	7afa      	ldrb	r2, [r7, #11]
 8008646:	429a      	cmp	r2, r3
 8008648:	d209      	bcs.n	800865e <vPortValidateInterruptPriority+0x3a>
	__asm volatile
 800864a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800864e:	f383 8811 	msr	BASEPRI, r3
 8008652:	f3bf 8f6f 	isb	sy
 8008656:	f3bf 8f4f 	dsb	sy
 800865a:	607b      	str	r3, [r7, #4]
 800865c:	e7fe      	b.n	800865c <vPortValidateInterruptPriority+0x38>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800865e:	4b0e      	ldr	r3, [pc, #56]	; (8008698 <vPortValidateInterruptPriority+0x74>)
 8008660:	681b      	ldr	r3, [r3, #0]
 8008662:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8008666:	4b0d      	ldr	r3, [pc, #52]	; (800869c <vPortValidateInterruptPriority+0x78>)
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	429a      	cmp	r2, r3
 800866c:	d909      	bls.n	8008682 <vPortValidateInterruptPriority+0x5e>
 800866e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008672:	f383 8811 	msr	BASEPRI, r3
 8008676:	f3bf 8f6f 	isb	sy
 800867a:	f3bf 8f4f 	dsb	sy
 800867e:	603b      	str	r3, [r7, #0]
 8008680:	e7fe      	b.n	8008680 <vPortValidateInterruptPriority+0x5c>
	}
 8008682:	bf00      	nop
 8008684:	3714      	adds	r7, #20
 8008686:	46bd      	mov	sp, r7
 8008688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800868c:	4770      	bx	lr
 800868e:	bf00      	nop
 8008690:	e000e3f0 	.word	0xe000e3f0
 8008694:	20008850 	.word	0x20008850
 8008698:	e000ed0c 	.word	0xe000ed0c
 800869c:	20008854 	.word	0x20008854

080086a0 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
{
 80086a0:	b580      	push	{r7, lr}
 80086a2:	b084      	sub	sp, #16
 80086a4:	af00      	add	r7, sp, #0
 80086a6:	6078      	str	r0, [r7, #4]
 80086a8:	6039      	str	r1, [r7, #0]
Queue_t * const pxQueue = xQueue;
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	60fb      	str	r3, [r7, #12]

	configASSERT( pxQueue );
 80086ae:	68fb      	ldr	r3, [r7, #12]
 80086b0:	2b00      	cmp	r3, #0
 80086b2:	d109      	bne.n	80086c8 <xQueueGenericReset+0x28>
 80086b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086b8:	f383 8811 	msr	BASEPRI, r3
 80086bc:	f3bf 8f6f 	isb	sy
 80086c0:	f3bf 8f4f 	dsb	sy
 80086c4:	60bb      	str	r3, [r7, #8]
 80086c6:	e7fe      	b.n	80086c6 <xQueueGenericReset+0x26>

	taskENTER_CRITICAL();
 80086c8:	f7ff fed0 	bl	800846c <vPortEnterCritical>
	{
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086cc:	68fb      	ldr	r3, [r7, #12]
 80086ce:	681a      	ldr	r2, [r3, #0]
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80086d4:	68f9      	ldr	r1, [r7, #12]
 80086d6:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80086d8:	fb01 f303 	mul.w	r3, r1, r3
 80086dc:	441a      	add	r2, r3
 80086de:	68fb      	ldr	r3, [r7, #12]
 80086e0:	609a      	str	r2, [r3, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80086e2:	68fb      	ldr	r3, [r7, #12]
 80086e4:	2200      	movs	r2, #0
 80086e6:	639a      	str	r2, [r3, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80086e8:	68fb      	ldr	r3, [r7, #12]
 80086ea:	681a      	ldr	r2, [r3, #0]
 80086ec:	68fb      	ldr	r3, [r7, #12]
 80086ee:	605a      	str	r2, [r3, #4]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	681a      	ldr	r2, [r3, #0]
 80086f4:	68fb      	ldr	r3, [r7, #12]
 80086f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80086f8:	3b01      	subs	r3, #1
 80086fa:	68f9      	ldr	r1, [r7, #12]
 80086fc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80086fe:	fb01 f303 	mul.w	r3, r1, r3
 8008702:	441a      	add	r2, r3
 8008704:	68fb      	ldr	r3, [r7, #12]
 8008706:	60da      	str	r2, [r3, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8008708:	68fb      	ldr	r3, [r7, #12]
 800870a:	22ff      	movs	r2, #255	; 0xff
 800870c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	22ff      	movs	r2, #255	; 0xff
 8008714:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

		if( xNewQueue == pdFALSE )
 8008718:	683b      	ldr	r3, [r7, #0]
 800871a:	2b00      	cmp	r3, #0
 800871c:	d114      	bne.n	8008748 <xQueueGenericReset+0xa8>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800871e:	68fb      	ldr	r3, [r7, #12]
 8008720:	691b      	ldr	r3, [r3, #16]
 8008722:	2b00      	cmp	r3, #0
 8008724:	d01a      	beq.n	800875c <xQueueGenericReset+0xbc>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008726:	68fb      	ldr	r3, [r7, #12]
 8008728:	3310      	adds	r3, #16
 800872a:	4618      	mov	r0, r3
 800872c:	f001 f924 	bl	8009978 <xTaskRemoveFromEventList>
 8008730:	4603      	mov	r3, r0
 8008732:	2b00      	cmp	r3, #0
 8008734:	d012      	beq.n	800875c <xQueueGenericReset+0xbc>
				{
					queueYIELD_IF_USING_PREEMPTION();
 8008736:	4b0d      	ldr	r3, [pc, #52]	; (800876c <xQueueGenericReset+0xcc>)
 8008738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800873c:	601a      	str	r2, [r3, #0]
 800873e:	f3bf 8f4f 	dsb	sy
 8008742:	f3bf 8f6f 	isb	sy
 8008746:	e009      	b.n	800875c <xQueueGenericReset+0xbc>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	3310      	adds	r3, #16
 800874c:	4618      	mov	r0, r3
 800874e:	f7ff fcb5 	bl	80080bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	3324      	adds	r3, #36	; 0x24
 8008756:	4618      	mov	r0, r3
 8008758:	f7ff fcb0 	bl	80080bc <vListInitialise>
		}
	}
	taskEXIT_CRITICAL();
 800875c:	f7ff feb4 	bl	80084c8 <vPortExitCritical>

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
 8008760:	2301      	movs	r3, #1
}
 8008762:	4618      	mov	r0, r3
 8008764:	3710      	adds	r7, #16
 8008766:	46bd      	mov	sp, r7
 8008768:	bd80      	pop	{r7, pc}
 800876a:	bf00      	nop
 800876c:	e000ed04 	.word	0xe000ed04

08008770 <xQueueGenericCreateStatic>:
/*-----------------------------------------------------------*/

#if( configSUPPORT_STATIC_ALLOCATION == 1 )

	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType )
	{
 8008770:	b580      	push	{r7, lr}
 8008772:	b08e      	sub	sp, #56	; 0x38
 8008774:	af02      	add	r7, sp, #8
 8008776:	60f8      	str	r0, [r7, #12]
 8008778:	60b9      	str	r1, [r7, #8]
 800877a:	607a      	str	r2, [r7, #4]
 800877c:	603b      	str	r3, [r7, #0]
	Queue_t *pxNewQueue;

		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800877e:	68fb      	ldr	r3, [r7, #12]
 8008780:	2b00      	cmp	r3, #0
 8008782:	d109      	bne.n	8008798 <xQueueGenericCreateStatic+0x28>
 8008784:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008788:	f383 8811 	msr	BASEPRI, r3
 800878c:	f3bf 8f6f 	isb	sy
 8008790:	f3bf 8f4f 	dsb	sy
 8008794:	62bb      	str	r3, [r7, #40]	; 0x28
 8008796:	e7fe      	b.n	8008796 <xQueueGenericCreateStatic+0x26>

		/* The StaticQueue_t structure and the queue storage area must be
		supplied. */
		configASSERT( pxStaticQueue != NULL );
 8008798:	683b      	ldr	r3, [r7, #0]
 800879a:	2b00      	cmp	r3, #0
 800879c:	d109      	bne.n	80087b2 <xQueueGenericCreateStatic+0x42>
 800879e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087a2:	f383 8811 	msr	BASEPRI, r3
 80087a6:	f3bf 8f6f 	isb	sy
 80087aa:	f3bf 8f4f 	dsb	sy
 80087ae:	627b      	str	r3, [r7, #36]	; 0x24
 80087b0:	e7fe      	b.n	80087b0 <xQueueGenericCreateStatic+0x40>

		/* A queue storage area should be provided if the item size is not 0, and
		should not be provided if the item size is 0. */
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	2b00      	cmp	r3, #0
 80087b6:	d002      	beq.n	80087be <xQueueGenericCreateStatic+0x4e>
 80087b8:	68bb      	ldr	r3, [r7, #8]
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	d001      	beq.n	80087c2 <xQueueGenericCreateStatic+0x52>
 80087be:	2301      	movs	r3, #1
 80087c0:	e000      	b.n	80087c4 <xQueueGenericCreateStatic+0x54>
 80087c2:	2300      	movs	r3, #0
 80087c4:	2b00      	cmp	r3, #0
 80087c6:	d109      	bne.n	80087dc <xQueueGenericCreateStatic+0x6c>
 80087c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087cc:	f383 8811 	msr	BASEPRI, r3
 80087d0:	f3bf 8f6f 	isb	sy
 80087d4:	f3bf 8f4f 	dsb	sy
 80087d8:	623b      	str	r3, [r7, #32]
 80087da:	e7fe      	b.n	80087da <xQueueGenericCreateStatic+0x6a>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	2b00      	cmp	r3, #0
 80087e0:	d102      	bne.n	80087e8 <xQueueGenericCreateStatic+0x78>
 80087e2:	68bb      	ldr	r3, [r7, #8]
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	d101      	bne.n	80087ec <xQueueGenericCreateStatic+0x7c>
 80087e8:	2301      	movs	r3, #1
 80087ea:	e000      	b.n	80087ee <xQueueGenericCreateStatic+0x7e>
 80087ec:	2300      	movs	r3, #0
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	d109      	bne.n	8008806 <xQueueGenericCreateStatic+0x96>
 80087f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087f6:	f383 8811 	msr	BASEPRI, r3
 80087fa:	f3bf 8f6f 	isb	sy
 80087fe:	f3bf 8f4f 	dsb	sy
 8008802:	61fb      	str	r3, [r7, #28]
 8008804:	e7fe      	b.n	8008804 <xQueueGenericCreateStatic+0x94>
		#if( configASSERT_DEFINED == 1 )
		{
			/* Sanity check that the size of the structure used to declare a
			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
			the real queue and semaphore structures. */
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008806:	2348      	movs	r3, #72	; 0x48
 8008808:	617b      	str	r3, [r7, #20]
			configASSERT( xSize == sizeof( Queue_t ) );
 800880a:	697b      	ldr	r3, [r7, #20]
 800880c:	2b48      	cmp	r3, #72	; 0x48
 800880e:	d009      	beq.n	8008824 <xQueueGenericCreateStatic+0xb4>
 8008810:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008814:	f383 8811 	msr	BASEPRI, r3
 8008818:	f3bf 8f6f 	isb	sy
 800881c:	f3bf 8f4f 	dsb	sy
 8008820:	61bb      	str	r3, [r7, #24]
 8008822:	e7fe      	b.n	8008822 <xQueueGenericCreateStatic+0xb2>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008824:	697b      	ldr	r3, [r7, #20]
		#endif /* configASSERT_DEFINED */

		/* The address of a statically allocated queue was passed in, use it.
		The address of a statically allocated storage area was also passed in
		but is already set. */
		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structures are designed to have the same alignment, and the size is checked by an assert. */
 8008826:	683b      	ldr	r3, [r7, #0]
 8008828:	62fb      	str	r3, [r7, #44]	; 0x2c

		if( pxNewQueue != NULL )
 800882a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800882c:	2b00      	cmp	r3, #0
 800882e:	d00d      	beq.n	800884c <xQueueGenericCreateStatic+0xdc>
			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
			{
				/* Queues can be allocated wither statically or dynamically, so
				note this queue was allocated statically in case the queue is
				later deleted. */
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008830:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008832:	2201      	movs	r2, #1
 8008834:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
			}
			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */

			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 8008838:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800883c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800883e:	9300      	str	r3, [sp, #0]
 8008840:	4613      	mov	r3, r2
 8008842:	687a      	ldr	r2, [r7, #4]
 8008844:	68b9      	ldr	r1, [r7, #8]
 8008846:	68f8      	ldr	r0, [r7, #12]
 8008848:	f000 f844 	bl	80088d4 <prvInitialiseNewQueue>
		{
			traceQUEUE_CREATE_FAILED( ucQueueType );
			mtCOVERAGE_TEST_MARKER();
		}

		return pxNewQueue;
 800884c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
	}
 800884e:	4618      	mov	r0, r3
 8008850:	3730      	adds	r7, #48	; 0x30
 8008852:	46bd      	mov	sp, r7
 8008854:	bd80      	pop	{r7, pc}

08008856 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )

	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType )
	{
 8008856:	b580      	push	{r7, lr}
 8008858:	b08a      	sub	sp, #40	; 0x28
 800885a:	af02      	add	r7, sp, #8
 800885c:	60f8      	str	r0, [r7, #12]
 800885e:	60b9      	str	r1, [r7, #8]
 8008860:	4613      	mov	r3, r2
 8008862:	71fb      	strb	r3, [r7, #7]
	Queue_t *pxNewQueue;
	size_t xQueueSizeInBytes;
	uint8_t *pucQueueStorage;

		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008864:	68fb      	ldr	r3, [r7, #12]
 8008866:	2b00      	cmp	r3, #0
 8008868:	d109      	bne.n	800887e <xQueueGenericCreate+0x28>
 800886a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800886e:	f383 8811 	msr	BASEPRI, r3
 8008872:	f3bf 8f6f 	isb	sy
 8008876:	f3bf 8f4f 	dsb	sy
 800887a:	613b      	str	r3, [r7, #16]
 800887c:	e7fe      	b.n	800887c <xQueueGenericCreate+0x26>

		if( uxItemSize == ( UBaseType_t ) 0 )
 800887e:	68bb      	ldr	r3, [r7, #8]
 8008880:	2b00      	cmp	r3, #0
 8008882:	d102      	bne.n	800888a <xQueueGenericCreate+0x34>
		{
			/* There is not going to be a queue storage area. */
			xQueueSizeInBytes = ( size_t ) 0;
 8008884:	2300      	movs	r3, #0
 8008886:	61fb      	str	r3, [r7, #28]
 8008888:	e004      	b.n	8008894 <xQueueGenericCreate+0x3e>
		}
		else
		{
			/* Allocate enough space to hold the maximum number of items that
			can be in the queue at any time. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800888a:	68fb      	ldr	r3, [r7, #12]
 800888c:	68ba      	ldr	r2, [r7, #8]
 800888e:	fb02 f303 	mul.w	r3, r2, r3
 8008892:	61fb      	str	r3, [r7, #28]
		alignment requirements of the Queue_t structure - which in this case
		is an int8_t *.  Therefore, whenever the stack alignment requirements
		are greater than or equal to the pointer to char requirements the cast
		is safe.  In other cases alignment requirements are not strict (one or
		two bytes). */
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008894:	69fb      	ldr	r3, [r7, #28]
 8008896:	3348      	adds	r3, #72	; 0x48
 8008898:	4618      	mov	r0, r3
 800889a:	f7ff fa39 	bl	8007d10 <pvPortMalloc>
 800889e:	61b8      	str	r0, [r7, #24]

		if( pxNewQueue != NULL )
 80088a0:	69bb      	ldr	r3, [r7, #24]
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d011      	beq.n	80088ca <xQueueGenericCreate+0x74>
		{
			/* Jump past the queue structure to find the location of the queue
			storage area. */
			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 80088a6:	69bb      	ldr	r3, [r7, #24]
 80088a8:	617b      	str	r3, [r7, #20]
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80088aa:	697b      	ldr	r3, [r7, #20]
 80088ac:	3348      	adds	r3, #72	; 0x48
 80088ae:	617b      	str	r3, [r7, #20]
			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
			{
				/* Queues can be created either statically or dynamically, so
				note this task was created dynamically in case it is later
				deleted. */
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80088b0:	69bb      	ldr	r3, [r7, #24]
 80088b2:	2200      	movs	r2, #0
 80088b4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
			}
			#endif /* configSUPPORT_STATIC_ALLOCATION */

			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 80088b8:	79fa      	ldrb	r2, [r7, #7]
 80088ba:	69bb      	ldr	r3, [r7, #24]
 80088bc:	9300      	str	r3, [sp, #0]
 80088be:	4613      	mov	r3, r2
 80088c0:	697a      	ldr	r2, [r7, #20]
 80088c2:	68b9      	ldr	r1, [r7, #8]
 80088c4:	68f8      	ldr	r0, [r7, #12]
 80088c6:	f000 f805 	bl	80088d4 <prvInitialiseNewQueue>
		{
			traceQUEUE_CREATE_FAILED( ucQueueType );
			mtCOVERAGE_TEST_MARKER();
		}

		return pxNewQueue;
 80088ca:	69bb      	ldr	r3, [r7, #24]
	}
 80088cc:	4618      	mov	r0, r3
 80088ce:	3720      	adds	r7, #32
 80088d0:	46bd      	mov	sp, r7
 80088d2:	bd80      	pop	{r7, pc}

080088d4 <prvInitialiseNewQueue>:

#endif /* configSUPPORT_STATIC_ALLOCATION */
/*-----------------------------------------------------------*/

static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, const uint8_t ucQueueType, Queue_t *pxNewQueue )
{
 80088d4:	b580      	push	{r7, lr}
 80088d6:	b084      	sub	sp, #16
 80088d8:	af00      	add	r7, sp, #0
 80088da:	60f8      	str	r0, [r7, #12]
 80088dc:	60b9      	str	r1, [r7, #8]
 80088de:	607a      	str	r2, [r7, #4]
 80088e0:	70fb      	strb	r3, [r7, #3]
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	if( uxItemSize == ( UBaseType_t ) 0 )
 80088e2:	68bb      	ldr	r3, [r7, #8]
 80088e4:	2b00      	cmp	r3, #0
 80088e6:	d103      	bne.n	80088f0 <prvInitialiseNewQueue+0x1c>
	{
		/* No RAM was allocated for the queue storage area, but PC head cannot
		be set to NULL because NULL is used as a key to say the queue is used as
		a mutex.  Therefore just set pcHead to point to the queue as a benign
		value that is known to be within the memory map. */
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80088e8:	69bb      	ldr	r3, [r7, #24]
 80088ea:	69ba      	ldr	r2, [r7, #24]
 80088ec:	601a      	str	r2, [r3, #0]
 80088ee:	e002      	b.n	80088f6 <prvInitialiseNewQueue+0x22>
	}
	else
	{
		/* Set the head to the start of the queue storage area. */
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 80088f0:	69bb      	ldr	r3, [r7, #24]
 80088f2:	687a      	ldr	r2, [r7, #4]
 80088f4:	601a      	str	r2, [r3, #0]
	}

	/* Initialise the queue members as described where the queue type is
	defined. */
	pxNewQueue->uxLength = uxQueueLength;
 80088f6:	69bb      	ldr	r3, [r7, #24]
 80088f8:	68fa      	ldr	r2, [r7, #12]
 80088fa:	63da      	str	r2, [r3, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
 80088fc:	69bb      	ldr	r3, [r7, #24]
 80088fe:	68ba      	ldr	r2, [r7, #8]
 8008900:	641a      	str	r2, [r3, #64]	; 0x40
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008902:	2101      	movs	r1, #1
 8008904:	69b8      	ldr	r0, [r7, #24]
 8008906:	f7ff fecb 	bl	80086a0 <xQueueGenericReset>
		pxNewQueue->pxQueueSetContainer = NULL;
	}
	#endif /* configUSE_QUEUE_SETS */

	traceQUEUE_CREATE( pxNewQueue );
}
 800890a:	bf00      	nop
 800890c:	3710      	adds	r7, #16
 800890e:	46bd      	mov	sp, r7
 8008910:	bd80      	pop	{r7, pc}
	...

08008914 <xQueueGenericSend>:

#endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) */
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition )
{
 8008914:	b580      	push	{r7, lr}
 8008916:	b08e      	sub	sp, #56	; 0x38
 8008918:	af00      	add	r7, sp, #0
 800891a:	60f8      	str	r0, [r7, #12]
 800891c:	60b9      	str	r1, [r7, #8]
 800891e:	607a      	str	r2, [r7, #4]
 8008920:	603b      	str	r3, [r7, #0]
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 8008922:	2300      	movs	r3, #0
 8008924:	637b      	str	r3, [r7, #52]	; 0x34
TimeOut_t xTimeOut;
Queue_t * const pxQueue = xQueue;
 8008926:	68fb      	ldr	r3, [r7, #12]
 8008928:	633b      	str	r3, [r7, #48]	; 0x30

	configASSERT( pxQueue );
 800892a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800892c:	2b00      	cmp	r3, #0
 800892e:	d109      	bne.n	8008944 <xQueueGenericSend+0x30>
 8008930:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008934:	f383 8811 	msr	BASEPRI, r3
 8008938:	f3bf 8f6f 	isb	sy
 800893c:	f3bf 8f4f 	dsb	sy
 8008940:	62bb      	str	r3, [r7, #40]	; 0x28
 8008942:	e7fe      	b.n	8008942 <xQueueGenericSend+0x2e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008944:	68bb      	ldr	r3, [r7, #8]
 8008946:	2b00      	cmp	r3, #0
 8008948:	d103      	bne.n	8008952 <xQueueGenericSend+0x3e>
 800894a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800894c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800894e:	2b00      	cmp	r3, #0
 8008950:	d101      	bne.n	8008956 <xQueueGenericSend+0x42>
 8008952:	2301      	movs	r3, #1
 8008954:	e000      	b.n	8008958 <xQueueGenericSend+0x44>
 8008956:	2300      	movs	r3, #0
 8008958:	2b00      	cmp	r3, #0
 800895a:	d109      	bne.n	8008970 <xQueueGenericSend+0x5c>
 800895c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008960:	f383 8811 	msr	BASEPRI, r3
 8008964:	f3bf 8f6f 	isb	sy
 8008968:	f3bf 8f4f 	dsb	sy
 800896c:	627b      	str	r3, [r7, #36]	; 0x24
 800896e:	e7fe      	b.n	800896e <xQueueGenericSend+0x5a>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008970:	683b      	ldr	r3, [r7, #0]
 8008972:	2b02      	cmp	r3, #2
 8008974:	d103      	bne.n	800897e <xQueueGenericSend+0x6a>
 8008976:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008978:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800897a:	2b01      	cmp	r3, #1
 800897c:	d101      	bne.n	8008982 <xQueueGenericSend+0x6e>
 800897e:	2301      	movs	r3, #1
 8008980:	e000      	b.n	8008984 <xQueueGenericSend+0x70>
 8008982:	2300      	movs	r3, #0
 8008984:	2b00      	cmp	r3, #0
 8008986:	d109      	bne.n	800899c <xQueueGenericSend+0x88>
 8008988:	f04f 0350 	mov.w	r3, #80	; 0x50
 800898c:	f383 8811 	msr	BASEPRI, r3
 8008990:	f3bf 8f6f 	isb	sy
 8008994:	f3bf 8f4f 	dsb	sy
 8008998:	623b      	str	r3, [r7, #32]
 800899a:	e7fe      	b.n	800899a <xQueueGenericSend+0x86>
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800899c:	f001 f9a2 	bl	8009ce4 <xTaskGetSchedulerState>
 80089a0:	4603      	mov	r3, r0
 80089a2:	2b00      	cmp	r3, #0
 80089a4:	d102      	bne.n	80089ac <xQueueGenericSend+0x98>
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	2b00      	cmp	r3, #0
 80089aa:	d101      	bne.n	80089b0 <xQueueGenericSend+0x9c>
 80089ac:	2301      	movs	r3, #1
 80089ae:	e000      	b.n	80089b2 <xQueueGenericSend+0x9e>
 80089b0:	2300      	movs	r3, #0
 80089b2:	2b00      	cmp	r3, #0
 80089b4:	d109      	bne.n	80089ca <xQueueGenericSend+0xb6>
 80089b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089ba:	f383 8811 	msr	BASEPRI, r3
 80089be:	f3bf 8f6f 	isb	sy
 80089c2:	f3bf 8f4f 	dsb	sy
 80089c6:	61fb      	str	r3, [r7, #28]
 80089c8:	e7fe      	b.n	80089c8 <xQueueGenericSend+0xb4>
	/*lint -save -e904 This function relaxes the coding standard somewhat to
	allow return statements within the function itself.  This is done in the
	interest of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
 80089ca:	f7ff fd4f 	bl	800846c <vPortEnterCritical>
		{
			/* Is there room on the queue now?  The running task must be the
			highest priority task wanting to access the queue.  If the head item
			in the queue is to be overwritten then it does not matter if the
			queue is full. */
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80089ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80089d0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80089d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80089d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80089d6:	429a      	cmp	r2, r3
 80089d8:	d302      	bcc.n	80089e0 <xQueueGenericSend+0xcc>
 80089da:	683b      	ldr	r3, [r7, #0]
 80089dc:	2b02      	cmp	r3, #2
 80089de:	d129      	bne.n	8008a34 <xQueueGenericSend+0x120>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80089e0:	683a      	ldr	r2, [r7, #0]
 80089e2:	68b9      	ldr	r1, [r7, #8]
 80089e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80089e6:	f000 fab6 	bl	8008f56 <prvCopyDataToQueue>
 80089ea:	62f8      	str	r0, [r7, #44]	; 0x2c

					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80089ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80089ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80089f0:	2b00      	cmp	r3, #0
 80089f2:	d010      	beq.n	8008a16 <xQueueGenericSend+0x102>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80089f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80089f6:	3324      	adds	r3, #36	; 0x24
 80089f8:	4618      	mov	r0, r3
 80089fa:	f000 ffbd 	bl	8009978 <xTaskRemoveFromEventList>
 80089fe:	4603      	mov	r3, r0
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d013      	beq.n	8008a2c <xQueueGenericSend+0x118>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							queueYIELD_IF_USING_PREEMPTION();
 8008a04:	4b3f      	ldr	r3, [pc, #252]	; (8008b04 <xQueueGenericSend+0x1f0>)
 8008a06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a0a:	601a      	str	r2, [r3, #0]
 8008a0c:	f3bf 8f4f 	dsb	sy
 8008a10:	f3bf 8f6f 	isb	sy
 8008a14:	e00a      	b.n	8008a2c <xQueueGenericSend+0x118>
						else
						{
							mtCOVERAGE_TEST_MARKER();
						}
					}
					else if( xYieldRequired != pdFALSE )
 8008a16:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008a18:	2b00      	cmp	r3, #0
 8008a1a:	d007      	beq.n	8008a2c <xQueueGenericSend+0x118>
					{
						/* This path is a special case that will only get
						executed if the task was holding multiple mutexes and
						the mutexes were given back in an order that is
						different to that in which they were taken. */
						queueYIELD_IF_USING_PREEMPTION();
 8008a1c:	4b39      	ldr	r3, [pc, #228]	; (8008b04 <xQueueGenericSend+0x1f0>)
 8008a1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a22:	601a      	str	r2, [r3, #0]
 8008a24:	f3bf 8f4f 	dsb	sy
 8008a28:	f3bf 8f6f 	isb	sy
						mtCOVERAGE_TEST_MARKER();
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
 8008a2c:	f7ff fd4c 	bl	80084c8 <vPortExitCritical>
				return pdPASS;
 8008a30:	2301      	movs	r3, #1
 8008a32:	e063      	b.n	8008afc <xQueueGenericSend+0x1e8>
			}
			else
			{
				if( xTicksToWait == ( TickType_t ) 0 )
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	2b00      	cmp	r3, #0
 8008a38:	d103      	bne.n	8008a42 <xQueueGenericSend+0x12e>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
 8008a3a:	f7ff fd45 	bl	80084c8 <vPortExitCritical>

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
 8008a3e:	2300      	movs	r3, #0
 8008a40:	e05c      	b.n	8008afc <xQueueGenericSend+0x1e8>
				}
				else if( xEntryTimeSet == pdFALSE )
 8008a42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008a44:	2b00      	cmp	r3, #0
 8008a46:	d106      	bne.n	8008a56 <xQueueGenericSend+0x142>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008a48:	f107 0314 	add.w	r3, r7, #20
 8008a4c:	4618      	mov	r0, r3
 8008a4e:	f000 fff5 	bl	8009a3c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8008a52:	2301      	movs	r3, #1
 8008a54:	637b      	str	r3, [r7, #52]	; 0x34
					/* Entry time was already set. */
					mtCOVERAGE_TEST_MARKER();
				}
			}
		}
		taskEXIT_CRITICAL();
 8008a56:	f7ff fd37 	bl	80084c8 <vPortExitCritical>

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
 8008a5a:	f000 fdad 	bl	80095b8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008a5e:	f7ff fd05 	bl	800846c <vPortEnterCritical>
 8008a62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008a64:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8008a68:	b25b      	sxtb	r3, r3
 8008a6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008a6e:	d103      	bne.n	8008a78 <xQueueGenericSend+0x164>
 8008a70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008a72:	2200      	movs	r2, #0
 8008a74:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8008a78:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008a7a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8008a7e:	b25b      	sxtb	r3, r3
 8008a80:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008a84:	d103      	bne.n	8008a8e <xQueueGenericSend+0x17a>
 8008a86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008a88:	2200      	movs	r2, #0
 8008a8a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8008a8e:	f7ff fd1b 	bl	80084c8 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008a92:	1d3a      	adds	r2, r7, #4
 8008a94:	f107 0314 	add.w	r3, r7, #20
 8008a98:	4611      	mov	r1, r2
 8008a9a:	4618      	mov	r0, r3
 8008a9c:	f000 ffe4 	bl	8009a68 <xTaskCheckForTimeOut>
 8008aa0:	4603      	mov	r3, r0
 8008aa2:	2b00      	cmp	r3, #0
 8008aa4:	d124      	bne.n	8008af0 <xQueueGenericSend+0x1dc>
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 8008aa6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008aa8:	f000 fb4d 	bl	8009146 <prvIsQueueFull>
 8008aac:	4603      	mov	r3, r0
 8008aae:	2b00      	cmp	r3, #0
 8008ab0:	d018      	beq.n	8008ae4 <xQueueGenericSend+0x1d0>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008ab2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ab4:	3310      	adds	r3, #16
 8008ab6:	687a      	ldr	r2, [r7, #4]
 8008ab8:	4611      	mov	r1, r2
 8008aba:	4618      	mov	r0, r3
 8008abc:	f000 ff38 	bl	8009930 <vTaskPlaceOnEventList>
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible that interrupts occurring now
				remove this task from the event list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
 8008ac0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008ac2:	f000 fad8 	bl	8009076 <prvUnlockQueue>
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
 8008ac6:	f000 fd85 	bl	80095d4 <xTaskResumeAll>
 8008aca:	4603      	mov	r3, r0
 8008acc:	2b00      	cmp	r3, #0
 8008ace:	f47f af7c 	bne.w	80089ca <xQueueGenericSend+0xb6>
				{
					portYIELD_WITHIN_API();
 8008ad2:	4b0c      	ldr	r3, [pc, #48]	; (8008b04 <xQueueGenericSend+0x1f0>)
 8008ad4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ad8:	601a      	str	r2, [r3, #0]
 8008ada:	f3bf 8f4f 	dsb	sy
 8008ade:	f3bf 8f6f 	isb	sy
 8008ae2:	e772      	b.n	80089ca <xQueueGenericSend+0xb6>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
 8008ae4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008ae6:	f000 fac6 	bl	8009076 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008aea:	f000 fd73 	bl	80095d4 <xTaskResumeAll>
 8008aee:	e76c      	b.n	80089ca <xQueueGenericSend+0xb6>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
 8008af0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008af2:	f000 fac0 	bl	8009076 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008af6:	f000 fd6d 	bl	80095d4 <xTaskResumeAll>

			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
 8008afa:	2300      	movs	r3, #0
		}
	} /*lint -restore */
}
 8008afc:	4618      	mov	r0, r3
 8008afe:	3738      	adds	r7, #56	; 0x38
 8008b00:	46bd      	mov	sp, r7
 8008b02:	bd80      	pop	{r7, pc}
 8008b04:	e000ed04 	.word	0xe000ed04

08008b08 <xQueueGiveFromISR>:
	return xReturn;
}
/*-----------------------------------------------------------*/

BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
{
 8008b08:	b580      	push	{r7, lr}
 8008b0a:	b08e      	sub	sp, #56	; 0x38
 8008b0c:	af00      	add	r7, sp, #0
 8008b0e:	6078      	str	r0, [r7, #4]
 8008b10:	6039      	str	r1, [r7, #0]
BaseType_t xReturn;
UBaseType_t uxSavedInterruptStatus;
Queue_t * const pxQueue = xQueue;
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	633b      	str	r3, [r7, #48]	; 0x30
	item size is 0.  Don't directly wake a task that was blocked on a queue
	read, instead return a flag to say whether a context switch is required or
	not (i.e. has a task with a higher priority than us been woken by this
	post). */

	configASSERT( pxQueue );
 8008b16:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008b18:	2b00      	cmp	r3, #0
 8008b1a:	d109      	bne.n	8008b30 <xQueueGiveFromISR+0x28>
 8008b1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b20:	f383 8811 	msr	BASEPRI, r3
 8008b24:	f3bf 8f6f 	isb	sy
 8008b28:	f3bf 8f4f 	dsb	sy
 8008b2c:	623b      	str	r3, [r7, #32]
 8008b2e:	e7fe      	b.n	8008b2e <xQueueGiveFromISR+0x26>

	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
	if the item size is not 0. */
	configASSERT( pxQueue->uxItemSize == 0 );
 8008b30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008b32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b34:	2b00      	cmp	r3, #0
 8008b36:	d009      	beq.n	8008b4c <xQueueGiveFromISR+0x44>
 8008b38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b3c:	f383 8811 	msr	BASEPRI, r3
 8008b40:	f3bf 8f6f 	isb	sy
 8008b44:	f3bf 8f4f 	dsb	sy
 8008b48:	61fb      	str	r3, [r7, #28]
 8008b4a:	e7fe      	b.n	8008b4a <xQueueGiveFromISR+0x42>

	/* Normally a mutex would not be given from an interrupt, especially if
	there is a mutex holder, as priority inheritance makes no sense for an
	interrupts, only tasks. */
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008b4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008b4e:	681b      	ldr	r3, [r3, #0]
 8008b50:	2b00      	cmp	r3, #0
 8008b52:	d103      	bne.n	8008b5c <xQueueGiveFromISR+0x54>
 8008b54:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008b56:	689b      	ldr	r3, [r3, #8]
 8008b58:	2b00      	cmp	r3, #0
 8008b5a:	d101      	bne.n	8008b60 <xQueueGiveFromISR+0x58>
 8008b5c:	2301      	movs	r3, #1
 8008b5e:	e000      	b.n	8008b62 <xQueueGiveFromISR+0x5a>
 8008b60:	2300      	movs	r3, #0
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	d109      	bne.n	8008b7a <xQueueGiveFromISR+0x72>
 8008b66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b6a:	f383 8811 	msr	BASEPRI, r3
 8008b6e:	f3bf 8f6f 	isb	sy
 8008b72:	f3bf 8f4f 	dsb	sy
 8008b76:	61bb      	str	r3, [r7, #24]
 8008b78:	e7fe      	b.n	8008b78 <xQueueGiveFromISR+0x70>
	that have been assigned a priority at or (logically) below the maximum
	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
	safe API to ensure interrupt entry is as fast and as simple as possible.
	More information (albeit Cortex-M specific) is provided on the following
	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008b7a:	f7ff fd53 	bl	8008624 <vPortValidateInterruptPriority>
	__asm volatile
 8008b7e:	f3ef 8211 	mrs	r2, BASEPRI
 8008b82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b86:	f383 8811 	msr	BASEPRI, r3
 8008b8a:	f3bf 8f6f 	isb	sy
 8008b8e:	f3bf 8f4f 	dsb	sy
 8008b92:	617a      	str	r2, [r7, #20]
 8008b94:	613b      	str	r3, [r7, #16]
	return ulOriginalBASEPRI;
 8008b96:	697b      	ldr	r3, [r7, #20]

	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8008b98:	62fb      	str	r3, [r7, #44]	; 0x2c
	{
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008b9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b9e:	62bb      	str	r3, [r7, #40]	; 0x28

		/* When the queue is used to implement a semaphore no data is ever
		moved through the queue but it is still valid to see if the queue 'has
		space'. */
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008ba0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ba2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008ba4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008ba6:	429a      	cmp	r2, r3
 8008ba8:	d22b      	bcs.n	8008c02 <xQueueGiveFromISR+0xfa>
		{
			const int8_t cTxLock = pxQueue->cTxLock;
 8008baa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008bac:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8008bb0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			holder - and if there is a mutex holder then the mutex cannot be
			given from an ISR.  As this is the ISR version of the function it
			can be assumed there is no mutex holder and no need to determine if
			priority disinheritance is needed.  Simply increase the count of
			messages (semaphores) available. */
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008bb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008bb6:	1c5a      	adds	r2, r3, #1
 8008bb8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008bba:	639a      	str	r2, [r3, #56]	; 0x38

			/* The event list is not altered if the queue is locked.  This will
			be done when the queue is unlocked later. */
			if( cTxLock == queueUNLOCKED )
 8008bbc:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8008bc0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008bc4:	d112      	bne.n	8008bec <xQueueGiveFromISR+0xe4>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008bc6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008bc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bca:	2b00      	cmp	r3, #0
 8008bcc:	d016      	beq.n	8008bfc <xQueueGiveFromISR+0xf4>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008bce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008bd0:	3324      	adds	r3, #36	; 0x24
 8008bd2:	4618      	mov	r0, r3
 8008bd4:	f000 fed0 	bl	8009978 <xTaskRemoveFromEventList>
 8008bd8:	4603      	mov	r3, r0
 8008bda:	2b00      	cmp	r3, #0
 8008bdc:	d00e      	beq.n	8008bfc <xQueueGiveFromISR+0xf4>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
 8008bde:	683b      	ldr	r3, [r7, #0]
 8008be0:	2b00      	cmp	r3, #0
 8008be2:	d00b      	beq.n	8008bfc <xQueueGiveFromISR+0xf4>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008be4:	683b      	ldr	r3, [r7, #0]
 8008be6:	2201      	movs	r2, #1
 8008be8:	601a      	str	r2, [r3, #0]
 8008bea:	e007      	b.n	8008bfc <xQueueGiveFromISR+0xf4>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008bec:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8008bf0:	3301      	adds	r3, #1
 8008bf2:	b2db      	uxtb	r3, r3
 8008bf4:	b25a      	sxtb	r2, r3
 8008bf6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008bf8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
			}

			xReturn = pdPASS;
 8008bfc:	2301      	movs	r3, #1
 8008bfe:	637b      	str	r3, [r7, #52]	; 0x34
 8008c00:	e001      	b.n	8008c06 <xQueueGiveFromISR+0xfe>
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
 8008c02:	2300      	movs	r3, #0
 8008c04:	637b      	str	r3, [r7, #52]	; 0x34
 8008c06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008c08:	60fb      	str	r3, [r7, #12]
	__asm volatile
 8008c0a:	68fb      	ldr	r3, [r7, #12]
 8008c0c:	f383 8811 	msr	BASEPRI, r3
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
 8008c10:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8008c12:	4618      	mov	r0, r3
 8008c14:	3738      	adds	r7, #56	; 0x38
 8008c16:	46bd      	mov	sp, r7
 8008c18:	bd80      	pop	{r7, pc}
	...

08008c1c <xQueueSemaphoreTake>:
	} /*lint -restore */
}
/*-----------------------------------------------------------*/

BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
{
 8008c1c:	b580      	push	{r7, lr}
 8008c1e:	b08e      	sub	sp, #56	; 0x38
 8008c20:	af00      	add	r7, sp, #0
 8008c22:	6078      	str	r0, [r7, #4]
 8008c24:	6039      	str	r1, [r7, #0]
BaseType_t xEntryTimeSet = pdFALSE;
 8008c26:	2300      	movs	r3, #0
 8008c28:	637b      	str	r3, [r7, #52]	; 0x34
TimeOut_t xTimeOut;
Queue_t * const pxQueue = xQueue;
 8008c2a:	687b      	ldr	r3, [r7, #4]
 8008c2c:	62fb      	str	r3, [r7, #44]	; 0x2c

#if( configUSE_MUTEXES == 1 )
	BaseType_t xInheritanceOccurred = pdFALSE;
 8008c2e:	2300      	movs	r3, #0
 8008c30:	633b      	str	r3, [r7, #48]	; 0x30
#endif

	/* Check the queue pointer is not NULL. */
	configASSERT( ( pxQueue ) );
 8008c32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008c34:	2b00      	cmp	r3, #0
 8008c36:	d109      	bne.n	8008c4c <xQueueSemaphoreTake+0x30>
	__asm volatile
 8008c38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3c:	f383 8811 	msr	BASEPRI, r3
 8008c40:	f3bf 8f6f 	isb	sy
 8008c44:	f3bf 8f4f 	dsb	sy
 8008c48:	623b      	str	r3, [r7, #32]
 8008c4a:	e7fe      	b.n	8008c4a <xQueueSemaphoreTake+0x2e>

	/* Check this really is a semaphore, in which case the item size will be
	0. */
	configASSERT( pxQueue->uxItemSize == 0 );
 8008c4c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008c4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008c50:	2b00      	cmp	r3, #0
 8008c52:	d009      	beq.n	8008c68 <xQueueSemaphoreTake+0x4c>
 8008c54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c58:	f383 8811 	msr	BASEPRI, r3
 8008c5c:	f3bf 8f6f 	isb	sy
 8008c60:	f3bf 8f4f 	dsb	sy
 8008c64:	61fb      	str	r3, [r7, #28]
 8008c66:	e7fe      	b.n	8008c66 <xQueueSemaphoreTake+0x4a>

	/* Cannot block if the scheduler is suspended. */
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008c68:	f001 f83c 	bl	8009ce4 <xTaskGetSchedulerState>
 8008c6c:	4603      	mov	r3, r0
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d102      	bne.n	8008c78 <xQueueSemaphoreTake+0x5c>
 8008c72:	683b      	ldr	r3, [r7, #0]
 8008c74:	2b00      	cmp	r3, #0
 8008c76:	d101      	bne.n	8008c7c <xQueueSemaphoreTake+0x60>
 8008c78:	2301      	movs	r3, #1
 8008c7a:	e000      	b.n	8008c7e <xQueueSemaphoreTake+0x62>
 8008c7c:	2300      	movs	r3, #0
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d109      	bne.n	8008c96 <xQueueSemaphoreTake+0x7a>
 8008c82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c86:	f383 8811 	msr	BASEPRI, r3
 8008c8a:	f3bf 8f6f 	isb	sy
 8008c8e:	f3bf 8f4f 	dsb	sy
 8008c92:	61bb      	str	r3, [r7, #24]
 8008c94:	e7fe      	b.n	8008c94 <xQueueSemaphoreTake+0x78>
	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
 8008c96:	f7ff fbe9 	bl	800846c <vPortEnterCritical>
		{
			/* Semaphores are queues with an item size of 0, and where the
			number of messages in the queue is the semaphore's count value. */
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008c9a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c9e:	62bb      	str	r3, [r7, #40]	; 0x28

			/* Is there data in the queue now?  To be running the calling task
			must be the highest priority task wanting to access the queue. */
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008ca0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008ca2:	2b00      	cmp	r3, #0
 8008ca4:	d024      	beq.n	8008cf0 <xQueueSemaphoreTake+0xd4>
			{
				traceQUEUE_RECEIVE( pxQueue );

				/* Semaphores are queues with a data size of zero and where the
				messages waiting is the semaphore's count.  Reduce the count. */
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008ca6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008ca8:	1e5a      	subs	r2, r3, #1
 8008caa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cac:	639a      	str	r2, [r3, #56]	; 0x38

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008cae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cb0:	681b      	ldr	r3, [r3, #0]
 8008cb2:	2b00      	cmp	r3, #0
 8008cb4:	d104      	bne.n	8008cc0 <xQueueSemaphoreTake+0xa4>
					{
						/* Record the information required to implement
						priority inheritance should it become necessary. */
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008cb6:	f001 f9cf 	bl	800a058 <pvTaskIncrementMutexHeldCount>
 8008cba:	4602      	mov	r2, r0
 8008cbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cbe:	609a      	str	r2, [r3, #8]
				}
				#endif /* configUSE_MUTEXES */

				/* Check to see if other tasks are blocked waiting to give the
				semaphore, and if so, unblock the highest priority such task. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008cc0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cc2:	691b      	ldr	r3, [r3, #16]
 8008cc4:	2b00      	cmp	r3, #0
 8008cc6:	d00f      	beq.n	8008ce8 <xQueueSemaphoreTake+0xcc>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008cc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cca:	3310      	adds	r3, #16
 8008ccc:	4618      	mov	r0, r3
 8008cce:	f000 fe53 	bl	8009978 <xTaskRemoveFromEventList>
 8008cd2:	4603      	mov	r3, r0
 8008cd4:	2b00      	cmp	r3, #0
 8008cd6:	d007      	beq.n	8008ce8 <xQueueSemaphoreTake+0xcc>
					{
						queueYIELD_IF_USING_PREEMPTION();
 8008cd8:	4b53      	ldr	r3, [pc, #332]	; (8008e28 <xQueueSemaphoreTake+0x20c>)
 8008cda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008cde:	601a      	str	r2, [r3, #0]
 8008ce0:	f3bf 8f4f 	dsb	sy
 8008ce4:	f3bf 8f6f 	isb	sy
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				taskEXIT_CRITICAL();
 8008ce8:	f7ff fbee 	bl	80084c8 <vPortExitCritical>
				return pdPASS;
 8008cec:	2301      	movs	r3, #1
 8008cee:	e096      	b.n	8008e1e <xQueueSemaphoreTake+0x202>
			}
			else
			{
				if( xTicksToWait == ( TickType_t ) 0 )
 8008cf0:	683b      	ldr	r3, [r7, #0]
 8008cf2:	2b00      	cmp	r3, #0
 8008cf4:	d110      	bne.n	8008d18 <xQueueSemaphoreTake+0xfc>
					/* For inheritance to have occurred there must have been an
					initial timeout, and an adjusted timeout cannot become 0, as
					if it were 0 the function would have exited. */
					#if( configUSE_MUTEXES == 1 )
					{
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008cf6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008cf8:	2b00      	cmp	r3, #0
 8008cfa:	d009      	beq.n	8008d10 <xQueueSemaphoreTake+0xf4>
 8008cfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d00:	f383 8811 	msr	BASEPRI, r3
 8008d04:	f3bf 8f6f 	isb	sy
 8008d08:	f3bf 8f4f 	dsb	sy
 8008d0c:	617b      	str	r3, [r7, #20]
 8008d0e:	e7fe      	b.n	8008d0e <xQueueSemaphoreTake+0xf2>
					}
					#endif /* configUSE_MUTEXES */

					/* The semaphore count was 0 and no block time is specified
					(or the block time has expired) so exit now. */
					taskEXIT_CRITICAL();
 8008d10:	f7ff fbda 	bl	80084c8 <vPortExitCritical>
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
 8008d14:	2300      	movs	r3, #0
 8008d16:	e082      	b.n	8008e1e <xQueueSemaphoreTake+0x202>
				}
				else if( xEntryTimeSet == pdFALSE )
 8008d18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008d1a:	2b00      	cmp	r3, #0
 8008d1c:	d106      	bne.n	8008d2c <xQueueSemaphoreTake+0x110>
				{
					/* The semaphore count was 0 and a block time was specified
					so configure the timeout structure ready to block. */
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d1e:	f107 030c 	add.w	r3, r7, #12
 8008d22:	4618      	mov	r0, r3
 8008d24:	f000 fe8a 	bl	8009a3c <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8008d28:	2301      	movs	r3, #1
 8008d2a:	637b      	str	r3, [r7, #52]	; 0x34
					/* Entry time was already set. */
					mtCOVERAGE_TEST_MARKER();
				}
			}
		}
		taskEXIT_CRITICAL();
 8008d2c:	f7ff fbcc 	bl	80084c8 <vPortExitCritical>

		/* Interrupts and other tasks can give to and take from the semaphore
		now the critical section has been exited. */

		vTaskSuspendAll();
 8008d30:	f000 fc42 	bl	80095b8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d34:	f7ff fb9a 	bl	800846c <vPortEnterCritical>
 8008d38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d3a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8008d3e:	b25b      	sxtb	r3, r3
 8008d40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008d44:	d103      	bne.n	8008d4e <xQueueSemaphoreTake+0x132>
 8008d46:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d48:	2200      	movs	r2, #0
 8008d4a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8008d4e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d50:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8008d54:	b25b      	sxtb	r3, r3
 8008d56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008d5a:	d103      	bne.n	8008d64 <xQueueSemaphoreTake+0x148>
 8008d5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d5e:	2200      	movs	r2, #0
 8008d60:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8008d64:	f7ff fbb0 	bl	80084c8 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d68:	463a      	mov	r2, r7
 8008d6a:	f107 030c 	add.w	r3, r7, #12
 8008d6e:	4611      	mov	r1, r2
 8008d70:	4618      	mov	r0, r3
 8008d72:	f000 fe79 	bl	8009a68 <xTaskCheckForTimeOut>
 8008d76:	4603      	mov	r3, r0
 8008d78:	2b00      	cmp	r3, #0
 8008d7a:	d132      	bne.n	8008de2 <xQueueSemaphoreTake+0x1c6>
		{
			/* A block time is specified and not expired.  If the semaphore
			count is 0 then enter the Blocked state to wait for a semaphore to
			become available.  As semaphores are implemented with queues the
			queue being empty is equivalent to the semaphore count being 0. */
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d7c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008d7e:	f000 f9cc 	bl	800911a <prvIsQueueEmpty>
 8008d82:	4603      	mov	r3, r0
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d026      	beq.n	8008dd6 <xQueueSemaphoreTake+0x1ba>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008d88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	2b00      	cmp	r3, #0
 8008d8e:	d109      	bne.n	8008da4 <xQueueSemaphoreTake+0x188>
					{
						taskENTER_CRITICAL();
 8008d90:	f7ff fb6c 	bl	800846c <vPortEnterCritical>
						{
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008d94:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008d96:	689b      	ldr	r3, [r3, #8]
 8008d98:	4618      	mov	r0, r3
 8008d9a:	f000 ffc1 	bl	8009d20 <xTaskPriorityInherit>
 8008d9e:	6338      	str	r0, [r7, #48]	; 0x30
						}
						taskEXIT_CRITICAL();
 8008da0:	f7ff fb92 	bl	80084c8 <vPortExitCritical>
						mtCOVERAGE_TEST_MARKER();
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008da4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008da6:	3324      	adds	r3, #36	; 0x24
 8008da8:	683a      	ldr	r2, [r7, #0]
 8008daa:	4611      	mov	r1, r2
 8008dac:	4618      	mov	r0, r3
 8008dae:	f000 fdbf 	bl	8009930 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008db2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008db4:	f000 f95f 	bl	8009076 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008db8:	f000 fc0c 	bl	80095d4 <xTaskResumeAll>
 8008dbc:	4603      	mov	r3, r0
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	f47f af69 	bne.w	8008c96 <xQueueSemaphoreTake+0x7a>
				{
					portYIELD_WITHIN_API();
 8008dc4:	4b18      	ldr	r3, [pc, #96]	; (8008e28 <xQueueSemaphoreTake+0x20c>)
 8008dc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008dca:	601a      	str	r2, [r3, #0]
 8008dcc:	f3bf 8f4f 	dsb	sy
 8008dd0:	f3bf 8f6f 	isb	sy
 8008dd4:	e75f      	b.n	8008c96 <xQueueSemaphoreTake+0x7a>
			}
			else
			{
				/* There was no timeout and the semaphore count was not 0, so
				attempt to take the semaphore again. */
				prvUnlockQueue( pxQueue );
 8008dd6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008dd8:	f000 f94d 	bl	8009076 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008ddc:	f000 fbfa 	bl	80095d4 <xTaskResumeAll>
 8008de0:	e759      	b.n	8008c96 <xQueueSemaphoreTake+0x7a>
			}
		}
		else
		{
			/* Timed out. */
			prvUnlockQueue( pxQueue );
 8008de2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008de4:	f000 f947 	bl	8009076 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008de8:	f000 fbf4 	bl	80095d4 <xTaskResumeAll>

			/* If the semaphore count is 0 exit now as the timeout has
			expired.  Otherwise return to attempt to take the semaphore that is
			known to be available.  As semaphores are implemented by queues the
			queue being empty is equivalent to the semaphore count being 0. */
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008dec:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008dee:	f000 f994 	bl	800911a <prvIsQueueEmpty>
 8008df2:	4603      	mov	r3, r0
 8008df4:	2b00      	cmp	r3, #0
 8008df6:	f43f af4e 	beq.w	8008c96 <xQueueSemaphoreTake+0x7a>
				#if ( configUSE_MUTEXES == 1 )
				{
					/* xInheritanceOccurred could only have be set if
					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
					test the mutex type again to check it is actually a mutex. */
					if( xInheritanceOccurred != pdFALSE )
 8008dfa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	d00d      	beq.n	8008e1c <xQueueSemaphoreTake+0x200>
					{
						taskENTER_CRITICAL();
 8008e00:	f7ff fb34 	bl	800846c <vPortEnterCritical>
							/* This task blocking on the mutex caused another
							task to inherit this task's priority.  Now this task
							has timed out the priority should be disinherited
							again, but only as low as the next highest priority
							task that is waiting for the same mutex. */
							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 8008e04:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008e06:	f000 f88e 	bl	8008f26 <prvGetDisinheritPriorityAfterTimeout>
 8008e0a:	6278      	str	r0, [r7, #36]	; 0x24
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008e0c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008e0e:	689b      	ldr	r3, [r3, #8]
 8008e10:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008e12:	4618      	mov	r0, r3
 8008e14:	f001 f888 	bl	8009f28 <vTaskPriorityDisinheritAfterTimeout>
						}
						taskEXIT_CRITICAL();
 8008e18:	f7ff fb56 	bl	80084c8 <vPortExitCritical>
					}
				}
				#endif /* configUSE_MUTEXES */

				traceQUEUE_RECEIVE_FAILED( pxQueue );
				return errQUEUE_EMPTY;
 8008e1c:	2300      	movs	r3, #0
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	} /*lint -restore */
}
 8008e1e:	4618      	mov	r0, r3
 8008e20:	3738      	adds	r7, #56	; 0x38
 8008e22:	46bd      	mov	sp, r7
 8008e24:	bd80      	pop	{r7, pc}
 8008e26:	bf00      	nop
 8008e28:	e000ed04 	.word	0xe000ed04

08008e2c <xQueueReceiveFromISR>:
	} /*lint -restore */
}
/*-----------------------------------------------------------*/

BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )
{
 8008e2c:	b580      	push	{r7, lr}
 8008e2e:	b08e      	sub	sp, #56	; 0x38
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	60f8      	str	r0, [r7, #12]
 8008e34:	60b9      	str	r1, [r7, #8]
 8008e36:	607a      	str	r2, [r7, #4]
BaseType_t xReturn;
UBaseType_t uxSavedInterruptStatus;
Queue_t * const pxQueue = xQueue;
 8008e38:	68fb      	ldr	r3, [r7, #12]
 8008e3a:	633b      	str	r3, [r7, #48]	; 0x30

	configASSERT( pxQueue );
 8008e3c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008e3e:	2b00      	cmp	r3, #0
 8008e40:	d109      	bne.n	8008e56 <xQueueReceiveFromISR+0x2a>
 8008e42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e46:	f383 8811 	msr	BASEPRI, r3
 8008e4a:	f3bf 8f6f 	isb	sy
 8008e4e:	f3bf 8f4f 	dsb	sy
 8008e52:	623b      	str	r3, [r7, #32]
 8008e54:	e7fe      	b.n	8008e54 <xQueueReceiveFromISR+0x28>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e56:	68bb      	ldr	r3, [r7, #8]
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d103      	bne.n	8008e64 <xQueueReceiveFromISR+0x38>
 8008e5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008e5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d101      	bne.n	8008e68 <xQueueReceiveFromISR+0x3c>
 8008e64:	2301      	movs	r3, #1
 8008e66:	e000      	b.n	8008e6a <xQueueReceiveFromISR+0x3e>
 8008e68:	2300      	movs	r3, #0
 8008e6a:	2b00      	cmp	r3, #0
 8008e6c:	d109      	bne.n	8008e82 <xQueueReceiveFromISR+0x56>
 8008e6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e72:	f383 8811 	msr	BASEPRI, r3
 8008e76:	f3bf 8f6f 	isb	sy
 8008e7a:	f3bf 8f4f 	dsb	sy
 8008e7e:	61fb      	str	r3, [r7, #28]
 8008e80:	e7fe      	b.n	8008e80 <xQueueReceiveFromISR+0x54>
	that have been assigned a priority at or (logically) below the maximum
	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
	safe API to ensure interrupt entry is as fast and as simple as possible.
	More information (albeit Cortex-M specific) is provided on the following
	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e82:	f7ff fbcf 	bl	8008624 <vPortValidateInterruptPriority>
	__asm volatile
 8008e86:	f3ef 8211 	mrs	r2, BASEPRI
 8008e8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e8e:	f383 8811 	msr	BASEPRI, r3
 8008e92:	f3bf 8f6f 	isb	sy
 8008e96:	f3bf 8f4f 	dsb	sy
 8008e9a:	61ba      	str	r2, [r7, #24]
 8008e9c:	617b      	str	r3, [r7, #20]
	return ulOriginalBASEPRI;
 8008e9e:	69bb      	ldr	r3, [r7, #24]

	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8008ea0:	62fb      	str	r3, [r7, #44]	; 0x2c
	{
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ea2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ea4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008ea6:	62bb      	str	r3, [r7, #40]	; 0x28

		/* Cannot block in an ISR, so check there is data available. */
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008ea8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008eaa:	2b00      	cmp	r3, #0
 8008eac:	d02f      	beq.n	8008f0e <xQueueReceiveFromISR+0xe2>
		{
			const int8_t cRxLock = pxQueue->cRxLock;
 8008eae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008eb0:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8008eb4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );

			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008eb8:	68b9      	ldr	r1, [r7, #8]
 8008eba:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008ebc:	f000 f8b5 	bl	800902a <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ec0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008ec2:	1e5a      	subs	r2, r3, #1
 8008ec4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ec6:	639a      	str	r2, [r3, #56]	; 0x38

			/* If the queue is locked the event list will not be modified.
			Instead update the lock count so the task that unlocks the queue
			will know that an ISR has removed data while the queue was
			locked. */
			if( cRxLock == queueUNLOCKED )
 8008ec8:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8008ecc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008ed0:	d112      	bne.n	8008ef8 <xQueueReceiveFromISR+0xcc>
			{
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ed2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ed4:	691b      	ldr	r3, [r3, #16]
 8008ed6:	2b00      	cmp	r3, #0
 8008ed8:	d016      	beq.n	8008f08 <xQueueReceiveFromISR+0xdc>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008eda:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008edc:	3310      	adds	r3, #16
 8008ede:	4618      	mov	r0, r3
 8008ee0:	f000 fd4a 	bl	8009978 <xTaskRemoveFromEventList>
 8008ee4:	4603      	mov	r3, r0
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d00e      	beq.n	8008f08 <xQueueReceiveFromISR+0xdc>
					{
						/* The task waiting has a higher priority than us so
						force a context switch. */
						if( pxHigherPriorityTaskWoken != NULL )
 8008eea:	687b      	ldr	r3, [r7, #4]
 8008eec:	2b00      	cmp	r3, #0
 8008eee:	d00b      	beq.n	8008f08 <xQueueReceiveFromISR+0xdc>
						{
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008ef0:	687b      	ldr	r3, [r7, #4]
 8008ef2:	2201      	movs	r2, #1
 8008ef4:	601a      	str	r2, [r3, #0]
 8008ef6:	e007      	b.n	8008f08 <xQueueReceiveFromISR+0xdc>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was removed while it was locked. */
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008ef8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8008efc:	3301      	adds	r3, #1
 8008efe:	b2db      	uxtb	r3, r3
 8008f00:	b25a      	sxtb	r2, r3
 8008f02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f04:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
			}

			xReturn = pdPASS;
 8008f08:	2301      	movs	r3, #1
 8008f0a:	637b      	str	r3, [r7, #52]	; 0x34
 8008f0c:	e001      	b.n	8008f12 <xQueueReceiveFromISR+0xe6>
		}
		else
		{
			xReturn = pdFAIL;
 8008f0e:	2300      	movs	r3, #0
 8008f10:	637b      	str	r3, [r7, #52]	; 0x34
 8008f12:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008f14:	613b      	str	r3, [r7, #16]
	__asm volatile
 8008f16:	693b      	ldr	r3, [r7, #16]
 8008f18:	f383 8811 	msr	BASEPRI, r3
			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
 8008f1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8008f1e:	4618      	mov	r0, r3
 8008f20:	3738      	adds	r7, #56	; 0x38
 8008f22:	46bd      	mov	sp, r7
 8008f24:	bd80      	pop	{r7, pc}

08008f26 <prvGetDisinheritPriorityAfterTimeout>:
/*-----------------------------------------------------------*/

#if( configUSE_MUTEXES == 1 )

	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
	{
 8008f26:	b480      	push	{r7}
 8008f28:	b085      	sub	sp, #20
 8008f2a:	af00      	add	r7, sp, #0
 8008f2c:	6078      	str	r0, [r7, #4]
		priority, but the waiting task times out, then the holder should
		disinherit the priority - but only down to the highest priority of any
		other tasks that are waiting for the same mutex.  For this purpose,
		return the priority of the highest priority task that is waiting for the
		mutex. */
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008f2e:	687b      	ldr	r3, [r7, #4]
 8008f30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d006      	beq.n	8008f44 <prvGetDisinheritPriorityAfterTimeout+0x1e>
		{
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	f1c3 0307 	rsb	r3, r3, #7
 8008f40:	60fb      	str	r3, [r7, #12]
 8008f42:	e001      	b.n	8008f48 <prvGetDisinheritPriorityAfterTimeout+0x22>
		}
		else
		{
			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
 8008f44:	2300      	movs	r3, #0
 8008f46:	60fb      	str	r3, [r7, #12]
		}

		return uxHighestPriorityOfWaitingTasks;
 8008f48:	68fb      	ldr	r3, [r7, #12]
	}
 8008f4a:	4618      	mov	r0, r3
 8008f4c:	3714      	adds	r7, #20
 8008f4e:	46bd      	mov	sp, r7
 8008f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f54:	4770      	bx	lr

08008f56 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8008f56:	b580      	push	{r7, lr}
 8008f58:	b086      	sub	sp, #24
 8008f5a:	af00      	add	r7, sp, #0
 8008f5c:	60f8      	str	r0, [r7, #12]
 8008f5e:	60b9      	str	r1, [r7, #8]
 8008f60:	607a      	str	r2, [r7, #4]
BaseType_t xReturn = pdFALSE;
 8008f62:	2300      	movs	r3, #0
 8008f64:	617b      	str	r3, [r7, #20]
UBaseType_t uxMessagesWaiting;

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f66:	68fb      	ldr	r3, [r7, #12]
 8008f68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f6a:	613b      	str	r3, [r7, #16]

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f6c:	68fb      	ldr	r3, [r7, #12]
 8008f6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f70:	2b00      	cmp	r3, #0
 8008f72:	d10d      	bne.n	8008f90 <prvCopyDataToQueue+0x3a>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f74:	68fb      	ldr	r3, [r7, #12]
 8008f76:	681b      	ldr	r3, [r3, #0]
 8008f78:	2b00      	cmp	r3, #0
 8008f7a:	d14d      	bne.n	8009018 <prvCopyDataToQueue+0xc2>
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f7c:	68fb      	ldr	r3, [r7, #12]
 8008f7e:	689b      	ldr	r3, [r3, #8]
 8008f80:	4618      	mov	r0, r3
 8008f82:	f000 ff4d 	bl	8009e20 <xTaskPriorityDisinherit>
 8008f86:	6178      	str	r0, [r7, #20]
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	2200      	movs	r2, #0
 8008f8c:	609a      	str	r2, [r3, #8]
 8008f8e:	e043      	b.n	8009018 <prvCopyDataToQueue+0xc2>
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configUSE_MUTEXES */
	}
	else if( xPosition == queueSEND_TO_BACK )
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	2b00      	cmp	r3, #0
 8008f94:	d119      	bne.n	8008fca <prvCopyDataToQueue+0x74>
	{
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f96:	68fb      	ldr	r3, [r7, #12]
 8008f98:	6858      	ldr	r0, [r3, #4]
 8008f9a:	68fb      	ldr	r3, [r7, #12]
 8008f9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f9e:	461a      	mov	r2, r3
 8008fa0:	68b9      	ldr	r1, [r7, #8]
 8008fa2:	f012 fb7f 	bl	801b6a4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fa6:	68fb      	ldr	r3, [r7, #12]
 8008fa8:	685a      	ldr	r2, [r3, #4]
 8008faa:	68fb      	ldr	r3, [r7, #12]
 8008fac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008fae:	441a      	add	r2, r3
 8008fb0:	68fb      	ldr	r3, [r7, #12]
 8008fb2:	605a      	str	r2, [r3, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	685a      	ldr	r2, [r3, #4]
 8008fb8:	68fb      	ldr	r3, [r7, #12]
 8008fba:	689b      	ldr	r3, [r3, #8]
 8008fbc:	429a      	cmp	r2, r3
 8008fbe:	d32b      	bcc.n	8009018 <prvCopyDataToQueue+0xc2>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008fc0:	68fb      	ldr	r3, [r7, #12]
 8008fc2:	681a      	ldr	r2, [r3, #0]
 8008fc4:	68fb      	ldr	r3, [r7, #12]
 8008fc6:	605a      	str	r2, [r3, #4]
 8008fc8:	e026      	b.n	8009018 <prvCopyDataToQueue+0xc2>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	else
	{
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008fca:	68fb      	ldr	r3, [r7, #12]
 8008fcc:	68d8      	ldr	r0, [r3, #12]
 8008fce:	68fb      	ldr	r3, [r7, #12]
 8008fd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008fd2:	461a      	mov	r2, r3
 8008fd4:	68b9      	ldr	r1, [r7, #8]
 8008fd6:	f012 fb65 	bl	801b6a4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008fda:	68fb      	ldr	r3, [r7, #12]
 8008fdc:	68da      	ldr	r2, [r3, #12]
 8008fde:	68fb      	ldr	r3, [r7, #12]
 8008fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008fe2:	425b      	negs	r3, r3
 8008fe4:	441a      	add	r2, r3
 8008fe6:	68fb      	ldr	r3, [r7, #12]
 8008fe8:	60da      	str	r2, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008fea:	68fb      	ldr	r3, [r7, #12]
 8008fec:	68da      	ldr	r2, [r3, #12]
 8008fee:	68fb      	ldr	r3, [r7, #12]
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	429a      	cmp	r2, r3
 8008ff4:	d207      	bcs.n	8009006 <prvCopyDataToQueue+0xb0>
		{
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008ff6:	68fb      	ldr	r3, [r7, #12]
 8008ff8:	689a      	ldr	r2, [r3, #8]
 8008ffa:	68fb      	ldr	r3, [r7, #12]
 8008ffc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008ffe:	425b      	negs	r3, r3
 8009000:	441a      	add	r2, r3
 8009002:	68fb      	ldr	r3, [r7, #12]
 8009004:	60da      	str	r2, [r3, #12]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		if( xPosition == queueOVERWRITE )
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	2b02      	cmp	r3, #2
 800900a:	d105      	bne.n	8009018 <prvCopyDataToQueue+0xc2>
		{
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800900c:	693b      	ldr	r3, [r7, #16]
 800900e:	2b00      	cmp	r3, #0
 8009010:	d002      	beq.n	8009018 <prvCopyDataToQueue+0xc2>
			{
				/* An item is not being added but overwritten, so subtract
				one from the recorded number of items in the queue so when
				one is added again below the number of recorded items remains
				correct. */
				--uxMessagesWaiting;
 8009012:	693b      	ldr	r3, [r7, #16]
 8009014:	3b01      	subs	r3, #1
 8009016:	613b      	str	r3, [r7, #16]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009018:	693b      	ldr	r3, [r7, #16]
 800901a:	1c5a      	adds	r2, r3, #1
 800901c:	68fb      	ldr	r3, [r7, #12]
 800901e:	639a      	str	r2, [r3, #56]	; 0x38

	return xReturn;
 8009020:	697b      	ldr	r3, [r7, #20]
}
 8009022:	4618      	mov	r0, r3
 8009024:	3718      	adds	r7, #24
 8009026:	46bd      	mov	sp, r7
 8009028:	bd80      	pop	{r7, pc}

0800902a <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
{
 800902a:	b580      	push	{r7, lr}
 800902c:	b082      	sub	sp, #8
 800902e:	af00      	add	r7, sp, #0
 8009030:	6078      	str	r0, [r7, #4]
 8009032:	6039      	str	r1, [r7, #0]
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009038:	2b00      	cmp	r3, #0
 800903a:	d018      	beq.n	800906e <prvCopyDataFromQueue+0x44>
	{
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800903c:	687b      	ldr	r3, [r7, #4]
 800903e:	68da      	ldr	r2, [r3, #12]
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009044:	441a      	add	r2, r3
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	60da      	str	r2, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	68da      	ldr	r2, [r3, #12]
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	689b      	ldr	r3, [r3, #8]
 8009052:	429a      	cmp	r2, r3
 8009054:	d303      	bcc.n	800905e <prvCopyDataFromQueue+0x34>
		{
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	681a      	ldr	r2, [r3, #0]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	60da      	str	r2, [r3, #12]
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	68d9      	ldr	r1, [r3, #12]
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009066:	461a      	mov	r2, r3
 8009068:	6838      	ldr	r0, [r7, #0]
 800906a:	f012 fb1b 	bl	801b6a4 <memcpy>
	}
}
 800906e:	bf00      	nop
 8009070:	3708      	adds	r7, #8
 8009072:	46bd      	mov	sp, r7
 8009074:	bd80      	pop	{r7, pc}

08009076 <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( Queue_t * const pxQueue )
{
 8009076:	b580      	push	{r7, lr}
 8009078:	b084      	sub	sp, #16
 800907a:	af00      	add	r7, sp, #0
 800907c:	6078      	str	r0, [r7, #4]

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
 800907e:	f7ff f9f5 	bl	800846c <vPortEnterCritical>
	{
		int8_t cTxLock = pxQueue->cTxLock;
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8009088:	73fb      	strb	r3, [r7, #15]

		/* See if data was added to the queue while it was locked. */
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800908a:	e011      	b.n	80090b0 <prvUnlockQueue+0x3a>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009090:	2b00      	cmp	r3, #0
 8009092:	d012      	beq.n	80090ba <prvUnlockQueue+0x44>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	3324      	adds	r3, #36	; 0x24
 8009098:	4618      	mov	r0, r3
 800909a:	f000 fc6d 	bl	8009978 <xTaskRemoveFromEventList>
 800909e:	4603      	mov	r3, r0
 80090a0:	2b00      	cmp	r3, #0
 80090a2:	d001      	beq.n	80090a8 <prvUnlockQueue+0x32>
					{
						/* The task waiting has a higher priority so record that
						a context switch is required. */
						vTaskMissedYield();
 80090a4:	f000 fd40 	bl	8009b28 <vTaskMissedYield>
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--cTxLock;
 80090a8:	7bfb      	ldrb	r3, [r7, #15]
 80090aa:	3b01      	subs	r3, #1
 80090ac:	b2db      	uxtb	r3, r3
 80090ae:	73fb      	strb	r3, [r7, #15]
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80090b0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80090b4:	2b00      	cmp	r3, #0
 80090b6:	dce9      	bgt.n	800908c <prvUnlockQueue+0x16>
 80090b8:	e000      	b.n	80090bc <prvUnlockQueue+0x46>
					break;
 80090ba:	bf00      	nop
		}

		pxQueue->cTxLock = queueUNLOCKED;
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	22ff      	movs	r2, #255	; 0xff
 80090c0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
	}
	taskEXIT_CRITICAL();
 80090c4:	f7ff fa00 	bl	80084c8 <vPortExitCritical>

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
 80090c8:	f7ff f9d0 	bl	800846c <vPortEnterCritical>
	{
		int8_t cRxLock = pxQueue->cRxLock;
 80090cc:	687b      	ldr	r3, [r7, #4]
 80090ce:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80090d2:	73bb      	strb	r3, [r7, #14]

		while( cRxLock > queueLOCKED_UNMODIFIED )
 80090d4:	e011      	b.n	80090fa <prvUnlockQueue+0x84>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090d6:	687b      	ldr	r3, [r7, #4]
 80090d8:	691b      	ldr	r3, [r3, #16]
 80090da:	2b00      	cmp	r3, #0
 80090dc:	d012      	beq.n	8009104 <prvUnlockQueue+0x8e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	3310      	adds	r3, #16
 80090e2:	4618      	mov	r0, r3
 80090e4:	f000 fc48 	bl	8009978 <xTaskRemoveFromEventList>
 80090e8:	4603      	mov	r3, r0
 80090ea:	2b00      	cmp	r3, #0
 80090ec:	d001      	beq.n	80090f2 <prvUnlockQueue+0x7c>
				{
					vTaskMissedYield();
 80090ee:	f000 fd1b 	bl	8009b28 <vTaskMissedYield>
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				--cRxLock;
 80090f2:	7bbb      	ldrb	r3, [r7, #14]
 80090f4:	3b01      	subs	r3, #1
 80090f6:	b2db      	uxtb	r3, r3
 80090f8:	73bb      	strb	r3, [r7, #14]
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80090fa:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80090fe:	2b00      	cmp	r3, #0
 8009100:	dce9      	bgt.n	80090d6 <prvUnlockQueue+0x60>
 8009102:	e000      	b.n	8009106 <prvUnlockQueue+0x90>
			}
			else
			{
				break;
 8009104:	bf00      	nop
			}
		}

		pxQueue->cRxLock = queueUNLOCKED;
 8009106:	687b      	ldr	r3, [r7, #4]
 8009108:	22ff      	movs	r2, #255	; 0xff
 800910a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
 800910e:	f7ff f9db 	bl	80084c8 <vPortExitCritical>
}
 8009112:	bf00      	nop
 8009114:	3710      	adds	r7, #16
 8009116:	46bd      	mov	sp, r7
 8009118:	bd80      	pop	{r7, pc}

0800911a <prvIsQueueEmpty>:
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800911a:	b580      	push	{r7, lr}
 800911c:	b084      	sub	sp, #16
 800911e:	af00      	add	r7, sp, #0
 8009120:	6078      	str	r0, [r7, #4]
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009122:	f7ff f9a3 	bl	800846c <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800912a:	2b00      	cmp	r3, #0
 800912c:	d102      	bne.n	8009134 <prvIsQueueEmpty+0x1a>
		{
			xReturn = pdTRUE;
 800912e:	2301      	movs	r3, #1
 8009130:	60fb      	str	r3, [r7, #12]
 8009132:	e001      	b.n	8009138 <prvIsQueueEmpty+0x1e>
		}
		else
		{
			xReturn = pdFALSE;
 8009134:	2300      	movs	r3, #0
 8009136:	60fb      	str	r3, [r7, #12]
		}
	}
	taskEXIT_CRITICAL();
 8009138:	f7ff f9c6 	bl	80084c8 <vPortExitCritical>

	return xReturn;
 800913c:	68fb      	ldr	r3, [r7, #12]
}
 800913e:	4618      	mov	r0, r3
 8009140:	3710      	adds	r7, #16
 8009142:	46bd      	mov	sp, r7
 8009144:	bd80      	pop	{r7, pc}

08009146 <prvIsQueueFull>:
	return xReturn;
} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
 8009146:	b580      	push	{r7, lr}
 8009148:	b084      	sub	sp, #16
 800914a:	af00      	add	r7, sp, #0
 800914c:	6078      	str	r0, [r7, #4]
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800914e:	f7ff f98d 	bl	800846c <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009152:	687b      	ldr	r3, [r7, #4]
 8009154:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800915a:	429a      	cmp	r2, r3
 800915c:	d102      	bne.n	8009164 <prvIsQueueFull+0x1e>
		{
			xReturn = pdTRUE;
 800915e:	2301      	movs	r3, #1
 8009160:	60fb      	str	r3, [r7, #12]
 8009162:	e001      	b.n	8009168 <prvIsQueueFull+0x22>
		}
		else
		{
			xReturn = pdFALSE;
 8009164:	2300      	movs	r3, #0
 8009166:	60fb      	str	r3, [r7, #12]
		}
	}
	taskEXIT_CRITICAL();
 8009168:	f7ff f9ae 	bl	80084c8 <vPortExitCritical>

	return xReturn;
 800916c:	68fb      	ldr	r3, [r7, #12]
}
 800916e:	4618      	mov	r0, r3
 8009170:	3710      	adds	r7, #16
 8009172:	46bd      	mov	sp, r7
 8009174:	bd80      	pop	{r7, pc}

08009176 <xTaskCreateStatic>:
									const uint32_t ulStackDepth,
									void * const pvParameters,
									UBaseType_t uxPriority,
									StackType_t * const puxStackBuffer,
									StaticTask_t * const pxTaskBuffer )
	{
 8009176:	b580      	push	{r7, lr}
 8009178:	b08e      	sub	sp, #56	; 0x38
 800917a:	af04      	add	r7, sp, #16
 800917c:	60f8      	str	r0, [r7, #12]
 800917e:	60b9      	str	r1, [r7, #8]
 8009180:	607a      	str	r2, [r7, #4]
 8009182:	603b      	str	r3, [r7, #0]
	TCB_t *pxNewTCB;
	TaskHandle_t xReturn;

		configASSERT( puxStackBuffer != NULL );
 8009184:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009186:	2b00      	cmp	r3, #0
 8009188:	d109      	bne.n	800919e <xTaskCreateStatic+0x28>
	__asm volatile
 800918a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800918e:	f383 8811 	msr	BASEPRI, r3
 8009192:	f3bf 8f6f 	isb	sy
 8009196:	f3bf 8f4f 	dsb	sy
 800919a:	623b      	str	r3, [r7, #32]
 800919c:	e7fe      	b.n	800919c <xTaskCreateStatic+0x26>
		configASSERT( pxTaskBuffer != NULL );
 800919e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d109      	bne.n	80091b8 <xTaskCreateStatic+0x42>
 80091a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a8:	f383 8811 	msr	BASEPRI, r3
 80091ac:	f3bf 8f6f 	isb	sy
 80091b0:	f3bf 8f4f 	dsb	sy
 80091b4:	61fb      	str	r3, [r7, #28]
 80091b6:	e7fe      	b.n	80091b6 <xTaskCreateStatic+0x40>
		#if( configASSERT_DEFINED == 1 )
		{
			/* Sanity check that the size of the structure used to declare a
			variable of type StaticTask_t equals the size of the real task
			structure. */
			volatile size_t xSize = sizeof( StaticTask_t );
 80091b8:	2354      	movs	r3, #84	; 0x54
 80091ba:	613b      	str	r3, [r7, #16]
			configASSERT( xSize == sizeof( TCB_t ) );
 80091bc:	693b      	ldr	r3, [r7, #16]
 80091be:	2b54      	cmp	r3, #84	; 0x54
 80091c0:	d009      	beq.n	80091d6 <xTaskCreateStatic+0x60>
 80091c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c6:	f383 8811 	msr	BASEPRI, r3
 80091ca:	f3bf 8f6f 	isb	sy
 80091ce:	f3bf 8f4f 	dsb	sy
 80091d2:	61bb      	str	r3, [r7, #24]
 80091d4:	e7fe      	b.n	80091d4 <xTaskCreateStatic+0x5e>
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80091d6:	693b      	ldr	r3, [r7, #16]
		}
		#endif /* configASSERT_DEFINED */


		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 80091d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091da:	2b00      	cmp	r3, #0
 80091dc:	d01e      	beq.n	800921c <xTaskCreateStatic+0xa6>
 80091de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	d01b      	beq.n	800921c <xTaskCreateStatic+0xa6>
		{
			/* The memory used for the task's TCB and stack are passed into this
			function - use them. */
			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures are designed to have the same alignment, and the size is checked by an assert. */
 80091e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091e6:	627b      	str	r3, [r7, #36]	; 0x24
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80091e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80091ea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80091ec:	631a      	str	r2, [r3, #48]	; 0x30

			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created statically in case the task is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80091ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80091f0:	2202      	movs	r2, #2
 80091f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80091f6:	2300      	movs	r3, #0
 80091f8:	9303      	str	r3, [sp, #12]
 80091fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80091fc:	9302      	str	r3, [sp, #8]
 80091fe:	f107 0314 	add.w	r3, r7, #20
 8009202:	9301      	str	r3, [sp, #4]
 8009204:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009206:	9300      	str	r3, [sp, #0]
 8009208:	683b      	ldr	r3, [r7, #0]
 800920a:	687a      	ldr	r2, [r7, #4]
 800920c:	68b9      	ldr	r1, [r7, #8]
 800920e:	68f8      	ldr	r0, [r7, #12]
 8009210:	f000 f850 	bl	80092b4 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009214:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8009216:	f000 f8d3 	bl	80093c0 <prvAddNewTaskToReadyList>
 800921a:	e001      	b.n	8009220 <xTaskCreateStatic+0xaa>
		}
		else
		{
			xReturn = NULL;
 800921c:	2300      	movs	r3, #0
 800921e:	617b      	str	r3, [r7, #20]
		}

		return xReturn;
 8009220:	697b      	ldr	r3, [r7, #20]
	}
 8009222:	4618      	mov	r0, r3
 8009224:	3728      	adds	r7, #40	; 0x28
 8009226:	46bd      	mov	sp, r7
 8009228:	bd80      	pop	{r7, pc}

0800922a <xTaskCreate>:
							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and single characters only. */
							const configSTACK_DEPTH_TYPE usStackDepth,
							void * const pvParameters,
							UBaseType_t uxPriority,
							TaskHandle_t * const pxCreatedTask )
	{
 800922a:	b580      	push	{r7, lr}
 800922c:	b08c      	sub	sp, #48	; 0x30
 800922e:	af04      	add	r7, sp, #16
 8009230:	60f8      	str	r0, [r7, #12]
 8009232:	60b9      	str	r1, [r7, #8]
 8009234:	603b      	str	r3, [r7, #0]
 8009236:	4613      	mov	r3, r2
 8009238:	80fb      	strh	r3, [r7, #6]
		#else /* portSTACK_GROWTH */
		{
		StackType_t *pxStack;

			/* Allocate space for the stack used by the task being created. */
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800923a:	88fb      	ldrh	r3, [r7, #6]
 800923c:	009b      	lsls	r3, r3, #2
 800923e:	4618      	mov	r0, r3
 8009240:	f7fe fd66 	bl	8007d10 <pvPortMalloc>
 8009244:	6178      	str	r0, [r7, #20]

			if( pxStack != NULL )
 8009246:	697b      	ldr	r3, [r7, #20]
 8009248:	2b00      	cmp	r3, #0
 800924a:	d00e      	beq.n	800926a <xTaskCreate+0x40>
			{
				/* Allocate space for the TCB. */
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800924c:	2054      	movs	r0, #84	; 0x54
 800924e:	f7fe fd5f 	bl	8007d10 <pvPortMalloc>
 8009252:	61f8      	str	r0, [r7, #28]

				if( pxNewTCB != NULL )
 8009254:	69fb      	ldr	r3, [r7, #28]
 8009256:	2b00      	cmp	r3, #0
 8009258:	d003      	beq.n	8009262 <xTaskCreate+0x38>
				{
					/* Store the stack location in the TCB. */
					pxNewTCB->pxStack = pxStack;
 800925a:	69fb      	ldr	r3, [r7, #28]
 800925c:	697a      	ldr	r2, [r7, #20]
 800925e:	631a      	str	r2, [r3, #48]	; 0x30
 8009260:	e005      	b.n	800926e <xTaskCreate+0x44>
				}
				else
				{
					/* The stack cannot be used as the TCB was not created.  Free
					it again. */
					vPortFree( pxStack );
 8009262:	6978      	ldr	r0, [r7, #20]
 8009264:	f7fe fe16 	bl	8007e94 <vPortFree>
 8009268:	e001      	b.n	800926e <xTaskCreate+0x44>
				}
			}
			else
			{
				pxNewTCB = NULL;
 800926a:	2300      	movs	r3, #0
 800926c:	61fb      	str	r3, [r7, #28]
			}
		}
		#endif /* portSTACK_GROWTH */

		if( pxNewTCB != NULL )
 800926e:	69fb      	ldr	r3, [r7, #28]
 8009270:	2b00      	cmp	r3, #0
 8009272:	d017      	beq.n	80092a4 <xTaskCreate+0x7a>
		{
			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created dynamically in case it is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009274:	69fb      	ldr	r3, [r7, #28]
 8009276:	2200      	movs	r2, #0
 8009278:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800927c:	88fa      	ldrh	r2, [r7, #6]
 800927e:	2300      	movs	r3, #0
 8009280:	9303      	str	r3, [sp, #12]
 8009282:	69fb      	ldr	r3, [r7, #28]
 8009284:	9302      	str	r3, [sp, #8]
 8009286:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009288:	9301      	str	r3, [sp, #4]
 800928a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800928c:	9300      	str	r3, [sp, #0]
 800928e:	683b      	ldr	r3, [r7, #0]
 8009290:	68b9      	ldr	r1, [r7, #8]
 8009292:	68f8      	ldr	r0, [r7, #12]
 8009294:	f000 f80e 	bl	80092b4 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009298:	69f8      	ldr	r0, [r7, #28]
 800929a:	f000 f891 	bl	80093c0 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800929e:	2301      	movs	r3, #1
 80092a0:	61bb      	str	r3, [r7, #24]
 80092a2:	e002      	b.n	80092aa <xTaskCreate+0x80>
		}
		else
		{
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80092a4:	f04f 33ff 	mov.w	r3, #4294967295
 80092a8:	61bb      	str	r3, [r7, #24]
		}

		return xReturn;
 80092aa:	69bb      	ldr	r3, [r7, #24]
	}
 80092ac:	4618      	mov	r0, r3
 80092ae:	3720      	adds	r7, #32
 80092b0:	46bd      	mov	sp, r7
 80092b2:	bd80      	pop	{r7, pc}

080092b4 <prvInitialiseNewTask>:
									void * const pvParameters,
									UBaseType_t uxPriority,
									TaskHandle_t * const pxCreatedTask,
									TCB_t *pxNewTCB,
									const MemoryRegion_t * const xRegions )
{
 80092b4:	b580      	push	{r7, lr}
 80092b6:	b088      	sub	sp, #32
 80092b8:	af00      	add	r7, sp, #0
 80092ba:	60f8      	str	r0, [r7, #12]
 80092bc:	60b9      	str	r1, [r7, #8]
 80092be:	607a      	str	r2, [r7, #4]
 80092c0:	603b      	str	r3, [r7, #0]
	grows from high memory to low (as per the 80x86) or vice versa.
	portSTACK_GROWTH is used to make the result positive or negative as required
	by the port. */
	#if( portSTACK_GROWTH < 0 )
	{
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80092c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80092c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80092cc:	3b01      	subs	r3, #1
 80092ce:	009b      	lsls	r3, r3, #2
 80092d0:	4413      	add	r3, r2
 80092d2:	61bb      	str	r3, [r7, #24]
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80092d4:	69bb      	ldr	r3, [r7, #24]
 80092d6:	f023 0307 	bic.w	r3, r3, #7
 80092da:	61bb      	str	r3, [r7, #24]

		/* Check the alignment of the calculated top of stack is correct. */
		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
 80092dc:	69bb      	ldr	r3, [r7, #24]
 80092de:	f003 0307 	and.w	r3, r3, #7
 80092e2:	2b00      	cmp	r3, #0
 80092e4:	d009      	beq.n	80092fa <prvInitialiseNewTask+0x46>
 80092e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092ea:	f383 8811 	msr	BASEPRI, r3
 80092ee:	f3bf 8f6f 	isb	sy
 80092f2:	f3bf 8f4f 	dsb	sy
 80092f6:	617b      	str	r3, [r7, #20]
 80092f8:	e7fe      	b.n	80092f8 <prvInitialiseNewTask+0x44>
		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
	}
	#endif /* portSTACK_GROWTH */

	/* Store the task name in the TCB. */
	if( pcName != NULL )
 80092fa:	68bb      	ldr	r3, [r7, #8]
 80092fc:	2b00      	cmp	r3, #0
 80092fe:	d01f      	beq.n	8009340 <prvInitialiseNewTask+0x8c>
	{
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009300:	2300      	movs	r3, #0
 8009302:	61fb      	str	r3, [r7, #28]
 8009304:	e012      	b.n	800932c <prvInitialiseNewTask+0x78>
		{
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009306:	68ba      	ldr	r2, [r7, #8]
 8009308:	69fb      	ldr	r3, [r7, #28]
 800930a:	4413      	add	r3, r2
 800930c:	7819      	ldrb	r1, [r3, #0]
 800930e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009310:	69fb      	ldr	r3, [r7, #28]
 8009312:	4413      	add	r3, r2
 8009314:	3334      	adds	r3, #52	; 0x34
 8009316:	460a      	mov	r2, r1
 8009318:	701a      	strb	r2, [r3, #0]

			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
			configMAX_TASK_NAME_LEN characters just in case the memory after the
			string is not accessible (extremely unlikely). */
			if( pcName[ x ] == ( char ) 0x00 )
 800931a:	68ba      	ldr	r2, [r7, #8]
 800931c:	69fb      	ldr	r3, [r7, #28]
 800931e:	4413      	add	r3, r2
 8009320:	781b      	ldrb	r3, [r3, #0]
 8009322:	2b00      	cmp	r3, #0
 8009324:	d006      	beq.n	8009334 <prvInitialiseNewTask+0x80>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009326:	69fb      	ldr	r3, [r7, #28]
 8009328:	3301      	adds	r3, #1
 800932a:	61fb      	str	r3, [r7, #28]
 800932c:	69fb      	ldr	r3, [r7, #28]
 800932e:	2b0f      	cmp	r3, #15
 8009330:	d9e9      	bls.n	8009306 <prvInitialiseNewTask+0x52>
 8009332:	e000      	b.n	8009336 <prvInitialiseNewTask+0x82>
			{
				break;
 8009334:	bf00      	nop
			}
		}

		/* Ensure the name string is terminated in the case that the string length
		was greater or equal to configMAX_TASK_NAME_LEN. */
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009338:	2200      	movs	r2, #0
 800933a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800933e:	e003      	b.n	8009348 <prvInitialiseNewTask+0x94>
	}
	else
	{
		/* The task has not been given a name, so just ensure there is a NULL
		terminator when it is read out. */
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009340:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009342:	2200      	movs	r2, #0
 8009344:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
	}

	/* This is used as an array index so must ensure it's not too large.  First
	remove the privilege bit if one is present. */
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009348:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800934a:	2b06      	cmp	r3, #6
 800934c:	d901      	bls.n	8009352 <prvInitialiseNewTask+0x9e>
	{
		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 800934e:	2306      	movs	r3, #6
 8009350:	62bb      	str	r3, [r7, #40]	; 0x28
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxNewTCB->uxPriority = uxPriority;
 8009352:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009354:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8009356:	62da      	str	r2, [r3, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxNewTCB->uxBasePriority = uxPriority;
 8009358:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800935a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800935c:	645a      	str	r2, [r3, #68]	; 0x44
		pxNewTCB->uxMutexesHeld = 0;
 800935e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009360:	2200      	movs	r2, #0
 8009362:	649a      	str	r2, [r3, #72]	; 0x48
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009364:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009366:	3304      	adds	r3, #4
 8009368:	4618      	mov	r0, r3
 800936a:	f7fe fec7 	bl	80080fc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800936e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009370:	3318      	adds	r3, #24
 8009372:	4618      	mov	r0, r3
 8009374:	f7fe fec2 	bl	80080fc <vListInitialiseItem>

	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009378:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800937a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800937c:	611a      	str	r2, [r3, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800937e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009380:	f1c3 0207 	rsb	r2, r3, #7
 8009384:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009386:	619a      	str	r2, [r3, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009388:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800938a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800938c:	625a      	str	r2, [r3, #36]	; 0x24
	}
	#endif

	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
	{
		pxNewTCB->ulNotifiedValue = 0;
 800938e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009390:	2200      	movs	r2, #0
 8009392:	64da      	str	r2, [r3, #76]	; 0x4c
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009394:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009396:	2200      	movs	r2, #0
 8009398:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
			}
			#endif /* portSTACK_GROWTH */
		}
		#else /* portHAS_STACK_OVERFLOW_CHECKING */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800939c:	683a      	ldr	r2, [r7, #0]
 800939e:	68f9      	ldr	r1, [r7, #12]
 80093a0:	69b8      	ldr	r0, [r7, #24]
 80093a2:	f7fe ff3f 	bl	8008224 <pxPortInitialiseStack>
 80093a6:	4602      	mov	r2, r0
 80093a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80093aa:	601a      	str	r2, [r3, #0]
		}
		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
	}
	#endif /* portUSING_MPU_WRAPPERS */

	if( pxCreatedTask != NULL )
 80093ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80093ae:	2b00      	cmp	r3, #0
 80093b0:	d002      	beq.n	80093b8 <prvInitialiseNewTask+0x104>
	{
		/* Pass the handle out in an anonymous way.  The handle can be used to
		change the created task's priority, delete the created task, etc.*/
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80093b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80093b4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80093b6:	601a      	str	r2, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80093b8:	bf00      	nop
 80093ba:	3720      	adds	r7, #32
 80093bc:	46bd      	mov	sp, r7
 80093be:	bd80      	pop	{r7, pc}

080093c0 <prvAddNewTaskToReadyList>:
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80093c0:	b580      	push	{r7, lr}
 80093c2:	b082      	sub	sp, #8
 80093c4:	af00      	add	r7, sp, #0
 80093c6:	6078      	str	r0, [r7, #4]
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80093c8:	f7ff f850 	bl	800846c <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80093cc:	4b2a      	ldr	r3, [pc, #168]	; (8009478 <prvAddNewTaskToReadyList+0xb8>)
 80093ce:	681b      	ldr	r3, [r3, #0]
 80093d0:	3301      	adds	r3, #1
 80093d2:	4a29      	ldr	r2, [pc, #164]	; (8009478 <prvAddNewTaskToReadyList+0xb8>)
 80093d4:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 80093d6:	4b29      	ldr	r3, [pc, #164]	; (800947c <prvAddNewTaskToReadyList+0xbc>)
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	2b00      	cmp	r3, #0
 80093dc:	d109      	bne.n	80093f2 <prvAddNewTaskToReadyList+0x32>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80093de:	4a27      	ldr	r2, [pc, #156]	; (800947c <prvAddNewTaskToReadyList+0xbc>)
 80093e0:	687b      	ldr	r3, [r7, #4]
 80093e2:	6013      	str	r3, [r2, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80093e4:	4b24      	ldr	r3, [pc, #144]	; (8009478 <prvAddNewTaskToReadyList+0xb8>)
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	2b01      	cmp	r3, #1
 80093ea:	d110      	bne.n	800940e <prvAddNewTaskToReadyList+0x4e>
			{
				/* This is the first task to be created so do the preliminary
				initialisation required.  We will not recover if this call
				fails, but we will report the failure. */
				prvInitialiseTaskLists();
 80093ec:	f000 fbc0 	bl	8009b70 <prvInitialiseTaskLists>
 80093f0:	e00d      	b.n	800940e <prvAddNewTaskToReadyList+0x4e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 80093f2:	4b23      	ldr	r3, [pc, #140]	; (8009480 <prvAddNewTaskToReadyList+0xc0>)
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d109      	bne.n	800940e <prvAddNewTaskToReadyList+0x4e>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80093fa:	4b20      	ldr	r3, [pc, #128]	; (800947c <prvAddNewTaskToReadyList+0xbc>)
 80093fc:	681b      	ldr	r3, [r3, #0]
 80093fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009404:	429a      	cmp	r2, r3
 8009406:	d802      	bhi.n	800940e <prvAddNewTaskToReadyList+0x4e>
				{
					pxCurrentTCB = pxNewTCB;
 8009408:	4a1c      	ldr	r2, [pc, #112]	; (800947c <prvAddNewTaskToReadyList+0xbc>)
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	6013      	str	r3, [r2, #0]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800940e:	4b1d      	ldr	r3, [pc, #116]	; (8009484 <prvAddNewTaskToReadyList+0xc4>)
 8009410:	681b      	ldr	r3, [r3, #0]
 8009412:	3301      	adds	r3, #1
 8009414:	4a1b      	ldr	r2, [pc, #108]	; (8009484 <prvAddNewTaskToReadyList+0xc4>)
 8009416:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8009418:	687b      	ldr	r3, [r7, #4]
 800941a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800941c:	2201      	movs	r2, #1
 800941e:	409a      	lsls	r2, r3
 8009420:	4b19      	ldr	r3, [pc, #100]	; (8009488 <prvAddNewTaskToReadyList+0xc8>)
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	4313      	orrs	r3, r2
 8009426:	4a18      	ldr	r2, [pc, #96]	; (8009488 <prvAddNewTaskToReadyList+0xc8>)
 8009428:	6013      	str	r3, [r2, #0]
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800942e:	4613      	mov	r3, r2
 8009430:	009b      	lsls	r3, r3, #2
 8009432:	4413      	add	r3, r2
 8009434:	009b      	lsls	r3, r3, #2
 8009436:	4a15      	ldr	r2, [pc, #84]	; (800948c <prvAddNewTaskToReadyList+0xcc>)
 8009438:	441a      	add	r2, r3
 800943a:	687b      	ldr	r3, [r7, #4]
 800943c:	3304      	adds	r3, #4
 800943e:	4619      	mov	r1, r3
 8009440:	4610      	mov	r0, r2
 8009442:	f7fe fe68 	bl	8008116 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8009446:	f7ff f83f 	bl	80084c8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800944a:	4b0d      	ldr	r3, [pc, #52]	; (8009480 <prvAddNewTaskToReadyList+0xc0>)
 800944c:	681b      	ldr	r3, [r3, #0]
 800944e:	2b00      	cmp	r3, #0
 8009450:	d00e      	beq.n	8009470 <prvAddNewTaskToReadyList+0xb0>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009452:	4b0a      	ldr	r3, [pc, #40]	; (800947c <prvAddNewTaskToReadyList+0xbc>)
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009458:	687b      	ldr	r3, [r7, #4]
 800945a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800945c:	429a      	cmp	r2, r3
 800945e:	d207      	bcs.n	8009470 <prvAddNewTaskToReadyList+0xb0>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8009460:	4b0b      	ldr	r3, [pc, #44]	; (8009490 <prvAddNewTaskToReadyList+0xd0>)
 8009462:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009466:	601a      	str	r2, [r3, #0]
 8009468:	f3bf 8f4f 	dsb	sy
 800946c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009470:	bf00      	nop
 8009472:	3708      	adds	r7, #8
 8009474:	46bd      	mov	sp, r7
 8009476:	bd80      	pop	{r7, pc}
 8009478:	20008958 	.word	0x20008958
 800947c:	20008858 	.word	0x20008858
 8009480:	20008964 	.word	0x20008964
 8009484:	20008974 	.word	0x20008974
 8009488:	20008960 	.word	0x20008960
 800948c:	2000885c 	.word	0x2000885c
 8009490:	e000ed04 	.word	0xe000ed04

08009494 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( const TickType_t xTicksToDelay )
	{
 8009494:	b580      	push	{r7, lr}
 8009496:	b084      	sub	sp, #16
 8009498:	af00      	add	r7, sp, #0
 800949a:	6078      	str	r0, [r7, #4]
	BaseType_t xAlreadyYielded = pdFALSE;
 800949c:	2300      	movs	r3, #0
 800949e:	60fb      	str	r3, [r7, #12]

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( TickType_t ) 0U )
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	2b00      	cmp	r3, #0
 80094a4:	d016      	beq.n	80094d4 <vTaskDelay+0x40>
		{
			configASSERT( uxSchedulerSuspended == 0 );
 80094a6:	4b13      	ldr	r3, [pc, #76]	; (80094f4 <vTaskDelay+0x60>)
 80094a8:	681b      	ldr	r3, [r3, #0]
 80094aa:	2b00      	cmp	r3, #0
 80094ac:	d009      	beq.n	80094c2 <vTaskDelay+0x2e>
 80094ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b2:	f383 8811 	msr	BASEPRI, r3
 80094b6:	f3bf 8f6f 	isb	sy
 80094ba:	f3bf 8f4f 	dsb	sy
 80094be:	60bb      	str	r3, [r7, #8]
 80094c0:	e7fe      	b.n	80094c0 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 80094c2:	f000 f879 	bl	80095b8 <vTaskSuspendAll>
				list or removed from the blocked list until the scheduler
				is resumed.

				This task cannot be in an event list as it is the currently
				executing task. */
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80094c6:	2100      	movs	r1, #0
 80094c8:	6878      	ldr	r0, [r7, #4]
 80094ca:	f000 fdd9 	bl	800a080 <prvAddCurrentTaskToDelayedList>
			}
			xAlreadyYielded = xTaskResumeAll();
 80094ce:	f000 f881 	bl	80095d4 <xTaskResumeAll>
 80094d2:	60f8      	str	r0, [r7, #12]
			mtCOVERAGE_TEST_MARKER();
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
 80094d4:	68fb      	ldr	r3, [r7, #12]
 80094d6:	2b00      	cmp	r3, #0
 80094d8:	d107      	bne.n	80094ea <vTaskDelay+0x56>
		{
			portYIELD_WITHIN_API();
 80094da:	4b07      	ldr	r3, [pc, #28]	; (80094f8 <vTaskDelay+0x64>)
 80094dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094e0:	601a      	str	r2, [r3, #0]
 80094e2:	f3bf 8f4f 	dsb	sy
 80094e6:	f3bf 8f6f 	isb	sy
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 80094ea:	bf00      	nop
 80094ec:	3710      	adds	r7, #16
 80094ee:	46bd      	mov	sp, r7
 80094f0:	bd80      	pop	{r7, pc}
 80094f2:	bf00      	nop
 80094f4:	20008980 	.word	0x20008980
 80094f8:	e000ed04 	.word	0xe000ed04

080094fc <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
 80094fc:	b580      	push	{r7, lr}
 80094fe:	b08a      	sub	sp, #40	; 0x28
 8009500:	af04      	add	r7, sp, #16
BaseType_t xReturn;

	/* Add the idle task at the lowest priority. */
	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
	{
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009502:	2300      	movs	r3, #0
 8009504:	60bb      	str	r3, [r7, #8]
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009506:	2300      	movs	r3, #0
 8009508:	607b      	str	r3, [r7, #4]
		uint32_t ulIdleTaskStackSize;

		/* The Idle task is created using user provided RAM - obtain the
		address of the RAM then create the idle task. */
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800950a:	463a      	mov	r2, r7
 800950c:	1d39      	adds	r1, r7, #4
 800950e:	f107 0308 	add.w	r3, r7, #8
 8009512:	4618      	mov	r0, r3
 8009514:	f7f7 f83c 	bl	8000590 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009518:	6839      	ldr	r1, [r7, #0]
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	68ba      	ldr	r2, [r7, #8]
 800951e:	9202      	str	r2, [sp, #8]
 8009520:	9301      	str	r3, [sp, #4]
 8009522:	2300      	movs	r3, #0
 8009524:	9300      	str	r3, [sp, #0]
 8009526:	2300      	movs	r3, #0
 8009528:	460a      	mov	r2, r1
 800952a:	491d      	ldr	r1, [pc, #116]	; (80095a0 <vTaskStartScheduler+0xa4>)
 800952c:	481d      	ldr	r0, [pc, #116]	; (80095a4 <vTaskStartScheduler+0xa8>)
 800952e:	f7ff fe22 	bl	8009176 <xTaskCreateStatic>
 8009532:	4602      	mov	r2, r0
 8009534:	4b1c      	ldr	r3, [pc, #112]	; (80095a8 <vTaskStartScheduler+0xac>)
 8009536:	601a      	str	r2, [r3, #0]
												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIORITY is zero. */
												pxIdleTaskStackBuffer,
												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */

		if( xIdleTaskHandle != NULL )
 8009538:	4b1b      	ldr	r3, [pc, #108]	; (80095a8 <vTaskStartScheduler+0xac>)
 800953a:	681b      	ldr	r3, [r3, #0]
 800953c:	2b00      	cmp	r3, #0
 800953e:	d002      	beq.n	8009546 <vTaskStartScheduler+0x4a>
		{
			xReturn = pdPASS;
 8009540:	2301      	movs	r3, #1
 8009542:	617b      	str	r3, [r7, #20]
 8009544:	e001      	b.n	800954a <vTaskStartScheduler+0x4e>
		}
		else
		{
			xReturn = pdFAIL;
 8009546:	2300      	movs	r3, #0
 8009548:	617b      	str	r3, [r7, #20]
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
 800954a:	697b      	ldr	r3, [r7, #20]
 800954c:	2b01      	cmp	r3, #1
 800954e:	d115      	bne.n	800957c <vTaskStartScheduler+0x80>
 8009550:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009554:	f383 8811 	msr	BASEPRI, r3
 8009558:	f3bf 8f6f 	isb	sy
 800955c:	f3bf 8f4f 	dsb	sy
 8009560:	613b      	str	r3, [r7, #16]
			structure specific to the task that will run first. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */

		xNextTaskUnblockTime = portMAX_DELAY;
 8009562:	4b12      	ldr	r3, [pc, #72]	; (80095ac <vTaskStartScheduler+0xb0>)
 8009564:	f04f 32ff 	mov.w	r2, #4294967295
 8009568:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800956a:	4b11      	ldr	r3, [pc, #68]	; (80095b0 <vTaskStartScheduler+0xb4>)
 800956c:	2201      	movs	r2, #1
 800956e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009570:	4b10      	ldr	r3, [pc, #64]	; (80095b4 <vTaskStartScheduler+0xb8>)
 8009572:	2200      	movs	r2, #0
 8009574:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
 8009576:	f7fe fedb 	bl	8008330 <xPortStartScheduler>
	}

	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
	meaning xIdleTaskHandle is not used anywhere else. */
	( void ) xIdleTaskHandle;
}
 800957a:	e00d      	b.n	8009598 <vTaskStartScheduler+0x9c>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800957c:	697b      	ldr	r3, [r7, #20]
 800957e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009582:	d109      	bne.n	8009598 <vTaskStartScheduler+0x9c>
 8009584:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009588:	f383 8811 	msr	BASEPRI, r3
 800958c:	f3bf 8f6f 	isb	sy
 8009590:	f3bf 8f4f 	dsb	sy
 8009594:	60fb      	str	r3, [r7, #12]
 8009596:	e7fe      	b.n	8009596 <vTaskStartScheduler+0x9a>
}
 8009598:	bf00      	nop
 800959a:	3718      	adds	r7, #24
 800959c:	46bd      	mov	sp, r7
 800959e:	bd80      	pop	{r7, pc}
 80095a0:	0801cbd8 	.word	0x0801cbd8
 80095a4:	08009b41 	.word	0x08009b41
 80095a8:	2000897c 	.word	0x2000897c
 80095ac:	20008978 	.word	0x20008978
 80095b0:	20008964 	.word	0x20008964
 80095b4:	2000895c 	.word	0x2000895c

080095b8 <vTaskSuspendAll>:
	vPortEndScheduler();
}
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
 80095b8:	b480      	push	{r7}
 80095ba:	af00      	add	r7, sp, #0
	/* A critical section is not required as the variable is of type
	BaseType_t.  Please read Richard Barry's reply in the following link to a
	post in the FreeRTOS support forum before reporting this as a bug! -
	http://goo.gl/wu4acr */
	++uxSchedulerSuspended;
 80095bc:	4b04      	ldr	r3, [pc, #16]	; (80095d0 <vTaskSuspendAll+0x18>)
 80095be:	681b      	ldr	r3, [r3, #0]
 80095c0:	3301      	adds	r3, #1
 80095c2:	4a03      	ldr	r2, [pc, #12]	; (80095d0 <vTaskSuspendAll+0x18>)
 80095c4:	6013      	str	r3, [r2, #0]
	portMEMORY_BARRIER();
}
 80095c6:	bf00      	nop
 80095c8:	46bd      	mov	sp, r7
 80095ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095ce:	4770      	bx	lr
 80095d0:	20008980 	.word	0x20008980

080095d4 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
 80095d4:	b580      	push	{r7, lr}
 80095d6:	b084      	sub	sp, #16
 80095d8:	af00      	add	r7, sp, #0
TCB_t *pxTCB = NULL;
 80095da:	2300      	movs	r3, #0
 80095dc:	60fb      	str	r3, [r7, #12]
BaseType_t xAlreadyYielded = pdFALSE;
 80095de:	2300      	movs	r3, #0
 80095e0:	60bb      	str	r3, [r7, #8]

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
 80095e2:	4b41      	ldr	r3, [pc, #260]	; (80096e8 <xTaskResumeAll+0x114>)
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	2b00      	cmp	r3, #0
 80095e8:	d109      	bne.n	80095fe <xTaskResumeAll+0x2a>
 80095ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ee:	f383 8811 	msr	BASEPRI, r3
 80095f2:	f3bf 8f6f 	isb	sy
 80095f6:	f3bf 8f4f 	dsb	sy
 80095fa:	603b      	str	r3, [r7, #0]
 80095fc:	e7fe      	b.n	80095fc <xTaskResumeAll+0x28>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
 80095fe:	f7fe ff35 	bl	800846c <vPortEnterCritical>
	{
		--uxSchedulerSuspended;
 8009602:	4b39      	ldr	r3, [pc, #228]	; (80096e8 <xTaskResumeAll+0x114>)
 8009604:	681b      	ldr	r3, [r3, #0]
 8009606:	3b01      	subs	r3, #1
 8009608:	4a37      	ldr	r2, [pc, #220]	; (80096e8 <xTaskResumeAll+0x114>)
 800960a:	6013      	str	r3, [r2, #0]

		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800960c:	4b36      	ldr	r3, [pc, #216]	; (80096e8 <xTaskResumeAll+0x114>)
 800960e:	681b      	ldr	r3, [r3, #0]
 8009610:	2b00      	cmp	r3, #0
 8009612:	d161      	bne.n	80096d8 <xTaskResumeAll+0x104>
		{
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009614:	4b35      	ldr	r3, [pc, #212]	; (80096ec <xTaskResumeAll+0x118>)
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	2b00      	cmp	r3, #0
 800961a:	d05d      	beq.n	80096d8 <xTaskResumeAll+0x104>
			{
				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800961c:	e02e      	b.n	800967c <xTaskResumeAll+0xa8>
				{
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800961e:	4b34      	ldr	r3, [pc, #208]	; (80096f0 <xTaskResumeAll+0x11c>)
 8009620:	68db      	ldr	r3, [r3, #12]
 8009622:	68db      	ldr	r3, [r3, #12]
 8009624:	60fb      	str	r3, [r7, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009626:	68fb      	ldr	r3, [r7, #12]
 8009628:	3318      	adds	r3, #24
 800962a:	4618      	mov	r0, r3
 800962c:	f7fe fdd0 	bl	80081d0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009630:	68fb      	ldr	r3, [r7, #12]
 8009632:	3304      	adds	r3, #4
 8009634:	4618      	mov	r0, r3
 8009636:	f7fe fdcb 	bl	80081d0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800963a:	68fb      	ldr	r3, [r7, #12]
 800963c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800963e:	2201      	movs	r2, #1
 8009640:	409a      	lsls	r2, r3
 8009642:	4b2c      	ldr	r3, [pc, #176]	; (80096f4 <xTaskResumeAll+0x120>)
 8009644:	681b      	ldr	r3, [r3, #0]
 8009646:	4313      	orrs	r3, r2
 8009648:	4a2a      	ldr	r2, [pc, #168]	; (80096f4 <xTaskResumeAll+0x120>)
 800964a:	6013      	str	r3, [r2, #0]
 800964c:	68fb      	ldr	r3, [r7, #12]
 800964e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009650:	4613      	mov	r3, r2
 8009652:	009b      	lsls	r3, r3, #2
 8009654:	4413      	add	r3, r2
 8009656:	009b      	lsls	r3, r3, #2
 8009658:	4a27      	ldr	r2, [pc, #156]	; (80096f8 <xTaskResumeAll+0x124>)
 800965a:	441a      	add	r2, r3
 800965c:	68fb      	ldr	r3, [r7, #12]
 800965e:	3304      	adds	r3, #4
 8009660:	4619      	mov	r1, r3
 8009662:	4610      	mov	r0, r2
 8009664:	f7fe fd57 	bl	8008116 <vListInsertEnd>

					/* If the moved task has a priority higher than the current
					task then a yield must be performed. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009668:	68fb      	ldr	r3, [r7, #12]
 800966a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800966c:	4b23      	ldr	r3, [pc, #140]	; (80096fc <xTaskResumeAll+0x128>)
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009672:	429a      	cmp	r2, r3
 8009674:	d302      	bcc.n	800967c <xTaskResumeAll+0xa8>
					{
						xYieldPending = pdTRUE;
 8009676:	4b22      	ldr	r3, [pc, #136]	; (8009700 <xTaskResumeAll+0x12c>)
 8009678:	2201      	movs	r2, #1
 800967a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800967c:	4b1c      	ldr	r3, [pc, #112]	; (80096f0 <xTaskResumeAll+0x11c>)
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	2b00      	cmp	r3, #0
 8009682:	d1cc      	bne.n	800961e <xTaskResumeAll+0x4a>
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( pxTCB != NULL )
 8009684:	68fb      	ldr	r3, [r7, #12]
 8009686:	2b00      	cmp	r3, #0
 8009688:	d001      	beq.n	800968e <xTaskResumeAll+0xba>
					which may have prevented the next unblock time from being
					re-calculated, in which case re-calculate it now.  Mainly
					important for low power tickless implementations, where
					this can prevent an unnecessary exit from low power
					state. */
					prvResetNextTaskUnblockTime();
 800968a:	f000 fb0b 	bl	8009ca4 <prvResetNextTaskUnblockTime>
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does
				not	slip, and that any delayed tasks are resumed at the correct
				time. */
				{
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800968e:	4b1d      	ldr	r3, [pc, #116]	; (8009704 <xTaskResumeAll+0x130>)
 8009690:	681b      	ldr	r3, [r3, #0]
 8009692:	607b      	str	r3, [r7, #4]

					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	2b00      	cmp	r3, #0
 8009698:	d010      	beq.n	80096bc <xTaskResumeAll+0xe8>
					{
						do
						{
							if( xTaskIncrementTick() != pdFALSE )
 800969a:	f000 f837 	bl	800970c <xTaskIncrementTick>
 800969e:	4603      	mov	r3, r0
 80096a0:	2b00      	cmp	r3, #0
 80096a2:	d002      	beq.n	80096aa <xTaskResumeAll+0xd6>
							{
								xYieldPending = pdTRUE;
 80096a4:	4b16      	ldr	r3, [pc, #88]	; (8009700 <xTaskResumeAll+0x12c>)
 80096a6:	2201      	movs	r2, #1
 80096a8:	601a      	str	r2, [r3, #0]
							}
							else
							{
								mtCOVERAGE_TEST_MARKER();
							}
							--uxPendedCounts;
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	3b01      	subs	r3, #1
 80096ae:	607b      	str	r3, [r7, #4]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 80096b0:	687b      	ldr	r3, [r7, #4]
 80096b2:	2b00      	cmp	r3, #0
 80096b4:	d1f1      	bne.n	800969a <xTaskResumeAll+0xc6>

						uxPendedTicks = 0;
 80096b6:	4b13      	ldr	r3, [pc, #76]	; (8009704 <xTaskResumeAll+0x130>)
 80096b8:	2200      	movs	r2, #0
 80096ba:	601a      	str	r2, [r3, #0]
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( xYieldPending != pdFALSE )
 80096bc:	4b10      	ldr	r3, [pc, #64]	; (8009700 <xTaskResumeAll+0x12c>)
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d009      	beq.n	80096d8 <xTaskResumeAll+0x104>
				{
					#if( configUSE_PREEMPTION != 0 )
					{
						xAlreadyYielded = pdTRUE;
 80096c4:	2301      	movs	r3, #1
 80096c6:	60bb      	str	r3, [r7, #8]
					}
					#endif
					taskYIELD_IF_USING_PREEMPTION();
 80096c8:	4b0f      	ldr	r3, [pc, #60]	; (8009708 <xTaskResumeAll+0x134>)
 80096ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096ce:	601a      	str	r2, [r3, #0]
 80096d0:	f3bf 8f4f 	dsb	sy
 80096d4:	f3bf 8f6f 	isb	sy
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 80096d8:	f7fe fef6 	bl	80084c8 <vPortExitCritical>

	return xAlreadyYielded;
 80096dc:	68bb      	ldr	r3, [r7, #8]
}
 80096de:	4618      	mov	r0, r3
 80096e0:	3710      	adds	r7, #16
 80096e2:	46bd      	mov	sp, r7
 80096e4:	bd80      	pop	{r7, pc}
 80096e6:	bf00      	nop
 80096e8:	20008980 	.word	0x20008980
 80096ec:	20008958 	.word	0x20008958
 80096f0:	20008918 	.word	0x20008918
 80096f4:	20008960 	.word	0x20008960
 80096f8:	2000885c 	.word	0x2000885c
 80096fc:	20008858 	.word	0x20008858
 8009700:	2000896c 	.word	0x2000896c
 8009704:	20008968 	.word	0x20008968
 8009708:	e000ed04 	.word	0xe000ed04

0800970c <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
 800970c:	b580      	push	{r7, lr}
 800970e:	b086      	sub	sp, #24
 8009710:	af00      	add	r7, sp, #0
TCB_t * pxTCB;
TickType_t xItemValue;
BaseType_t xSwitchRequired = pdFALSE;
 8009712:	2300      	movs	r3, #0
 8009714:	617b      	str	r3, [r7, #20]

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009716:	4b4e      	ldr	r3, [pc, #312]	; (8009850 <xTaskIncrementTick+0x144>)
 8009718:	681b      	ldr	r3, [r3, #0]
 800971a:	2b00      	cmp	r3, #0
 800971c:	f040 8087 	bne.w	800982e <xTaskIncrementTick+0x122>
	{
		/* Minor optimisation.  The tick count cannot change in this
		block. */
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009720:	4b4c      	ldr	r3, [pc, #304]	; (8009854 <xTaskIncrementTick+0x148>)
 8009722:	681b      	ldr	r3, [r3, #0]
 8009724:	3301      	adds	r3, #1
 8009726:	613b      	str	r3, [r7, #16]

		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		xTickCount = xConstTickCount;
 8009728:	4a4a      	ldr	r2, [pc, #296]	; (8009854 <xTaskIncrementTick+0x148>)
 800972a:	693b      	ldr	r3, [r7, #16]
 800972c:	6013      	str	r3, [r2, #0]

		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800972e:	693b      	ldr	r3, [r7, #16]
 8009730:	2b00      	cmp	r3, #0
 8009732:	d11f      	bne.n	8009774 <xTaskIncrementTick+0x68>
		{
			taskSWITCH_DELAYED_LISTS();
 8009734:	4b48      	ldr	r3, [pc, #288]	; (8009858 <xTaskIncrementTick+0x14c>)
 8009736:	681b      	ldr	r3, [r3, #0]
 8009738:	681b      	ldr	r3, [r3, #0]
 800973a:	2b00      	cmp	r3, #0
 800973c:	d009      	beq.n	8009752 <xTaskIncrementTick+0x46>
 800973e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009742:	f383 8811 	msr	BASEPRI, r3
 8009746:	f3bf 8f6f 	isb	sy
 800974a:	f3bf 8f4f 	dsb	sy
 800974e:	603b      	str	r3, [r7, #0]
 8009750:	e7fe      	b.n	8009750 <xTaskIncrementTick+0x44>
 8009752:	4b41      	ldr	r3, [pc, #260]	; (8009858 <xTaskIncrementTick+0x14c>)
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	60fb      	str	r3, [r7, #12]
 8009758:	4b40      	ldr	r3, [pc, #256]	; (800985c <xTaskIncrementTick+0x150>)
 800975a:	681b      	ldr	r3, [r3, #0]
 800975c:	4a3e      	ldr	r2, [pc, #248]	; (8009858 <xTaskIncrementTick+0x14c>)
 800975e:	6013      	str	r3, [r2, #0]
 8009760:	4a3e      	ldr	r2, [pc, #248]	; (800985c <xTaskIncrementTick+0x150>)
 8009762:	68fb      	ldr	r3, [r7, #12]
 8009764:	6013      	str	r3, [r2, #0]
 8009766:	4b3e      	ldr	r3, [pc, #248]	; (8009860 <xTaskIncrementTick+0x154>)
 8009768:	681b      	ldr	r3, [r3, #0]
 800976a:	3301      	adds	r3, #1
 800976c:	4a3c      	ldr	r2, [pc, #240]	; (8009860 <xTaskIncrementTick+0x154>)
 800976e:	6013      	str	r3, [r2, #0]
 8009770:	f000 fa98 	bl	8009ca4 <prvResetNextTaskUnblockTime>

		/* See if this tick has made a timeout expire.  Tasks are stored in
		the	queue in the order of their wake time - meaning once one task
		has been found whose block time has not expired there is no need to
		look any further down the list. */
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009774:	4b3b      	ldr	r3, [pc, #236]	; (8009864 <xTaskIncrementTick+0x158>)
 8009776:	681b      	ldr	r3, [r3, #0]
 8009778:	693a      	ldr	r2, [r7, #16]
 800977a:	429a      	cmp	r2, r3
 800977c:	d348      	bcc.n	8009810 <xTaskIncrementTick+0x104>
		{
			for( ;; )
			{
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800977e:	4b36      	ldr	r3, [pc, #216]	; (8009858 <xTaskIncrementTick+0x14c>)
 8009780:	681b      	ldr	r3, [r3, #0]
 8009782:	681b      	ldr	r3, [r3, #0]
 8009784:	2b00      	cmp	r3, #0
 8009786:	d104      	bne.n	8009792 <xTaskIncrementTick+0x86>
					/* The delayed list is empty.  Set xNextTaskUnblockTime
					to the maximum possible value so it is extremely
					unlikely that the
					if( xTickCount >= xNextTaskUnblockTime ) test will pass
					next time through. */
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009788:	4b36      	ldr	r3, [pc, #216]	; (8009864 <xTaskIncrementTick+0x158>)
 800978a:	f04f 32ff 	mov.w	r2, #4294967295
 800978e:	601a      	str	r2, [r3, #0]
					break;
 8009790:	e03e      	b.n	8009810 <xTaskIncrementTick+0x104>
				{
					/* The delayed list is not empty, get the value of the
					item at the head of the delayed list.  This is the time
					at which the task at the head of the delayed list must
					be removed from the Blocked state. */
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009792:	4b31      	ldr	r3, [pc, #196]	; (8009858 <xTaskIncrementTick+0x14c>)
 8009794:	681b      	ldr	r3, [r3, #0]
 8009796:	68db      	ldr	r3, [r3, #12]
 8009798:	68db      	ldr	r3, [r3, #12]
 800979a:	60bb      	str	r3, [r7, #8]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800979c:	68bb      	ldr	r3, [r7, #8]
 800979e:	685b      	ldr	r3, [r3, #4]
 80097a0:	607b      	str	r3, [r7, #4]

					if( xConstTickCount < xItemValue )
 80097a2:	693a      	ldr	r2, [r7, #16]
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	429a      	cmp	r2, r3
 80097a8:	d203      	bcs.n	80097b2 <xTaskIncrementTick+0xa6>
						/* It is not time to unblock this item yet, but the
						item value is the time at which the task at the head
						of the blocked list must be removed from the Blocked
						state -	so record the item value in
						xNextTaskUnblockTime. */
						xNextTaskUnblockTime = xItemValue;
 80097aa:	4a2e      	ldr	r2, [pc, #184]	; (8009864 <xTaskIncrementTick+0x158>)
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80097b0:	e02e      	b.n	8009810 <xTaskIncrementTick+0x104>
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* It is time to remove the item from the Blocked state. */
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80097b2:	68bb      	ldr	r3, [r7, #8]
 80097b4:	3304      	adds	r3, #4
 80097b6:	4618      	mov	r0, r3
 80097b8:	f7fe fd0a 	bl	80081d0 <uxListRemove>

					/* Is the task waiting on an event also?  If so remove
					it from the event list. */
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80097bc:	68bb      	ldr	r3, [r7, #8]
 80097be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80097c0:	2b00      	cmp	r3, #0
 80097c2:	d004      	beq.n	80097ce <xTaskIncrementTick+0xc2>
					{
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80097c4:	68bb      	ldr	r3, [r7, #8]
 80097c6:	3318      	adds	r3, #24
 80097c8:	4618      	mov	r0, r3
 80097ca:	f7fe fd01 	bl	80081d0 <uxListRemove>
						mtCOVERAGE_TEST_MARKER();
					}

					/* Place the unblocked task into the appropriate ready
					list. */
					prvAddTaskToReadyList( pxTCB );
 80097ce:	68bb      	ldr	r3, [r7, #8]
 80097d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097d2:	2201      	movs	r2, #1
 80097d4:	409a      	lsls	r2, r3
 80097d6:	4b24      	ldr	r3, [pc, #144]	; (8009868 <xTaskIncrementTick+0x15c>)
 80097d8:	681b      	ldr	r3, [r3, #0]
 80097da:	4313      	orrs	r3, r2
 80097dc:	4a22      	ldr	r2, [pc, #136]	; (8009868 <xTaskIncrementTick+0x15c>)
 80097de:	6013      	str	r3, [r2, #0]
 80097e0:	68bb      	ldr	r3, [r7, #8]
 80097e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80097e4:	4613      	mov	r3, r2
 80097e6:	009b      	lsls	r3, r3, #2
 80097e8:	4413      	add	r3, r2
 80097ea:	009b      	lsls	r3, r3, #2
 80097ec:	4a1f      	ldr	r2, [pc, #124]	; (800986c <xTaskIncrementTick+0x160>)
 80097ee:	441a      	add	r2, r3
 80097f0:	68bb      	ldr	r3, [r7, #8]
 80097f2:	3304      	adds	r3, #4
 80097f4:	4619      	mov	r1, r3
 80097f6:	4610      	mov	r0, r2
 80097f8:	f7fe fc8d 	bl	8008116 <vListInsertEnd>
					{
						/* Preemption is on, but a context switch should
						only be performed if the unblocked task has a
						priority that is equal to or higher than the
						currently executing task. */
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80097fc:	68bb      	ldr	r3, [r7, #8]
 80097fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009800:	4b1b      	ldr	r3, [pc, #108]	; (8009870 <xTaskIncrementTick+0x164>)
 8009802:	681b      	ldr	r3, [r3, #0]
 8009804:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009806:	429a      	cmp	r2, r3
 8009808:	d3b9      	bcc.n	800977e <xTaskIncrementTick+0x72>
						{
							xSwitchRequired = pdTRUE;
 800980a:	2301      	movs	r3, #1
 800980c:	617b      	str	r3, [r7, #20]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800980e:	e7b6      	b.n	800977e <xTaskIncrementTick+0x72>
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009810:	4b17      	ldr	r3, [pc, #92]	; (8009870 <xTaskIncrementTick+0x164>)
 8009812:	681b      	ldr	r3, [r3, #0]
 8009814:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009816:	4915      	ldr	r1, [pc, #84]	; (800986c <xTaskIncrementTick+0x160>)
 8009818:	4613      	mov	r3, r2
 800981a:	009b      	lsls	r3, r3, #2
 800981c:	4413      	add	r3, r2
 800981e:	009b      	lsls	r3, r3, #2
 8009820:	440b      	add	r3, r1
 8009822:	681b      	ldr	r3, [r3, #0]
 8009824:	2b01      	cmp	r3, #1
 8009826:	d907      	bls.n	8009838 <xTaskIncrementTick+0x12c>
			{
				xSwitchRequired = pdTRUE;
 8009828:	2301      	movs	r3, #1
 800982a:	617b      	str	r3, [r7, #20]
 800982c:	e004      	b.n	8009838 <xTaskIncrementTick+0x12c>
		}
		#endif /* configUSE_TICK_HOOK */
	}
	else
	{
		++uxPendedTicks;
 800982e:	4b11      	ldr	r3, [pc, #68]	; (8009874 <xTaskIncrementTick+0x168>)
 8009830:	681b      	ldr	r3, [r3, #0]
 8009832:	3301      	adds	r3, #1
 8009834:	4a0f      	ldr	r2, [pc, #60]	; (8009874 <xTaskIncrementTick+0x168>)
 8009836:	6013      	str	r3, [r2, #0]
		#endif
	}

	#if ( configUSE_PREEMPTION == 1 )
	{
		if( xYieldPending != pdFALSE )
 8009838:	4b0f      	ldr	r3, [pc, #60]	; (8009878 <xTaskIncrementTick+0x16c>)
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	2b00      	cmp	r3, #0
 800983e:	d001      	beq.n	8009844 <xTaskIncrementTick+0x138>
		{
			xSwitchRequired = pdTRUE;
 8009840:	2301      	movs	r3, #1
 8009842:	617b      	str	r3, [r7, #20]
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_PREEMPTION */

	return xSwitchRequired;
 8009844:	697b      	ldr	r3, [r7, #20]
}
 8009846:	4618      	mov	r0, r3
 8009848:	3718      	adds	r7, #24
 800984a:	46bd      	mov	sp, r7
 800984c:	bd80      	pop	{r7, pc}
 800984e:	bf00      	nop
 8009850:	20008980 	.word	0x20008980
 8009854:	2000895c 	.word	0x2000895c
 8009858:	20008910 	.word	0x20008910
 800985c:	20008914 	.word	0x20008914
 8009860:	20008970 	.word	0x20008970
 8009864:	20008978 	.word	0x20008978
 8009868:	20008960 	.word	0x20008960
 800986c:	2000885c 	.word	0x2000885c
 8009870:	20008858 	.word	0x20008858
 8009874:	20008968 	.word	0x20008968
 8009878:	2000896c 	.word	0x2000896c

0800987c <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
 800987c:	b480      	push	{r7}
 800987e:	b087      	sub	sp, #28
 8009880:	af00      	add	r7, sp, #0
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009882:	4b26      	ldr	r3, [pc, #152]	; (800991c <vTaskSwitchContext+0xa0>)
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	2b00      	cmp	r3, #0
 8009888:	d003      	beq.n	8009892 <vTaskSwitchContext+0x16>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xYieldPending = pdTRUE;
 800988a:	4b25      	ldr	r3, [pc, #148]	; (8009920 <vTaskSwitchContext+0xa4>)
 800988c:	2201      	movs	r2, #1
 800988e:	601a      	str	r2, [r3, #0]
			structure specific to this task. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */
	}
}
 8009890:	e03e      	b.n	8009910 <vTaskSwitchContext+0x94>
		xYieldPending = pdFALSE;
 8009892:	4b23      	ldr	r3, [pc, #140]	; (8009920 <vTaskSwitchContext+0xa4>)
 8009894:	2200      	movs	r2, #0
 8009896:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009898:	4b22      	ldr	r3, [pc, #136]	; (8009924 <vTaskSwitchContext+0xa8>)
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	60fb      	str	r3, [r7, #12]
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 800989e:	68fb      	ldr	r3, [r7, #12]
 80098a0:	fab3 f383 	clz	r3, r3
 80098a4:	72fb      	strb	r3, [r7, #11]
		return ucReturn;
 80098a6:	7afb      	ldrb	r3, [r7, #11]
 80098a8:	f1c3 031f 	rsb	r3, r3, #31
 80098ac:	617b      	str	r3, [r7, #20]
 80098ae:	491e      	ldr	r1, [pc, #120]	; (8009928 <vTaskSwitchContext+0xac>)
 80098b0:	697a      	ldr	r2, [r7, #20]
 80098b2:	4613      	mov	r3, r2
 80098b4:	009b      	lsls	r3, r3, #2
 80098b6:	4413      	add	r3, r2
 80098b8:	009b      	lsls	r3, r3, #2
 80098ba:	440b      	add	r3, r1
 80098bc:	681b      	ldr	r3, [r3, #0]
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d109      	bne.n	80098d6 <vTaskSwitchContext+0x5a>
	__asm volatile
 80098c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098c6:	f383 8811 	msr	BASEPRI, r3
 80098ca:	f3bf 8f6f 	isb	sy
 80098ce:	f3bf 8f4f 	dsb	sy
 80098d2:	607b      	str	r3, [r7, #4]
 80098d4:	e7fe      	b.n	80098d4 <vTaskSwitchContext+0x58>
 80098d6:	697a      	ldr	r2, [r7, #20]
 80098d8:	4613      	mov	r3, r2
 80098da:	009b      	lsls	r3, r3, #2
 80098dc:	4413      	add	r3, r2
 80098de:	009b      	lsls	r3, r3, #2
 80098e0:	4a11      	ldr	r2, [pc, #68]	; (8009928 <vTaskSwitchContext+0xac>)
 80098e2:	4413      	add	r3, r2
 80098e4:	613b      	str	r3, [r7, #16]
 80098e6:	693b      	ldr	r3, [r7, #16]
 80098e8:	685b      	ldr	r3, [r3, #4]
 80098ea:	685a      	ldr	r2, [r3, #4]
 80098ec:	693b      	ldr	r3, [r7, #16]
 80098ee:	605a      	str	r2, [r3, #4]
 80098f0:	693b      	ldr	r3, [r7, #16]
 80098f2:	685a      	ldr	r2, [r3, #4]
 80098f4:	693b      	ldr	r3, [r7, #16]
 80098f6:	3308      	adds	r3, #8
 80098f8:	429a      	cmp	r2, r3
 80098fa:	d104      	bne.n	8009906 <vTaskSwitchContext+0x8a>
 80098fc:	693b      	ldr	r3, [r7, #16]
 80098fe:	685b      	ldr	r3, [r3, #4]
 8009900:	685a      	ldr	r2, [r3, #4]
 8009902:	693b      	ldr	r3, [r7, #16]
 8009904:	605a      	str	r2, [r3, #4]
 8009906:	693b      	ldr	r3, [r7, #16]
 8009908:	685b      	ldr	r3, [r3, #4]
 800990a:	68db      	ldr	r3, [r3, #12]
 800990c:	4a07      	ldr	r2, [pc, #28]	; (800992c <vTaskSwitchContext+0xb0>)
 800990e:	6013      	str	r3, [r2, #0]
}
 8009910:	bf00      	nop
 8009912:	371c      	adds	r7, #28
 8009914:	46bd      	mov	sp, r7
 8009916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991a:	4770      	bx	lr
 800991c:	20008980 	.word	0x20008980
 8009920:	2000896c 	.word	0x2000896c
 8009924:	20008960 	.word	0x20008960
 8009928:	2000885c 	.word	0x2000885c
 800992c:	20008858 	.word	0x20008858

08009930 <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
{
 8009930:	b580      	push	{r7, lr}
 8009932:	b084      	sub	sp, #16
 8009934:	af00      	add	r7, sp, #0
 8009936:	6078      	str	r0, [r7, #4]
 8009938:	6039      	str	r1, [r7, #0]
	configASSERT( pxEventList );
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	2b00      	cmp	r3, #0
 800993e:	d109      	bne.n	8009954 <vTaskPlaceOnEventList+0x24>
 8009940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009944:	f383 8811 	msr	BASEPRI, r3
 8009948:	f3bf 8f6f 	isb	sy
 800994c:	f3bf 8f4f 	dsb	sy
 8009950:	60fb      	str	r3, [r7, #12]
 8009952:	e7fe      	b.n	8009952 <vTaskPlaceOnEventList+0x22>

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event.  The queue that contains the event
	list is locked, preventing simultaneous access from interrupts. */
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009954:	4b07      	ldr	r3, [pc, #28]	; (8009974 <vTaskPlaceOnEventList+0x44>)
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	3318      	adds	r3, #24
 800995a:	4619      	mov	r1, r3
 800995c:	6878      	ldr	r0, [r7, #4]
 800995e:	f7fe fbfe 	bl	800815e <vListInsert>

	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009962:	2101      	movs	r1, #1
 8009964:	6838      	ldr	r0, [r7, #0]
 8009966:	f000 fb8b 	bl	800a080 <prvAddCurrentTaskToDelayedList>
}
 800996a:	bf00      	nop
 800996c:	3710      	adds	r7, #16
 800996e:	46bd      	mov	sp, r7
 8009970:	bd80      	pop	{r7, pc}
 8009972:	bf00      	nop
 8009974:	20008858 	.word	0x20008858

08009978 <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
{
 8009978:	b580      	push	{r7, lr}
 800997a:	b086      	sub	sp, #24
 800997c:	af00      	add	r7, sp, #0
 800997e:	6078      	str	r0, [r7, #4]
	get called - the lock count on the queue will get modified instead.  This
	means exclusive access to the event list is guaranteed here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	68db      	ldr	r3, [r3, #12]
 8009984:	68db      	ldr	r3, [r3, #12]
 8009986:	613b      	str	r3, [r7, #16]
	configASSERT( pxUnblockedTCB );
 8009988:	693b      	ldr	r3, [r7, #16]
 800998a:	2b00      	cmp	r3, #0
 800998c:	d109      	bne.n	80099a2 <xTaskRemoveFromEventList+0x2a>
 800998e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009992:	f383 8811 	msr	BASEPRI, r3
 8009996:	f3bf 8f6f 	isb	sy
 800999a:	f3bf 8f4f 	dsb	sy
 800999e:	60fb      	str	r3, [r7, #12]
 80099a0:	e7fe      	b.n	80099a0 <xTaskRemoveFromEventList+0x28>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80099a2:	693b      	ldr	r3, [r7, #16]
 80099a4:	3318      	adds	r3, #24
 80099a6:	4618      	mov	r0, r3
 80099a8:	f7fe fc12 	bl	80081d0 <uxListRemove>

	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80099ac:	4b1d      	ldr	r3, [pc, #116]	; (8009a24 <xTaskRemoveFromEventList+0xac>)
 80099ae:	681b      	ldr	r3, [r3, #0]
 80099b0:	2b00      	cmp	r3, #0
 80099b2:	d11c      	bne.n	80099ee <xTaskRemoveFromEventList+0x76>
	{
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80099b4:	693b      	ldr	r3, [r7, #16]
 80099b6:	3304      	adds	r3, #4
 80099b8:	4618      	mov	r0, r3
 80099ba:	f7fe fc09 	bl	80081d0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80099be:	693b      	ldr	r3, [r7, #16]
 80099c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099c2:	2201      	movs	r2, #1
 80099c4:	409a      	lsls	r2, r3
 80099c6:	4b18      	ldr	r3, [pc, #96]	; (8009a28 <xTaskRemoveFromEventList+0xb0>)
 80099c8:	681b      	ldr	r3, [r3, #0]
 80099ca:	4313      	orrs	r3, r2
 80099cc:	4a16      	ldr	r2, [pc, #88]	; (8009a28 <xTaskRemoveFromEventList+0xb0>)
 80099ce:	6013      	str	r3, [r2, #0]
 80099d0:	693b      	ldr	r3, [r7, #16]
 80099d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099d4:	4613      	mov	r3, r2
 80099d6:	009b      	lsls	r3, r3, #2
 80099d8:	4413      	add	r3, r2
 80099da:	009b      	lsls	r3, r3, #2
 80099dc:	4a13      	ldr	r2, [pc, #76]	; (8009a2c <xTaskRemoveFromEventList+0xb4>)
 80099de:	441a      	add	r2, r3
 80099e0:	693b      	ldr	r3, [r7, #16]
 80099e2:	3304      	adds	r3, #4
 80099e4:	4619      	mov	r1, r3
 80099e6:	4610      	mov	r0, r2
 80099e8:	f7fe fb95 	bl	8008116 <vListInsertEnd>
 80099ec:	e005      	b.n	80099fa <xTaskRemoveFromEventList+0x82>
	}
	else
	{
		/* The delayed and ready lists cannot be accessed, so hold this task
		pending until the scheduler is resumed. */
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80099ee:	693b      	ldr	r3, [r7, #16]
 80099f0:	3318      	adds	r3, #24
 80099f2:	4619      	mov	r1, r3
 80099f4:	480e      	ldr	r0, [pc, #56]	; (8009a30 <xTaskRemoveFromEventList+0xb8>)
 80099f6:	f7fe fb8e 	bl	8008116 <vListInsertEnd>
	}

	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80099fa:	693b      	ldr	r3, [r7, #16]
 80099fc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099fe:	4b0d      	ldr	r3, [pc, #52]	; (8009a34 <xTaskRemoveFromEventList+0xbc>)
 8009a00:	681b      	ldr	r3, [r3, #0]
 8009a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a04:	429a      	cmp	r2, r3
 8009a06:	d905      	bls.n	8009a14 <xTaskRemoveFromEventList+0x9c>
	{
		/* Return true if the task removed from the event list has a higher
		priority than the calling task.  This allows the calling task to know if
		it should force a context switch now. */
		xReturn = pdTRUE;
 8009a08:	2301      	movs	r3, #1
 8009a0a:	617b      	str	r3, [r7, #20]

		/* Mark that a yield is pending in case the user is not using the
		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
		xYieldPending = pdTRUE;
 8009a0c:	4b0a      	ldr	r3, [pc, #40]	; (8009a38 <xTaskRemoveFromEventList+0xc0>)
 8009a0e:	2201      	movs	r2, #1
 8009a10:	601a      	str	r2, [r3, #0]
 8009a12:	e001      	b.n	8009a18 <xTaskRemoveFromEventList+0xa0>
	}
	else
	{
		xReturn = pdFALSE;
 8009a14:	2300      	movs	r3, #0
 8009a16:	617b      	str	r3, [r7, #20]
	}

	return xReturn;
 8009a18:	697b      	ldr	r3, [r7, #20]
}
 8009a1a:	4618      	mov	r0, r3
 8009a1c:	3718      	adds	r7, #24
 8009a1e:	46bd      	mov	sp, r7
 8009a20:	bd80      	pop	{r7, pc}
 8009a22:	bf00      	nop
 8009a24:	20008980 	.word	0x20008980
 8009a28:	20008960 	.word	0x20008960
 8009a2c:	2000885c 	.word	0x2000885c
 8009a30:	20008918 	.word	0x20008918
 8009a34:	20008858 	.word	0x20008858
 8009a38:	2000896c 	.word	0x2000896c

08009a3c <vTaskInternalSetTimeOutState>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
{
 8009a3c:	b480      	push	{r7}
 8009a3e:	b083      	sub	sp, #12
 8009a40:	af00      	add	r7, sp, #0
 8009a42:	6078      	str	r0, [r7, #4]
	/* For internal use only as it does not use a critical section. */
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009a44:	4b06      	ldr	r3, [pc, #24]	; (8009a60 <vTaskInternalSetTimeOutState+0x24>)
 8009a46:	681a      	ldr	r2, [r3, #0]
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	601a      	str	r2, [r3, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009a4c:	4b05      	ldr	r3, [pc, #20]	; (8009a64 <vTaskInternalSetTimeOutState+0x28>)
 8009a4e:	681a      	ldr	r2, [r3, #0]
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	605a      	str	r2, [r3, #4]
}
 8009a54:	bf00      	nop
 8009a56:	370c      	adds	r7, #12
 8009a58:	46bd      	mov	sp, r7
 8009a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a5e:	4770      	bx	lr
 8009a60:	20008970 	.word	0x20008970
 8009a64:	2000895c 	.word	0x2000895c

08009a68 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
{
 8009a68:	b580      	push	{r7, lr}
 8009a6a:	b088      	sub	sp, #32
 8009a6c:	af00      	add	r7, sp, #0
 8009a6e:	6078      	str	r0, [r7, #4]
 8009a70:	6039      	str	r1, [r7, #0]
BaseType_t xReturn;

	configASSERT( pxTimeOut );
 8009a72:	687b      	ldr	r3, [r7, #4]
 8009a74:	2b00      	cmp	r3, #0
 8009a76:	d109      	bne.n	8009a8c <xTaskCheckForTimeOut+0x24>
 8009a78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a7c:	f383 8811 	msr	BASEPRI, r3
 8009a80:	f3bf 8f6f 	isb	sy
 8009a84:	f3bf 8f4f 	dsb	sy
 8009a88:	613b      	str	r3, [r7, #16]
 8009a8a:	e7fe      	b.n	8009a8a <xTaskCheckForTimeOut+0x22>
	configASSERT( pxTicksToWait );
 8009a8c:	683b      	ldr	r3, [r7, #0]
 8009a8e:	2b00      	cmp	r3, #0
 8009a90:	d109      	bne.n	8009aa6 <xTaskCheckForTimeOut+0x3e>
 8009a92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a96:	f383 8811 	msr	BASEPRI, r3
 8009a9a:	f3bf 8f6f 	isb	sy
 8009a9e:	f3bf 8f4f 	dsb	sy
 8009aa2:	60fb      	str	r3, [r7, #12]
 8009aa4:	e7fe      	b.n	8009aa4 <xTaskCheckForTimeOut+0x3c>

	taskENTER_CRITICAL();
 8009aa6:	f7fe fce1 	bl	800846c <vPortEnterCritical>
	{
		/* Minor optimisation.  The tick count cannot change in this block. */
		const TickType_t xConstTickCount = xTickCount;
 8009aaa:	4b1d      	ldr	r3, [pc, #116]	; (8009b20 <xTaskCheckForTimeOut+0xb8>)
 8009aac:	681b      	ldr	r3, [r3, #0]
 8009aae:	61bb      	str	r3, [r7, #24]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	685b      	ldr	r3, [r3, #4]
 8009ab4:	69ba      	ldr	r2, [r7, #24]
 8009ab6:	1ad3      	subs	r3, r2, r3
 8009ab8:	617b      	str	r3, [r7, #20]
			}
			else
		#endif

		#if ( INCLUDE_vTaskSuspend == 1 )
			if( *pxTicksToWait == portMAX_DELAY )
 8009aba:	683b      	ldr	r3, [r7, #0]
 8009abc:	681b      	ldr	r3, [r3, #0]
 8009abe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009ac2:	d102      	bne.n	8009aca <xTaskCheckForTimeOut+0x62>
			{
				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
				specified is the maximum block time then the task should block
				indefinitely, and therefore never time out. */
				xReturn = pdFALSE;
 8009ac4:	2300      	movs	r3, #0
 8009ac6:	61fb      	str	r3, [r7, #28]
 8009ac8:	e023      	b.n	8009b12 <xTaskCheckForTimeOut+0xaa>
			}
			else
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	681a      	ldr	r2, [r3, #0]
 8009ace:	4b15      	ldr	r3, [pc, #84]	; (8009b24 <xTaskCheckForTimeOut+0xbc>)
 8009ad0:	681b      	ldr	r3, [r3, #0]
 8009ad2:	429a      	cmp	r2, r3
 8009ad4:	d007      	beq.n	8009ae6 <xTaskCheckForTimeOut+0x7e>
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	685b      	ldr	r3, [r3, #4]
 8009ada:	69ba      	ldr	r2, [r7, #24]
 8009adc:	429a      	cmp	r2, r3
 8009ade:	d302      	bcc.n	8009ae6 <xTaskCheckForTimeOut+0x7e>
			/* The tick count is greater than the time at which
			vTaskSetTimeout() was called, but has also overflowed since
			vTaskSetTimeOut() was called.  It must have wrapped all the way
			around and gone past again. This passed since vTaskSetTimeout()
			was called. */
			xReturn = pdTRUE;
 8009ae0:	2301      	movs	r3, #1
 8009ae2:	61fb      	str	r3, [r7, #28]
 8009ae4:	e015      	b.n	8009b12 <xTaskCheckForTimeOut+0xaa>
		}
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009ae6:	683b      	ldr	r3, [r7, #0]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	697a      	ldr	r2, [r7, #20]
 8009aec:	429a      	cmp	r2, r3
 8009aee:	d20b      	bcs.n	8009b08 <xTaskCheckForTimeOut+0xa0>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= xElapsedTime;
 8009af0:	683b      	ldr	r3, [r7, #0]
 8009af2:	681a      	ldr	r2, [r3, #0]
 8009af4:	697b      	ldr	r3, [r7, #20]
 8009af6:	1ad2      	subs	r2, r2, r3
 8009af8:	683b      	ldr	r3, [r7, #0]
 8009afa:	601a      	str	r2, [r3, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009afc:	6878      	ldr	r0, [r7, #4]
 8009afe:	f7ff ff9d 	bl	8009a3c <vTaskInternalSetTimeOutState>
			xReturn = pdFALSE;
 8009b02:	2300      	movs	r3, #0
 8009b04:	61fb      	str	r3, [r7, #28]
 8009b06:	e004      	b.n	8009b12 <xTaskCheckForTimeOut+0xaa>
		}
		else
		{
			*pxTicksToWait = 0;
 8009b08:	683b      	ldr	r3, [r7, #0]
 8009b0a:	2200      	movs	r2, #0
 8009b0c:	601a      	str	r2, [r3, #0]
			xReturn = pdTRUE;
 8009b0e:	2301      	movs	r3, #1
 8009b10:	61fb      	str	r3, [r7, #28]
		}
	}
	taskEXIT_CRITICAL();
 8009b12:	f7fe fcd9 	bl	80084c8 <vPortExitCritical>

	return xReturn;
 8009b16:	69fb      	ldr	r3, [r7, #28]
}
 8009b18:	4618      	mov	r0, r3
 8009b1a:	3720      	adds	r7, #32
 8009b1c:	46bd      	mov	sp, r7
 8009b1e:	bd80      	pop	{r7, pc}
 8009b20:	2000895c 	.word	0x2000895c
 8009b24:	20008970 	.word	0x20008970

08009b28 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
 8009b28:	b480      	push	{r7}
 8009b2a:	af00      	add	r7, sp, #0
	xYieldPending = pdTRUE;
 8009b2c:	4b03      	ldr	r3, [pc, #12]	; (8009b3c <vTaskMissedYield+0x14>)
 8009b2e:	2201      	movs	r2, #1
 8009b30:	601a      	str	r2, [r3, #0]
}
 8009b32:	bf00      	nop
 8009b34:	46bd      	mov	sp, r7
 8009b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3a:	4770      	bx	lr
 8009b3c:	2000896c 	.word	0x2000896c

08009b40 <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
 8009b40:	b580      	push	{r7, lr}
 8009b42:	b082      	sub	sp, #8
 8009b44:	af00      	add	r7, sp, #0
 8009b46:	6078      	str	r0, [r7, #4]

	for( ;; )
	{
		/* See if any tasks have deleted themselves - if so then the idle task
		is responsible for freeing the deleted task's TCB and stack. */
		prvCheckTasksWaitingTermination();
 8009b48:	f000 f852 	bl	8009bf0 <prvCheckTasksWaitingTermination>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009b4c:	4b06      	ldr	r3, [pc, #24]	; (8009b68 <prvIdleTask+0x28>)
 8009b4e:	681b      	ldr	r3, [r3, #0]
 8009b50:	2b01      	cmp	r3, #1
 8009b52:	d9f9      	bls.n	8009b48 <prvIdleTask+0x8>
			{
				taskYIELD();
 8009b54:	4b05      	ldr	r3, [pc, #20]	; (8009b6c <prvIdleTask+0x2c>)
 8009b56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b5a:	601a      	str	r2, [r3, #0]
 8009b5c:	f3bf 8f4f 	dsb	sy
 8009b60:	f3bf 8f6f 	isb	sy
		prvCheckTasksWaitingTermination();
 8009b64:	e7f0      	b.n	8009b48 <prvIdleTask+0x8>
 8009b66:	bf00      	nop
 8009b68:	2000885c 	.word	0x2000885c
 8009b6c:	e000ed04 	.word	0xe000ed04

08009b70 <prvInitialiseTaskLists>:

#endif /* portUSING_MPU_WRAPPERS */
/*-----------------------------------------------------------*/

static void prvInitialiseTaskLists( void )
{
 8009b70:	b580      	push	{r7, lr}
 8009b72:	b082      	sub	sp, #8
 8009b74:	af00      	add	r7, sp, #0
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009b76:	2300      	movs	r3, #0
 8009b78:	607b      	str	r3, [r7, #4]
 8009b7a:	e00c      	b.n	8009b96 <prvInitialiseTaskLists+0x26>
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009b7c:	687a      	ldr	r2, [r7, #4]
 8009b7e:	4613      	mov	r3, r2
 8009b80:	009b      	lsls	r3, r3, #2
 8009b82:	4413      	add	r3, r2
 8009b84:	009b      	lsls	r3, r3, #2
 8009b86:	4a12      	ldr	r2, [pc, #72]	; (8009bd0 <prvInitialiseTaskLists+0x60>)
 8009b88:	4413      	add	r3, r2
 8009b8a:	4618      	mov	r0, r3
 8009b8c:	f7fe fa96 	bl	80080bc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009b90:	687b      	ldr	r3, [r7, #4]
 8009b92:	3301      	adds	r3, #1
 8009b94:	607b      	str	r3, [r7, #4]
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	2b06      	cmp	r3, #6
 8009b9a:	d9ef      	bls.n	8009b7c <prvInitialiseTaskLists+0xc>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009b9c:	480d      	ldr	r0, [pc, #52]	; (8009bd4 <prvInitialiseTaskLists+0x64>)
 8009b9e:	f7fe fa8d 	bl	80080bc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009ba2:	480d      	ldr	r0, [pc, #52]	; (8009bd8 <prvInitialiseTaskLists+0x68>)
 8009ba4:	f7fe fa8a 	bl	80080bc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009ba8:	480c      	ldr	r0, [pc, #48]	; (8009bdc <prvInitialiseTaskLists+0x6c>)
 8009baa:	f7fe fa87 	bl	80080bc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009bae:	480c      	ldr	r0, [pc, #48]	; (8009be0 <prvInitialiseTaskLists+0x70>)
 8009bb0:	f7fe fa84 	bl	80080bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009bb4:	480b      	ldr	r0, [pc, #44]	; (8009be4 <prvInitialiseTaskLists+0x74>)
 8009bb6:	f7fe fa81 	bl	80080bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009bba:	4b0b      	ldr	r3, [pc, #44]	; (8009be8 <prvInitialiseTaskLists+0x78>)
 8009bbc:	4a05      	ldr	r2, [pc, #20]	; (8009bd4 <prvInitialiseTaskLists+0x64>)
 8009bbe:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009bc0:	4b0a      	ldr	r3, [pc, #40]	; (8009bec <prvInitialiseTaskLists+0x7c>)
 8009bc2:	4a05      	ldr	r2, [pc, #20]	; (8009bd8 <prvInitialiseTaskLists+0x68>)
 8009bc4:	601a      	str	r2, [r3, #0]
}
 8009bc6:	bf00      	nop
 8009bc8:	3708      	adds	r7, #8
 8009bca:	46bd      	mov	sp, r7
 8009bcc:	bd80      	pop	{r7, pc}
 8009bce:	bf00      	nop
 8009bd0:	2000885c 	.word	0x2000885c
 8009bd4:	200088e8 	.word	0x200088e8
 8009bd8:	200088fc 	.word	0x200088fc
 8009bdc:	20008918 	.word	0x20008918
 8009be0:	2000892c 	.word	0x2000892c
 8009be4:	20008944 	.word	0x20008944
 8009be8:	20008910 	.word	0x20008910
 8009bec:	20008914 	.word	0x20008914

08009bf0 <prvCheckTasksWaitingTermination>:
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
 8009bf0:	b580      	push	{r7, lr}
 8009bf2:	b082      	sub	sp, #8
 8009bf4:	af00      	add	r7, sp, #0
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009bf6:	e019      	b.n	8009c2c <prvCheckTasksWaitingTermination+0x3c>
		{
			taskENTER_CRITICAL();
 8009bf8:	f7fe fc38 	bl	800846c <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009bfc:	4b0f      	ldr	r3, [pc, #60]	; (8009c3c <prvCheckTasksWaitingTermination+0x4c>)
 8009bfe:	68db      	ldr	r3, [r3, #12]
 8009c00:	68db      	ldr	r3, [r3, #12]
 8009c02:	607b      	str	r3, [r7, #4]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	3304      	adds	r3, #4
 8009c08:	4618      	mov	r0, r3
 8009c0a:	f7fe fae1 	bl	80081d0 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009c0e:	4b0c      	ldr	r3, [pc, #48]	; (8009c40 <prvCheckTasksWaitingTermination+0x50>)
 8009c10:	681b      	ldr	r3, [r3, #0]
 8009c12:	3b01      	subs	r3, #1
 8009c14:	4a0a      	ldr	r2, [pc, #40]	; (8009c40 <prvCheckTasksWaitingTermination+0x50>)
 8009c16:	6013      	str	r3, [r2, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009c18:	4b0a      	ldr	r3, [pc, #40]	; (8009c44 <prvCheckTasksWaitingTermination+0x54>)
 8009c1a:	681b      	ldr	r3, [r3, #0]
 8009c1c:	3b01      	subs	r3, #1
 8009c1e:	4a09      	ldr	r2, [pc, #36]	; (8009c44 <prvCheckTasksWaitingTermination+0x54>)
 8009c20:	6013      	str	r3, [r2, #0]
			}
			taskEXIT_CRITICAL();
 8009c22:	f7fe fc51 	bl	80084c8 <vPortExitCritical>

			prvDeleteTCB( pxTCB );
 8009c26:	6878      	ldr	r0, [r7, #4]
 8009c28:	f000 f80e 	bl	8009c48 <prvDeleteTCB>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009c2c:	4b05      	ldr	r3, [pc, #20]	; (8009c44 <prvCheckTasksWaitingTermination+0x54>)
 8009c2e:	681b      	ldr	r3, [r3, #0]
 8009c30:	2b00      	cmp	r3, #0
 8009c32:	d1e1      	bne.n	8009bf8 <prvCheckTasksWaitingTermination+0x8>
		}
	}
	#endif /* INCLUDE_vTaskDelete */
}
 8009c34:	bf00      	nop
 8009c36:	3708      	adds	r7, #8
 8009c38:	46bd      	mov	sp, r7
 8009c3a:	bd80      	pop	{r7, pc}
 8009c3c:	2000892c 	.word	0x2000892c
 8009c40:	20008958 	.word	0x20008958
 8009c44:	20008940 	.word	0x20008940

08009c48 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8009c48:	b580      	push	{r7, lr}
 8009c4a:	b084      	sub	sp, #16
 8009c4c:	af00      	add	r7, sp, #0
 8009c4e:	6078      	str	r0, [r7, #4]
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009c56:	2b00      	cmp	r3, #0
 8009c58:	d108      	bne.n	8009c6c <prvDeleteTCB+0x24>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c5e:	4618      	mov	r0, r3
 8009c60:	f7fe f918 	bl	8007e94 <vPortFree>
				vPortFree( pxTCB );
 8009c64:	6878      	ldr	r0, [r7, #4]
 8009c66:	f7fe f915 	bl	8007e94 <vPortFree>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8009c6a:	e017      	b.n	8009c9c <prvDeleteTCB+0x54>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009c72:	2b01      	cmp	r3, #1
 8009c74:	d103      	bne.n	8009c7e <prvDeleteTCB+0x36>
				vPortFree( pxTCB );
 8009c76:	6878      	ldr	r0, [r7, #4]
 8009c78:	f7fe f90c 	bl	8007e94 <vPortFree>
	}
 8009c7c:	e00e      	b.n	8009c9c <prvDeleteTCB+0x54>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009c84:	2b02      	cmp	r3, #2
 8009c86:	d009      	beq.n	8009c9c <prvDeleteTCB+0x54>
 8009c88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c8c:	f383 8811 	msr	BASEPRI, r3
 8009c90:	f3bf 8f6f 	isb	sy
 8009c94:	f3bf 8f4f 	dsb	sy
 8009c98:	60fb      	str	r3, [r7, #12]
 8009c9a:	e7fe      	b.n	8009c9a <prvDeleteTCB+0x52>
	}
 8009c9c:	bf00      	nop
 8009c9e:	3710      	adds	r7, #16
 8009ca0:	46bd      	mov	sp, r7
 8009ca2:	bd80      	pop	{r7, pc}

08009ca4 <prvResetNextTaskUnblockTime>:

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
 8009ca4:	b480      	push	{r7}
 8009ca6:	b083      	sub	sp, #12
 8009ca8:	af00      	add	r7, sp, #0
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009caa:	4b0c      	ldr	r3, [pc, #48]	; (8009cdc <prvResetNextTaskUnblockTime+0x38>)
 8009cac:	681b      	ldr	r3, [r3, #0]
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	d104      	bne.n	8009cbe <prvResetNextTaskUnblockTime+0x1a>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cb4:	4b0a      	ldr	r3, [pc, #40]	; (8009ce0 <prvResetNextTaskUnblockTime+0x3c>)
 8009cb6:	f04f 32ff 	mov.w	r2, #4294967295
 8009cba:	601a      	str	r2, [r3, #0]
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
	}
}
 8009cbc:	e008      	b.n	8009cd0 <prvResetNextTaskUnblockTime+0x2c>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cbe:	4b07      	ldr	r3, [pc, #28]	; (8009cdc <prvResetNextTaskUnblockTime+0x38>)
 8009cc0:	681b      	ldr	r3, [r3, #0]
 8009cc2:	68db      	ldr	r3, [r3, #12]
 8009cc4:	68db      	ldr	r3, [r3, #12]
 8009cc6:	607b      	str	r3, [r7, #4]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	685b      	ldr	r3, [r3, #4]
 8009ccc:	4a04      	ldr	r2, [pc, #16]	; (8009ce0 <prvResetNextTaskUnblockTime+0x3c>)
 8009cce:	6013      	str	r3, [r2, #0]
}
 8009cd0:	bf00      	nop
 8009cd2:	370c      	adds	r7, #12
 8009cd4:	46bd      	mov	sp, r7
 8009cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cda:	4770      	bx	lr
 8009cdc:	20008910 	.word	0x20008910
 8009ce0:	20008978 	.word	0x20008978

08009ce4 <xTaskGetSchedulerState>:
/*-----------------------------------------------------------*/

#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )

	BaseType_t xTaskGetSchedulerState( void )
	{
 8009ce4:	b480      	push	{r7}
 8009ce6:	b083      	sub	sp, #12
 8009ce8:	af00      	add	r7, sp, #0
	BaseType_t xReturn;

		if( xSchedulerRunning == pdFALSE )
 8009cea:	4b0b      	ldr	r3, [pc, #44]	; (8009d18 <xTaskGetSchedulerState+0x34>)
 8009cec:	681b      	ldr	r3, [r3, #0]
 8009cee:	2b00      	cmp	r3, #0
 8009cf0:	d102      	bne.n	8009cf8 <xTaskGetSchedulerState+0x14>
		{
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009cf2:	2301      	movs	r3, #1
 8009cf4:	607b      	str	r3, [r7, #4]
 8009cf6:	e008      	b.n	8009d0a <xTaskGetSchedulerState+0x26>
		}
		else
		{
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009cf8:	4b08      	ldr	r3, [pc, #32]	; (8009d1c <xTaskGetSchedulerState+0x38>)
 8009cfa:	681b      	ldr	r3, [r3, #0]
 8009cfc:	2b00      	cmp	r3, #0
 8009cfe:	d102      	bne.n	8009d06 <xTaskGetSchedulerState+0x22>
			{
				xReturn = taskSCHEDULER_RUNNING;
 8009d00:	2302      	movs	r3, #2
 8009d02:	607b      	str	r3, [r7, #4]
 8009d04:	e001      	b.n	8009d0a <xTaskGetSchedulerState+0x26>
			}
			else
			{
				xReturn = taskSCHEDULER_SUSPENDED;
 8009d06:	2300      	movs	r3, #0
 8009d08:	607b      	str	r3, [r7, #4]
			}
		}

		return xReturn;
 8009d0a:	687b      	ldr	r3, [r7, #4]
	}
 8009d0c:	4618      	mov	r0, r3
 8009d0e:	370c      	adds	r7, #12
 8009d10:	46bd      	mov	sp, r7
 8009d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d16:	4770      	bx	lr
 8009d18:	20008964 	.word	0x20008964
 8009d1c:	20008980 	.word	0x20008980

08009d20 <xTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
	{
 8009d20:	b580      	push	{r7, lr}
 8009d22:	b084      	sub	sp, #16
 8009d24:	af00      	add	r7, sp, #0
 8009d26:	6078      	str	r0, [r7, #4]
	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	60bb      	str	r3, [r7, #8]
	BaseType_t xReturn = pdFALSE;
 8009d2c:	2300      	movs	r3, #0
 8009d2e:	60fb      	str	r3, [r7, #12]

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL.  _RB_ Is this still
		needed as interrupts can no longer use mutexes? */
		if( pxMutexHolder != NULL )
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	2b00      	cmp	r3, #0
 8009d34:	d069      	beq.n	8009e0a <xTaskPriorityInherit+0xea>
		{
			/* If the holder of the mutex has a priority below the priority of
			the task attempting to obtain the mutex then it will temporarily
			inherit the priority of the task attempting to obtain the mutex. */
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009d36:	68bb      	ldr	r3, [r7, #8]
 8009d38:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009d3a:	4b36      	ldr	r3, [pc, #216]	; (8009e14 <xTaskPriorityInherit+0xf4>)
 8009d3c:	681b      	ldr	r3, [r3, #0]
 8009d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d40:	429a      	cmp	r2, r3
 8009d42:	d259      	bcs.n	8009df8 <xTaskPriorityInherit+0xd8>
			{
				/* Adjust the mutex holder state to account for its new
				priority.  Only reset the event list item value if the value is
				not being used for anything else. */
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d44:	68bb      	ldr	r3, [r7, #8]
 8009d46:	699b      	ldr	r3, [r3, #24]
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	db06      	blt.n	8009d5a <xTaskPriorityInherit+0x3a>
				{
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d4c:	4b31      	ldr	r3, [pc, #196]	; (8009e14 <xTaskPriorityInherit+0xf4>)
 8009d4e:	681b      	ldr	r3, [r3, #0]
 8009d50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d52:	f1c3 0207 	rsb	r2, r3, #7
 8009d56:	68bb      	ldr	r3, [r7, #8]
 8009d58:	619a      	str	r2, [r3, #24]
					mtCOVERAGE_TEST_MARKER();
				}

				/* If the task being modified is in the ready state it will need
				to be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009d5a:	68bb      	ldr	r3, [r7, #8]
 8009d5c:	6959      	ldr	r1, [r3, #20]
 8009d5e:	68bb      	ldr	r3, [r7, #8]
 8009d60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009d62:	4613      	mov	r3, r2
 8009d64:	009b      	lsls	r3, r3, #2
 8009d66:	4413      	add	r3, r2
 8009d68:	009b      	lsls	r3, r3, #2
 8009d6a:	4a2b      	ldr	r2, [pc, #172]	; (8009e18 <xTaskPriorityInherit+0xf8>)
 8009d6c:	4413      	add	r3, r2
 8009d6e:	4299      	cmp	r1, r3
 8009d70:	d13a      	bne.n	8009de8 <xTaskPriorityInherit+0xc8>
				{
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d72:	68bb      	ldr	r3, [r7, #8]
 8009d74:	3304      	adds	r3, #4
 8009d76:	4618      	mov	r0, r3
 8009d78:	f7fe fa2a 	bl	80081d0 <uxListRemove>
 8009d7c:	4603      	mov	r3, r0
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	d115      	bne.n	8009dae <xTaskPriorityInherit+0x8e>
					{
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
 8009d82:	68bb      	ldr	r3, [r7, #8]
 8009d84:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009d86:	4924      	ldr	r1, [pc, #144]	; (8009e18 <xTaskPriorityInherit+0xf8>)
 8009d88:	4613      	mov	r3, r2
 8009d8a:	009b      	lsls	r3, r3, #2
 8009d8c:	4413      	add	r3, r2
 8009d8e:	009b      	lsls	r3, r3, #2
 8009d90:	440b      	add	r3, r1
 8009d92:	681b      	ldr	r3, [r3, #0]
 8009d94:	2b00      	cmp	r3, #0
 8009d96:	d10a      	bne.n	8009dae <xTaskPriorityInherit+0x8e>
 8009d98:	68bb      	ldr	r3, [r7, #8]
 8009d9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d9c:	2201      	movs	r2, #1
 8009d9e:	fa02 f303 	lsl.w	r3, r2, r3
 8009da2:	43da      	mvns	r2, r3
 8009da4:	4b1d      	ldr	r3, [pc, #116]	; (8009e1c <xTaskPriorityInherit+0xfc>)
 8009da6:	681b      	ldr	r3, [r3, #0]
 8009da8:	4013      	ands	r3, r2
 8009daa:	4a1c      	ldr	r2, [pc, #112]	; (8009e1c <xTaskPriorityInherit+0xfc>)
 8009dac:	6013      	str	r3, [r2, #0]
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* Inherit the priority before being moved into the new list. */
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009dae:	4b19      	ldr	r3, [pc, #100]	; (8009e14 <xTaskPriorityInherit+0xf4>)
 8009db0:	681b      	ldr	r3, [r3, #0]
 8009db2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009db4:	68bb      	ldr	r3, [r7, #8]
 8009db6:	62da      	str	r2, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009db8:	68bb      	ldr	r3, [r7, #8]
 8009dba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dbc:	2201      	movs	r2, #1
 8009dbe:	409a      	lsls	r2, r3
 8009dc0:	4b16      	ldr	r3, [pc, #88]	; (8009e1c <xTaskPriorityInherit+0xfc>)
 8009dc2:	681b      	ldr	r3, [r3, #0]
 8009dc4:	4313      	orrs	r3, r2
 8009dc6:	4a15      	ldr	r2, [pc, #84]	; (8009e1c <xTaskPriorityInherit+0xfc>)
 8009dc8:	6013      	str	r3, [r2, #0]
 8009dca:	68bb      	ldr	r3, [r7, #8]
 8009dcc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009dce:	4613      	mov	r3, r2
 8009dd0:	009b      	lsls	r3, r3, #2
 8009dd2:	4413      	add	r3, r2
 8009dd4:	009b      	lsls	r3, r3, #2
 8009dd6:	4a10      	ldr	r2, [pc, #64]	; (8009e18 <xTaskPriorityInherit+0xf8>)
 8009dd8:	441a      	add	r2, r3
 8009dda:	68bb      	ldr	r3, [r7, #8]
 8009ddc:	3304      	adds	r3, #4
 8009dde:	4619      	mov	r1, r3
 8009de0:	4610      	mov	r0, r2
 8009de2:	f7fe f998 	bl	8008116 <vListInsertEnd>
 8009de6:	e004      	b.n	8009df2 <xTaskPriorityInherit+0xd2>
				}
				else
				{
					/* Just inherit the priority. */
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009de8:	4b0a      	ldr	r3, [pc, #40]	; (8009e14 <xTaskPriorityInherit+0xf4>)
 8009dea:	681b      	ldr	r3, [r3, #0]
 8009dec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009dee:	68bb      	ldr	r3, [r7, #8]
 8009df0:	62da      	str	r2, [r3, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );

				/* Inheritance occurred. */
				xReturn = pdTRUE;
 8009df2:	2301      	movs	r3, #1
 8009df4:	60fb      	str	r3, [r7, #12]
 8009df6:	e008      	b.n	8009e0a <xTaskPriorityInherit+0xea>
			}
			else
			{
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009df8:	68bb      	ldr	r3, [r7, #8]
 8009dfa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009dfc:	4b05      	ldr	r3, [pc, #20]	; (8009e14 <xTaskPriorityInherit+0xf4>)
 8009dfe:	681b      	ldr	r3, [r3, #0]
 8009e00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e02:	429a      	cmp	r2, r3
 8009e04:	d201      	bcs.n	8009e0a <xTaskPriorityInherit+0xea>
					current priority of the mutex holder is not lower than the
					priority of the task attempting to take the mutex.
					Therefore the mutex holder must have already inherited a
					priority, but inheritance would have occurred if that had
					not been the case. */
					xReturn = pdTRUE;
 8009e06:	2301      	movs	r3, #1
 8009e08:	60fb      	str	r3, [r7, #12]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
 8009e0a:	68fb      	ldr	r3, [r7, #12]
	}
 8009e0c:	4618      	mov	r0, r3
 8009e0e:	3710      	adds	r7, #16
 8009e10:	46bd      	mov	sp, r7
 8009e12:	bd80      	pop	{r7, pc}
 8009e14:	20008858 	.word	0x20008858
 8009e18:	2000885c 	.word	0x2000885c
 8009e1c:	20008960 	.word	0x20008960

08009e20 <xTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
	{
 8009e20:	b580      	push	{r7, lr}
 8009e22:	b086      	sub	sp, #24
 8009e24:	af00      	add	r7, sp, #0
 8009e26:	6078      	str	r0, [r7, #4]
	TCB_t * const pxTCB = pxMutexHolder;
 8009e28:	687b      	ldr	r3, [r7, #4]
 8009e2a:	613b      	str	r3, [r7, #16]
	BaseType_t xReturn = pdFALSE;
 8009e2c:	2300      	movs	r3, #0
 8009e2e:	617b      	str	r3, [r7, #20]

		if( pxMutexHolder != NULL )
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	2b00      	cmp	r3, #0
 8009e34:	d06c      	beq.n	8009f10 <xTaskPriorityDisinherit+0xf0>
		{
			/* A task can only have an inherited priority if it holds the mutex.
			If the mutex is held by a task then it cannot be given from an
			interrupt, and if a mutex is given by the holding task then it must
			be the running state task. */
			configASSERT( pxTCB == pxCurrentTCB );
 8009e36:	4b39      	ldr	r3, [pc, #228]	; (8009f1c <xTaskPriorityDisinherit+0xfc>)
 8009e38:	681b      	ldr	r3, [r3, #0]
 8009e3a:	693a      	ldr	r2, [r7, #16]
 8009e3c:	429a      	cmp	r2, r3
 8009e3e:	d009      	beq.n	8009e54 <xTaskPriorityDisinherit+0x34>
 8009e40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e44:	f383 8811 	msr	BASEPRI, r3
 8009e48:	f3bf 8f6f 	isb	sy
 8009e4c:	f3bf 8f4f 	dsb	sy
 8009e50:	60fb      	str	r3, [r7, #12]
 8009e52:	e7fe      	b.n	8009e52 <xTaskPriorityDisinherit+0x32>
			configASSERT( pxTCB->uxMutexesHeld );
 8009e54:	693b      	ldr	r3, [r7, #16]
 8009e56:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009e58:	2b00      	cmp	r3, #0
 8009e5a:	d109      	bne.n	8009e70 <xTaskPriorityDisinherit+0x50>
 8009e5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e60:	f383 8811 	msr	BASEPRI, r3
 8009e64:	f3bf 8f6f 	isb	sy
 8009e68:	f3bf 8f4f 	dsb	sy
 8009e6c:	60bb      	str	r3, [r7, #8]
 8009e6e:	e7fe      	b.n	8009e6e <xTaskPriorityDisinherit+0x4e>
			( pxTCB->uxMutexesHeld )--;
 8009e70:	693b      	ldr	r3, [r7, #16]
 8009e72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009e74:	1e5a      	subs	r2, r3, #1
 8009e76:	693b      	ldr	r3, [r7, #16]
 8009e78:	649a      	str	r2, [r3, #72]	; 0x48

			/* Has the holder of the mutex inherited the priority of another
			task? */
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009e7a:	693b      	ldr	r3, [r7, #16]
 8009e7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009e7e:	693b      	ldr	r3, [r7, #16]
 8009e80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009e82:	429a      	cmp	r2, r3
 8009e84:	d044      	beq.n	8009f10 <xTaskPriorityDisinherit+0xf0>
			{
				/* Only disinherit if no other mutexes are held. */
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009e86:	693b      	ldr	r3, [r7, #16]
 8009e88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009e8a:	2b00      	cmp	r3, #0
 8009e8c:	d140      	bne.n	8009f10 <xTaskPriorityDisinherit+0xf0>
					/* A task can only have an inherited priority if it holds
					the mutex.  If the mutex is held by a task then it cannot be
					given from an interrupt, and if a mutex is given by the
					holding task then it must be the running state task.  Remove
					the holding task from the ready list. */
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009e8e:	693b      	ldr	r3, [r7, #16]
 8009e90:	3304      	adds	r3, #4
 8009e92:	4618      	mov	r0, r3
 8009e94:	f7fe f99c 	bl	80081d0 <uxListRemove>
 8009e98:	4603      	mov	r3, r0
 8009e9a:	2b00      	cmp	r3, #0
 8009e9c:	d115      	bne.n	8009eca <xTaskPriorityDisinherit+0xaa>
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 8009e9e:	693b      	ldr	r3, [r7, #16]
 8009ea0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009ea2:	491f      	ldr	r1, [pc, #124]	; (8009f20 <xTaskPriorityDisinherit+0x100>)
 8009ea4:	4613      	mov	r3, r2
 8009ea6:	009b      	lsls	r3, r3, #2
 8009ea8:	4413      	add	r3, r2
 8009eaa:	009b      	lsls	r3, r3, #2
 8009eac:	440b      	add	r3, r1
 8009eae:	681b      	ldr	r3, [r3, #0]
 8009eb0:	2b00      	cmp	r3, #0
 8009eb2:	d10a      	bne.n	8009eca <xTaskPriorityDisinherit+0xaa>
 8009eb4:	693b      	ldr	r3, [r7, #16]
 8009eb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009eb8:	2201      	movs	r2, #1
 8009eba:	fa02 f303 	lsl.w	r3, r2, r3
 8009ebe:	43da      	mvns	r2, r3
 8009ec0:	4b18      	ldr	r3, [pc, #96]	; (8009f24 <xTaskPriorityDisinherit+0x104>)
 8009ec2:	681b      	ldr	r3, [r3, #0]
 8009ec4:	4013      	ands	r3, r2
 8009ec6:	4a17      	ldr	r2, [pc, #92]	; (8009f24 <xTaskPriorityDisinherit+0x104>)
 8009ec8:	6013      	str	r3, [r2, #0]
					}

					/* Disinherit the priority before adding the task into the
					new	ready list. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009eca:	693b      	ldr	r3, [r7, #16]
 8009ecc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009ece:	693b      	ldr	r3, [r7, #16]
 8009ed0:	62da      	str	r2, [r3, #44]	; 0x2c

					/* Reset the event list item value.  It cannot be in use for
					any other purpose if this task is running, and it must be
					running to give back the mutex. */
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ed2:	693b      	ldr	r3, [r7, #16]
 8009ed4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ed6:	f1c3 0207 	rsb	r2, r3, #7
 8009eda:	693b      	ldr	r3, [r7, #16]
 8009edc:	619a      	str	r2, [r3, #24]
					prvAddTaskToReadyList( pxTCB );
 8009ede:	693b      	ldr	r3, [r7, #16]
 8009ee0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ee2:	2201      	movs	r2, #1
 8009ee4:	409a      	lsls	r2, r3
 8009ee6:	4b0f      	ldr	r3, [pc, #60]	; (8009f24 <xTaskPriorityDisinherit+0x104>)
 8009ee8:	681b      	ldr	r3, [r3, #0]
 8009eea:	4313      	orrs	r3, r2
 8009eec:	4a0d      	ldr	r2, [pc, #52]	; (8009f24 <xTaskPriorityDisinherit+0x104>)
 8009eee:	6013      	str	r3, [r2, #0]
 8009ef0:	693b      	ldr	r3, [r7, #16]
 8009ef2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009ef4:	4613      	mov	r3, r2
 8009ef6:	009b      	lsls	r3, r3, #2
 8009ef8:	4413      	add	r3, r2
 8009efa:	009b      	lsls	r3, r3, #2
 8009efc:	4a08      	ldr	r2, [pc, #32]	; (8009f20 <xTaskPriorityDisinherit+0x100>)
 8009efe:	441a      	add	r2, r3
 8009f00:	693b      	ldr	r3, [r7, #16]
 8009f02:	3304      	adds	r3, #4
 8009f04:	4619      	mov	r1, r3
 8009f06:	4610      	mov	r0, r2
 8009f08:	f7fe f905 	bl	8008116 <vListInsertEnd>
					in an order different to that in which they were taken.
					If a context switch did not occur when the first mutex was
					returned, even if a task was waiting on it, then a context
					switch should occur when the last mutex is returned whether
					a task is waiting on it or not. */
					xReturn = pdTRUE;
 8009f0c:	2301      	movs	r3, #1
 8009f0e:	617b      	str	r3, [r7, #20]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
 8009f10:	697b      	ldr	r3, [r7, #20]
	}
 8009f12:	4618      	mov	r0, r3
 8009f14:	3718      	adds	r7, #24
 8009f16:	46bd      	mov	sp, r7
 8009f18:	bd80      	pop	{r7, pc}
 8009f1a:	bf00      	nop
 8009f1c:	20008858 	.word	0x20008858
 8009f20:	2000885c 	.word	0x2000885c
 8009f24:	20008960 	.word	0x20008960

08009f28 <vTaskPriorityDisinheritAfterTimeout>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask )
	{
 8009f28:	b580      	push	{r7, lr}
 8009f2a:	b088      	sub	sp, #32
 8009f2c:	af00      	add	r7, sp, #0
 8009f2e:	6078      	str	r0, [r7, #4]
 8009f30:	6039      	str	r1, [r7, #0]
	TCB_t * const pxTCB = pxMutexHolder;
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	61bb      	str	r3, [r7, #24]
	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 8009f36:	2301      	movs	r3, #1
 8009f38:	617b      	str	r3, [r7, #20]

		if( pxMutexHolder != NULL )
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	2b00      	cmp	r3, #0
 8009f3e:	f000 8081 	beq.w	800a044 <vTaskPriorityDisinheritAfterTimeout+0x11c>
		{
			/* If pxMutexHolder is not NULL then the holder must hold at least
			one mutex. */
			configASSERT( pxTCB->uxMutexesHeld );
 8009f42:	69bb      	ldr	r3, [r7, #24]
 8009f44:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009f46:	2b00      	cmp	r3, #0
 8009f48:	d109      	bne.n	8009f5e <vTaskPriorityDisinheritAfterTimeout+0x36>
 8009f4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f4e:	f383 8811 	msr	BASEPRI, r3
 8009f52:	f3bf 8f6f 	isb	sy
 8009f56:	f3bf 8f4f 	dsb	sy
 8009f5a:	60fb      	str	r3, [r7, #12]
 8009f5c:	e7fe      	b.n	8009f5c <vTaskPriorityDisinheritAfterTimeout+0x34>

			/* Determine the priority to which the priority of the task that
			holds the mutex should be set.  This will be the greater of the
			holding task's base priority and the priority of the highest
			priority task that is waiting to obtain the mutex. */
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009f5e:	69bb      	ldr	r3, [r7, #24]
 8009f60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009f62:	683a      	ldr	r2, [r7, #0]
 8009f64:	429a      	cmp	r2, r3
 8009f66:	d902      	bls.n	8009f6e <vTaskPriorityDisinheritAfterTimeout+0x46>
			{
				uxPriorityToUse = uxHighestPriorityWaitingTask;
 8009f68:	683b      	ldr	r3, [r7, #0]
 8009f6a:	61fb      	str	r3, [r7, #28]
 8009f6c:	e002      	b.n	8009f74 <vTaskPriorityDisinheritAfterTimeout+0x4c>
			}
			else
			{
				uxPriorityToUse = pxTCB->uxBasePriority;
 8009f6e:	69bb      	ldr	r3, [r7, #24]
 8009f70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009f72:	61fb      	str	r3, [r7, #28]
			}

			/* Does the priority need to change? */
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009f74:	69bb      	ldr	r3, [r7, #24]
 8009f76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f78:	69fa      	ldr	r2, [r7, #28]
 8009f7a:	429a      	cmp	r2, r3
 8009f7c:	d062      	beq.n	800a044 <vTaskPriorityDisinheritAfterTimeout+0x11c>
			{
				/* Only disinherit if no other mutexes are held.  This is a
				simplification in the priority inheritance implementation.  If
				the task that holds the mutex is also holding other mutexes then
				the other mutexes may have caused the priority inheritance. */
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009f7e:	69bb      	ldr	r3, [r7, #24]
 8009f80:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009f82:	697a      	ldr	r2, [r7, #20]
 8009f84:	429a      	cmp	r2, r3
 8009f86:	d15d      	bne.n	800a044 <vTaskPriorityDisinheritAfterTimeout+0x11c>
				{
					/* If a task has timed out because it already holds the
					mutex it was trying to obtain then it cannot of inherited
					its own priority. */
					configASSERT( pxTCB != pxCurrentTCB );
 8009f88:	4b30      	ldr	r3, [pc, #192]	; (800a04c <vTaskPriorityDisinheritAfterTimeout+0x124>)
 8009f8a:	681b      	ldr	r3, [r3, #0]
 8009f8c:	69ba      	ldr	r2, [r7, #24]
 8009f8e:	429a      	cmp	r2, r3
 8009f90:	d109      	bne.n	8009fa6 <vTaskPriorityDisinheritAfterTimeout+0x7e>
 8009f92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f96:	f383 8811 	msr	BASEPRI, r3
 8009f9a:	f3bf 8f6f 	isb	sy
 8009f9e:	f3bf 8f4f 	dsb	sy
 8009fa2:	60bb      	str	r3, [r7, #8]
 8009fa4:	e7fe      	b.n	8009fa4 <vTaskPriorityDisinheritAfterTimeout+0x7c>

					/* Disinherit the priority, remembering the previous
					priority to facilitate determining the subject task's
					state. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 8009fa6:	69bb      	ldr	r3, [r7, #24]
 8009fa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009faa:	613b      	str	r3, [r7, #16]
					pxTCB->uxPriority = uxPriorityToUse;
 8009fac:	69bb      	ldr	r3, [r7, #24]
 8009fae:	69fa      	ldr	r2, [r7, #28]
 8009fb0:	62da      	str	r2, [r3, #44]	; 0x2c

					/* Only reset the event list item value if the value is not
					being used for anything else. */
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009fb2:	69bb      	ldr	r3, [r7, #24]
 8009fb4:	699b      	ldr	r3, [r3, #24]
 8009fb6:	2b00      	cmp	r3, #0
 8009fb8:	db04      	blt.n	8009fc4 <vTaskPriorityDisinheritAfterTimeout+0x9c>
					{
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009fba:	69fb      	ldr	r3, [r7, #28]
 8009fbc:	f1c3 0207 	rsb	r2, r3, #7
 8009fc0:	69bb      	ldr	r3, [r7, #24]
 8009fc2:	619a      	str	r2, [r3, #24]
					then the task that holds the mutex could be in either the
					Ready, Blocked or Suspended states.  Only remove the task
					from its current state list if it is in the Ready state as
					the task's priority is going to change and there is one
					Ready list per priority. */
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009fc4:	69bb      	ldr	r3, [r7, #24]
 8009fc6:	6959      	ldr	r1, [r3, #20]
 8009fc8:	693a      	ldr	r2, [r7, #16]
 8009fca:	4613      	mov	r3, r2
 8009fcc:	009b      	lsls	r3, r3, #2
 8009fce:	4413      	add	r3, r2
 8009fd0:	009b      	lsls	r3, r3, #2
 8009fd2:	4a1f      	ldr	r2, [pc, #124]	; (800a050 <vTaskPriorityDisinheritAfterTimeout+0x128>)
 8009fd4:	4413      	add	r3, r2
 8009fd6:	4299      	cmp	r1, r3
 8009fd8:	d134      	bne.n	800a044 <vTaskPriorityDisinheritAfterTimeout+0x11c>
					{
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009fda:	69bb      	ldr	r3, [r7, #24]
 8009fdc:	3304      	adds	r3, #4
 8009fde:	4618      	mov	r0, r3
 8009fe0:	f7fe f8f6 	bl	80081d0 <uxListRemove>
 8009fe4:	4603      	mov	r3, r0
 8009fe6:	2b00      	cmp	r3, #0
 8009fe8:	d115      	bne.n	800a016 <vTaskPriorityDisinheritAfterTimeout+0xee>
						{
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 8009fea:	69bb      	ldr	r3, [r7, #24]
 8009fec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009fee:	4918      	ldr	r1, [pc, #96]	; (800a050 <vTaskPriorityDisinheritAfterTimeout+0x128>)
 8009ff0:	4613      	mov	r3, r2
 8009ff2:	009b      	lsls	r3, r3, #2
 8009ff4:	4413      	add	r3, r2
 8009ff6:	009b      	lsls	r3, r3, #2
 8009ff8:	440b      	add	r3, r1
 8009ffa:	681b      	ldr	r3, [r3, #0]
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d10a      	bne.n	800a016 <vTaskPriorityDisinheritAfterTimeout+0xee>
 800a000:	69bb      	ldr	r3, [r7, #24]
 800a002:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a004:	2201      	movs	r2, #1
 800a006:	fa02 f303 	lsl.w	r3, r2, r3
 800a00a:	43da      	mvns	r2, r3
 800a00c:	4b11      	ldr	r3, [pc, #68]	; (800a054 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800a00e:	681b      	ldr	r3, [r3, #0]
 800a010:	4013      	ands	r3, r2
 800a012:	4a10      	ldr	r2, [pc, #64]	; (800a054 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800a014:	6013      	str	r3, [r2, #0]
						else
						{
							mtCOVERAGE_TEST_MARKER();
						}

						prvAddTaskToReadyList( pxTCB );
 800a016:	69bb      	ldr	r3, [r7, #24]
 800a018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a01a:	2201      	movs	r2, #1
 800a01c:	409a      	lsls	r2, r3
 800a01e:	4b0d      	ldr	r3, [pc, #52]	; (800a054 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800a020:	681b      	ldr	r3, [r3, #0]
 800a022:	4313      	orrs	r3, r2
 800a024:	4a0b      	ldr	r2, [pc, #44]	; (800a054 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800a026:	6013      	str	r3, [r2, #0]
 800a028:	69bb      	ldr	r3, [r7, #24]
 800a02a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a02c:	4613      	mov	r3, r2
 800a02e:	009b      	lsls	r3, r3, #2
 800a030:	4413      	add	r3, r2
 800a032:	009b      	lsls	r3, r3, #2
 800a034:	4a06      	ldr	r2, [pc, #24]	; (800a050 <vTaskPriorityDisinheritAfterTimeout+0x128>)
 800a036:	441a      	add	r2, r3
 800a038:	69bb      	ldr	r3, [r7, #24]
 800a03a:	3304      	adds	r3, #4
 800a03c:	4619      	mov	r1, r3
 800a03e:	4610      	mov	r0, r2
 800a040:	f7fe f869 	bl	8008116 <vListInsertEnd>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 800a044:	bf00      	nop
 800a046:	3720      	adds	r7, #32
 800a048:	46bd      	mov	sp, r7
 800a04a:	bd80      	pop	{r7, pc}
 800a04c:	20008858 	.word	0x20008858
 800a050:	2000885c 	.word	0x2000885c
 800a054:	20008960 	.word	0x20008960

0800a058 <pvTaskIncrementMutexHeldCount>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
	{
 800a058:	b480      	push	{r7}
 800a05a:	af00      	add	r7, sp, #0
		/* If xSemaphoreCreateMutex() is called before any tasks have been created
		then pxCurrentTCB will be NULL. */
		if( pxCurrentTCB != NULL )
 800a05c:	4b07      	ldr	r3, [pc, #28]	; (800a07c <pvTaskIncrementMutexHeldCount+0x24>)
 800a05e:	681b      	ldr	r3, [r3, #0]
 800a060:	2b00      	cmp	r3, #0
 800a062:	d004      	beq.n	800a06e <pvTaskIncrementMutexHeldCount+0x16>
		{
			( pxCurrentTCB->uxMutexesHeld )++;
 800a064:	4b05      	ldr	r3, [pc, #20]	; (800a07c <pvTaskIncrementMutexHeldCount+0x24>)
 800a066:	681b      	ldr	r3, [r3, #0]
 800a068:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800a06a:	3201      	adds	r2, #1
 800a06c:	649a      	str	r2, [r3, #72]	; 0x48
		}

		return pxCurrentTCB;
 800a06e:	4b03      	ldr	r3, [pc, #12]	; (800a07c <pvTaskIncrementMutexHeldCount+0x24>)
 800a070:	681b      	ldr	r3, [r3, #0]
	}
 800a072:	4618      	mov	r0, r3
 800a074:	46bd      	mov	sp, r7
 800a076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a07a:	4770      	bx	lr
 800a07c:	20008858 	.word	0x20008858

0800a080 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800a080:	b580      	push	{r7, lr}
 800a082:	b084      	sub	sp, #16
 800a084:	af00      	add	r7, sp, #0
 800a086:	6078      	str	r0, [r7, #4]
 800a088:	6039      	str	r1, [r7, #0]
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800a08a:	4b29      	ldr	r3, [pc, #164]	; (800a130 <prvAddCurrentTaskToDelayedList+0xb0>)
 800a08c:	681b      	ldr	r3, [r3, #0]
 800a08e:	60fb      	str	r3, [r7, #12]
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a090:	4b28      	ldr	r3, [pc, #160]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	3304      	adds	r3, #4
 800a096:	4618      	mov	r0, r3
 800a098:	f7fe f89a 	bl	80081d0 <uxListRemove>
 800a09c:	4603      	mov	r3, r0
 800a09e:	2b00      	cmp	r3, #0
 800a0a0:	d10b      	bne.n	800a0ba <prvAddCurrentTaskToDelayedList+0x3a>
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
 800a0a2:	4b24      	ldr	r3, [pc, #144]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a0a4:	681b      	ldr	r3, [r3, #0]
 800a0a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0a8:	2201      	movs	r2, #1
 800a0aa:	fa02 f303 	lsl.w	r3, r2, r3
 800a0ae:	43da      	mvns	r2, r3
 800a0b0:	4b21      	ldr	r3, [pc, #132]	; (800a138 <prvAddCurrentTaskToDelayedList+0xb8>)
 800a0b2:	681b      	ldr	r3, [r3, #0]
 800a0b4:	4013      	ands	r3, r2
 800a0b6:	4a20      	ldr	r2, [pc, #128]	; (800a138 <prvAddCurrentTaskToDelayedList+0xb8>)
 800a0b8:	6013      	str	r3, [r2, #0]
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a0c0:	d10a      	bne.n	800a0d8 <prvAddCurrentTaskToDelayedList+0x58>
 800a0c2:	683b      	ldr	r3, [r7, #0]
 800a0c4:	2b00      	cmp	r3, #0
 800a0c6:	d007      	beq.n	800a0d8 <prvAddCurrentTaskToDelayedList+0x58>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a0c8:	4b1a      	ldr	r3, [pc, #104]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a0ca:	681b      	ldr	r3, [r3, #0]
 800a0cc:	3304      	adds	r3, #4
 800a0ce:	4619      	mov	r1, r3
 800a0d0:	481a      	ldr	r0, [pc, #104]	; (800a13c <prvAddCurrentTaskToDelayedList+0xbc>)
 800a0d2:	f7fe f820 	bl	8008116 <vListInsertEnd>

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800a0d6:	e026      	b.n	800a126 <prvAddCurrentTaskToDelayedList+0xa6>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800a0d8:	68fa      	ldr	r2, [r7, #12]
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	4413      	add	r3, r2
 800a0de:	60bb      	str	r3, [r7, #8]
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800a0e0:	4b14      	ldr	r3, [pc, #80]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a0e2:	681b      	ldr	r3, [r3, #0]
 800a0e4:	68ba      	ldr	r2, [r7, #8]
 800a0e6:	605a      	str	r2, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800a0e8:	68ba      	ldr	r2, [r7, #8]
 800a0ea:	68fb      	ldr	r3, [r7, #12]
 800a0ec:	429a      	cmp	r2, r3
 800a0ee:	d209      	bcs.n	800a104 <prvAddCurrentTaskToDelayedList+0x84>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a0f0:	4b13      	ldr	r3, [pc, #76]	; (800a140 <prvAddCurrentTaskToDelayedList+0xc0>)
 800a0f2:	681a      	ldr	r2, [r3, #0]
 800a0f4:	4b0f      	ldr	r3, [pc, #60]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	3304      	adds	r3, #4
 800a0fa:	4619      	mov	r1, r3
 800a0fc:	4610      	mov	r0, r2
 800a0fe:	f7fe f82e 	bl	800815e <vListInsert>
}
 800a102:	e010      	b.n	800a126 <prvAddCurrentTaskToDelayedList+0xa6>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a104:	4b0f      	ldr	r3, [pc, #60]	; (800a144 <prvAddCurrentTaskToDelayedList+0xc4>)
 800a106:	681a      	ldr	r2, [r3, #0]
 800a108:	4b0a      	ldr	r3, [pc, #40]	; (800a134 <prvAddCurrentTaskToDelayedList+0xb4>)
 800a10a:	681b      	ldr	r3, [r3, #0]
 800a10c:	3304      	adds	r3, #4
 800a10e:	4619      	mov	r1, r3
 800a110:	4610      	mov	r0, r2
 800a112:	f7fe f824 	bl	800815e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800a116:	4b0c      	ldr	r3, [pc, #48]	; (800a148 <prvAddCurrentTaskToDelayedList+0xc8>)
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	68ba      	ldr	r2, [r7, #8]
 800a11c:	429a      	cmp	r2, r3
 800a11e:	d202      	bcs.n	800a126 <prvAddCurrentTaskToDelayedList+0xa6>
					xNextTaskUnblockTime = xTimeToWake;
 800a120:	4a09      	ldr	r2, [pc, #36]	; (800a148 <prvAddCurrentTaskToDelayedList+0xc8>)
 800a122:	68bb      	ldr	r3, [r7, #8]
 800a124:	6013      	str	r3, [r2, #0]
}
 800a126:	bf00      	nop
 800a128:	3710      	adds	r7, #16
 800a12a:	46bd      	mov	sp, r7
 800a12c:	bd80      	pop	{r7, pc}
 800a12e:	bf00      	nop
 800a130:	2000895c 	.word	0x2000895c
 800a134:	20008858 	.word	0x20008858
 800a138:	20008960 	.word	0x20008960
 800a13c:	20008944 	.word	0x20008944
 800a140:	20008914 	.word	0x20008914
 800a144:	20008910 	.word	0x20008910
 800a148:	20008978 	.word	0x20008978

0800a14c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a14c:	8880      	ldrh	r0, [r0, #4]
 800a14e:	4770      	bx	lr

0800a150 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a150:	2300      	movs	r3, #0
 800a152:	8083      	strh	r3, [r0, #4]
 800a154:	4770      	bx	lr
	...

0800a158 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a15a:	6803      	ldr	r3, [r0, #0]
 800a15c:	4605      	mov	r5, r0
 800a15e:	460e      	mov	r6, r1
 800a160:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a162:	2100      	movs	r1, #0
 800a164:	4798      	blx	r3
 800a166:	682b      	ldr	r3, [r5, #0]
 800a168:	4604      	mov	r4, r0
 800a16a:	6a1b      	ldr	r3, [r3, #32]
 800a16c:	4628      	mov	r0, r5
 800a16e:	4798      	blx	r3
 800a170:	88ab      	ldrh	r3, [r5, #4]
 800a172:	1b34      	subs	r4, r6, r4
 800a174:	b2a4      	uxth	r4, r4
 800a176:	fbb4 f4f0 	udiv	r4, r4, r0
 800a17a:	42a3      	cmp	r3, r4
 800a17c:	d805      	bhi.n	800a18a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a17e:	4b0e      	ldr	r3, [pc, #56]	; (800a1b8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a180:	4a0e      	ldr	r2, [pc, #56]	; (800a1bc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a182:	2120      	movs	r1, #32
 800a184:	480e      	ldr	r0, [pc, #56]	; (800a1c0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a186:	f011 fa0f 	bl	801b5a8 <__assert_func>
 800a18a:	682b      	ldr	r3, [r5, #0]
 800a18c:	2100      	movs	r1, #0
 800a18e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a190:	4628      	mov	r0, r5
 800a192:	4798      	blx	r3
 800a194:	682b      	ldr	r3, [r5, #0]
 800a196:	4607      	mov	r7, r0
 800a198:	6a1b      	ldr	r3, [r3, #32]
 800a19a:	4628      	mov	r0, r5
 800a19c:	4798      	blx	r3
 800a19e:	1bf3      	subs	r3, r6, r7
 800a1a0:	b29b      	uxth	r3, r3
 800a1a2:	fbb3 f2f0 	udiv	r2, r3, r0
 800a1a6:	fb02 3010 	mls	r0, r2, r0, r3
 800a1aa:	b118      	cbz	r0, 800a1b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a1ac:	4b05      	ldr	r3, [pc, #20]	; (800a1c4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a1ae:	4a03      	ldr	r2, [pc, #12]	; (800a1bc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a1b0:	2121      	movs	r1, #33	; 0x21
 800a1b2:	e7e7      	b.n	800a184 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a1b4:	4620      	mov	r0, r4
 800a1b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a1b8:	0801d82c 	.word	0x0801d82c
 800a1bc:	0801d99a 	.word	0x0801d99a
 800a1c0:	0801d841 	.word	0x0801d841
 800a1c4:	0801d86f 	.word	0x0801d86f

0800a1c8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a1c8:	b538      	push	{r3, r4, r5, lr}
 800a1ca:	6803      	ldr	r3, [r0, #0]
 800a1cc:	6a1b      	ldr	r3, [r3, #32]
 800a1ce:	460d      	mov	r5, r1
 800a1d0:	4604      	mov	r4, r0
 800a1d2:	4798      	blx	r3
 800a1d4:	4285      	cmp	r5, r0
 800a1d6:	d905      	bls.n	800a1e4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a1d8:	4b0c      	ldr	r3, [pc, #48]	; (800a20c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a1da:	4a0d      	ldr	r2, [pc, #52]	; (800a210 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a1dc:	2132      	movs	r1, #50	; 0x32
 800a1de:	480d      	ldr	r0, [pc, #52]	; (800a214 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a1e0:	f011 f9e2 	bl	801b5a8 <__assert_func>
 800a1e4:	6823      	ldr	r3, [r4, #0]
 800a1e6:	88a5      	ldrh	r5, [r4, #4]
 800a1e8:	69db      	ldr	r3, [r3, #28]
 800a1ea:	4620      	mov	r0, r4
 800a1ec:	4798      	blx	r3
 800a1ee:	4285      	cmp	r5, r0
 800a1f0:	d303      	bcc.n	800a1fa <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a1f2:	4b09      	ldr	r3, [pc, #36]	; (800a218 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a1f4:	4a06      	ldr	r2, [pc, #24]	; (800a210 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a1f6:	2133      	movs	r1, #51	; 0x33
 800a1f8:	e7f1      	b.n	800a1de <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a1fa:	6823      	ldr	r3, [r4, #0]
 800a1fc:	88a1      	ldrh	r1, [r4, #4]
 800a1fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a200:	4620      	mov	r0, r4
 800a202:	4798      	blx	r3
 800a204:	88a3      	ldrh	r3, [r4, #4]
 800a206:	3301      	adds	r3, #1
 800a208:	80a3      	strh	r3, [r4, #4]
 800a20a:	bd38      	pop	{r3, r4, r5, pc}
 800a20c:	0801d8e9 	.word	0x0801d8e9
 800a210:	0801d9dd 	.word	0x0801d9dd
 800a214:	0801d841 	.word	0x0801d841
 800a218:	0801d900 	.word	0x0801d900

0800a21c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a21c:	b570      	push	{r4, r5, r6, lr}
 800a21e:	6803      	ldr	r3, [r0, #0]
 800a220:	6a1b      	ldr	r3, [r3, #32]
 800a222:	4616      	mov	r6, r2
 800a224:	4604      	mov	r4, r0
 800a226:	460d      	mov	r5, r1
 800a228:	4798      	blx	r3
 800a22a:	4286      	cmp	r6, r0
 800a22c:	d905      	bls.n	800a23a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a22e:	4b06      	ldr	r3, [pc, #24]	; (800a248 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a230:	4a06      	ldr	r2, [pc, #24]	; (800a24c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a232:	4807      	ldr	r0, [pc, #28]	; (800a250 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a234:	213c      	movs	r1, #60	; 0x3c
 800a236:	f011 f9b7 	bl	801b5a8 <__assert_func>
 800a23a:	6823      	ldr	r3, [r4, #0]
 800a23c:	4629      	mov	r1, r5
 800a23e:	4620      	mov	r0, r4
 800a240:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a242:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a246:	4718      	bx	r3
 800a248:	0801d8e9 	.word	0x0801d8e9
 800a24c:	0801d950 	.word	0x0801d950
 800a250:	0801d841 	.word	0x0801d841

0800a254 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a254:	4770      	bx	lr
	...

0800a258 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a258:	4a02      	ldr	r2, [pc, #8]	; (800a264 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a25a:	6002      	str	r2, [r0, #0]
 800a25c:	2200      	movs	r2, #0
 800a25e:	8082      	strh	r2, [r0, #4]
 800a260:	4770      	bx	lr
 800a262:	bf00      	nop
 800a264:	0801d924 	.word	0x0801d924

0800a268 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a268:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a26a:	4770      	bx	lr

0800a26c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a26c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a26e:	2000      	movs	r0, #0
 800a270:	b12b      	cbz	r3, 800a27e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a272:	b920      	cbnz	r0, 800a27e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a274:	1a5a      	subs	r2, r3, r1
 800a276:	4250      	negs	r0, r2
 800a278:	4150      	adcs	r0, r2
 800a27a:	699b      	ldr	r3, [r3, #24]
 800a27c:	e7f8      	b.n	800a270 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a27e:	4770      	bx	lr

0800a280 <_ZN8touchgfx9Container9removeAllEv>:
 800a280:	2200      	movs	r2, #0
 800a282:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a284:	b123      	cbz	r3, 800a290 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a286:	6999      	ldr	r1, [r3, #24]
 800a288:	6281      	str	r1, [r0, #40]	; 0x28
 800a28a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a28e:	e7f8      	b.n	800a282 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a290:	4770      	bx	lr

0800a292 <_ZN8touchgfx9Container6unlinkEv>:
 800a292:	2300      	movs	r3, #0
 800a294:	6283      	str	r3, [r0, #40]	; 0x28
 800a296:	4770      	bx	lr

0800a298 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a29c:	461f      	mov	r7, r3
 800a29e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a2a2:	460d      	mov	r5, r1
 800a2a4:	4616      	mov	r6, r2
 800a2a6:	b103      	cbz	r3, 800a2aa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a2a8:	6038      	str	r0, [r7, #0]
 800a2aa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a2ac:	b314      	cbz	r4, 800a2f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a2ae:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a2b2:	b1eb      	cbz	r3, 800a2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a2b8:	428d      	cmp	r5, r1
 800a2ba:	db19      	blt.n	800a2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2bc:	8923      	ldrh	r3, [r4, #8]
 800a2be:	b289      	uxth	r1, r1
 800a2c0:	440b      	add	r3, r1
 800a2c2:	b21b      	sxth	r3, r3
 800a2c4:	429d      	cmp	r5, r3
 800a2c6:	da13      	bge.n	800a2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2c8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a2cc:	4296      	cmp	r6, r2
 800a2ce:	db0f      	blt.n	800a2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2d0:	8963      	ldrh	r3, [r4, #10]
 800a2d2:	b292      	uxth	r2, r2
 800a2d4:	4413      	add	r3, r2
 800a2d6:	b21b      	sxth	r3, r3
 800a2d8:	429e      	cmp	r6, r3
 800a2da:	da09      	bge.n	800a2f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2dc:	6823      	ldr	r3, [r4, #0]
 800a2de:	1ab2      	subs	r2, r6, r2
 800a2e0:	1a69      	subs	r1, r5, r1
 800a2e2:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800a2e6:	b212      	sxth	r2, r2
 800a2e8:	463b      	mov	r3, r7
 800a2ea:	b209      	sxth	r1, r1
 800a2ec:	4620      	mov	r0, r4
 800a2ee:	47c0      	blx	r8
 800a2f0:	69a4      	ldr	r4, [r4, #24]
 800a2f2:	e7db      	b.n	800a2ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a2f8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a2f8:	2200      	movs	r2, #0
 800a2fa:	8002      	strh	r2, [r0, #0]
 800a2fc:	8042      	strh	r2, [r0, #2]
 800a2fe:	8082      	strh	r2, [r0, #4]
 800a300:	80c2      	strh	r2, [r0, #6]
 800a302:	4770      	bx	lr

0800a304 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a304:	b570      	push	{r4, r5, r6, lr}
 800a306:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a308:	460d      	mov	r5, r1
 800a30a:	4616      	mov	r6, r2
 800a30c:	b13c      	cbz	r4, 800a31e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a30e:	6823      	ldr	r3, [r4, #0]
 800a310:	4620      	mov	r0, r4
 800a312:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a314:	4632      	mov	r2, r6
 800a316:	4629      	mov	r1, r5
 800a318:	4798      	blx	r3
 800a31a:	69a4      	ldr	r4, [r4, #24]
 800a31c:	e7f6      	b.n	800a30c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a31e:	bd70      	pop	{r4, r5, r6, pc}

0800a320 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a320:	b538      	push	{r3, r4, r5, lr}
 800a322:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a324:	460d      	mov	r5, r1
 800a326:	b134      	cbz	r4, 800a336 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a328:	682b      	ldr	r3, [r5, #0]
 800a32a:	4621      	mov	r1, r4
 800a32c:	689b      	ldr	r3, [r3, #8]
 800a32e:	4628      	mov	r0, r5
 800a330:	4798      	blx	r3
 800a332:	69a4      	ldr	r4, [r4, #24]
 800a334:	e7f7      	b.n	800a326 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a336:	bd38      	pop	{r3, r4, r5, pc}

0800a338 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a338:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a33a:	b19b      	cbz	r3, 800a364 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a33c:	428b      	cmp	r3, r1
 800a33e:	d109      	bne.n	800a354 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a340:	699a      	ldr	r2, [r3, #24]
 800a342:	2100      	movs	r1, #0
 800a344:	6159      	str	r1, [r3, #20]
 800a346:	6282      	str	r2, [r0, #40]	; 0x28
 800a348:	b902      	cbnz	r2, 800a34c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a34a:	4770      	bx	lr
 800a34c:	6199      	str	r1, [r3, #24]
 800a34e:	4770      	bx	lr
 800a350:	4613      	mov	r3, r2
 800a352:	b13a      	cbz	r2, 800a364 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a354:	699a      	ldr	r2, [r3, #24]
 800a356:	428a      	cmp	r2, r1
 800a358:	d1fa      	bne.n	800a350 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a35a:	698a      	ldr	r2, [r1, #24]
 800a35c:	619a      	str	r2, [r3, #24]
 800a35e:	2300      	movs	r3, #0
 800a360:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a364:	4770      	bx	lr

0800a366 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a366:	b410      	push	{r4}
 800a368:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a36a:	4604      	mov	r4, r0
 800a36c:	b92b      	cbnz	r3, 800a37a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a36e:	6803      	ldr	r3, [r0, #0]
 800a370:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a374:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a376:	4611      	mov	r1, r2
 800a378:	4718      	bx	r3
 800a37a:	b941      	cbnz	r1, 800a38e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a37c:	6193      	str	r3, [r2, #24]
 800a37e:	6282      	str	r2, [r0, #40]	; 0x28
 800a380:	6154      	str	r4, [r2, #20]
 800a382:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a386:	4770      	bx	lr
 800a388:	4603      	mov	r3, r0
 800a38a:	2800      	cmp	r0, #0
 800a38c:	d0f9      	beq.n	800a382 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a38e:	4299      	cmp	r1, r3
 800a390:	6998      	ldr	r0, [r3, #24]
 800a392:	d1f9      	bne.n	800a388 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a394:	6190      	str	r0, [r2, #24]
 800a396:	618a      	str	r2, [r1, #24]
 800a398:	e7f2      	b.n	800a380 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800a39c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a39c:	4288      	cmp	r0, r1
 800a39e:	b508      	push	{r3, lr}
 800a3a0:	d105      	bne.n	800a3ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a3a2:	4b11      	ldr	r3, [pc, #68]	; (800a3e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a3a4:	4a11      	ldr	r2, [pc, #68]	; (800a3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3a6:	2123      	movs	r1, #35	; 0x23
 800a3a8:	4811      	ldr	r0, [pc, #68]	; (800a3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a3aa:	f011 f8fd 	bl	801b5a8 <__assert_func>
 800a3ae:	694b      	ldr	r3, [r1, #20]
 800a3b0:	b11b      	cbz	r3, 800a3ba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a3b2:	4b10      	ldr	r3, [pc, #64]	; (800a3f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a3b4:	4a0d      	ldr	r2, [pc, #52]	; (800a3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3b6:	2124      	movs	r1, #36	; 0x24
 800a3b8:	e7f6      	b.n	800a3a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a3ba:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a3be:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a3c0:	b913      	cbnz	r3, 800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a3c2:	6281      	str	r1, [r0, #40]	; 0x28
 800a3c4:	bd08      	pop	{r3, pc}
 800a3c6:	4613      	mov	r3, r2
 800a3c8:	699a      	ldr	r2, [r3, #24]
 800a3ca:	b12a      	cbz	r2, 800a3d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a3cc:	428b      	cmp	r3, r1
 800a3ce:	d1fa      	bne.n	800a3c6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a3d0:	4b09      	ldr	r3, [pc, #36]	; (800a3f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a3d2:	4a06      	ldr	r2, [pc, #24]	; (800a3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3d4:	2135      	movs	r1, #53	; 0x35
 800a3d6:	e7e7      	b.n	800a3a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a3d8:	428b      	cmp	r3, r1
 800a3da:	d103      	bne.n	800a3e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a3dc:	4b06      	ldr	r3, [pc, #24]	; (800a3f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a3de:	4a03      	ldr	r2, [pc, #12]	; (800a3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3e0:	2138      	movs	r1, #56	; 0x38
 800a3e2:	e7e1      	b.n	800a3a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a3e4:	6199      	str	r1, [r3, #24]
 800a3e6:	e7ed      	b.n	800a3c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a3e8:	0801da1b 	.word	0x0801da1b
 800a3ec:	0801db6c 	.word	0x0801db6c
 800a3f0:	0801da47 	.word	0x0801da47
 800a3f4:	0801da7a 	.word	0x0801da7a
 800a3f8:	0801dab0 	.word	0x0801dab0

0800a3fc <_ZN8touchgfx4RectaNERKS0_>:
 800a3fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a400:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a404:	888c      	ldrh	r4, [r1, #4]
 800a406:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a40a:	443c      	add	r4, r7
 800a40c:	b2a4      	uxth	r4, r4
 800a40e:	fa0f f884 	sxth.w	r8, r4
 800a412:	45c1      	cmp	r9, r8
 800a414:	da2f      	bge.n	800a476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a416:	8882      	ldrh	r2, [r0, #4]
 800a418:	444a      	add	r2, r9
 800a41a:	b292      	uxth	r2, r2
 800a41c:	fa0f fe82 	sxth.w	lr, r2
 800a420:	4577      	cmp	r7, lr
 800a422:	da28      	bge.n	800a476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a424:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a428:	88cb      	ldrh	r3, [r1, #6]
 800a42a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a42e:	442b      	add	r3, r5
 800a430:	b21b      	sxth	r3, r3
 800a432:	429e      	cmp	r6, r3
 800a434:	da1f      	bge.n	800a476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a436:	88c3      	ldrh	r3, [r0, #6]
 800a438:	4433      	add	r3, r6
 800a43a:	b29b      	uxth	r3, r3
 800a43c:	fa0f fc83 	sxth.w	ip, r3
 800a440:	4565      	cmp	r5, ip
 800a442:	da18      	bge.n	800a476 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a444:	454f      	cmp	r7, r9
 800a446:	bfb8      	it	lt
 800a448:	464f      	movlt	r7, r9
 800a44a:	42b5      	cmp	r5, r6
 800a44c:	bfb8      	it	lt
 800a44e:	4635      	movlt	r5, r6
 800a450:	45f0      	cmp	r8, lr
 800a452:	bfd8      	it	le
 800a454:	4622      	movle	r2, r4
 800a456:	1bd2      	subs	r2, r2, r7
 800a458:	8082      	strh	r2, [r0, #4]
 800a45a:	884a      	ldrh	r2, [r1, #2]
 800a45c:	88c9      	ldrh	r1, [r1, #6]
 800a45e:	8007      	strh	r7, [r0, #0]
 800a460:	440a      	add	r2, r1
 800a462:	b292      	uxth	r2, r2
 800a464:	b211      	sxth	r1, r2
 800a466:	458c      	cmp	ip, r1
 800a468:	bfa8      	it	ge
 800a46a:	4613      	movge	r3, r2
 800a46c:	1b5b      	subs	r3, r3, r5
 800a46e:	80c3      	strh	r3, [r0, #6]
 800a470:	8045      	strh	r5, [r0, #2]
 800a472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a476:	2300      	movs	r3, #0
 800a478:	8003      	strh	r3, [r0, #0]
 800a47a:	8043      	strh	r3, [r0, #2]
 800a47c:	8083      	strh	r3, [r0, #4]
 800a47e:	80c3      	strh	r3, [r0, #6]
 800a480:	e7f7      	b.n	800a472 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a482 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a482:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a486:	2b00      	cmp	r3, #0
 800a488:	dd06      	ble.n	800a498 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a48a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a48e:	2800      	cmp	r0, #0
 800a490:	bfcc      	ite	gt
 800a492:	2000      	movgt	r0, #0
 800a494:	2001      	movle	r0, #1
 800a496:	4770      	bx	lr
 800a498:	2001      	movs	r0, #1
 800a49a:	4770      	bx	lr

0800a49c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4a0:	2300      	movs	r3, #0
 800a4a2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a4a4:	8003      	strh	r3, [r0, #0]
 800a4a6:	4604      	mov	r4, r0
 800a4a8:	8043      	strh	r3, [r0, #2]
 800a4aa:	8083      	strh	r3, [r0, #4]
 800a4ac:	80c3      	strh	r3, [r0, #6]
 800a4ae:	2d00      	cmp	r5, #0
 800a4b0:	d040      	beq.n	800a534 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a4b2:	1d28      	adds	r0, r5, #4
 800a4b4:	f7ff ffe5 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4b8:	b988      	cbnz	r0, 800a4de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	f7ff ffe1 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4c0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a4c4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a4c8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a4cc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a4d0:	b138      	cbz	r0, 800a4e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a4d2:	8022      	strh	r2, [r4, #0]
 800a4d4:	8063      	strh	r3, [r4, #2]
 800a4d6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a4da:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a4de:	69ad      	ldr	r5, [r5, #24]
 800a4e0:	e7e5      	b.n	800a4ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a4e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a4e6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a4ea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a4ee:	4290      	cmp	r0, r2
 800a4f0:	4607      	mov	r7, r0
 800a4f2:	bfa8      	it	ge
 800a4f4:	4617      	movge	r7, r2
 800a4f6:	4472      	add	r2, lr
 800a4f8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a4fc:	8027      	strh	r7, [r4, #0]
 800a4fe:	4299      	cmp	r1, r3
 800a500:	460e      	mov	r6, r1
 800a502:	4440      	add	r0, r8
 800a504:	bfa8      	it	ge
 800a506:	461e      	movge	r6, r3
 800a508:	4471      	add	r1, lr
 800a50a:	4463      	add	r3, ip
 800a50c:	b200      	sxth	r0, r0
 800a50e:	b212      	sxth	r2, r2
 800a510:	b209      	sxth	r1, r1
 800a512:	b21b      	sxth	r3, r3
 800a514:	4290      	cmp	r0, r2
 800a516:	bfac      	ite	ge
 800a518:	ebc7 0200 	rsbge	r2, r7, r0
 800a51c:	ebc7 0202 	rsblt	r2, r7, r2
 800a520:	4299      	cmp	r1, r3
 800a522:	bfac      	ite	ge
 800a524:	ebc6 0301 	rsbge	r3, r6, r1
 800a528:	ebc6 0303 	rsblt	r3, r6, r3
 800a52c:	8066      	strh	r6, [r4, #2]
 800a52e:	80a2      	strh	r2, [r4, #4]
 800a530:	80e3      	strh	r3, [r4, #6]
 800a532:	e7d4      	b.n	800a4de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a534:	4620      	mov	r0, r4
 800a536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a53a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a53a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a53e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a542:	b383      	cbz	r3, 800a5a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a544:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a546:	b374      	cbz	r4, 800a5a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a548:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a54c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a550:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a554:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a558:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a55c:	b303      	cbz	r3, 800a5a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a55e:	4668      	mov	r0, sp
 800a560:	1d21      	adds	r1, r4, #4
 800a562:	f8ad 5000 	strh.w	r5, [sp]
 800a566:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a56a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a56e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a572:	f7ff ff43 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800a576:	4668      	mov	r0, sp
 800a578:	f7ff ff83 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a57c:	b980      	cbnz	r0, 800a5a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a57e:	f8bd 3000 	ldrh.w	r3, [sp]
 800a582:	88a2      	ldrh	r2, [r4, #4]
 800a584:	1a9b      	subs	r3, r3, r2
 800a586:	f8ad 3000 	strh.w	r3, [sp]
 800a58a:	88e2      	ldrh	r2, [r4, #6]
 800a58c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a590:	1a9b      	subs	r3, r3, r2
 800a592:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a596:	6823      	ldr	r3, [r4, #0]
 800a598:	4669      	mov	r1, sp
 800a59a:	689b      	ldr	r3, [r3, #8]
 800a59c:	4620      	mov	r0, r4
 800a59e:	4798      	blx	r3
 800a5a0:	69a4      	ldr	r4, [r4, #24]
 800a5a2:	2c00      	cmp	r4, #0
 800a5a4:	d1d8      	bne.n	800a558 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a5a6:	b002      	add	sp, #8
 800a5a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a5ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a5ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5ae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a5b2:	460d      	mov	r5, r1
 800a5b4:	4616      	mov	r6, r2
 800a5b6:	b323      	cbz	r3, 800a602 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a5b8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a5ba:	b314      	cbz	r4, 800a602 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a5bc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a5c0:	b1eb      	cbz	r3, 800a5fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a5c2:	6828      	ldr	r0, [r5, #0]
 800a5c4:	6869      	ldr	r1, [r5, #4]
 800a5c6:	466b      	mov	r3, sp
 800a5c8:	c303      	stmia	r3!, {r0, r1}
 800a5ca:	4668      	mov	r0, sp
 800a5cc:	1d21      	adds	r1, r4, #4
 800a5ce:	f7ff ff15 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800a5d2:	4668      	mov	r0, sp
 800a5d4:	f7ff ff55 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a5d8:	b988      	cbnz	r0, 800a5fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a5da:	f8bd 3000 	ldrh.w	r3, [sp]
 800a5de:	88a2      	ldrh	r2, [r4, #4]
 800a5e0:	1a9b      	subs	r3, r3, r2
 800a5e2:	f8ad 3000 	strh.w	r3, [sp]
 800a5e6:	88e2      	ldrh	r2, [r4, #6]
 800a5e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a5ec:	1a9b      	subs	r3, r3, r2
 800a5ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a5f2:	6823      	ldr	r3, [r4, #0]
 800a5f4:	4632      	mov	r2, r6
 800a5f6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a5f8:	4669      	mov	r1, sp
 800a5fa:	4620      	mov	r0, r4
 800a5fc:	4798      	blx	r3
 800a5fe:	69a4      	ldr	r4, [r4, #24]
 800a600:	e7db      	b.n	800a5ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a602:	b002      	add	sp, #8
 800a604:	bd70      	pop	{r4, r5, r6, pc}

0800a606 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a606:	b513      	push	{r0, r1, r4, lr}
 800a608:	6803      	ldr	r3, [r0, #0]
 800a60a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a60e:	2300      	movs	r3, #0
 800a610:	e9cd 3300 	strd	r3, r3, [sp]
 800a614:	466b      	mov	r3, sp
 800a616:	47a0      	blx	r4
 800a618:	b002      	add	sp, #8
 800a61a:	bd10      	pop	{r4, pc}

0800a61c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a61c:	2301      	movs	r3, #1
 800a61e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a622:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a626:	4770      	bx	lr

0800a628 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a628:	2301      	movs	r3, #1
 800a62a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a62e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a632:	4770      	bx	lr

0800a634 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a634:	6843      	ldr	r3, [r0, #4]
 800a636:	2201      	movs	r2, #1
 800a638:	725a      	strb	r2, [r3, #9]
 800a63a:	6840      	ldr	r0, [r0, #4]
 800a63c:	6803      	ldr	r3, [r0, #0]
 800a63e:	691b      	ldr	r3, [r3, #16]
 800a640:	4718      	bx	r3

0800a642 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a642:	6840      	ldr	r0, [r0, #4]
 800a644:	6803      	ldr	r3, [r0, #0]
 800a646:	689b      	ldr	r3, [r3, #8]
 800a648:	4718      	bx	r3
	...

0800a64c <_ZN8touchgfx3HAL10beginFrameEv>:
 800a64c:	4b04      	ldr	r3, [pc, #16]	; (800a660 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a64e:	781b      	ldrb	r3, [r3, #0]
 800a650:	b123      	cbz	r3, 800a65c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a652:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a656:	f080 0001 	eor.w	r0, r0, #1
 800a65a:	4770      	bx	lr
 800a65c:	2001      	movs	r0, #1
 800a65e:	4770      	bx	lr
 800a660:	2000898e 	.word	0x2000898e

0800a664 <_ZN8touchgfx3HAL8endFrameEv>:
 800a664:	b510      	push	{r4, lr}
 800a666:	4604      	mov	r4, r0
 800a668:	6840      	ldr	r0, [r0, #4]
 800a66a:	6803      	ldr	r3, [r0, #0]
 800a66c:	689b      	ldr	r3, [r3, #8]
 800a66e:	4798      	blx	r3
 800a670:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a674:	b113      	cbz	r3, 800a67c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a676:	2301      	movs	r3, #1
 800a678:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a67c:	bd10      	pop	{r4, pc}

0800a67e <_ZN8touchgfx3HAL9taskEntryEv>:
 800a67e:	b508      	push	{r3, lr}
 800a680:	6803      	ldr	r3, [r0, #0]
 800a682:	4604      	mov	r4, r0
 800a684:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a686:	4798      	blx	r3
 800a688:	6823      	ldr	r3, [r4, #0]
 800a68a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a68c:	4620      	mov	r0, r4
 800a68e:	4798      	blx	r3
 800a690:	f7f7 f93e 	bl	8001910 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800a694:	6823      	ldr	r3, [r4, #0]
 800a696:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a698:	e7f8      	b.n	800a68c <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800a69c <_ZN8touchgfx3HAL4tickEv>:
 800a69c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a69e:	6803      	ldr	r3, [r0, #0]
 800a6a0:	4d5c      	ldr	r5, [pc, #368]	; (800a814 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a6a2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800a6a6:	4604      	mov	r4, r0
 800a6a8:	4798      	blx	r3
 800a6aa:	2800      	cmp	r0, #0
 800a6ac:	f000 8097 	beq.w	800a7de <_ZN8touchgfx3HAL4tickEv+0x142>
 800a6b0:	2001      	movs	r0, #1
 800a6b2:	f7f6 fe85 	bl	80013c0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a6b6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a6ba:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a6be:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a6c2:	2600      	movs	r6, #0
 800a6c4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a6c8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a6cc:	b133      	cbz	r3, 800a6dc <_ZN8touchgfx3HAL4tickEv+0x40>
 800a6ce:	6823      	ldr	r3, [r4, #0]
 800a6d0:	4620      	mov	r0, r4
 800a6d2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800a6d6:	4798      	blx	r3
 800a6d8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a6dc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a6e0:	6862      	ldr	r2, [r4, #4]
 800a6e2:	f083 0301 	eor.w	r3, r3, #1
 800a6e6:	7253      	strb	r3, [r2, #9]
 800a6e8:	2601      	movs	r6, #1
 800a6ea:	702e      	strb	r6, [r5, #0]
 800a6ec:	f002 fcc6 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800a6f0:	6803      	ldr	r3, [r0, #0]
 800a6f2:	4631      	mov	r1, r6
 800a6f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a6f6:	4798      	blx	r3
 800a6f8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a6fc:	b90b      	cbnz	r3, 800a702 <_ZN8touchgfx3HAL4tickEv+0x66>
 800a6fe:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a702:	f002 fcbb 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800a706:	6803      	ldr	r3, [r0, #0]
 800a708:	695b      	ldr	r3, [r3, #20]
 800a70a:	4798      	blx	r3
 800a70c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a70e:	6803      	ldr	r3, [r0, #0]
 800a710:	691b      	ldr	r3, [r3, #16]
 800a712:	4798      	blx	r3
 800a714:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a718:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a71c:	3b01      	subs	r3, #1
 800a71e:	b2db      	uxtb	r3, r3
 800a720:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a724:	b10a      	cbz	r2, 800a72a <_ZN8touchgfx3HAL4tickEv+0x8e>
 800a726:	2b00      	cmp	r3, #0
 800a728:	d1eb      	bne.n	800a702 <_ZN8touchgfx3HAL4tickEv+0x66>
 800a72a:	4a3b      	ldr	r2, [pc, #236]	; (800a818 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a72c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a730:	7813      	ldrb	r3, [r2, #0]
 800a732:	3301      	adds	r3, #1
 800a734:	b25b      	sxtb	r3, r3
 800a736:	4299      	cmp	r1, r3
 800a738:	7013      	strb	r3, [r2, #0]
 800a73a:	dc10      	bgt.n	800a75e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a73c:	68e0      	ldr	r0, [r4, #12]
 800a73e:	2300      	movs	r3, #0
 800a740:	7013      	strb	r3, [r2, #0]
 800a742:	6803      	ldr	r3, [r0, #0]
 800a744:	aa03      	add	r2, sp, #12
 800a746:	68db      	ldr	r3, [r3, #12]
 800a748:	a902      	add	r1, sp, #8
 800a74a:	4798      	blx	r3
 800a74c:	6823      	ldr	r3, [r4, #0]
 800a74e:	2800      	cmp	r0, #0
 800a750:	d051      	beq.n	800a7f6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800a752:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a756:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a75a:	4620      	mov	r0, r4
 800a75c:	4798      	blx	r3
 800a75e:	6960      	ldr	r0, [r4, #20]
 800a760:	2300      	movs	r3, #0
 800a762:	f88d 3007 	strb.w	r3, [sp, #7]
 800a766:	b158      	cbz	r0, 800a780 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a768:	6803      	ldr	r3, [r0, #0]
 800a76a:	f10d 0107 	add.w	r1, sp, #7
 800a76e:	68db      	ldr	r3, [r3, #12]
 800a770:	4798      	blx	r3
 800a772:	b128      	cbz	r0, 800a780 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a774:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a776:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a77a:	6803      	ldr	r3, [r0, #0]
 800a77c:	68db      	ldr	r3, [r3, #12]
 800a77e:	4798      	blx	r3
 800a780:	f104 001c 	add.w	r0, r4, #28
 800a784:	f010 fe28 	bl	801b3d8 <_ZN8touchgfx8Gestures4tickEv>
 800a788:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a78c:	b30b      	cbz	r3, 800a7d2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800a78e:	6920      	ldr	r0, [r4, #16]
 800a790:	6803      	ldr	r3, [r0, #0]
 800a792:	691b      	ldr	r3, [r3, #16]
 800a794:	4798      	blx	r3
 800a796:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a798:	4606      	mov	r6, r0
 800a79a:	b903      	cbnz	r3, 800a79e <_ZN8touchgfx3HAL4tickEv+0x102>
 800a79c:	6720      	str	r0, [r4, #112]	; 0x70
 800a79e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a7a0:	4a1e      	ldr	r2, [pc, #120]	; (800a81c <_ZN8touchgfx3HAL4tickEv+0x180>)
 800a7a2:	1af3      	subs	r3, r6, r3
 800a7a4:	4293      	cmp	r3, r2
 800a7a6:	d914      	bls.n	800a7d2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800a7a8:	6920      	ldr	r0, [r4, #16]
 800a7aa:	6803      	ldr	r3, [r0, #0]
 800a7ac:	699b      	ldr	r3, [r3, #24]
 800a7ae:	4798      	blx	r3
 800a7b0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a7b2:	2264      	movs	r2, #100	; 0x64
 800a7b4:	1af3      	subs	r3, r6, r3
 800a7b6:	fbb3 f3f2 	udiv	r3, r3, r2
 800a7ba:	fbb0 f0f3 	udiv	r0, r0, r3
 800a7be:	2800      	cmp	r0, #0
 800a7c0:	dc1e      	bgt.n	800a800 <_ZN8touchgfx3HAL4tickEv+0x164>
 800a7c2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a7c6:	6920      	ldr	r0, [r4, #16]
 800a7c8:	6803      	ldr	r3, [r0, #0]
 800a7ca:	2100      	movs	r1, #0
 800a7cc:	69db      	ldr	r3, [r3, #28]
 800a7ce:	4798      	blx	r3
 800a7d0:	6726      	str	r6, [r4, #112]	; 0x70
 800a7d2:	f002 fc53 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800a7d6:	6803      	ldr	r3, [r0, #0]
 800a7d8:	2100      	movs	r1, #0
 800a7da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7dc:	4798      	blx	r3
 800a7de:	6823      	ldr	r3, [r4, #0]
 800a7e0:	4620      	mov	r0, r4
 800a7e2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800a7e6:	4798      	blx	r3
 800a7e8:	2001      	movs	r0, #1
 800a7ea:	f7f6 fdf4 	bl	80013d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a7ee:	2300      	movs	r3, #0
 800a7f0:	702b      	strb	r3, [r5, #0]
 800a7f2:	b004      	add	sp, #16
 800a7f4:	bd70      	pop	{r4, r5, r6, pc}
 800a7f6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a7fa:	4620      	mov	r0, r4
 800a7fc:	4798      	blx	r3
 800a7fe:	e7ae      	b.n	800a75e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a800:	2863      	cmp	r0, #99	; 0x63
 800a802:	bfcb      	itete	gt
 800a804:	2300      	movgt	r3, #0
 800a806:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a80a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a80e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a812:	e7d8      	b.n	800a7c6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800a814:	20008994 	.word	0x20008994
 800a818:	20008995 	.word	0x20008995
 800a81c:	05f5e100 	.word	0x05f5e100

0800a820 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a820:	f7f7 b846 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a824 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a824:	6581      	str	r1, [r0, #88]	; 0x58
 800a826:	301c      	adds	r0, #28
 800a828:	f010 bdd4 	b.w	801b3d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a82c <_ZN8touchgfx3HAL5touchEll>:
 800a82c:	b530      	push	{r4, r5, lr}
 800a82e:	b087      	sub	sp, #28
 800a830:	4604      	mov	r4, r0
 800a832:	a804      	add	r0, sp, #16
 800a834:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a838:	f002 f9ea 	bl	800cc10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a83c:	9b04      	ldr	r3, [sp, #16]
 800a83e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a842:	a906      	add	r1, sp, #24
 800a844:	9b05      	ldr	r3, [sp, #20]
 800a846:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a84a:	a803      	add	r0, sp, #12
 800a84c:	f002 fa1e 	bl	800cc8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a850:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a854:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a858:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a85c:	f104 001c 	add.w	r0, r4, #28
 800a860:	b189      	cbz	r1, 800a886 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a862:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a866:	9300      	str	r3, [sp, #0]
 800a868:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a86c:	4613      	mov	r3, r2
 800a86e:	462a      	mov	r2, r5
 800a870:	f010 fdc0 	bl	801b3f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a874:	b128      	cbz	r0, 800a882 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a876:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a87a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a87c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a880:	6623      	str	r3, [r4, #96]	; 0x60
 800a882:	b007      	add	sp, #28
 800a884:	bd30      	pop	{r4, r5, pc}
 800a886:	f010 fdf9 	bl	801b47c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a88a:	2301      	movs	r3, #1
 800a88c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a890:	e7f1      	b.n	800a876 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a892:	b570      	push	{r4, r5, r6, lr}
 800a894:	2b00      	cmp	r3, #0
 800a896:	d050      	beq.n	800a93a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a898:	ea81 0002 	eor.w	r0, r1, r2
 800a89c:	07c6      	lsls	r6, r0, #31
 800a89e:	d508      	bpl.n	800a8b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a8a0:	3a01      	subs	r2, #1
 800a8a2:	18cc      	adds	r4, r1, r3
 800a8a4:	42a1      	cmp	r1, r4
 800a8a6:	d048      	beq.n	800a93a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a8a8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a8ac:	f801 0b01 	strb.w	r0, [r1], #1
 800a8b0:	e7f8      	b.n	800a8a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a8b2:	07d5      	lsls	r5, r2, #31
 800a8b4:	bf42      	ittt	mi
 800a8b6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a8ba:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a8be:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a8c2:	2b01      	cmp	r3, #1
 800a8c4:	d915      	bls.n	800a8f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a8c6:	ea82 0001 	eor.w	r0, r2, r1
 800a8ca:	0784      	lsls	r4, r0, #30
 800a8cc:	d02d      	beq.n	800a92a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800a8ce:	1e94      	subs	r4, r2, #2
 800a8d0:	4608      	mov	r0, r1
 800a8d2:	18ce      	adds	r6, r1, r3
 800a8d4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800a8d8:	f820 5b02 	strh.w	r5, [r0], #2
 800a8dc:	1a35      	subs	r5, r6, r0
 800a8de:	2d01      	cmp	r5, #1
 800a8e0:	d8f8      	bhi.n	800a8d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800a8e2:	1e98      	subs	r0, r3, #2
 800a8e4:	f020 0001 	bic.w	r0, r0, #1
 800a8e8:	3002      	adds	r0, #2
 800a8ea:	4401      	add	r1, r0
 800a8ec:	4402      	add	r2, r0
 800a8ee:	f003 0301 	and.w	r3, r3, #1
 800a8f2:	1f14      	subs	r4, r2, #4
 800a8f4:	4608      	mov	r0, r1
 800a8f6:	18ce      	adds	r6, r1, r3
 800a8f8:	1a35      	subs	r5, r6, r0
 800a8fa:	2d03      	cmp	r5, #3
 800a8fc:	d810      	bhi.n	800a920 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800a8fe:	089c      	lsrs	r4, r3, #2
 800a900:	00a0      	lsls	r0, r4, #2
 800a902:	4401      	add	r1, r0
 800a904:	3801      	subs	r0, #1
 800a906:	4402      	add	r2, r0
 800a908:	f06f 0003 	mvn.w	r0, #3
 800a90c:	fb00 3404 	mla	r4, r0, r4, r3
 800a910:	440c      	add	r4, r1
 800a912:	42a1      	cmp	r1, r4
 800a914:	d011      	beq.n	800a93a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a916:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a91a:	f801 3b01 	strb.w	r3, [r1], #1
 800a91e:	e7f8      	b.n	800a912 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800a920:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800a924:	f840 5b04 	str.w	r5, [r0], #4
 800a928:	e7e6      	b.n	800a8f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800a92a:	0790      	lsls	r0, r2, #30
 800a92c:	d0e1      	beq.n	800a8f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a92e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a932:	f821 0b02 	strh.w	r0, [r1], #2
 800a936:	3b02      	subs	r3, #2
 800a938:	e7db      	b.n	800a8f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a93a:	2001      	movs	r0, #1
 800a93c:	bd70      	pop	{r4, r5, r6, pc}

0800a93e <_ZN8touchgfx3HAL7noTouchEv>:
 800a93e:	b510      	push	{r4, lr}
 800a940:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a944:	4604      	mov	r4, r0
 800a946:	b153      	cbz	r3, 800a95e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a948:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a94c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a950:	2101      	movs	r1, #1
 800a952:	301c      	adds	r0, #28
 800a954:	f010 fd92 	bl	801b47c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a958:	2300      	movs	r3, #0
 800a95a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a95e:	bd10      	pop	{r4, pc}

0800a960 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a960:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a964:	4604      	mov	r4, r0
 800a966:	6980      	ldr	r0, [r0, #24]
 800a968:	b085      	sub	sp, #20
 800a96a:	460f      	mov	r7, r1
 800a96c:	4690      	mov	r8, r2
 800a96e:	4699      	mov	r9, r3
 800a970:	b930      	cbnz	r0, 800a980 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800a972:	4b1c      	ldr	r3, [pc, #112]	; (800a9e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800a974:	4a1c      	ldr	r2, [pc, #112]	; (800a9e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a976:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800a97a:	481c      	ldr	r0, [pc, #112]	; (800a9ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800a97c:	f010 fe14 	bl	801b5a8 <__assert_func>
 800a980:	ad04      	add	r5, sp, #16
 800a982:	2600      	movs	r6, #0
 800a984:	f845 6d04 	str.w	r6, [r5, #-4]!
 800a988:	6806      	ldr	r6, [r0, #0]
 800a98a:	9501      	str	r5, [sp, #4]
 800a98c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a990:	9500      	str	r5, [sp, #0]
 800a992:	6835      	ldr	r5, [r6, #0]
 800a994:	47a8      	blx	r5
 800a996:	4d16      	ldr	r5, [pc, #88]	; (800a9f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800a998:	4606      	mov	r6, r0
 800a99a:	f8a5 9000 	strh.w	r9, [r5]
 800a99e:	f7f8 fabf 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800a9a2:	6803      	ldr	r3, [r0, #0]
 800a9a4:	6a1b      	ldr	r3, [r3, #32]
 800a9a6:	4798      	blx	r3
 800a9a8:	2801      	cmp	r0, #1
 800a9aa:	d012      	beq.n	800a9d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800a9ac:	d306      	bcc.n	800a9bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800a9ae:	280d      	cmp	r0, #13
 800a9b0:	d80b      	bhi.n	800a9ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800a9b2:	4b10      	ldr	r3, [pc, #64]	; (800a9f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800a9b4:	4a0c      	ldr	r2, [pc, #48]	; (800a9e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a9b6:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800a9ba:	e7de      	b.n	800a97a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800a9bc:	882b      	ldrh	r3, [r5, #0]
 800a9be:	fb08 7203 	mla	r2, r8, r3, r7
 800a9c2:	9b03      	ldr	r3, [sp, #12]
 800a9c4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a9c8:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a9ca:	4630      	mov	r0, r6
 800a9cc:	b005      	add	sp, #20
 800a9ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a9d2:	882a      	ldrh	r2, [r5, #0]
 800a9d4:	9b03      	ldr	r3, [sp, #12]
 800a9d6:	fb08 7202 	mla	r2, r8, r2, r7
 800a9da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a9de:	1a9a      	subs	r2, r3, r2
 800a9e0:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a9e2:	e7f2      	b.n	800a9ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800a9e4:	0801dc15 	.word	0x0801dc15
 800a9e8:	0801df2e 	.word	0x0801df2e
 800a9ec:	0801dc5a 	.word	0x0801dc5a
 800a9f0:	2000898a 	.word	0x2000898a
 800a9f4:	0801dc80 	.word	0x0801dc80

0800a9f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800a9f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9fc:	4698      	mov	r8, r3
 800a9fe:	6803      	ldr	r3, [r0, #0]
 800aa00:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800aa02:	4b0f      	ldr	r3, [pc, #60]	; (800aa40 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800aa04:	b087      	sub	sp, #28
 800aa06:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa0a:	460e      	mov	r6, r1
 800aa0c:	4617      	mov	r7, r2
 800aa0e:	4604      	mov	r4, r0
 800aa10:	f7f8 fa86 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800aa14:	6803      	ldr	r3, [r0, #0]
 800aa16:	6a1b      	ldr	r3, [r3, #32]
 800aa18:	4798      	blx	r3
 800aa1a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800aa1e:	9302      	str	r3, [sp, #8]
 800aa20:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800aa24:	9301      	str	r3, [sp, #4]
 800aa26:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800aa2a:	9300      	str	r3, [sp, #0]
 800aa2c:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800aa30:	4643      	mov	r3, r8
 800aa32:	463a      	mov	r2, r7
 800aa34:	4631      	mov	r1, r6
 800aa36:	4620      	mov	r0, r4
 800aa38:	47a8      	blx	r5
 800aa3a:	b007      	add	sp, #28
 800aa3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa40:	2000898a 	.word	0x2000898a

0800aa44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aa44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa48:	4604      	mov	r4, r0
 800aa4a:	b08b      	sub	sp, #44	; 0x2c
 800aa4c:	4610      	mov	r0, r2
 800aa4e:	460d      	mov	r5, r1
 800aa50:	4691      	mov	r9, r2
 800aa52:	461e      	mov	r6, r3
 800aa54:	f004 fed8 	bl	800f808 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aa58:	2800      	cmp	r0, #0
 800aa5a:	f000 80a0 	beq.w	800ab9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800aa5e:	6823      	ldr	r3, [r4, #0]
 800aa60:	f8df b170 	ldr.w	fp, [pc, #368]	; 800abd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 800aa64:	6a1b      	ldr	r3, [r3, #32]
 800aa66:	f8df a170 	ldr.w	sl, [pc, #368]	; 800abd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800aa6a:	4620      	mov	r0, r4
 800aa6c:	4798      	blx	r3
 800aa6e:	6823      	ldr	r3, [r4, #0]
 800aa70:	4620      	mov	r0, r4
 800aa72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa74:	4798      	blx	r3
 800aa76:	f8bb 3000 	ldrh.w	r3, [fp]
 800aa7a:	9301      	str	r3, [sp, #4]
 800aa7c:	f8ba 3000 	ldrh.w	r3, [sl]
 800aa80:	9302      	str	r3, [sp, #8]
 800aa82:	4b51      	ldr	r3, [pc, #324]	; (800abc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800aa84:	881a      	ldrh	r2, [r3, #0]
 800aa86:	9203      	str	r2, [sp, #12]
 800aa88:	4a50      	ldr	r2, [pc, #320]	; (800abcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800aa8a:	8812      	ldrh	r2, [r2, #0]
 800aa8c:	9204      	str	r2, [sp, #16]
 800aa8e:	af0a      	add	r7, sp, #40	; 0x28
 800aa90:	4a4f      	ldr	r2, [pc, #316]	; (800abd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 800aa92:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 800aa96:	7812      	ldrb	r2, [r2, #0]
 800aa98:	4698      	mov	r8, r3
 800aa9a:	4638      	mov	r0, r7
 800aa9c:	2a00      	cmp	r2, #0
 800aa9e:	f040 8081 	bne.w	800aba4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 800aaa2:	f004 ff6b 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aaa6:	f8ab 0000 	strh.w	r0, [fp]
 800aaaa:	4638      	mov	r0, r7
 800aaac:	f004 ffa0 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aab0:	f8aa 0000 	strh.w	r0, [sl]
 800aab4:	4638      	mov	r0, r7
 800aab6:	f004 ff61 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aaba:	f8a8 0000 	strh.w	r0, [r8]
 800aabe:	4638      	mov	r0, r7
 800aac0:	f004 ff96 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aac4:	4b41      	ldr	r3, [pc, #260]	; (800abcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800aac6:	8018      	strh	r0, [r3, #0]
 800aac8:	4648      	mov	r0, r9
 800aaca:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800aace:	f004 fe9b 	bl	800f808 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aad2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800aad6:	2200      	movs	r2, #0
 800aad8:	4611      	mov	r1, r2
 800aada:	4628      	mov	r0, r5
 800aadc:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800aae0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800aae4:	f7f9 f9d8 	bl	8003e98 <_ZN8touchgfx8Drawable5setXYEss>
 800aae8:	2301      	movs	r3, #1
 800aaea:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800aaee:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800aaf2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aaf6:	2b00      	cmp	r3, #0
 800aaf8:	dd5c      	ble.n	800abb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800aafa:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aafe:	2b00      	cmp	r3, #0
 800ab00:	dd58      	ble.n	800abb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800ab02:	462a      	mov	r2, r5
 800ab04:	ab08      	add	r3, sp, #32
 800ab06:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ab0a:	6851      	ldr	r1, [r2, #4]
 800ab0c:	c303      	stmia	r3!, {r0, r1}
 800ab0e:	4631      	mov	r1, r6
 800ab10:	a808      	add	r0, sp, #32
 800ab12:	f7ff fc73 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800ab16:	a807      	add	r0, sp, #28
 800ab18:	f005 f8c2 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ab1c:	4606      	mov	r6, r0
 800ab1e:	f7f8 f9ff 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800ab22:	6803      	ldr	r3, [r0, #0]
 800ab24:	6a1b      	ldr	r3, [r3, #32]
 800ab26:	4798      	blx	r3
 800ab28:	4286      	cmp	r6, r0
 800ab2a:	d04a      	beq.n	800abc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800ab2c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ab2e:	b150      	cbz	r0, 800ab46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800ab30:	a807      	add	r0, sp, #28
 800ab32:	f005 f8b5 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ab36:	4606      	mov	r6, r0
 800ab38:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ab3a:	6803      	ldr	r3, [r0, #0]
 800ab3c:	6a1b      	ldr	r3, [r3, #32]
 800ab3e:	4798      	blx	r3
 800ab40:	1a33      	subs	r3, r6, r0
 800ab42:	4258      	negs	r0, r3
 800ab44:	4158      	adcs	r0, r3
 800ab46:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ab4a:	2600      	movs	r6, #0
 800ab4c:	682a      	ldr	r2, [r5, #0]
 800ab4e:	696b      	ldr	r3, [r5, #20]
 800ab50:	616e      	str	r6, [r5, #20]
 800ab52:	9305      	str	r3, [sp, #20]
 800ab54:	6892      	ldr	r2, [r2, #8]
 800ab56:	a908      	add	r1, sp, #32
 800ab58:	4628      	mov	r0, r5
 800ab5a:	4790      	blx	r2
 800ab5c:	9b05      	ldr	r3, [sp, #20]
 800ab5e:	616b      	str	r3, [r5, #20]
 800ab60:	4652      	mov	r2, sl
 800ab62:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ab66:	4649      	mov	r1, r9
 800ab68:	4628      	mov	r0, r5
 800ab6a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ab6e:	f7f9 f993 	bl	8003e98 <_ZN8touchgfx8Drawable5setXYEss>
 800ab72:	4b18      	ldr	r3, [pc, #96]	; (800abd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 800ab74:	9a01      	ldr	r2, [sp, #4]
 800ab76:	801a      	strh	r2, [r3, #0]
 800ab78:	4b17      	ldr	r3, [pc, #92]	; (800abd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800ab7a:	9a02      	ldr	r2, [sp, #8]
 800ab7c:	801a      	strh	r2, [r3, #0]
 800ab7e:	4b12      	ldr	r3, [pc, #72]	; (800abc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800ab80:	9a03      	ldr	r2, [sp, #12]
 800ab82:	801a      	strh	r2, [r3, #0]
 800ab84:	4b11      	ldr	r3, [pc, #68]	; (800abcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800ab86:	9a04      	ldr	r2, [sp, #16]
 800ab88:	801a      	strh	r2, [r3, #0]
 800ab8a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ab8e:	6823      	ldr	r3, [r4, #0]
 800ab90:	4620      	mov	r0, r4
 800ab92:	6a1b      	ldr	r3, [r3, #32]
 800ab94:	4798      	blx	r3
 800ab96:	6823      	ldr	r3, [r4, #0]
 800ab98:	4620      	mov	r0, r4
 800ab9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab9c:	4798      	blx	r3
 800ab9e:	b00b      	add	sp, #44	; 0x2c
 800aba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aba4:	f004 ff24 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aba8:	f8ab 0000 	strh.w	r0, [fp]
 800abac:	4638      	mov	r0, r7
 800abae:	f004 fee5 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abb2:	e77d      	b.n	800aab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 800abb4:	462a      	mov	r2, r5
 800abb6:	ab08      	add	r3, sp, #32
 800abb8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800abbc:	6851      	ldr	r1, [r2, #4]
 800abbe:	c303      	stmia	r3!, {r0, r1}
 800abc0:	e7a9      	b.n	800ab16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 800abc2:	2000      	movs	r0, #0
 800abc4:	e7bf      	b.n	800ab46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800abc6:	bf00      	nop
 800abc8:	20008984 	.word	0x20008984
 800abcc:	20008986 	.word	0x20008986
 800abd0:	20008988 	.word	0x20008988
 800abd4:	2000898a 	.word	0x2000898a
 800abd8:	2000898c 	.word	0x2000898c

0800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800abdc:	b510      	push	{r4, lr}
 800abde:	4b07      	ldr	r3, [pc, #28]	; (800abfc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800abe0:	781b      	ldrb	r3, [r3, #0]
 800abe2:	4604      	mov	r4, r0
 800abe4:	b13b      	cbz	r3, 800abf6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800abe6:	6803      	ldr	r3, [r0, #0]
 800abe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800abea:	4798      	blx	r3
 800abec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800abee:	4283      	cmp	r3, r0
 800abf0:	d101      	bne.n	800abf6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800abf2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800abf4:	bd10      	pop	{r4, pc}
 800abf6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800abf8:	e7fc      	b.n	800abf4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800abfa:	bf00      	nop
 800abfc:	2000898e 	.word	0x2000898e

0800ac00 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ac00:	b510      	push	{r4, lr}
 800ac02:	4b0b      	ldr	r3, [pc, #44]	; (800ac30 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800ac04:	781b      	ldrb	r3, [r3, #0]
 800ac06:	4604      	mov	r4, r0
 800ac08:	b95b      	cbnz	r3, 800ac22 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ac0a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800ac0e:	2b02      	cmp	r3, #2
 800ac10:	d007      	beq.n	800ac22 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ac12:	6840      	ldr	r0, [r0, #4]
 800ac14:	f000 fbce 	bl	800b3b4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ac18:	b118      	cbz	r0, 800ac22 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ac1a:	6862      	ldr	r2, [r4, #4]
 800ac1c:	7a53      	ldrb	r3, [r2, #9]
 800ac1e:	2b00      	cmp	r3, #0
 800ac20:	d0fc      	beq.n	800ac1c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ac22:	f7f6 fe37 	bl	8001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ac26:	4620      	mov	r0, r4
 800ac28:	f7ff ffd8 	bl	800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ac2c:	bd10      	pop	{r4, pc}
 800ac2e:	bf00      	nop
 800ac30:	2000898e 	.word	0x2000898e

0800ac34 <_ZN8touchgfx3HAL10initializeEv>:
 800ac34:	b510      	push	{r4, lr}
 800ac36:	4604      	mov	r4, r0
 800ac38:	f7f6 fdf6 	bl	8001828 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ac3c:	6860      	ldr	r0, [r4, #4]
 800ac3e:	6803      	ldr	r3, [r0, #0]
 800ac40:	68db      	ldr	r3, [r3, #12]
 800ac42:	4798      	blx	r3
 800ac44:	68e0      	ldr	r0, [r4, #12]
 800ac46:	6803      	ldr	r3, [r0, #0]
 800ac48:	689b      	ldr	r3, [r3, #8]
 800ac4a:	4798      	blx	r3
 800ac4c:	6823      	ldr	r3, [r4, #0]
 800ac4e:	4620      	mov	r0, r4
 800ac50:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ac56:	4718      	bx	r3

0800ac58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800ac58:	b508      	push	{r3, lr}
 800ac5a:	290d      	cmp	r1, #13
 800ac5c:	d817      	bhi.n	800ac8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800ac5e:	e8df f001 	tbb	[pc, r1]
 800ac62:	090b      	.short	0x090b
 800ac64:	0d0d0d07 	.word	0x0d0d0d07
 800ac68:	1414140d 	.word	0x1414140d
 800ac6c:	0d0d1414 	.word	0x0d0d1414
 800ac70:	2020      	movs	r0, #32
 800ac72:	bd08      	pop	{r3, pc}
 800ac74:	2018      	movs	r0, #24
 800ac76:	e7fc      	b.n	800ac72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ac78:	2010      	movs	r0, #16
 800ac7a:	e7fa      	b.n	800ac72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ac7c:	4b05      	ldr	r3, [pc, #20]	; (800ac94 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ac7e:	4a06      	ldr	r2, [pc, #24]	; (800ac98 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ac80:	4806      	ldr	r0, [pc, #24]	; (800ac9c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ac82:	f44f 7111 	mov.w	r1, #580	; 0x244
 800ac86:	f010 fc8f 	bl	801b5a8 <__assert_func>
 800ac8a:	2008      	movs	r0, #8
 800ac8c:	e7f1      	b.n	800ac72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ac8e:	2000      	movs	r0, #0
 800ac90:	e7ef      	b.n	800ac72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ac92:	bf00      	nop
 800ac94:	0801dd53 	.word	0x0801dd53
 800ac98:	0801e0f0 	.word	0x0801e0f0
 800ac9c:	0801dc5a 	.word	0x0801dc5a

0800aca0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800aca0:	b570      	push	{r4, r5, r6, lr}
 800aca2:	460d      	mov	r5, r1
 800aca4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800aca8:	4616      	mov	r6, r2
 800acaa:	461c      	mov	r4, r3
 800acac:	f7ff ffd4 	bl	800ac58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800acb0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800acb4:	10c0      	asrs	r0, r0, #3
 800acb6:	fb06 5101 	mla	r1, r6, r1, r5
 800acba:	fb00 4001 	mla	r0, r0, r1, r4
 800acbe:	bd70      	pop	{r4, r5, r6, pc}

0800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800acc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800acc4:	b08a      	sub	sp, #40	; 0x28
 800acc6:	f04f 0c00 	mov.w	ip, #0
 800acca:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800acce:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800acd2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800acd6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800acda:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800acde:	f8cd c020 	str.w	ip, [sp, #32]
 800ace2:	f1b8 0f02 	cmp.w	r8, #2
 800ace6:	4604      	mov	r4, r0
 800ace8:	469a      	mov	sl, r3
 800acea:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800acee:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800acf2:	d030      	beq.n	800ad56 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800acf4:	2bff      	cmp	r3, #255	; 0xff
 800acf6:	d12c      	bne.n	800ad52 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800acf8:	4560      	cmp	r0, ip
 800acfa:	bf14      	ite	ne
 800acfc:	2004      	movne	r0, #4
 800acfe:	2001      	moveq	r0, #1
 800ad00:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ad04:	9204      	str	r2, [sp, #16]
 800ad06:	4620      	mov	r0, r4
 800ad08:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800ad0c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ad10:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ad14:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ad18:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ad1c:	f7ff ff5e 	bl	800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad20:	e9cd 9700 	strd	r9, r7, [sp]
 800ad24:	4603      	mov	r3, r0
 800ad26:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800ad2a:	4651      	mov	r1, sl
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	f7ff ffb7 	bl	800aca0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ad32:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ad36:	9005      	str	r0, [sp, #20]
 800ad38:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800ad3c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800ad40:	b106      	cbz	r6, 800ad44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800ad42:	b98d      	cbnz	r5, 800ad68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800ad44:	4b12      	ldr	r3, [pc, #72]	; (800ad90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800ad46:	4a13      	ldr	r2, [pc, #76]	; (800ad94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ad48:	f240 11c3 	movw	r1, #451	; 0x1c3
 800ad4c:	4812      	ldr	r0, [pc, #72]	; (800ad98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800ad4e:	f010 fc2b 	bl	801b5a8 <__assert_func>
 800ad52:	2004      	movs	r0, #4
 800ad54:	e7d4      	b.n	800ad00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ad56:	2bff      	cmp	r3, #255	; 0xff
 800ad58:	d104      	bne.n	800ad64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800ad5a:	2800      	cmp	r0, #0
 800ad5c:	bf14      	ite	ne
 800ad5e:	2040      	movne	r0, #64	; 0x40
 800ad60:	2020      	moveq	r0, #32
 800ad62:	e7cd      	b.n	800ad00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ad64:	2040      	movs	r0, #64	; 0x40
 800ad66:	e7cb      	b.n	800ad00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ad68:	6823      	ldr	r3, [r4, #0]
 800ad6a:	9d02      	ldr	r5, [sp, #8]
 800ad6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ad6e:	4620      	mov	r0, r4
 800ad70:	4798      	blx	r3
 800ad72:	4228      	tst	r0, r5
 800ad74:	d104      	bne.n	800ad80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800ad76:	4b09      	ldr	r3, [pc, #36]	; (800ad9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800ad78:	4a06      	ldr	r2, [pc, #24]	; (800ad94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ad7a:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800ad7e:	e7e5      	b.n	800ad4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800ad80:	6860      	ldr	r0, [r4, #4]
 800ad82:	6803      	ldr	r3, [r0, #0]
 800ad84:	a902      	add	r1, sp, #8
 800ad86:	685b      	ldr	r3, [r3, #4]
 800ad88:	4798      	blx	r3
 800ad8a:	b00a      	add	sp, #40	; 0x28
 800ad8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ad90:	0801dcd6 	.word	0x0801dcd6
 800ad94:	0801df92 	.word	0x0801df92
 800ad98:	0801dc5a 	.word	0x0801dc5a
 800ad9c:	0801dd0e 	.word	0x0801dd0e

0800ada0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800ada0:	b510      	push	{r4, lr}
 800ada2:	b08a      	sub	sp, #40	; 0x28
 800ada4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800ada8:	9408      	str	r4, [sp, #32]
 800adaa:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800adae:	9407      	str	r4, [sp, #28]
 800adb0:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800adb4:	9406      	str	r4, [sp, #24]
 800adb6:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800adba:	9405      	str	r4, [sp, #20]
 800adbc:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800adc0:	9404      	str	r4, [sp, #16]
 800adc2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800adc6:	9403      	str	r4, [sp, #12]
 800adc8:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800adcc:	9402      	str	r4, [sp, #8]
 800adce:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800add2:	e9cd 3400 	strd	r3, r4, [sp]
 800add6:	4613      	mov	r3, r2
 800add8:	2200      	movs	r2, #0
 800adda:	f7ff ff71 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800adde:	b00a      	add	sp, #40	; 0x28
 800ade0:	bd10      	pop	{r4, pc}
	...

0800ade4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800ade4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ade6:	b08b      	sub	sp, #44	; 0x2c
 800ade8:	4616      	mov	r6, r2
 800adea:	460d      	mov	r5, r1
 800adec:	461f      	mov	r7, r3
 800adee:	4604      	mov	r4, r0
 800adf0:	f7f8 f896 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800adf4:	6803      	ldr	r3, [r0, #0]
 800adf6:	6a1b      	ldr	r3, [r3, #32]
 800adf8:	4798      	blx	r3
 800adfa:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800adfe:	4b0d      	ldr	r3, [pc, #52]	; (800ae34 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800ae00:	881b      	ldrh	r3, [r3, #0]
 800ae02:	9306      	str	r3, [sp, #24]
 800ae04:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ae08:	9305      	str	r3, [sp, #20]
 800ae0a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ae0e:	9304      	str	r3, [sp, #16]
 800ae10:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ae14:	9303      	str	r3, [sp, #12]
 800ae16:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ae1a:	9302      	str	r3, [sp, #8]
 800ae1c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ae20:	2200      	movs	r2, #0
 800ae22:	e9cd 7300 	strd	r7, r3, [sp]
 800ae26:	4629      	mov	r1, r5
 800ae28:	4633      	mov	r3, r6
 800ae2a:	4620      	mov	r0, r4
 800ae2c:	f7ff ff48 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ae30:	b00b      	add	sp, #44	; 0x2c
 800ae32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae34:	2000898a 	.word	0x2000898a

0800ae38 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800ae38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae3c:	461f      	mov	r7, r3
 800ae3e:	4b14      	ldr	r3, [pc, #80]	; (800ae90 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800ae40:	b08a      	sub	sp, #40	; 0x28
 800ae42:	4616      	mov	r6, r2
 800ae44:	f8b3 8000 	ldrh.w	r8, [r3]
 800ae48:	460d      	mov	r5, r1
 800ae4a:	4604      	mov	r4, r0
 800ae4c:	f7f8 f868 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800ae50:	6803      	ldr	r3, [r0, #0]
 800ae52:	6a1b      	ldr	r3, [r3, #32]
 800ae54:	4798      	blx	r3
 800ae56:	2302      	movs	r3, #2
 800ae58:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800ae5c:	2301      	movs	r3, #1
 800ae5e:	9305      	str	r3, [sp, #20]
 800ae60:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ae64:	9304      	str	r3, [sp, #16]
 800ae66:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ae6a:	9303      	str	r3, [sp, #12]
 800ae6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ae70:	9302      	str	r3, [sp, #8]
 800ae72:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ae76:	9008      	str	r0, [sp, #32]
 800ae78:	e9cd 7300 	strd	r7, r3, [sp]
 800ae7c:	2200      	movs	r2, #0
 800ae7e:	4633      	mov	r3, r6
 800ae80:	4629      	mov	r1, r5
 800ae82:	4620      	mov	r0, r4
 800ae84:	f7ff ff1c 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ae88:	b00a      	add	sp, #40	; 0x28
 800ae8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae8e:	bf00      	nop
 800ae90:	2000898a 	.word	0x2000898a

0800ae94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800ae94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae98:	b08b      	sub	sp, #44	; 0x2c
 800ae9a:	469b      	mov	fp, r3
 800ae9c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800aea0:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800aea4:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800aea8:	2fff      	cmp	r7, #255	; 0xff
 800aeaa:	bf14      	ite	ne
 800aeac:	2308      	movne	r3, #8
 800aeae:	2302      	moveq	r3, #2
 800aeb0:	2600      	movs	r6, #0
 800aeb2:	4604      	mov	r4, r0
 800aeb4:	4689      	mov	r9, r1
 800aeb6:	4692      	mov	sl, r2
 800aeb8:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800aebc:	9608      	str	r6, [sp, #32]
 800aebe:	f7ff fe8d 	bl	800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aec2:	e9cd 8500 	strd	r8, r5, [sp]
 800aec6:	4603      	mov	r3, r0
 800aec8:	465a      	mov	r2, fp
 800aeca:	4651      	mov	r1, sl
 800aecc:	4620      	mov	r0, r4
 800aece:	f7ff fee7 	bl	800aca0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800aed2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800aed6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aeda:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800aede:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aee2:	6823      	ldr	r3, [r4, #0]
 800aee4:	9005      	str	r0, [sp, #20]
 800aee6:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800aeea:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800aeee:	f8ad 601c 	strh.w	r6, [sp, #28]
 800aef2:	f8ad 801e 	strh.w	r8, [sp, #30]
 800aef6:	f8cd 9020 	str.w	r9, [sp, #32]
 800aefa:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800aefe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af00:	9d02      	ldr	r5, [sp, #8]
 800af02:	4620      	mov	r0, r4
 800af04:	4798      	blx	r3
 800af06:	4228      	tst	r0, r5
 800af08:	d106      	bne.n	800af18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800af0a:	4b07      	ldr	r3, [pc, #28]	; (800af28 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800af0c:	4a07      	ldr	r2, [pc, #28]	; (800af2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800af0e:	4808      	ldr	r0, [pc, #32]	; (800af30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800af10:	f240 11fb 	movw	r1, #507	; 0x1fb
 800af14:	f010 fb48 	bl	801b5a8 <__assert_func>
 800af18:	6860      	ldr	r0, [r4, #4]
 800af1a:	6803      	ldr	r3, [r0, #0]
 800af1c:	a902      	add	r1, sp, #8
 800af1e:	685b      	ldr	r3, [r3, #4]
 800af20:	4798      	blx	r3
 800af22:	b00b      	add	sp, #44	; 0x2c
 800af24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af28:	0801dd0e 	.word	0x0801dd0e
 800af2c:	0801e05b 	.word	0x0801e05b
 800af30:	0801dc5a 	.word	0x0801dc5a

0800af34 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800af34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800af38:	461f      	mov	r7, r3
 800af3a:	4b0b      	ldr	r3, [pc, #44]	; (800af68 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800af3c:	460d      	mov	r5, r1
 800af3e:	f8b3 8000 	ldrh.w	r8, [r3]
 800af42:	4616      	mov	r6, r2
 800af44:	4604      	mov	r4, r0
 800af46:	f7f7 ffeb 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800af4a:	6803      	ldr	r3, [r0, #0]
 800af4c:	6a1b      	ldr	r3, [r3, #32]
 800af4e:	4798      	blx	r3
 800af50:	463b      	mov	r3, r7
 800af52:	e9cd 8000 	strd	r8, r0, [sp]
 800af56:	4632      	mov	r2, r6
 800af58:	4629      	mov	r1, r5
 800af5a:	4620      	mov	r0, r4
 800af5c:	f7ff fea0 	bl	800aca0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800af60:	b002      	add	sp, #8
 800af62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af66:	bf00      	nop
 800af68:	2000898a 	.word	0x2000898a

0800af6c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800af6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af70:	b088      	sub	sp, #32
 800af72:	4698      	mov	r8, r3
 800af74:	2300      	movs	r3, #0
 800af76:	9306      	str	r3, [sp, #24]
 800af78:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800af7c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800af80:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800af84:	f8ad 6010 	strh.w	r6, [sp, #16]
 800af88:	e9cd 3100 	strd	r3, r1, [sp]
 800af8c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800af90:	f8ad 3014 	strh.w	r3, [sp, #20]
 800af94:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800af98:	f88d 301c 	strb.w	r3, [sp, #28]
 800af9c:	4617      	mov	r7, r2
 800af9e:	4604      	mov	r4, r0
 800afa0:	f8ad 5012 	strh.w	r5, [sp, #18]
 800afa4:	f7ff fe1a 	bl	800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800afa8:	4642      	mov	r2, r8
 800afaa:	4603      	mov	r3, r0
 800afac:	4639      	mov	r1, r7
 800afae:	4620      	mov	r0, r4
 800afb0:	f7ff ffc0 	bl	800af34 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afb4:	4b16      	ldr	r3, [pc, #88]	; (800b010 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800afb6:	9003      	str	r0, [sp, #12]
 800afb8:	881b      	ldrh	r3, [r3, #0]
 800afba:	f8ad 3016 	strh.w	r3, [sp, #22]
 800afbe:	f7f7 ffaf 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800afc2:	6803      	ldr	r3, [r0, #0]
 800afc4:	6a1b      	ldr	r3, [r3, #32]
 800afc6:	4798      	blx	r3
 800afc8:	f88d 001e 	strb.w	r0, [sp, #30]
 800afcc:	f88d 001d 	strb.w	r0, [sp, #29]
 800afd0:	b106      	cbz	r6, 800afd4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800afd2:	b935      	cbnz	r5, 800afe2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800afd4:	4b0f      	ldr	r3, [pc, #60]	; (800b014 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800afd6:	4a10      	ldr	r2, [pc, #64]	; (800b018 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800afd8:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800afdc:	480f      	ldr	r0, [pc, #60]	; (800b01c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800afde:	f010 fae3 	bl	801b5a8 <__assert_func>
 800afe2:	6823      	ldr	r3, [r4, #0]
 800afe4:	9d00      	ldr	r5, [sp, #0]
 800afe6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800afe8:	4620      	mov	r0, r4
 800afea:	4798      	blx	r3
 800afec:	4228      	tst	r0, r5
 800afee:	d104      	bne.n	800affa <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800aff0:	4b0b      	ldr	r3, [pc, #44]	; (800b020 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800aff2:	4a09      	ldr	r2, [pc, #36]	; (800b018 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800aff4:	f240 11e1 	movw	r1, #481	; 0x1e1
 800aff8:	e7f0      	b.n	800afdc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800affa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800affc:	6860      	ldr	r0, [r4, #4]
 800affe:	9306      	str	r3, [sp, #24]
 800b000:	6803      	ldr	r3, [r0, #0]
 800b002:	4669      	mov	r1, sp
 800b004:	685b      	ldr	r3, [r3, #4]
 800b006:	4798      	blx	r3
 800b008:	b008      	add	sp, #32
 800b00a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b00e:	bf00      	nop
 800b010:	2000898a 	.word	0x2000898a
 800b014:	0801dcd6 	.word	0x0801dcd6
 800b018:	0801de44 	.word	0x0801de44
 800b01c:	0801dc5a 	.word	0x0801dc5a
 800b020:	0801dd0e 	.word	0x0801dd0e

0800b024 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b024:	b570      	push	{r4, r5, r6, lr}
 800b026:	b08a      	sub	sp, #40	; 0x28
 800b028:	466b      	mov	r3, sp
 800b02a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b02e:	4b20      	ldr	r3, [pc, #128]	; (800b0b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800b030:	781b      	ldrb	r3, [r3, #0]
 800b032:	4604      	mov	r4, r0
 800b034:	b933      	cbnz	r3, 800b044 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b036:	4b1f      	ldr	r3, [pc, #124]	; (800b0b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800b038:	4a1f      	ldr	r2, [pc, #124]	; (800b0b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b03a:	4820      	ldr	r0, [pc, #128]	; (800b0bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b03c:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800b040:	f010 fab2 	bl	801b5a8 <__assert_func>
 800b044:	2300      	movs	r3, #0
 800b046:	9308      	str	r3, [sp, #32]
 800b048:	2301      	movs	r3, #1
 800b04a:	9302      	str	r3, [sp, #8]
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	f8bd 5000 	ldrh.w	r5, [sp]
 800b052:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b054:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800b058:	4798      	blx	r3
 800b05a:	4632      	mov	r2, r6
 800b05c:	4629      	mov	r1, r5
 800b05e:	4603      	mov	r3, r0
 800b060:	4620      	mov	r0, r4
 800b062:	f7ff ff67 	bl	800af34 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b066:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b068:	9305      	str	r3, [sp, #20]
 800b06a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b06e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b072:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b076:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b07a:	4b11      	ldr	r3, [pc, #68]	; (800b0c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b07c:	9003      	str	r0, [sp, #12]
 800b07e:	881b      	ldrh	r3, [r3, #0]
 800b080:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b084:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b088:	f7f7 ff4a 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800b08c:	6803      	ldr	r3, [r0, #0]
 800b08e:	6a1b      	ldr	r3, [r3, #32]
 800b090:	4798      	blx	r3
 800b092:	23ff      	movs	r3, #255	; 0xff
 800b094:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b098:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b09c:	6860      	ldr	r0, [r4, #4]
 800b09e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b0a2:	6803      	ldr	r3, [r0, #0]
 800b0a4:	a902      	add	r1, sp, #8
 800b0a6:	685b      	ldr	r3, [r3, #4]
 800b0a8:	4798      	blx	r3
 800b0aa:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b0ac:	b00a      	add	sp, #40	; 0x28
 800b0ae:	bd70      	pop	{r4, r5, r6, pc}
 800b0b0:	2000898f 	.word	0x2000898f
 800b0b4:	0801dba7 	.word	0x0801dba7
 800b0b8:	0801dee8 	.word	0x0801dee8
 800b0bc:	0801dc5a 	.word	0x0801dc5a
 800b0c0:	2000898a 	.word	0x2000898a

0800b0c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b0c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0c6:	b08b      	sub	sp, #44	; 0x2c
 800b0c8:	466d      	mov	r5, sp
 800b0ca:	e885 0006 	stmia.w	r5, {r1, r2}
 800b0ce:	461d      	mov	r5, r3
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	9308      	str	r3, [sp, #32]
 800b0d4:	2301      	movs	r3, #1
 800b0d6:	9302      	str	r3, [sp, #8]
 800b0d8:	6803      	ldr	r3, [r0, #0]
 800b0da:	f8bd 6000 	ldrh.w	r6, [sp]
 800b0de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b0e0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b0e4:	4604      	mov	r4, r0
 800b0e6:	4798      	blx	r3
 800b0e8:	463a      	mov	r2, r7
 800b0ea:	4631      	mov	r1, r6
 800b0ec:	4603      	mov	r3, r0
 800b0ee:	4620      	mov	r0, r4
 800b0f0:	f7ff ff20 	bl	800af34 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0f4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b0f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b0fc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b100:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b104:	4b0e      	ldr	r3, [pc, #56]	; (800b140 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800b106:	9003      	str	r0, [sp, #12]
 800b108:	881b      	ldrh	r3, [r3, #0]
 800b10a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b10e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b110:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b114:	9505      	str	r5, [sp, #20]
 800b116:	f7f7 ff03 	bl	8002f20 <_ZN8touchgfx3HAL3lcdEv>
 800b11a:	6803      	ldr	r3, [r0, #0]
 800b11c:	6a1b      	ldr	r3, [r3, #32]
 800b11e:	4798      	blx	r3
 800b120:	23ff      	movs	r3, #255	; 0xff
 800b122:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b126:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b12a:	6860      	ldr	r0, [r4, #4]
 800b12c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b130:	6803      	ldr	r3, [r0, #0]
 800b132:	a902      	add	r1, sp, #8
 800b134:	685b      	ldr	r3, [r3, #4]
 800b136:	4798      	blx	r3
 800b138:	4628      	mov	r0, r5
 800b13a:	b00b      	add	sp, #44	; 0x2c
 800b13c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b13e:	bf00      	nop
 800b140:	2000898a 	.word	0x2000898a

0800b144 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b144:	b570      	push	{r4, r5, r6, lr}
 800b146:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b14a:	4604      	mov	r4, r0
 800b14c:	b19b      	cbz	r3, 800b176 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b14e:	2002      	movs	r0, #2
 800b150:	f7f6 f94c 	bl	80013ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b154:	2300      	movs	r3, #0
 800b156:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b15a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b15e:	6823      	ldr	r3, [r4, #0]
 800b160:	4620      	mov	r0, r4
 800b162:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800b166:	f7ff fd39 	bl	800abdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b16a:	462b      	mov	r3, r5
 800b16c:	4601      	mov	r1, r0
 800b16e:	4620      	mov	r0, r4
 800b170:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b174:	4718      	bx	r3
 800b176:	bd70      	pop	{r4, r5, r6, pc}

0800b178 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800b178:	4770      	bx	lr

0800b17a <_ZN8touchgfx13DMA_Interface5flushEv>:
 800b17a:	6803      	ldr	r3, [r0, #0]
 800b17c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b17e:	4718      	bx	r3

0800b180 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b180:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b184:	1a13      	subs	r3, r2, r0
 800b186:	4258      	negs	r0, r3
 800b188:	4158      	adcs	r0, r3
 800b18a:	4770      	bx	lr

0800b18c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b18c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b190:	1a9b      	subs	r3, r3, r2
 800b192:	2b00      	cmp	r3, #0
 800b194:	bfdc      	itt	le
 800b196:	6882      	ldrle	r2, [r0, #8]
 800b198:	189b      	addle	r3, r3, r2
 800b19a:	2b01      	cmp	r3, #1
 800b19c:	bfcc      	ite	gt
 800b19e:	2000      	movgt	r0, #0
 800b1a0:	2001      	movle	r0, #1
 800b1a2:	4770      	bx	lr

0800b1a4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b1a4:	6902      	ldr	r2, [r0, #16]
 800b1a6:	6840      	ldr	r0, [r0, #4]
 800b1a8:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800b1ac:	4770      	bx	lr

0800b1ae <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b1ae:	6803      	ldr	r3, [r0, #0]
 800b1b0:	691b      	ldr	r3, [r3, #16]
 800b1b2:	4718      	bx	r3

0800b1b4 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b1b4:	4770      	bx	lr

0800b1b6 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b1b6:	4770      	bx	lr

0800b1b8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b1b8:	b570      	push	{r4, r5, r6, lr}
 800b1ba:	2301      	movs	r3, #1
 800b1bc:	7203      	strb	r3, [r0, #8]
 800b1be:	4604      	mov	r4, r0
 800b1c0:	6840      	ldr	r0, [r0, #4]
 800b1c2:	6803      	ldr	r3, [r0, #0]
 800b1c4:	699b      	ldr	r3, [r3, #24]
 800b1c6:	4798      	blx	r3
 800b1c8:	6803      	ldr	r3, [r0, #0]
 800b1ca:	2b08      	cmp	r3, #8
 800b1cc:	4605      	mov	r5, r0
 800b1ce:	d01e      	beq.n	800b20e <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800b1d0:	d80b      	bhi.n	800b1ea <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1d2:	2b02      	cmp	r3, #2
 800b1d4:	d027      	beq.n	800b226 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b1d6:	2b04      	cmp	r3, #4
 800b1d8:	d011      	beq.n	800b1fe <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b1da:	2b01      	cmp	r3, #1
 800b1dc:	d028      	beq.n	800b230 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b1de:	4b17      	ldr	r3, [pc, #92]	; (800b23c <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800b1e0:	4a17      	ldr	r2, [pc, #92]	; (800b240 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800b1e2:	4818      	ldr	r0, [pc, #96]	; (800b244 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800b1e4:	218c      	movs	r1, #140	; 0x8c
 800b1e6:	f010 f9df 	bl	801b5a8 <__assert_func>
 800b1ea:	2b40      	cmp	r3, #64	; 0x40
 800b1ec:	d020      	beq.n	800b230 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b1ee:	d801      	bhi.n	800b1f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b1f0:	2b20      	cmp	r3, #32
 800b1f2:	e7f3      	b.n	800b1dc <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b1f4:	2b80      	cmp	r3, #128	; 0x80
 800b1f6:	d01b      	beq.n	800b230 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b1f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b1fc:	e7ee      	b.n	800b1dc <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b1fe:	6823      	ldr	r3, [r4, #0]
 800b200:	7f01      	ldrb	r1, [r0, #28]
 800b202:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b204:	4620      	mov	r0, r4
 800b206:	4798      	blx	r3
 800b208:	6823      	ldr	r3, [r4, #0]
 800b20a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b20c:	e006      	b.n	800b21c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b20e:	6823      	ldr	r3, [r4, #0]
 800b210:	7f01      	ldrb	r1, [r0, #28]
 800b212:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b214:	4620      	mov	r0, r4
 800b216:	4798      	blx	r3
 800b218:	6823      	ldr	r3, [r4, #0]
 800b21a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b21c:	4629      	mov	r1, r5
 800b21e:	4620      	mov	r0, r4
 800b220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b224:	4718      	bx	r3
 800b226:	6823      	ldr	r3, [r4, #0]
 800b228:	4620      	mov	r0, r4
 800b22a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b22c:	4798      	blx	r3
 800b22e:	e7f3      	b.n	800b218 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800b230:	6823      	ldr	r3, [r4, #0]
 800b232:	4620      	mov	r0, r4
 800b234:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b236:	4798      	blx	r3
 800b238:	e7e6      	b.n	800b208 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800b23a:	bf00      	nop
 800b23c:	0801e139 	.word	0x0801e139
 800b240:	0801e248 	.word	0x0801e248
 800b244:	0801e15e 	.word	0x0801e15e

0800b248 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b248:	b570      	push	{r4, r5, r6, lr}
 800b24a:	4604      	mov	r4, r0
 800b24c:	460e      	mov	r6, r1
 800b24e:	6860      	ldr	r0, [r4, #4]
 800b250:	6803      	ldr	r3, [r0, #0]
 800b252:	685b      	ldr	r3, [r3, #4]
 800b254:	4798      	blx	r3
 800b256:	2800      	cmp	r0, #0
 800b258:	d1f9      	bne.n	800b24e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b25a:	4d0d      	ldr	r5, [pc, #52]	; (800b290 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b25c:	6828      	ldr	r0, [r5, #0]
 800b25e:	6803      	ldr	r3, [r0, #0]
 800b260:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b262:	4798      	blx	r3
 800b264:	f7f6 fb30 	bl	80018c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b268:	6828      	ldr	r0, [r5, #0]
 800b26a:	2101      	movs	r1, #1
 800b26c:	f7ff ff84 	bl	800b178 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800b270:	6860      	ldr	r0, [r4, #4]
 800b272:	6803      	ldr	r3, [r0, #0]
 800b274:	4631      	mov	r1, r6
 800b276:	689b      	ldr	r3, [r3, #8]
 800b278:	4798      	blx	r3
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	4620      	mov	r0, r4
 800b27e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b280:	4798      	blx	r3
 800b282:	6828      	ldr	r0, [r5, #0]
 800b284:	6803      	ldr	r3, [r0, #0]
 800b286:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b28a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b28c:	4718      	bx	r3
 800b28e:	bf00      	nop
 800b290:	20008990 	.word	0x20008990

0800b294 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b294:	b508      	push	{r3, lr}
 800b296:	f7f6 fafd 	bl	8001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b29a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b29e:	f7f6 bb07 	b.w	80018b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b2a2 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b2a2:	b510      	push	{r4, lr}
 800b2a4:	4604      	mov	r4, r0
 800b2a6:	6840      	ldr	r0, [r0, #4]
 800b2a8:	6803      	ldr	r3, [r0, #0]
 800b2aa:	681b      	ldr	r3, [r3, #0]
 800b2ac:	4798      	blx	r3
 800b2ae:	b948      	cbnz	r0, 800b2c4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2b0:	7a63      	ldrb	r3, [r4, #9]
 800b2b2:	b13b      	cbz	r3, 800b2c4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2b4:	7a23      	ldrb	r3, [r4, #8]
 800b2b6:	b92b      	cbnz	r3, 800b2c4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b2b8:	6823      	ldr	r3, [r4, #0]
 800b2ba:	4620      	mov	r0, r4
 800b2bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b2be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2c2:	4718      	bx	r3
 800b2c4:	bd10      	pop	{r4, pc}
	...

0800b2c8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b2c8:	b510      	push	{r4, lr}
 800b2ca:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800b2ce:	1b12      	subs	r2, r2, r4
 800b2d0:	2a00      	cmp	r2, #0
 800b2d2:	bfdc      	itt	le
 800b2d4:	6883      	ldrle	r3, [r0, #8]
 800b2d6:	18d2      	addle	r2, r2, r3
 800b2d8:	2a01      	cmp	r2, #1
 800b2da:	dd18      	ble.n	800b30e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800b2dc:	6843      	ldr	r3, [r0, #4]
 800b2de:	f101 021c 	add.w	r2, r1, #28
 800b2e2:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800b2e6:	f851 4b04 	ldr.w	r4, [r1], #4
 800b2ea:	f843 4b04 	str.w	r4, [r3], #4
 800b2ee:	4291      	cmp	r1, r2
 800b2f0:	d1f9      	bne.n	800b2e6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800b2f2:	880a      	ldrh	r2, [r1, #0]
 800b2f4:	801a      	strh	r2, [r3, #0]
 800b2f6:	788a      	ldrb	r2, [r1, #2]
 800b2f8:	709a      	strb	r2, [r3, #2]
 800b2fa:	68c3      	ldr	r3, [r0, #12]
 800b2fc:	6882      	ldr	r2, [r0, #8]
 800b2fe:	f3bf 8f5b 	dmb	ish
 800b302:	3301      	adds	r3, #1
 800b304:	429a      	cmp	r2, r3
 800b306:	bfd8      	it	le
 800b308:	1a9b      	suble	r3, r3, r2
 800b30a:	60c3      	str	r3, [r0, #12]
 800b30c:	bd10      	pop	{r4, pc}
 800b30e:	4b03      	ldr	r3, [pc, #12]	; (800b31c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b310:	4a03      	ldr	r2, [pc, #12]	; (800b320 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b312:	4804      	ldr	r0, [pc, #16]	; (800b324 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800b314:	2139      	movs	r1, #57	; 0x39
 800b316:	f010 f947 	bl	801b5a8 <__assert_func>
 800b31a:	bf00      	nop
 800b31c:	0801e184 	.word	0x0801e184
 800b320:	0801e278 	.word	0x0801e278
 800b324:	0801e15e 	.word	0x0801e15e

0800b328 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b328:	b510      	push	{r4, lr}
 800b32a:	6803      	ldr	r3, [r0, #0]
 800b32c:	681b      	ldr	r3, [r3, #0]
 800b32e:	4604      	mov	r4, r0
 800b330:	4798      	blx	r3
 800b332:	b128      	cbz	r0, 800b340 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b334:	4b07      	ldr	r3, [pc, #28]	; (800b354 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b336:	4a08      	ldr	r2, [pc, #32]	; (800b358 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b338:	4808      	ldr	r0, [pc, #32]	; (800b35c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b33a:	213f      	movs	r1, #63	; 0x3f
 800b33c:	f010 f934 	bl	801b5a8 <__assert_func>
 800b340:	6923      	ldr	r3, [r4, #16]
 800b342:	68a2      	ldr	r2, [r4, #8]
 800b344:	f3bf 8f5b 	dmb	ish
 800b348:	3301      	adds	r3, #1
 800b34a:	429a      	cmp	r2, r3
 800b34c:	bfd8      	it	le
 800b34e:	1a9b      	suble	r3, r3, r2
 800b350:	6123      	str	r3, [r4, #16]
 800b352:	bd10      	pop	{r4, pc}
 800b354:	0801e1a7 	.word	0x0801e1a7
 800b358:	0801e2c6 	.word	0x0801e2c6
 800b35c:	0801e15e 	.word	0x0801e15e

0800b360 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b360:	b570      	push	{r4, r5, r6, lr}
 800b362:	4604      	mov	r4, r0
 800b364:	6840      	ldr	r0, [r0, #4]
 800b366:	6803      	ldr	r3, [r0, #0]
 800b368:	681b      	ldr	r3, [r3, #0]
 800b36a:	4798      	blx	r3
 800b36c:	4605      	mov	r5, r0
 800b36e:	b930      	cbnz	r0, 800b37e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b370:	7a23      	ldrb	r3, [r4, #8]
 800b372:	b123      	cbz	r3, 800b37e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b374:	6860      	ldr	r0, [r4, #4]
 800b376:	6803      	ldr	r3, [r0, #0]
 800b378:	695b      	ldr	r3, [r3, #20]
 800b37a:	4798      	blx	r3
 800b37c:	7225      	strb	r5, [r4, #8]
 800b37e:	6860      	ldr	r0, [r4, #4]
 800b380:	6803      	ldr	r3, [r0, #0]
 800b382:	681b      	ldr	r3, [r3, #0]
 800b384:	4798      	blx	r3
 800b386:	b928      	cbnz	r0, 800b394 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b388:	6823      	ldr	r3, [r4, #0]
 800b38a:	4620      	mov	r0, r4
 800b38c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b38e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b392:	4718      	bx	r3
 800b394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b398:	f7f6 baa2 	b.w	80018e0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b39c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b39c:	b510      	push	{r4, lr}
 800b39e:	4c04      	ldr	r4, [pc, #16]	; (800b3b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b3a0:	6082      	str	r2, [r0, #8]
 800b3a2:	2200      	movs	r2, #0
 800b3a4:	e9c0 4100 	strd	r4, r1, [r0]
 800b3a8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b3ac:	bd10      	pop	{r4, pc}
 800b3ae:	bf00      	nop
 800b3b0:	0801e22c 	.word	0x0801e22c

0800b3b4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b3b4:	6840      	ldr	r0, [r0, #4]
 800b3b6:	6803      	ldr	r3, [r0, #0]
 800b3b8:	681b      	ldr	r3, [r3, #0]
 800b3ba:	4718      	bx	r3

0800b3bc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b3bc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b3c0:	4770      	bx	lr

0800b3c2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b3c2:	b510      	push	{r4, lr}
 800b3c4:	4604      	mov	r4, r0
 800b3c6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b3c8:	b150      	cbz	r0, 800b3e0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b3ca:	6803      	ldr	r3, [r0, #0]
 800b3cc:	68db      	ldr	r3, [r3, #12]
 800b3ce:	4798      	blx	r3
 800b3d0:	b130      	cbz	r0, 800b3e0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b3d2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b3d4:	6803      	ldr	r3, [r0, #0]
 800b3d6:	4621      	mov	r1, r4
 800b3d8:	689b      	ldr	r3, [r3, #8]
 800b3da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b3de:	4718      	bx	r3
 800b3e0:	bd10      	pop	{r4, pc}

0800b3e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800b3e2:	b570      	push	{r4, r5, r6, lr}
 800b3e4:	790b      	ldrb	r3, [r1, #4]
 800b3e6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800b3ea:	2b00      	cmp	r3, #0
 800b3ec:	bf0c      	ite	eq
 800b3ee:	2301      	moveq	r3, #1
 800b3f0:	2300      	movne	r3, #0
 800b3f2:	4604      	mov	r4, r0
 800b3f4:	460e      	mov	r6, r1
 800b3f6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800b3fa:	d109      	bne.n	800b410 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800b3fc:	b14d      	cbz	r5, 800b412 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800b3fe:	7933      	ldrb	r3, [r6, #4]
 800b400:	2b01      	cmp	r3, #1
 800b402:	d10c      	bne.n	800b41e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b404:	6823      	ldr	r3, [r4, #0]
 800b406:	4620      	mov	r0, r4
 800b408:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b40a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b40e:	4718      	bx	r3
 800b410:	b12d      	cbz	r5, 800b41e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800b412:	6823      	ldr	r3, [r4, #0]
 800b414:	4620      	mov	r0, r4
 800b416:	695b      	ldr	r3, [r3, #20]
 800b418:	4798      	blx	r3
 800b41a:	2d00      	cmp	r5, #0
 800b41c:	d1ef      	bne.n	800b3fe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800b41e:	bd70      	pop	{r4, r5, r6, pc}

0800b420 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800b420:	2300      	movs	r3, #0
 800b422:	8083      	strh	r3, [r0, #4]
 800b424:	80c3      	strh	r3, [r0, #6]
 800b426:	8003      	strh	r3, [r0, #0]
 800b428:	8043      	strh	r3, [r0, #2]
 800b42a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800b42e:	2bff      	cmp	r3, #255	; 0xff
 800b430:	bf01      	itttt	eq
 800b432:	890b      	ldrheq	r3, [r1, #8]
 800b434:	8083      	strheq	r3, [r0, #4]
 800b436:	894b      	ldrheq	r3, [r1, #10]
 800b438:	80c3      	strheq	r3, [r0, #6]
 800b43a:	4770      	bx	lr

0800b43c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800b43c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b43e:	4604      	mov	r4, r0
 800b440:	6808      	ldr	r0, [r1, #0]
 800b442:	6849      	ldr	r1, [r1, #4]
 800b444:	466b      	mov	r3, sp
 800b446:	c303      	stmia	r3!, {r0, r1}
 800b448:	6823      	ldr	r3, [r4, #0]
 800b44a:	4669      	mov	r1, sp
 800b44c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b44e:	4620      	mov	r0, r4
 800b450:	4798      	blx	r3
 800b452:	4b08      	ldr	r3, [pc, #32]	; (800b474 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800b454:	681b      	ldr	r3, [r3, #0]
 800b456:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b45a:	b10a      	cbz	r2, 800b460 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800b45c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b45e:	b900      	cbnz	r0, 800b462 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800b460:	6898      	ldr	r0, [r3, #8]
 800b462:	6803      	ldr	r3, [r0, #0]
 800b464:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b466:	699d      	ldr	r5, [r3, #24]
 800b468:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800b46c:	4669      	mov	r1, sp
 800b46e:	47a8      	blx	r5
 800b470:	b003      	add	sp, #12
 800b472:	bd30      	pop	{r4, r5, pc}
 800b474:	20008990 	.word	0x20008990

0800b478 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800b478:	b570      	push	{r4, r5, r6, lr}
 800b47a:	880b      	ldrh	r3, [r1, #0]
 800b47c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800b47e:	4605      	mov	r5, r0
 800b480:	8813      	ldrh	r3, [r2, #0]
 800b482:	f825 3f30 	strh.w	r3, [r5, #48]!
 800b486:	4604      	mov	r4, r0
 800b488:	4628      	mov	r0, r5
 800b48a:	f004 fa77 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b48e:	4606      	mov	r6, r0
 800b490:	4628      	mov	r0, r5
 800b492:	f004 faad 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b496:	6823      	ldr	r3, [r4, #0]
 800b498:	4605      	mov	r5, r0
 800b49a:	b231      	sxth	r1, r6
 800b49c:	4620      	mov	r0, r4
 800b49e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b4a0:	4798      	blx	r3
 800b4a2:	6823      	ldr	r3, [r4, #0]
 800b4a4:	b229      	sxth	r1, r5
 800b4a6:	4620      	mov	r0, r4
 800b4a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b4aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4ae:	4718      	bx	r3

0800b4b0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800b4b0:	b510      	push	{r4, lr}
 800b4b2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800b4b6:	2bff      	cmp	r3, #255	; 0xff
 800b4b8:	4604      	mov	r4, r0
 800b4ba:	d006      	beq.n	800b4ca <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b4bc:	2300      	movs	r3, #0
 800b4be:	8003      	strh	r3, [r0, #0]
 800b4c0:	8043      	strh	r3, [r0, #2]
 800b4c2:	8083      	strh	r3, [r0, #4]
 800b4c4:	80c3      	strh	r3, [r0, #6]
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	bd10      	pop	{r4, pc}
 800b4ca:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b4ce:	b11b      	cbz	r3, 800b4d8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b4d0:	3130      	adds	r1, #48	; 0x30
 800b4d2:	f004 fac7 	bl	800fa64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b4d6:	e7f6      	b.n	800b4c6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b4d8:	312e      	adds	r1, #46	; 0x2e
 800b4da:	e7fa      	b.n	800b4d2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800b4dc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b4dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4e0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b4e4:	b08a      	sub	sp, #40	; 0x28
 800b4e6:	4604      	mov	r4, r0
 800b4e8:	4688      	mov	r8, r1
 800b4ea:	2b00      	cmp	r3, #0
 800b4ec:	d044      	beq.n	800b578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800b4ee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800b4f0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b4f4:	a805      	add	r0, sp, #20
 800b4f6:	f004 fa41 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b4fa:	4605      	mov	r5, r0
 800b4fc:	b206      	sxth	r6, r0
 800b4fe:	a805      	add	r0, sp, #20
 800b500:	f004 fa76 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b504:	f9b8 2000 	ldrsh.w	r2, [r8]
 800b508:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800b50c:	4417      	add	r7, r2
 800b50e:	b2bf      	uxth	r7, r7
 800b510:	2300      	movs	r3, #0
 800b512:	fa0f fe87 	sxth.w	lr, r7
 800b516:	459e      	cmp	lr, r3
 800b518:	fa0f fc80 	sxth.w	ip, r0
 800b51c:	9306      	str	r3, [sp, #24]
 800b51e:	dd2d      	ble.n	800b57c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b520:	4296      	cmp	r6, r2
 800b522:	dd2b      	ble.n	800b57c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b524:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800b528:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800b52c:	4419      	add	r1, r3
 800b52e:	b289      	uxth	r1, r1
 800b530:	fa0f f881 	sxth.w	r8, r1
 800b534:	f1b8 0f00 	cmp.w	r8, #0
 800b538:	dd20      	ble.n	800b57c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b53a:	459c      	cmp	ip, r3
 800b53c:	dd1e      	ble.n	800b57c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b53e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b542:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b546:	4576      	cmp	r6, lr
 800b548:	bfa8      	it	ge
 800b54a:	463d      	movge	r5, r7
 800b54c:	45c4      	cmp	ip, r8
 800b54e:	bfa8      	it	ge
 800b550:	4608      	movge	r0, r1
 800b552:	1aad      	subs	r5, r5, r2
 800b554:	1ac0      	subs	r0, r0, r3
 800b556:	f8ad 501c 	strh.w	r5, [sp, #28]
 800b55a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b55e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b562:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b566:	4b1f      	ldr	r3, [pc, #124]	; (800b5e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	b953      	cbnz	r3, 800b582 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800b56c:	4b1e      	ldr	r3, [pc, #120]	; (800b5e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800b56e:	4a1f      	ldr	r2, [pc, #124]	; (800b5ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800b570:	481f      	ldr	r0, [pc, #124]	; (800b5f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800b572:	218b      	movs	r1, #139	; 0x8b
 800b574:	f010 f818 	bl	801b5a8 <__assert_func>
 800b578:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b57a:	e7b9      	b.n	800b4f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b57c:	2300      	movs	r3, #0
 800b57e:	9307      	str	r3, [sp, #28]
 800b580:	e7f1      	b.n	800b566 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800b582:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b586:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b58a:	429a      	cmp	r2, r3
 800b58c:	d026      	beq.n	800b5dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b58e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b592:	2b00      	cmp	r3, #0
 800b594:	dd22      	ble.n	800b5dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b596:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b59a:	2b00      	cmp	r3, #0
 800b59c:	dd1e      	ble.n	800b5dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b59e:	2300      	movs	r3, #0
 800b5a0:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b5a4:	6823      	ldr	r3, [r4, #0]
 800b5a6:	a908      	add	r1, sp, #32
 800b5a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5aa:	4620      	mov	r0, r4
 800b5ac:	4798      	blx	r3
 800b5ae:	4b11      	ldr	r3, [pc, #68]	; (800b5f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800b5b0:	681b      	ldr	r3, [r3, #0]
 800b5b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b5b6:	b10a      	cbz	r2, 800b5bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b5b8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b5ba:	b900      	cbnz	r0, 800b5be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800b5bc:	6898      	ldr	r0, [r3, #8]
 800b5be:	6801      	ldr	r1, [r0, #0]
 800b5c0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b5c4:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b5c8:	2501      	movs	r5, #1
 800b5ca:	9502      	str	r5, [sp, #8]
 800b5cc:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b5d0:	9401      	str	r4, [sp, #4]
 800b5d2:	ac06      	add	r4, sp, #24
 800b5d4:	9400      	str	r4, [sp, #0]
 800b5d6:	688c      	ldr	r4, [r1, #8]
 800b5d8:	a905      	add	r1, sp, #20
 800b5da:	47a0      	blx	r4
 800b5dc:	b00a      	add	sp, #40	; 0x28
 800b5de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5e2:	bf00      	nop
 800b5e4:	20008a18 	.word	0x20008a18
 800b5e8:	0801e3c8 	.word	0x0801e3c8
 800b5ec:	0801e49c 	.word	0x0801e49c
 800b5f0:	0801e404 	.word	0x0801e404
 800b5f4:	20008990 	.word	0x20008990

0800b5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b5f8:	b570      	push	{r4, r5, r6, lr}
 800b5fa:	880b      	ldrh	r3, [r1, #0]
 800b5fc:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b5fe:	4604      	mov	r4, r0
 800b600:	4608      	mov	r0, r1
 800b602:	460d      	mov	r5, r1
 800b604:	f004 f9ba 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b608:	4606      	mov	r6, r0
 800b60a:	4628      	mov	r0, r5
 800b60c:	f004 f9f0 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b610:	6823      	ldr	r3, [r4, #0]
 800b612:	4605      	mov	r5, r0
 800b614:	b231      	sxth	r1, r6
 800b616:	4620      	mov	r0, r4
 800b618:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b61a:	4798      	blx	r3
 800b61c:	6823      	ldr	r3, [r4, #0]
 800b61e:	b229      	sxth	r1, r5
 800b620:	4620      	mov	r0, r4
 800b622:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b624:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b628:	4718      	bx	r3

0800b62a <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b62a:	b510      	push	{r4, lr}
 800b62c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b630:	2bff      	cmp	r3, #255	; 0xff
 800b632:	4604      	mov	r4, r0
 800b634:	d006      	beq.n	800b644 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b636:	2300      	movs	r3, #0
 800b638:	8003      	strh	r3, [r0, #0]
 800b63a:	8043      	strh	r3, [r0, #2]
 800b63c:	8083      	strh	r3, [r0, #4]
 800b63e:	80c3      	strh	r3, [r0, #6]
 800b640:	4620      	mov	r0, r4
 800b642:	bd10      	pop	{r4, pc}
 800b644:	3126      	adds	r1, #38	; 0x26
 800b646:	f004 fa0d 	bl	800fa64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b64a:	e7f9      	b.n	800b640 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b64c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b64c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b650:	4604      	mov	r4, r0
 800b652:	b088      	sub	sp, #32
 800b654:	f854 3b26 	ldr.w	r3, [r4], #38
 800b658:	2500      	movs	r5, #0
 800b65a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b65c:	460f      	mov	r7, r1
 800b65e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b662:	a904      	add	r1, sp, #16
 800b664:	4606      	mov	r6, r0
 800b666:	4798      	blx	r3
 800b668:	4620      	mov	r0, r4
 800b66a:	f004 f987 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b66e:	4680      	mov	r8, r0
 800b670:	4620      	mov	r0, r4
 800b672:	f004 f9bd 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b676:	9506      	str	r5, [sp, #24]
 800b678:	ad06      	add	r5, sp, #24
 800b67a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b67e:	4639      	mov	r1, r7
 800b680:	4628      	mov	r0, r5
 800b682:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b686:	f7fe feb9 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800b68a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b68e:	2b00      	cmp	r3, #0
 800b690:	dd19      	ble.n	800b6c6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b692:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b696:	2b00      	cmp	r3, #0
 800b698:	dd15      	ble.n	800b6c6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b69a:	4b0c      	ldr	r3, [pc, #48]	; (800b6cc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b69c:	681b      	ldr	r3, [r3, #0]
 800b69e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b6a2:	b10a      	cbz	r2, 800b6a8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b6a4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b6a6:	b900      	cbnz	r0, 800b6aa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b6a8:	6898      	ldr	r0, [r3, #8]
 800b6aa:	6801      	ldr	r1, [r0, #0]
 800b6ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b6b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b6b4:	2701      	movs	r7, #1
 800b6b6:	9702      	str	r7, [sp, #8]
 800b6b8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b6bc:	e9cd 5600 	strd	r5, r6, [sp]
 800b6c0:	688d      	ldr	r5, [r1, #8]
 800b6c2:	4621      	mov	r1, r4
 800b6c4:	47a8      	blx	r5
 800b6c6:	b008      	add	sp, #32
 800b6c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6cc:	20008990 	.word	0x20008990

0800b6d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b6d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6d4:	4604      	mov	r4, r0
 800b6d6:	b08c      	sub	sp, #48	; 0x30
 800b6d8:	4688      	mov	r8, r1
 800b6da:	f7ff feff 	bl	800b4dc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b6de:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800b6e0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b6e4:	4293      	cmp	r3, r2
 800b6e6:	f000 8099 	beq.w	800b81c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b6ea:	4e54      	ldr	r6, [pc, #336]	; (800b83c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b6ec:	6832      	ldr	r2, [r6, #0]
 800b6ee:	b92a      	cbnz	r2, 800b6fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800b6f0:	4b53      	ldr	r3, [pc, #332]	; (800b840 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b6f2:	4a54      	ldr	r2, [pc, #336]	; (800b844 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b6f4:	21b1      	movs	r1, #177	; 0xb1
 800b6f6:	4854      	ldr	r0, [pc, #336]	; (800b848 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800b6f8:	f00f ff56 	bl	801b5a8 <__assert_func>
 800b6fc:	4d53      	ldr	r5, [pc, #332]	; (800b84c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800b6fe:	8829      	ldrh	r1, [r5, #0]
 800b700:	4299      	cmp	r1, r3
 800b702:	d803      	bhi.n	800b70c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800b704:	4b52      	ldr	r3, [pc, #328]	; (800b850 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800b706:	4a4f      	ldr	r2, [pc, #316]	; (800b844 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b708:	21b2      	movs	r1, #178	; 0xb2
 800b70a:	e7f4      	b.n	800b6f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800b70c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b710:	4b50      	ldr	r3, [pc, #320]	; (800b854 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800b712:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800b716:	681b      	ldr	r3, [r3, #0]
 800b718:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b71c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800b720:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b724:	2300      	movs	r3, #0
 800b726:	f1be 0f01 	cmp.w	lr, #1
 800b72a:	9303      	str	r3, [sp, #12]
 800b72c:	b208      	sxth	r0, r1
 800b72e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b732:	f04f 0c02 	mov.w	ip, #2
 800b736:	d074      	beq.n	800b822 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800b738:	f1be 0f03 	cmp.w	lr, #3
 800b73c:	d071      	beq.n	800b822 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800b73e:	1a52      	subs	r2, r2, r1
 800b740:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b744:	fb92 f2fc 	sdiv	r2, r2, ip
 800b748:	f8ad 0012 	strh.w	r0, [sp, #18]
 800b74c:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b750:	f10d 090c 	add.w	r9, sp, #12
 800b754:	e899 0003 	ldmia.w	r9, {r0, r1}
 800b758:	f10d 0a14 	add.w	sl, sp, #20
 800b75c:	e88a 0003 	stmia.w	sl, {r0, r1}
 800b760:	4641      	mov	r1, r8
 800b762:	4650      	mov	r0, sl
 800b764:	f7fe fe4a 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800b768:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b76c:	2b00      	cmp	r3, #0
 800b76e:	dd55      	ble.n	800b81c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b770:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b774:	2b00      	cmp	r3, #0
 800b776:	dd51      	ble.n	800b81c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800b778:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b77c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b780:	1a9b      	subs	r3, r3, r2
 800b782:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b786:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b78a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b78e:	1a9b      	subs	r3, r3, r2
 800b790:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b794:	6823      	ldr	r3, [r4, #0]
 800b796:	4649      	mov	r1, r9
 800b798:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b79a:	4620      	mov	r0, r4
 800b79c:	4798      	blx	r3
 800b79e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b7a2:	2b00      	cmp	r3, #0
 800b7a4:	d047      	beq.n	800b836 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800b7a6:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800b7aa:	6833      	ldr	r3, [r6, #0]
 800b7ac:	f894 c032 	ldrb.w	ip, [r4, #50]	; 0x32
 800b7b0:	2b00      	cmp	r3, #0
 800b7b2:	d09d      	beq.n	800b6f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800b7b4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800b7b6:	8828      	ldrh	r0, [r5, #0]
 800b7b8:	4288      	cmp	r0, r1
 800b7ba:	d9a3      	bls.n	800b704 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800b7bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b7c0:	6812      	ldr	r2, [r2, #0]
 800b7c2:	785b      	ldrb	r3, [r3, #1]
 800b7c4:	9209      	str	r2, [sp, #36]	; 0x24
 800b7c6:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b7ca:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b7ce:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b7d2:	2300      	movs	r3, #0
 800b7d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800b7d8:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b7dc:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b7e0:	4b1d      	ldr	r3, [pc, #116]	; (800b858 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800b7e2:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800b7e6:	681b      	ldr	r3, [r3, #0]
 800b7e8:	9707      	str	r7, [sp, #28]
 800b7ea:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b7ee:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800b7f2:	f88d 5020 	strb.w	r5, [sp, #32]
 800b7f6:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b7fa:	b10a      	cbz	r2, 800b800 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800b7fc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b7fe:	b904      	cbnz	r4, 800b802 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800b800:	689c      	ldr	r4, [r3, #8]
 800b802:	4b16      	ldr	r3, [pc, #88]	; (800b85c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800b804:	6818      	ldr	r0, [r3, #0]
 800b806:	f7f8 fa19 	bl	8003c3c <_ZNK8touchgfx5Texts7getTextEt>
 800b80a:	ab07      	add	r3, sp, #28
 800b80c:	9001      	str	r0, [sp, #4]
 800b80e:	9300      	str	r3, [sp, #0]
 800b810:	e899 0006 	ldmia.w	r9, {r1, r2}
 800b814:	4653      	mov	r3, sl
 800b816:	4620      	mov	r0, r4
 800b818:	f7f8 f9a1 	bl	8003b5e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b81c:	b00c      	add	sp, #48	; 0x30
 800b81e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b822:	1a5b      	subs	r3, r3, r1
 800b824:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b828:	fb93 f3fc 	sdiv	r3, r3, ip
 800b82c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b830:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b834:	e78c      	b.n	800b750 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800b836:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800b83a:	e7b6      	b.n	800b7aa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800b83c:	200089e0 	.word	0x200089e0
 800b840:	0801e538 	.word	0x0801e538
 800b844:	0801e668 	.word	0x0801e668
 800b848:	0801e57a 	.word	0x0801e57a
 800b84c:	200089e4 	.word	0x200089e4
 800b850:	0801e5a3 	.word	0x0801e5a3
 800b854:	200089e8 	.word	0x200089e8
 800b858:	20008990 	.word	0x20008990
 800b85c:	200089ec 	.word	0x200089ec

0800b860 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b860:	b510      	push	{r4, lr}
 800b862:	2101      	movs	r1, #1
 800b864:	4c12      	ldr	r4, [pc, #72]	; (800b8b0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x50>)
 800b866:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b86a:	2200      	movs	r2, #0
 800b86c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b870:	6004      	str	r4, [r0, #0]
 800b872:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b876:	4c0f      	ldr	r4, [pc, #60]	; (800b8b4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b878:	8082      	strh	r2, [r0, #4]
 800b87a:	80c2      	strh	r2, [r0, #6]
 800b87c:	8102      	strh	r2, [r0, #8]
 800b87e:	8142      	strh	r2, [r0, #10]
 800b880:	8182      	strh	r2, [r0, #12]
 800b882:	81c2      	strh	r2, [r0, #14]
 800b884:	8202      	strh	r2, [r0, #16]
 800b886:	8242      	strh	r2, [r0, #18]
 800b888:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b88c:	61c2      	str	r2, [r0, #28]
 800b88e:	6282      	str	r2, [r0, #40]	; 0x28
 800b890:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b894:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b896:	8601      	strh	r1, [r0, #48]	; 0x30
 800b898:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b89c:	6344      	str	r4, [r0, #52]	; 0x34
 800b89e:	8701      	strh	r1, [r0, #56]	; 0x38
 800b8a0:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b8a4:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b8a8:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800b8ac:	bd10      	pop	{r4, pc}
 800b8ae:	bf00      	nop
 800b8b0:	0801e600 	.word	0x0801e600
 800b8b4:	0801d1c8 	.word	0x0801d1c8

0800b8b8 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800b8b8:	2000      	movs	r0, #0
 800b8ba:	4770      	bx	lr

0800b8bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8c0:	b08d      	sub	sp, #52	; 0x34
 800b8c2:	4688      	mov	r8, r1
 800b8c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b8c6:	f8d3 c000 	ldr.w	ip, [r3]
 800b8ca:	680f      	ldr	r7, [r1, #0]
 800b8cc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b8d0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b8d4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b8d8:	edd3 6a07 	vldr	s13, [r3, #28]
 800b8dc:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b8de:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b8e2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b8e6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b8ea:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b8ee:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b8f2:	eba7 070c 	sub.w	r7, r7, ip
 800b8f6:	42bc      	cmp	r4, r7
 800b8f8:	bfa8      	it	ge
 800b8fa:	463c      	movge	r4, r7
 800b8fc:	ee07 4a90 	vmov	s15, r4
 800b900:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b904:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b908:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b90c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b910:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b914:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b918:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b91c:	eb09 0e0c 	add.w	lr, r9, ip
 800b920:	4571      	cmp	r1, lr
 800b922:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b926:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b92a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b92e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b932:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b936:	f340 808d 	ble.w	800ba54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b93a:	eba1 060e 	sub.w	r6, r1, lr
 800b93e:	fb96 f5f4 	sdiv	r5, r6, r4
 800b942:	ee07 5a10 	vmov	s14, r5
 800b946:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b94a:	2d00      	cmp	r5, #0
 800b94c:	fb04 6615 	mls	r6, r4, r5, r6
 800b950:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b954:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b958:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b95c:	dd13      	ble.n	800b986 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b95e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b962:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b966:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b96a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b96e:	bf18      	it	ne
 800b970:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b974:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b978:	bf08      	it	eq
 800b97a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b97e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b982:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b986:	fb05 f204 	mul.w	r2, r5, r4
 800b98a:	1abf      	subs	r7, r7, r2
 800b98c:	4494      	add	ip, r2
 800b98e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b992:	4411      	add	r1, r2
 800b994:	eb09 020c 	add.w	r2, r9, ip
 800b998:	443a      	add	r2, r7
 800b99a:	b209      	sxth	r1, r1
 800b99c:	428a      	cmp	r2, r1
 800b99e:	bfc4      	itt	gt
 800b9a0:	eba1 0209 	subgt.w	r2, r1, r9
 800b9a4:	eba2 070c 	subgt.w	r7, r2, ip
 800b9a8:	2f00      	cmp	r7, #0
 800b9aa:	dd50      	ble.n	800ba4e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b9ac:	fb97 f1f4 	sdiv	r1, r7, r4
 800b9b0:	fb04 7211 	mls	r2, r4, r1, r7
 800b9b4:	b90a      	cbnz	r2, 800b9ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b9b6:	3901      	subs	r1, #1
 800b9b8:	4622      	mov	r2, r4
 800b9ba:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b9be:	6840      	ldr	r0, [r0, #4]
 800b9c0:	900b      	str	r0, [sp, #44]	; 0x2c
 800b9c2:	f8d0 a000 	ldr.w	sl, [r0]
 800b9c6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b9c8:	9008      	str	r0, [sp, #32]
 800b9ca:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b9ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b9d0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b9d4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b9d8:	695b      	ldr	r3, [r3, #20]
 800b9da:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b9dc:	445b      	add	r3, fp
 800b9de:	eef0 6a42 	vmov.f32	s13, s4
 800b9e2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b9e6:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b9ea:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b9ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b9f2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b9f6:	9307      	str	r3, [sp, #28]
 800b9f8:	ee17 7a90 	vmov	r7, s15
 800b9fc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ba00:	eeb0 7a61 	vmov.f32	s14, s3
 800ba04:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ba08:	ee16 3a90 	vmov	r3, s13
 800ba0c:	fb97 f7f4 	sdiv	r7, r7, r4
 800ba10:	ee17 ca90 	vmov	ip, s15
 800ba14:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ba18:	fb9c fcf4 	sdiv	ip, ip, r4
 800ba1c:	fb0c 3306 	mla	r3, ip, r6, r3
 800ba20:	9302      	str	r3, [sp, #8]
 800ba22:	ee17 3a10 	vmov	r3, s14
 800ba26:	44b6      	add	lr, r6
 800ba28:	fb04 e505 	mla	r5, r4, r5, lr
 800ba2c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ba30:	fb07 3706 	mla	r7, r7, r6, r3
 800ba34:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ba38:	e9cd 4700 	strd	r4, r7, [sp]
 800ba3c:	2900      	cmp	r1, #0
 800ba3e:	bfcc      	ite	gt
 800ba40:	46a1      	movgt	r9, r4
 800ba42:	4691      	movle	r9, r2
 800ba44:	eba9 0306 	sub.w	r3, r9, r6
 800ba48:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ba4c:	47a0      	blx	r4
 800ba4e:	b00d      	add	sp, #52	; 0x34
 800ba50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba54:	2500      	movs	r5, #0
 800ba56:	462e      	mov	r6, r5
 800ba58:	e799      	b.n	800b98e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800ba5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ba5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba60:	b0db      	sub	sp, #364	; 0x16c
 800ba62:	461d      	mov	r5, r3
 800ba64:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800ba68:	930a      	str	r3, [sp, #40]	; 0x28
 800ba6a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800ba6e:	930b      	str	r3, [sp, #44]	; 0x2c
 800ba70:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800ba74:	9310      	str	r3, [sp, #64]	; 0x40
 800ba76:	6803      	ldr	r3, [r0, #0]
 800ba78:	910f      	str	r1, [sp, #60]	; 0x3c
 800ba7a:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800ba7c:	9009      	str	r0, [sp, #36]	; 0x24
 800ba7e:	4614      	mov	r4, r2
 800ba80:	4629      	mov	r1, r5
 800ba82:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ba86:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800ba8a:	47b8      	blx	r7
 800ba8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba8e:	6058      	str	r0, [r3, #4]
 800ba90:	2800      	cmp	r0, #0
 800ba92:	f000 83a1 	beq.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba96:	682b      	ldr	r3, [r5, #0]
 800ba98:	9314      	str	r3, [sp, #80]	; 0x50
 800ba9a:	686b      	ldr	r3, [r5, #4]
 800ba9c:	9315      	str	r3, [sp, #84]	; 0x54
 800ba9e:	4bc4      	ldr	r3, [pc, #784]	; (800bdb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800baa0:	ed94 7a02 	vldr	s14, [r4, #8]
 800baa4:	7819      	ldrb	r1, [r3, #0]
 800baa6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800baaa:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800baae:	2900      	cmp	r1, #0
 800bab0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800bab4:	bf16      	itet	ne
 800bab6:	4619      	movne	r1, r3
 800bab8:	4611      	moveq	r1, r2
 800baba:	4613      	movne	r3, r2
 800babc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bac0:	9116      	str	r1, [sp, #88]	; 0x58
 800bac2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800bac6:	f240 8387 	bls.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800baca:	ed94 7a07 	vldr	s14, [r4, #28]
 800bace:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800bad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bad6:	f240 837f 	bls.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bada:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800bade:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800bae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bae6:	f240 8377 	bls.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800baea:	6822      	ldr	r2, [r4, #0]
 800baec:	4bb1      	ldr	r3, [pc, #708]	; (800bdb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800baee:	429a      	cmp	r2, r3
 800baf0:	f2c0 8372 	blt.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800baf4:	49b0      	ldr	r1, [pc, #704]	; (800bdb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800baf6:	6963      	ldr	r3, [r4, #20]
 800baf8:	428a      	cmp	r2, r1
 800bafa:	f300 836d 	bgt.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bafe:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800bb02:	48ae      	ldr	r0, [pc, #696]	; (800bdbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800bb04:	33ff      	adds	r3, #255	; 0xff
 800bb06:	4283      	cmp	r3, r0
 800bb08:	f200 8366 	bhi.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb0c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bb0e:	4dac      	ldr	r5, [pc, #688]	; (800bdc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800bb10:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800bb14:	33ff      	adds	r3, #255	; 0xff
 800bb16:	42ab      	cmp	r3, r5
 800bb18:	f200 835e 	bhi.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb1c:	6862      	ldr	r2, [r4, #4]
 800bb1e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800bb22:	33ff      	adds	r3, #255	; 0xff
 800bb24:	4283      	cmp	r3, r0
 800bb26:	f200 8357 	bhi.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb2a:	69a1      	ldr	r1, [r4, #24]
 800bb2c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800bb30:	33ff      	adds	r3, #255	; 0xff
 800bb32:	4283      	cmp	r3, r0
 800bb34:	f200 8350 	bhi.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bb3a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800bb3e:	30ff      	adds	r0, #255	; 0xff
 800bb40:	42a8      	cmp	r0, r5
 800bb42:	f200 8349 	bhi.w	800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb46:	428a      	cmp	r2, r1
 800bb48:	f280 8110 	bge.w	800bd6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800bb4c:	429a      	cmp	r2, r3
 800bb4e:	f300 8119 	bgt.w	800bd84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800bb52:	4299      	cmp	r1, r3
 800bb54:	f280 811d 	bge.w	800bd92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800bb58:	2502      	movs	r5, #2
 800bb5a:	2701      	movs	r7, #1
 800bb5c:	46a9      	mov	r9, r5
 800bb5e:	46b8      	mov	r8, r7
 800bb60:	f04f 0a00 	mov.w	sl, #0
 800bb64:	4621      	mov	r1, r4
 800bb66:	a849      	add	r0, sp, #292	; 0x124
 800bb68:	f003 fc56 	bl	800f418 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800bb6c:	4622      	mov	r2, r4
 800bb6e:	4653      	mov	r3, sl
 800bb70:	a949      	add	r1, sp, #292	; 0x124
 800bb72:	f8cd 9000 	str.w	r9, [sp]
 800bb76:	a819      	add	r0, sp, #100	; 0x64
 800bb78:	f003 fd7e 	bl	800f678 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800bb7c:	4622      	mov	r2, r4
 800bb7e:	4653      	mov	r3, sl
 800bb80:	a949      	add	r1, sp, #292	; 0x124
 800bb82:	f8cd 8000 	str.w	r8, [sp]
 800bb86:	a829      	add	r0, sp, #164	; 0xa4
 800bb88:	f003 fd76 	bl	800f678 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800bb8c:	4643      	mov	r3, r8
 800bb8e:	4622      	mov	r2, r4
 800bb90:	a949      	add	r1, sp, #292	; 0x124
 800bb92:	f8cd 9000 	str.w	r9, [sp]
 800bb96:	a839      	add	r0, sp, #228	; 0xe4
 800bb98:	f003 fd6e 	bl	800f678 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800bb9c:	42af      	cmp	r7, r5
 800bb9e:	bfb5      	itete	lt
 800bba0:	2300      	movlt	r3, #0
 800bba2:	2301      	movge	r3, #1
 800bba4:	930e      	strlt	r3, [sp, #56]	; 0x38
 800bba6:	930e      	strge	r3, [sp, #56]	; 0x38
 800bba8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bbaa:	e893 0003 	ldmia.w	r3, {r0, r1}
 800bbae:	af12      	add	r7, sp, #72	; 0x48
 800bbb0:	bfb9      	ittee	lt
 800bbb2:	ad29      	addlt	r5, sp, #164	; 0xa4
 800bbb4:	ac19      	addlt	r4, sp, #100	; 0x64
 800bbb6:	ad19      	addge	r5, sp, #100	; 0x64
 800bbb8:	ac29      	addge	r4, sp, #164	; 0xa4
 800bbba:	e887 0003 	stmia.w	r7, {r0, r1}
 800bbbe:	b928      	cbnz	r0, 800bbcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800bbc0:	4b80      	ldr	r3, [pc, #512]	; (800bdc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800bbc2:	6818      	ldr	r0, [r3, #0]
 800bbc4:	6803      	ldr	r3, [r0, #0]
 800bbc6:	6a1b      	ldr	r3, [r3, #32]
 800bbc8:	4798      	blx	r3
 800bbca:	6038      	str	r0, [r7, #0]
 800bbcc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bbce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bbd2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bbd6:	930c      	str	r3, [sp, #48]	; 0x30
 800bbd8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800bbda:	6963      	ldr	r3, [r4, #20]
 800bbdc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800bbde:	440b      	add	r3, r1
 800bbe0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bbe4:	4408      	add	r0, r1
 800bbe6:	b200      	sxth	r0, r0
 800bbe8:	4283      	cmp	r3, r0
 800bbea:	900d      	str	r0, [sp, #52]	; 0x34
 800bbec:	f280 80dd 	bge.w	800bdaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800bbf0:	428b      	cmp	r3, r1
 800bbf2:	da08      	bge.n	800bc06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bbf4:	2a00      	cmp	r2, #0
 800bbf6:	dd06      	ble.n	800bc06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bbf8:	1acb      	subs	r3, r1, r3
 800bbfa:	429a      	cmp	r2, r3
 800bbfc:	f2c0 80e4 	blt.w	800bdc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800bc00:	2b00      	cmp	r3, #0
 800bc02:	f300 80e2 	bgt.w	800bdca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800bc06:	6967      	ldr	r7, [r4, #20]
 800bc08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bc0a:	443b      	add	r3, r7
 800bc0c:	461f      	mov	r7, r3
 800bc0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc10:	1bdf      	subs	r7, r3, r7
 800bc12:	4297      	cmp	r7, r2
 800bc14:	bfa8      	it	ge
 800bc16:	4617      	movge	r7, r2
 800bc18:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bc1c:	2f00      	cmp	r7, #0
 800bc1e:	f340 8166 	ble.w	800beee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800bc22:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bc24:	6829      	ldr	r1, [r5, #0]
 800bc26:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bc2a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bc2e:	6820      	ldr	r0, [r4, #0]
 800bc30:	4411      	add	r1, r2
 800bc32:	4299      	cmp	r1, r3
 800bc34:	dd1a      	ble.n	800bc6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800bc36:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bc3a:	440b      	add	r3, r1
 800bc3c:	4402      	add	r2, r0
 800bc3e:	b21b      	sxth	r3, r3
 800bc40:	429a      	cmp	r2, r3
 800bc42:	dc13      	bgt.n	800bc6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800bc44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bc46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bc48:	681b      	ldr	r3, [r3, #0]
 800bc4a:	9206      	str	r2, [sp, #24]
 800bc4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc4e:	9205      	str	r2, [sp, #20]
 800bc50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bc52:	9500      	str	r5, [sp, #0]
 800bc54:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bc58:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bc5a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bc5c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bc60:	a912      	add	r1, sp, #72	; 0x48
 800bc62:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800bc66:	aa49      	add	r2, sp, #292	; 0x124
 800bc68:	4623      	mov	r3, r4
 800bc6a:	47c8      	blx	r9
 800bc6c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bc70:	441a      	add	r2, r3
 800bc72:	6963      	ldr	r3, [r4, #20]
 800bc74:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bc78:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bc7c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bc80:	68a1      	ldr	r1, [r4, #8]
 800bc82:	ed94 6a08 	vldr	s12, [r4, #32]
 800bc86:	6022      	str	r2, [r4, #0]
 800bc88:	3301      	adds	r3, #1
 800bc8a:	6163      	str	r3, [r4, #20]
 800bc8c:	69a3      	ldr	r3, [r4, #24]
 800bc8e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bc92:	3b01      	subs	r3, #1
 800bc94:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bc98:	61a3      	str	r3, [r4, #24]
 800bc9a:	6923      	ldr	r3, [r4, #16]
 800bc9c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bca0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bca4:	edd4 6a07 	vldr	s13, [r4, #28]
 800bca8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bcac:	440b      	add	r3, r1
 800bcae:	68e1      	ldr	r1, [r4, #12]
 800bcb0:	6123      	str	r3, [r4, #16]
 800bcb2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bcb6:	428b      	cmp	r3, r1
 800bcb8:	edc4 6a07 	vstr	s13, [r4, #28]
 800bcbc:	db15      	blt.n	800bcea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800bcbe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bcc2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bcc6:	3201      	adds	r2, #1
 800bcc8:	edc4 6a07 	vstr	s13, [r4, #28]
 800bccc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bcd0:	6022      	str	r2, [r4, #0]
 800bcd2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bcd6:	1a5b      	subs	r3, r3, r1
 800bcd8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bcdc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bce0:	6123      	str	r3, [r4, #16]
 800bce2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bce6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bcea:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bcee:	441a      	add	r2, r3
 800bcf0:	696b      	ldr	r3, [r5, #20]
 800bcf2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bcf6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bcfa:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bcfe:	68a9      	ldr	r1, [r5, #8]
 800bd00:	ed95 6a08 	vldr	s12, [r5, #32]
 800bd04:	602a      	str	r2, [r5, #0]
 800bd06:	3301      	adds	r3, #1
 800bd08:	616b      	str	r3, [r5, #20]
 800bd0a:	69ab      	ldr	r3, [r5, #24]
 800bd0c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bd10:	3b01      	subs	r3, #1
 800bd12:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bd16:	61ab      	str	r3, [r5, #24]
 800bd18:	692b      	ldr	r3, [r5, #16]
 800bd1a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bd1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bd22:	edd5 6a07 	vldr	s13, [r5, #28]
 800bd26:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bd2a:	440b      	add	r3, r1
 800bd2c:	68e9      	ldr	r1, [r5, #12]
 800bd2e:	612b      	str	r3, [r5, #16]
 800bd30:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bd34:	428b      	cmp	r3, r1
 800bd36:	edc5 6a07 	vstr	s13, [r5, #28]
 800bd3a:	db15      	blt.n	800bd68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800bd3c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bd40:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bd44:	3201      	adds	r2, #1
 800bd46:	edc5 6a07 	vstr	s13, [r5, #28]
 800bd4a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bd4e:	602a      	str	r2, [r5, #0]
 800bd50:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bd54:	1a5b      	subs	r3, r3, r1
 800bd56:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bd5a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bd5e:	612b      	str	r3, [r5, #16]
 800bd60:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bd64:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bd68:	3f01      	subs	r7, #1
 800bd6a:	e757      	b.n	800bc1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800bd6c:	4299      	cmp	r1, r3
 800bd6e:	dc13      	bgt.n	800bd98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800bd70:	429a      	cmp	r2, r3
 800bd72:	da14      	bge.n	800bd9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800bd74:	2502      	movs	r5, #2
 800bd76:	2703      	movs	r7, #3
 800bd78:	46a9      	mov	r9, r5
 800bd7a:	f04f 0800 	mov.w	r8, #0
 800bd7e:	f04f 0a01 	mov.w	sl, #1
 800bd82:	e6ef      	b.n	800bb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bd84:	2501      	movs	r5, #1
 800bd86:	2700      	movs	r7, #0
 800bd88:	46a9      	mov	r9, r5
 800bd8a:	46b8      	mov	r8, r7
 800bd8c:	f04f 0a02 	mov.w	sl, #2
 800bd90:	e6e8      	b.n	800bb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bd92:	2501      	movs	r5, #1
 800bd94:	2702      	movs	r7, #2
 800bd96:	e6e1      	b.n	800bb5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800bd98:	2500      	movs	r5, #0
 800bd9a:	2701      	movs	r7, #1
 800bd9c:	e7f4      	b.n	800bd88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800bd9e:	2702      	movs	r7, #2
 800bda0:	2503      	movs	r5, #3
 800bda2:	f04f 0900 	mov.w	r9, #0
 800bda6:	46b8      	mov	r8, r7
 800bda8:	e7e9      	b.n	800bd7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800bdaa:	4613      	mov	r3, r2
 800bdac:	e728      	b.n	800bc00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800bdae:	bf00      	nop
 800bdb0:	20008988 	.word	0x20008988
 800bdb4:	fffd8f01 	.word	0xfffd8f01
 800bdb8:	00027100 	.word	0x00027100
 800bdbc:	0004e1ff 	.word	0x0004e1ff
 800bdc0:	0004e1fe 	.word	0x0004e1fe
 800bdc4:	20008990 	.word	0x20008990
 800bdc8:	4613      	mov	r3, r2
 800bdca:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bdcc:	9111      	str	r1, [sp, #68]	; 0x44
 800bdce:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800bdd2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800bdd6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800bdd8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800bddc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800bde0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800bde4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800bde8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800bdec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800bdf0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800bdf4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800bdf8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800bdfc:	469e      	mov	lr, r3
 800bdfe:	469c      	mov	ip, r3
 800be00:	f04f 0900 	mov.w	r9, #0
 800be04:	f1bc 0f00 	cmp.w	ip, #0
 800be08:	d147      	bne.n	800be9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800be0a:	eb03 0c07 	add.w	ip, r3, r7
 800be0e:	1ad7      	subs	r7, r2, r3
 800be10:	f1b9 0f00 	cmp.w	r9, #0
 800be14:	d009      	beq.n	800be2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800be16:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800be1a:	9029      	str	r0, [sp, #164]	; 0xa4
 800be1c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800be20:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800be24:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800be28:	912d      	str	r1, [sp, #180]	; 0xb4
 800be2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800be2c:	9111      	str	r1, [sp, #68]	; 0x44
 800be2e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800be32:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800be36:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800be3a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800be3e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800be42:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800be46:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800be4a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800be4e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800be52:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800be56:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800be5a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800be5e:	f04f 0800 	mov.w	r8, #0
 800be62:	f1be 0f00 	cmp.w	lr, #0
 800be66:	d031      	beq.n	800becc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800be68:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800be6a:	4431      	add	r1, r6
 800be6c:	4549      	cmp	r1, r9
 800be6e:	4450      	add	r0, sl
 800be70:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800be74:	ee37 7a04 	vadd.f32	s14, s14, s8
 800be78:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800be7c:	db08      	blt.n	800be90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800be7e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800be82:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800be86:	ee37 7a06 	vadd.f32	s14, s14, s12
 800be8a:	3001      	adds	r0, #1
 800be8c:	eba1 0109 	sub.w	r1, r1, r9
 800be90:	f10e 3eff 	add.w	lr, lr, #4294967295
 800be94:	f04f 0801 	mov.w	r8, #1
 800be98:	e7e3      	b.n	800be62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800be9a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800be9c:	4431      	add	r1, r6
 800be9e:	4541      	cmp	r1, r8
 800bea0:	4450      	add	r0, sl
 800bea2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bea6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800beaa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800beae:	db08      	blt.n	800bec2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800beb0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800beb4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800beb8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bebc:	3001      	adds	r0, #1
 800bebe:	eba1 0108 	sub.w	r1, r1, r8
 800bec2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bec6:	f04f 0901 	mov.w	r9, #1
 800beca:	e79b      	b.n	800be04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800becc:	449c      	add	ip, r3
 800bece:	1aff      	subs	r7, r7, r3
 800bed0:	f1b8 0f00 	cmp.w	r8, #0
 800bed4:	d009      	beq.n	800beea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800bed6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800beda:	9019      	str	r0, [sp, #100]	; 0x64
 800bedc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bee0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bee4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bee8:	911d      	str	r1, [sp, #116]	; 0x74
 800beea:	1ad2      	subs	r2, r2, r3
 800beec:	e68b      	b.n	800bc06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800beee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bef0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	f000 80d1 	beq.w	800c09a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800bef8:	ad19      	add	r5, sp, #100	; 0x64
 800befa:	ac39      	add	r4, sp, #228	; 0xe4
 800befc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800befe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bf02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bf06:	930c      	str	r3, [sp, #48]	; 0x30
 800bf08:	990c      	ldr	r1, [sp, #48]	; 0x30
 800bf0a:	6963      	ldr	r3, [r4, #20]
 800bf0c:	440b      	add	r3, r1
 800bf0e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bf12:	4408      	add	r0, r1
 800bf14:	b200      	sxth	r0, r0
 800bf16:	4283      	cmp	r3, r0
 800bf18:	900d      	str	r0, [sp, #52]	; 0x34
 800bf1a:	f280 80c1 	bge.w	800c0a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800bf1e:	428b      	cmp	r3, r1
 800bf20:	da08      	bge.n	800bf34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bf22:	2a00      	cmp	r2, #0
 800bf24:	dd06      	ble.n	800bf34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bf26:	1acb      	subs	r3, r1, r3
 800bf28:	429a      	cmp	r2, r3
 800bf2a:	f2c0 80bb 	blt.w	800c0a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800bf2e:	2b00      	cmp	r3, #0
 800bf30:	f300 80b9 	bgt.w	800c0a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800bf34:	6967      	ldr	r7, [r4, #20]
 800bf36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bf38:	443b      	add	r3, r7
 800bf3a:	461f      	mov	r7, r3
 800bf3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf3e:	1bdf      	subs	r7, r3, r7
 800bf40:	4297      	cmp	r7, r2
 800bf42:	bfa8      	it	ge
 800bf44:	4617      	movge	r7, r2
 800bf46:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bf4a:	2f00      	cmp	r7, #0
 800bf4c:	f340 813c 	ble.w	800c1c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800bf50:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bf52:	6829      	ldr	r1, [r5, #0]
 800bf54:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bf58:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bf5c:	6820      	ldr	r0, [r4, #0]
 800bf5e:	4411      	add	r1, r2
 800bf60:	4299      	cmp	r1, r3
 800bf62:	dd1a      	ble.n	800bf9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bf64:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bf68:	440b      	add	r3, r1
 800bf6a:	4402      	add	r2, r0
 800bf6c:	b21b      	sxth	r3, r3
 800bf6e:	429a      	cmp	r2, r3
 800bf70:	dc13      	bgt.n	800bf9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bf72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bf76:	681b      	ldr	r3, [r3, #0]
 800bf78:	9206      	str	r2, [sp, #24]
 800bf7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bf7c:	9205      	str	r2, [sp, #20]
 800bf7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bf80:	9500      	str	r5, [sp, #0]
 800bf82:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bf86:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bf88:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bf8a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bf8e:	a912      	add	r1, sp, #72	; 0x48
 800bf90:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800bf94:	aa49      	add	r2, sp, #292	; 0x124
 800bf96:	4623      	mov	r3, r4
 800bf98:	47c8      	blx	r9
 800bf9a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bf9e:	441a      	add	r2, r3
 800bfa0:	6963      	ldr	r3, [r4, #20]
 800bfa2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bfa6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bfaa:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bfae:	68a1      	ldr	r1, [r4, #8]
 800bfb0:	ed94 6a08 	vldr	s12, [r4, #32]
 800bfb4:	6022      	str	r2, [r4, #0]
 800bfb6:	3301      	adds	r3, #1
 800bfb8:	6163      	str	r3, [r4, #20]
 800bfba:	69a3      	ldr	r3, [r4, #24]
 800bfbc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bfc0:	3b01      	subs	r3, #1
 800bfc2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bfc6:	61a3      	str	r3, [r4, #24]
 800bfc8:	6923      	ldr	r3, [r4, #16]
 800bfca:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bfce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bfd2:	edd4 6a07 	vldr	s13, [r4, #28]
 800bfd6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bfda:	440b      	add	r3, r1
 800bfdc:	68e1      	ldr	r1, [r4, #12]
 800bfde:	6123      	str	r3, [r4, #16]
 800bfe0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bfe4:	428b      	cmp	r3, r1
 800bfe6:	edc4 6a07 	vstr	s13, [r4, #28]
 800bfea:	db15      	blt.n	800c018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bfec:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bff0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bff4:	3201      	adds	r2, #1
 800bff6:	edc4 6a07 	vstr	s13, [r4, #28]
 800bffa:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bffe:	6022      	str	r2, [r4, #0]
 800c000:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c004:	1a5b      	subs	r3, r3, r1
 800c006:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800c00a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800c00e:	6123      	str	r3, [r4, #16]
 800c010:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c014:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800c018:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c01c:	441a      	add	r2, r3
 800c01e:	696b      	ldr	r3, [r5, #20]
 800c020:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800c024:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800c028:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800c02c:	68a9      	ldr	r1, [r5, #8]
 800c02e:	ed95 6a08 	vldr	s12, [r5, #32]
 800c032:	602a      	str	r2, [r5, #0]
 800c034:	3301      	adds	r3, #1
 800c036:	616b      	str	r3, [r5, #20]
 800c038:	69ab      	ldr	r3, [r5, #24]
 800c03a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c03e:	3b01      	subs	r3, #1
 800c040:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800c044:	61ab      	str	r3, [r5, #24]
 800c046:	692b      	ldr	r3, [r5, #16]
 800c048:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800c04c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c050:	edd5 6a07 	vldr	s13, [r5, #28]
 800c054:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800c058:	440b      	add	r3, r1
 800c05a:	68e9      	ldr	r1, [r5, #12]
 800c05c:	612b      	str	r3, [r5, #16]
 800c05e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c062:	428b      	cmp	r3, r1
 800c064:	edc5 6a07 	vstr	s13, [r5, #28]
 800c068:	db15      	blt.n	800c096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800c06a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800c06e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c072:	3201      	adds	r2, #1
 800c074:	edc5 6a07 	vstr	s13, [r5, #28]
 800c078:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800c07c:	602a      	str	r2, [r5, #0]
 800c07e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c082:	1a5b      	subs	r3, r3, r1
 800c084:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800c088:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800c08c:	612b      	str	r3, [r5, #16]
 800c08e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c092:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800c096:	3f01      	subs	r7, #1
 800c098:	e757      	b.n	800bf4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800c09a:	ad39      	add	r5, sp, #228	; 0xe4
 800c09c:	ac19      	add	r4, sp, #100	; 0x64
 800c09e:	e72d      	b.n	800befc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800c0a0:	4613      	mov	r3, r2
 800c0a2:	e744      	b.n	800bf2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c0a4:	4613      	mov	r3, r2
 800c0a6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800c0aa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800c0ac:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800c0b0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800c0b4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800c0b8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800c0bc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800c0c0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800c0c4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800c0c8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800c0ca:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800c0ce:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800c0d2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800c0d6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800c0da:	960e      	str	r6, [sp, #56]	; 0x38
 800c0dc:	469e      	mov	lr, r3
 800c0de:	461f      	mov	r7, r3
 800c0e0:	f04f 0900 	mov.w	r9, #0
 800c0e4:	2f00      	cmp	r7, #0
 800c0e6:	d146      	bne.n	800c176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c0e8:	449c      	add	ip, r3
 800c0ea:	1ad7      	subs	r7, r2, r3
 800c0ec:	f1b9 0f00 	cmp.w	r9, #0
 800c0f0:	d009      	beq.n	800c106 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c0f2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800c0f6:	9039      	str	r0, [sp, #228]	; 0xe4
 800c0f8:	913d      	str	r1, [sp, #244]	; 0xf4
 800c0fa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800c0fe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800c102:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800c106:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800c108:	910e      	str	r1, [sp, #56]	; 0x38
 800c10a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800c10e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800c112:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800c116:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800c11a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800c11e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800c122:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800c126:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800c12a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800c12e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800c132:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800c136:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800c13a:	f04f 0800 	mov.w	r8, #0
 800c13e:	f1be 0f00 	cmp.w	lr, #0
 800c142:	d030      	beq.n	800c1a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c144:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c146:	4431      	add	r1, r6
 800c148:	4549      	cmp	r1, r9
 800c14a:	4450      	add	r0, sl
 800c14c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c150:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c154:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c158:	db08      	blt.n	800c16c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c15a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c15e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c162:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c166:	3001      	adds	r0, #1
 800c168:	eba1 0109 	sub.w	r1, r1, r9
 800c16c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c170:	f04f 0801 	mov.w	r8, #1
 800c174:	e7e3      	b.n	800c13e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c176:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c178:	4431      	add	r1, r6
 800c17a:	4541      	cmp	r1, r8
 800c17c:	4450      	add	r0, sl
 800c17e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c182:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c186:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c18a:	db08      	blt.n	800c19e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c18c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c190:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c194:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c198:	3001      	adds	r0, #1
 800c19a:	eba1 0108 	sub.w	r1, r1, r8
 800c19e:	3f01      	subs	r7, #1
 800c1a0:	f04f 0901 	mov.w	r9, #1
 800c1a4:	e79e      	b.n	800c0e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c1a6:	449c      	add	ip, r3
 800c1a8:	1aff      	subs	r7, r7, r3
 800c1aa:	f1b8 0f00 	cmp.w	r8, #0
 800c1ae:	d009      	beq.n	800c1c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800c1b0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800c1b4:	9019      	str	r0, [sp, #100]	; 0x64
 800c1b6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800c1ba:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800c1be:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800c1c2:	911d      	str	r1, [sp, #116]	; 0x74
 800c1c4:	1ad2      	subs	r2, r2, r3
 800c1c6:	e6b5      	b.n	800bf34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c1c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c1ca:	681b      	ldr	r3, [r3, #0]
 800c1cc:	b923      	cbnz	r3, 800c1d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c1ce:	4b04      	ldr	r3, [pc, #16]	; (800c1e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800c1d0:	6818      	ldr	r0, [r3, #0]
 800c1d2:	6803      	ldr	r3, [r0, #0]
 800c1d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1d6:	4798      	blx	r3
 800c1d8:	b05b      	add	sp, #364	; 0x16c
 800c1da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1de:	bf00      	nop
 800c1e0:	20008990 	.word	0x20008990

0800c1e4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800c1e4:	b570      	push	{r4, r5, r6, lr}
 800c1e6:	4604      	mov	r4, r0
 800c1e8:	2500      	movs	r5, #0
 800c1ea:	7223      	strb	r3, [r4, #8]
 800c1ec:	9804      	ldr	r0, [sp, #16]
 800c1ee:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c1f2:	8025      	strh	r5, [r4, #0]
 800c1f4:	6061      	str	r1, [r4, #4]
 800c1f6:	7263      	strb	r3, [r4, #9]
 800c1f8:	60e0      	str	r0, [r4, #12]
 800c1fa:	8222      	strh	r2, [r4, #16]
 800c1fc:	8265      	strh	r5, [r4, #18]
 800c1fe:	82a5      	strh	r5, [r4, #20]
 800c200:	82e5      	strh	r5, [r4, #22]
 800c202:	8325      	strh	r5, [r4, #24]
 800c204:	8365      	strh	r5, [r4, #26]
 800c206:	83a5      	strh	r5, [r4, #28]
 800c208:	77a5      	strb	r5, [r4, #30]
 800c20a:	6803      	ldr	r3, [r0, #0]
 800c20c:	695b      	ldr	r3, [r3, #20]
 800c20e:	4798      	blx	r3
 800c210:	4606      	mov	r6, r0
 800c212:	b1f8      	cbz	r0, 800c254 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c214:	68e0      	ldr	r0, [r4, #12]
 800c216:	6803      	ldr	r3, [r0, #0]
 800c218:	4631      	mov	r1, r6
 800c21a:	68db      	ldr	r3, [r3, #12]
 800c21c:	4798      	blx	r3
 800c21e:	7b43      	ldrb	r3, [r0, #13]
 800c220:	7a82      	ldrb	r2, [r0, #10]
 800c222:	005b      	lsls	r3, r3, #1
 800c224:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c228:	4313      	orrs	r3, r2
 800c22a:	83a3      	strh	r3, [r4, #28]
 800c22c:	7a63      	ldrb	r3, [r4, #9]
 800c22e:	2b04      	cmp	r3, #4
 800c230:	4605      	mov	r5, r0
 800c232:	d10f      	bne.n	800c254 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c234:	68e0      	ldr	r0, [r4, #12]
 800c236:	6803      	ldr	r3, [r0, #0]
 800c238:	462a      	mov	r2, r5
 800c23a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c23c:	4631      	mov	r1, r6
 800c23e:	4798      	blx	r3
 800c240:	7b6b      	ldrb	r3, [r5, #13]
 800c242:	005b      	lsls	r3, r3, #1
 800c244:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c248:	7aab      	ldrb	r3, [r5, #10]
 800c24a:	4313      	orrs	r3, r2
 800c24c:	4418      	add	r0, r3
 800c24e:	8ba3      	ldrh	r3, [r4, #28]
 800c250:	4418      	add	r0, r3
 800c252:	83a0      	strh	r0, [r4, #28]
 800c254:	4620      	mov	r0, r4
 800c256:	bd70      	pop	{r4, r5, r6, pc}

0800c258 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c25c:	2400      	movs	r4, #0
 800c25e:	b085      	sub	sp, #20
 800c260:	4681      	mov	r9, r0
 800c262:	4688      	mov	r8, r1
 800c264:	4692      	mov	sl, r2
 800c266:	469b      	mov	fp, r3
 800c268:	4627      	mov	r7, r4
 800c26a:	4625      	mov	r5, r4
 800c26c:	4626      	mov	r6, r4
 800c26e:	4554      	cmp	r4, sl
 800c270:	da2a      	bge.n	800c2c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c272:	2300      	movs	r3, #0
 800c274:	9303      	str	r3, [sp, #12]
 800c276:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c27a:	429d      	cmp	r5, r3
 800c27c:	d004      	beq.n	800c288 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800c27e:	f242 030b 	movw	r3, #8203	; 0x200b
 800c282:	429d      	cmp	r5, r3
 800c284:	bf18      	it	ne
 800c286:	462f      	movne	r7, r5
 800c288:	ab03      	add	r3, sp, #12
 800c28a:	4642      	mov	r2, r8
 800c28c:	4659      	mov	r1, fp
 800c28e:	4648      	mov	r0, r9
 800c290:	f002 fe48 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c294:	4605      	mov	r5, r0
 800c296:	b1b8      	cbz	r0, 800c2c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c298:	280a      	cmp	r0, #10
 800c29a:	d015      	beq.n	800c2c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c29c:	9a03      	ldr	r2, [sp, #12]
 800c29e:	b18a      	cbz	r2, 800c2c4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800c2a0:	7b50      	ldrb	r0, [r2, #13]
 800c2a2:	7a93      	ldrb	r3, [r2, #10]
 800c2a4:	8895      	ldrh	r5, [r2, #4]
 800c2a6:	0040      	lsls	r0, r0, #1
 800c2a8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c2ac:	4303      	orrs	r3, r0
 800c2ae:	9301      	str	r3, [sp, #4]
 800c2b0:	f8d8 3000 	ldr.w	r3, [r8]
 800c2b4:	4639      	mov	r1, r7
 800c2b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c2b8:	4640      	mov	r0, r8
 800c2ba:	4798      	blx	r3
 800c2bc:	9b01      	ldr	r3, [sp, #4]
 800c2be:	4418      	add	r0, r3
 800c2c0:	4406      	add	r6, r0
 800c2c2:	b2b6      	uxth	r6, r6
 800c2c4:	3401      	adds	r4, #1
 800c2c6:	e7d2      	b.n	800c26e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800c2c8:	4630      	mov	r0, r6
 800c2ca:	b005      	add	sp, #20
 800c2cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c2d0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c2d0:	2a02      	cmp	r2, #2
 800c2d2:	b530      	push	{r4, r5, lr}
 800c2d4:	d011      	beq.n	800c2fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c2d6:	2a03      	cmp	r2, #3
 800c2d8:	d01c      	beq.n	800c314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c2da:	2a01      	cmp	r2, #1
 800c2dc:	d10c      	bne.n	800c2f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c2de:	888b      	ldrh	r3, [r1, #4]
 800c2e0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c2e4:	8801      	ldrh	r1, [r0, #0]
 800c2e6:	8844      	ldrh	r4, [r0, #2]
 800c2e8:	8004      	strh	r4, [r0, #0]
 800c2ea:	1a9b      	subs	r3, r3, r2
 800c2ec:	1a5b      	subs	r3, r3, r1
 800c2ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c2f2:	8043      	strh	r3, [r0, #2]
 800c2f4:	8081      	strh	r1, [r0, #4]
 800c2f6:	80c2      	strh	r2, [r0, #6]
 800c2f8:	bd30      	pop	{r4, r5, pc}
 800c2fa:	88cb      	ldrh	r3, [r1, #6]
 800c2fc:	88c2      	ldrh	r2, [r0, #6]
 800c2fe:	1a9b      	subs	r3, r3, r2
 800c300:	8842      	ldrh	r2, [r0, #2]
 800c302:	1a9b      	subs	r3, r3, r2
 800c304:	888a      	ldrh	r2, [r1, #4]
 800c306:	8881      	ldrh	r1, [r0, #4]
 800c308:	8043      	strh	r3, [r0, #2]
 800c30a:	1a52      	subs	r2, r2, r1
 800c30c:	8801      	ldrh	r1, [r0, #0]
 800c30e:	1a52      	subs	r2, r2, r1
 800c310:	8002      	strh	r2, [r0, #0]
 800c312:	e7f1      	b.n	800c2f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c314:	88cb      	ldrh	r3, [r1, #6]
 800c316:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c31a:	8841      	ldrh	r1, [r0, #2]
 800c31c:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c320:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c324:	8045      	strh	r5, [r0, #2]
 800c326:	1a9b      	subs	r3, r3, r2
 800c328:	1a5b      	subs	r3, r3, r1
 800c32a:	8003      	strh	r3, [r0, #0]
 800c32c:	8082      	strh	r2, [r0, #4]
 800c32e:	80c4      	strh	r4, [r0, #6]
 800c330:	e7e2      	b.n	800c2f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800c332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c336:	b09f      	sub	sp, #124	; 0x7c
 800c338:	9116      	str	r1, [sp, #88]	; 0x58
 800c33a:	9317      	str	r3, [sp, #92]	; 0x5c
 800c33c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c33e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c340:	8809      	ldrh	r1, [r1, #0]
 800c342:	889b      	ldrh	r3, [r3, #4]
 800c344:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800c348:	9212      	str	r2, [sp, #72]	; 0x48
 800c34a:	440b      	add	r3, r1
 800c34c:	b21b      	sxth	r3, r3
 800c34e:	9310      	str	r3, [sp, #64]	; 0x40
 800c350:	f8d8 3000 	ldr.w	r3, [r8]
 800c354:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800c358:	7a59      	ldrb	r1, [r3, #9]
 800c35a:	7a1b      	ldrb	r3, [r3, #8]
 800c35c:	9315      	str	r3, [sp, #84]	; 0x54
 800c35e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800c360:	9011      	str	r0, [sp, #68]	; 0x44
 800c362:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800c366:	9114      	str	r1, [sp, #80]	; 0x50
 800c368:	f9b3 5000 	ldrsh.w	r5, [r3]
 800c36c:	2a00      	cmp	r2, #0
 800c36e:	d067      	beq.n	800c440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800c370:	f898 3010 	ldrb.w	r3, [r8, #16]
 800c374:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800c376:	2b04      	cmp	r3, #4
 800c378:	bf14      	ite	ne
 800c37a:	2301      	movne	r3, #1
 800c37c:	2302      	moveq	r3, #2
 800c37e:	4413      	add	r3, r2
 800c380:	f04f 0900 	mov.w	r9, #0
 800c384:	930f      	str	r3, [sp, #60]	; 0x3c
 800c386:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800c38a:	464c      	mov	r4, r9
 800c38c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800c390:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800c394:	4293      	cmp	r3, r2
 800c396:	f280 808c 	bge.w	800c4b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c39a:	2300      	movs	r3, #0
 800c39c:	931c      	str	r3, [sp, #112]	; 0x70
 800c39e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c3a2:	429c      	cmp	r4, r3
 800c3a4:	d006      	beq.n	800c3b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800c3a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c3a8:	f242 020b 	movw	r2, #8203	; 0x200b
 800c3ac:	4294      	cmp	r4, r2
 800c3ae:	bf18      	it	ne
 800c3b0:	4623      	movne	r3, r4
 800c3b2:	930d      	str	r3, [sp, #52]	; 0x34
 800c3b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c3b6:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800c3b8:	f8d8 2000 	ldr.w	r2, [r8]
 800c3bc:	428b      	cmp	r3, r1
 800c3be:	db41      	blt.n	800c444 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800c3c0:	6813      	ldr	r3, [r2, #0]
 800c3c2:	4610      	mov	r0, r2
 800c3c4:	695b      	ldr	r3, [r3, #20]
 800c3c6:	4798      	blx	r3
 800c3c8:	4604      	mov	r4, r0
 800c3ca:	f8d8 0000 	ldr.w	r0, [r8]
 800c3ce:	6803      	ldr	r3, [r0, #0]
 800c3d0:	aa1d      	add	r2, sp, #116	; 0x74
 800c3d2:	689e      	ldr	r6, [r3, #8]
 800c3d4:	4621      	mov	r1, r4
 800c3d6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c3da:	47b0      	blx	r6
 800c3dc:	901c      	str	r0, [sp, #112]	; 0x70
 800c3de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c3e2:	429c      	cmp	r4, r3
 800c3e4:	f000 80e9 	beq.w	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c3e8:	f242 030b 	movw	r3, #8203	; 0x200b
 800c3ec:	429c      	cmp	r4, r3
 800c3ee:	f000 80e4 	beq.w	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c3f2:	2c00      	cmp	r4, #0
 800c3f4:	f000 80f6 	beq.w	800c5e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c3f8:	2c0a      	cmp	r4, #10
 800c3fa:	d060      	beq.n	800c4be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c3fc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c3fe:	b36a      	cbz	r2, 800c45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800c400:	8894      	ldrh	r4, [r2, #4]
 800c402:	f1bb 0f00 	cmp.w	fp, #0
 800c406:	d03b      	beq.n	800c480 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800c408:	f892 900d 	ldrb.w	r9, [r2, #13]
 800c40c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800c410:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800c414:	f892 900a 	ldrb.w	r9, [r2, #10]
 800c418:	f1bb 0f01 	cmp.w	fp, #1
 800c41c:	ea49 0903 	orr.w	r9, r9, r3
 800c420:	d134      	bne.n	800c48c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800c422:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c424:	eba5 0509 	sub.w	r5, r5, r9
 800c428:	2b00      	cmp	r3, #0
 800c42a:	d14f      	bne.n	800c4cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c42c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c42e:	eb09 0305 	add.w	r3, r9, r5
 800c432:	4413      	add	r3, r2
 800c434:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800c436:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c43a:	4293      	cmp	r3, r2
 800c43c:	da51      	bge.n	800c4e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c43e:	e038      	b.n	800c4b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c440:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c442:	e79d      	b.n	800c380 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800c444:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c448:	9301      	str	r3, [sp, #4]
 800c44a:	ab1d      	add	r3, sp, #116	; 0x74
 800c44c:	9300      	str	r3, [sp, #0]
 800c44e:	4659      	mov	r1, fp
 800c450:	ab1c      	add	r3, sp, #112	; 0x70
 800c452:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c454:	f002 fdbe 	bl	800efd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c458:	4604      	mov	r4, r0
 800c45a:	e7c0      	b.n	800c3de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800c45c:	f8d8 0000 	ldr.w	r0, [r8]
 800c460:	6803      	ldr	r3, [r0, #0]
 800c462:	691b      	ldr	r3, [r3, #16]
 800c464:	4798      	blx	r3
 800c466:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c46a:	4298      	cmp	r0, r3
 800c46c:	f000 80a5 	beq.w	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c470:	f242 030b 	movw	r3, #8203	; 0x200b
 800c474:	4298      	cmp	r0, r3
 800c476:	f000 80a0 	beq.w	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c47a:	f1bb 0f00 	cmp.w	fp, #0
 800c47e:	d100      	bne.n	800c482 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800c480:	444d      	add	r5, r9
 800c482:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c484:	2a00      	cmp	r2, #0
 800c486:	d1bf      	bne.n	800c408 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800c488:	4691      	mov	r9, r2
 800c48a:	e096      	b.n	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c48c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c48e:	2b00      	cmp	r3, #0
 800c490:	f000 80aa 	beq.w	800c5e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800c494:	f1bb 0f00 	cmp.w	fp, #0
 800c498:	d118      	bne.n	800c4cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c49a:	f8d8 0000 	ldr.w	r0, [r8]
 800c49e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c4a0:	6803      	ldr	r3, [r0, #0]
 800c4a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c4a4:	4798      	blx	r3
 800c4a6:	4405      	add	r5, r0
 800c4a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c4aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c4ac:	1aeb      	subs	r3, r5, r3
 800c4ae:	4293      	cmp	r3, r2
 800c4b0:	dd17      	ble.n	800c4e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c4b2:	2c00      	cmp	r4, #0
 800c4b4:	f000 8096 	beq.w	800c5e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c4b8:	2c0a      	cmp	r4, #10
 800c4ba:	f040 8084 	bne.w	800c5c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800c4be:	240a      	movs	r4, #10
 800c4c0:	fab4 f084 	clz	r0, r4
 800c4c4:	0940      	lsrs	r0, r0, #5
 800c4c6:	b01f      	add	sp, #124	; 0x7c
 800c4c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4cc:	f8d8 0000 	ldr.w	r0, [r8]
 800c4d0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c4d2:	6803      	ldr	r3, [r0, #0]
 800c4d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c4d6:	4798      	blx	r3
 800c4d8:	f1bb 0f01 	cmp.w	fp, #1
 800c4dc:	eba5 0500 	sub.w	r5, r5, r0
 800c4e0:	d0a4      	beq.n	800c42c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800c4e2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c4e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c4e6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c4ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c4ee:	7b43      	ldrb	r3, [r0, #13]
 800c4f0:	015b      	lsls	r3, r3, #5
 800c4f2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c4f6:	7983      	ldrb	r3, [r0, #6]
 800c4f8:	4429      	add	r1, r5
 800c4fa:	4313      	orrs	r3, r2
 800c4fc:	440b      	add	r3, r1
 800c4fe:	42b3      	cmp	r3, r6
 800c500:	db5b      	blt.n	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c502:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c504:	4299      	cmp	r1, r3
 800c506:	da58      	bge.n	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c508:	f8d8 0000 	ldr.w	r0, [r8]
 800c50c:	6803      	ldr	r3, [r0, #0]
 800c50e:	42ae      	cmp	r6, r5
 800c510:	bfc8      	it	gt
 800c512:	1b76      	subgt	r6, r6, r5
 800c514:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c516:	bfcc      	ite	gt
 800c518:	b2b6      	uxthgt	r6, r6
 800c51a:	2600      	movle	r6, #0
 800c51c:	4798      	blx	r3
 800c51e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c520:	7b5a      	ldrb	r2, [r3, #13]
 800c522:	00d1      	lsls	r1, r2, #3
 800c524:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800c528:	7a19      	ldrb	r1, [r3, #8]
 800c52a:	4339      	orrs	r1, r7
 800c52c:	0657      	lsls	r7, r2, #25
 800c52e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c530:	bf44      	itt	mi
 800c532:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c536:	b209      	sxthmi	r1, r1
 800c538:	19c7      	adds	r7, r0, r7
 800c53a:	1a7f      	subs	r7, r7, r1
 800c53c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c53e:	b2bf      	uxth	r7, r7
 800c540:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c544:	fa0f fa87 	sxth.w	sl, r7
 800c548:	4551      	cmp	r1, sl
 800c54a:	dd3a      	ble.n	800c5c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c54c:	0112      	lsls	r2, r2, #4
 800c54e:	79d8      	ldrb	r0, [r3, #7]
 800c550:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c554:	4302      	orrs	r2, r0
 800c556:	4492      	add	sl, r2
 800c558:	4551      	cmp	r1, sl
 800c55a:	dc2e      	bgt.n	800c5ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c55c:	1bcf      	subs	r7, r1, r7
 800c55e:	b2bf      	uxth	r7, r7
 800c560:	468a      	mov	sl, r1
 800c562:	9319      	str	r3, [sp, #100]	; 0x64
 800c564:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c566:	f8d8 0000 	ldr.w	r0, [r8]
 800c56a:	681a      	ldr	r2, [r3, #0]
 800c56c:	6801      	ldr	r1, [r0, #0]
 800c56e:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800c570:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c572:	9313      	str	r3, [sp, #76]	; 0x4c
 800c574:	9218      	str	r2, [sp, #96]	; 0x60
 800c576:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c578:	4788      	blx	r1
 800c57a:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c57e:	910b      	str	r1, [sp, #44]	; 0x2c
 800c580:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c584:	910a      	str	r1, [sp, #40]	; 0x28
 800c586:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c58a:	9109      	str	r1, [sp, #36]	; 0x24
 800c58c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c58e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c592:	9305      	str	r3, [sp, #20]
 800c594:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c596:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c598:	9206      	str	r2, [sp, #24]
 800c59a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c59e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800c5a2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c5a6:	442e      	add	r6, r5
 800c5a8:	b236      	sxth	r6, r6
 800c5aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c5ac:	9600      	str	r6, [sp, #0]
 800c5ae:	681a      	ldr	r2, [r3, #0]
 800c5b0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c5b2:	685b      	ldr	r3, [r3, #4]
 800c5b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c5b6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c5b8:	47b0      	blx	r6
 800c5ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c5bc:	3301      	adds	r3, #1
 800c5be:	930e      	str	r3, [sp, #56]	; 0x38
 800c5c0:	e6e6      	b.n	800c390 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800c5c2:	2700      	movs	r7, #0
 800c5c4:	e7cd      	b.n	800c562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800c5c6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c5c8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c5ca:	3501      	adds	r5, #1
 800c5cc:	429d      	cmp	r5, r3
 800c5ce:	f6bf af77 	bge.w	800c4c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c5d2:	4659      	mov	r1, fp
 800c5d4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c5d6:	f7f7 fa13 	bl	8003a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c5da:	4604      	mov	r4, r0
 800c5dc:	b110      	cbz	r0, 800c5e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c5de:	280a      	cmp	r0, #10
 800c5e0:	d1f2      	bne.n	800c5c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800c5e2:	e76c      	b.n	800c4be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c5e4:	2400      	movs	r4, #0
 800c5e6:	e76b      	b.n	800c4c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c5e8:	f1bb 0f00 	cmp.w	fp, #0
 800c5ec:	f43f af5c 	beq.w	800c4a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c5f0:	e777      	b.n	800c4e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800c5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c5f2:	b530      	push	{r4, r5, lr}
 800c5f4:	8a44      	ldrh	r4, [r0, #18]
 800c5f6:	8ac5      	ldrh	r5, [r0, #22]
 800c5f8:	82c3      	strh	r3, [r0, #22]
 800c5fa:	442c      	add	r4, r5
 800c5fc:	1ae4      	subs	r4, r4, r3
 800c5fe:	8244      	strh	r4, [r0, #18]
 800c600:	8b03      	ldrh	r3, [r0, #24]
 800c602:	8a84      	ldrh	r4, [r0, #20]
 800c604:	4422      	add	r2, r4
 800c606:	440c      	add	r4, r1
 800c608:	1a59      	subs	r1, r3, r1
 800c60a:	8342      	strh	r2, [r0, #26]
 800c60c:	8284      	strh	r4, [r0, #20]
 800c60e:	8301      	strh	r1, [r0, #24]
 800c610:	bd30      	pop	{r4, r5, pc}

0800c612 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800c612:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c616:	7a43      	ldrb	r3, [r0, #9]
 800c618:	1eda      	subs	r2, r3, #3
 800c61a:	b087      	sub	sp, #28
 800c61c:	4604      	mov	r4, r0
 800c61e:	b2d2      	uxtb	r2, r2
 800c620:	460f      	mov	r7, r1
 800c622:	2900      	cmp	r1, #0
 800c624:	d036      	beq.n	800c694 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800c626:	2a01      	cmp	r2, #1
 800c628:	d932      	bls.n	800c690 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800c62a:	1e58      	subs	r0, r3, #1
 800c62c:	f1d0 0b00 	rsbs	fp, r0, #0
 800c630:	eb4b 0b00 	adc.w	fp, fp, r0
 800c634:	1e99      	subs	r1, r3, #2
 800c636:	424b      	negs	r3, r1
 800c638:	414b      	adcs	r3, r1
 800c63a:	9303      	str	r3, [sp, #12]
 800c63c:	2300      	movs	r3, #0
 800c63e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800c642:	2500      	movs	r5, #0
 800c644:	8265      	strh	r5, [r4, #18]
 800c646:	82a5      	strh	r5, [r4, #20]
 800c648:	46a9      	mov	r9, r5
 800c64a:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800c64e:	2300      	movs	r3, #0
 800c650:	9305      	str	r3, [sp, #20]
 800c652:	8823      	ldrh	r3, [r4, #0]
 800c654:	2b20      	cmp	r3, #32
 800c656:	d02b      	beq.n	800c6b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800c658:	eba3 020a 	sub.w	r2, r3, sl
 800c65c:	4256      	negs	r6, r2
 800c65e:	4156      	adcs	r6, r2
 800c660:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c664:	4293      	cmp	r3, r2
 800c666:	d004      	beq.n	800c672 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c668:	4553      	cmp	r3, sl
 800c66a:	bf16      	itet	ne
 800c66c:	4699      	movne	r9, r3
 800c66e:	2601      	moveq	r6, #1
 800c670:	2600      	movne	r6, #0
 800c672:	ab05      	add	r3, sp, #20
 800c674:	68e2      	ldr	r2, [r4, #12]
 800c676:	7a21      	ldrb	r1, [r4, #8]
 800c678:	6860      	ldr	r0, [r4, #4]
 800c67a:	f002 fc53 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c67e:	8020      	strh	r0, [r4, #0]
 800c680:	b9c8      	cbnz	r0, 800c6b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800c682:	8b22      	ldrh	r2, [r4, #24]
 800c684:	2300      	movs	r3, #0
 800c686:	4611      	mov	r1, r2
 800c688:	4620      	mov	r0, r4
 800c68a:	f7ff ffb2 	bl	800c5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c68e:	e066      	b.n	800c75e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c690:	468b      	mov	fp, r1
 800c692:	e7cf      	b.n	800c634 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800c694:	3b01      	subs	r3, #1
 800c696:	2a01      	cmp	r2, #1
 800c698:	bf8c      	ite	hi
 800c69a:	2200      	movhi	r2, #0
 800c69c:	2201      	movls	r2, #1
 800c69e:	2b01      	cmp	r3, #1
 800c6a0:	bf8c      	ite	hi
 800c6a2:	2300      	movhi	r3, #0
 800c6a4:	2301      	movls	r3, #1
 800c6a6:	9202      	str	r2, [sp, #8]
 800c6a8:	9301      	str	r3, [sp, #4]
 800c6aa:	9103      	str	r1, [sp, #12]
 800c6ac:	468b      	mov	fp, r1
 800c6ae:	e7c8      	b.n	800c642 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800c6b0:	4699      	mov	r9, r3
 800c6b2:	2601      	movs	r6, #1
 800c6b4:	e7dd      	b.n	800c672 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c6b6:	8ae3      	ldrh	r3, [r4, #22]
 800c6b8:	280a      	cmp	r0, #10
 800c6ba:	f103 0301 	add.w	r3, r3, #1
 800c6be:	82e3      	strh	r3, [r4, #22]
 800c6c0:	d0df      	beq.n	800c682 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800c6c2:	9a05      	ldr	r2, [sp, #20]
 800c6c4:	bb42      	cbnz	r2, 800c718 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800c6c6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c6ca:	4298      	cmp	r0, r3
 800c6cc:	d001      	beq.n	800c6d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c6ce:	4550      	cmp	r0, sl
 800c6d0:	d1bd      	bne.n	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6d2:	8823      	ldrh	r3, [r4, #0]
 800c6d4:	8b21      	ldrh	r1, [r4, #24]
 800c6d6:	2b20      	cmp	r3, #32
 800c6d8:	d001      	beq.n	800c6de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800c6da:	4553      	cmp	r3, sl
 800c6dc:	d131      	bne.n	800c742 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800c6de:	2e00      	cmp	r6, #0
 800c6e0:	bf0a      	itet	eq
 800c6e2:	460d      	moveq	r5, r1
 800c6e4:	4630      	movne	r0, r6
 800c6e6:	2001      	moveq	r0, #1
 800c6e8:	440a      	add	r2, r1
 800c6ea:	8aa3      	ldrh	r3, [r4, #20]
 800c6ec:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c6f0:	b292      	uxth	r2, r2
 800c6f2:	8322      	strh	r2, [r4, #24]
 800c6f4:	4413      	add	r3, r2
 800c6f6:	2f00      	cmp	r7, #0
 800c6f8:	d03a      	beq.n	800c770 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c6fa:	f1bb 0f00 	cmp.w	fp, #0
 800c6fe:	d102      	bne.n	800c706 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c700:	9903      	ldr	r1, [sp, #12]
 800c702:	b301      	cbz	r1, 800c746 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c704:	b1f8      	cbz	r0, 800c746 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c706:	8ba1      	ldrh	r1, [r4, #28]
 800c708:	4419      	add	r1, r3
 800c70a:	458c      	cmp	ip, r1
 800c70c:	da2a      	bge.n	800c764 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c70e:	8a61      	ldrh	r1, [r4, #18]
 800c710:	b341      	cbz	r1, 800c764 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c712:	4563      	cmp	r3, ip
 800c714:	dd9b      	ble.n	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c716:	e01c      	b.n	800c752 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c718:	8893      	ldrh	r3, [r2, #4]
 800c71a:	8023      	strh	r3, [r4, #0]
 800c71c:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c720:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c724:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c728:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c72c:	ea48 0800 	orr.w	r8, r8, r0
 800c730:	68e0      	ldr	r0, [r4, #12]
 800c732:	6803      	ldr	r3, [r0, #0]
 800c734:	4649      	mov	r1, r9
 800c736:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c738:	4798      	blx	r3
 800c73a:	eb08 0200 	add.w	r2, r8, r0
 800c73e:	b292      	uxth	r2, r2
 800c740:	e7c7      	b.n	800c6d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c742:	2000      	movs	r0, #0
 800c744:	e7d0      	b.n	800c6e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c746:	4563      	cmp	r3, ip
 800c748:	dd81      	ble.n	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c74a:	8a63      	ldrh	r3, [r4, #18]
 800c74c:	2b00      	cmp	r3, #0
 800c74e:	f43f af7e 	beq.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c752:	2301      	movs	r3, #1
 800c754:	77a3      	strb	r3, [r4, #30]
 800c756:	8ba2      	ldrh	r2, [r4, #28]
 800c758:	8b63      	ldrh	r3, [r4, #26]
 800c75a:	4413      	add	r3, r2
 800c75c:	8363      	strh	r3, [r4, #26]
 800c75e:	b007      	add	sp, #28
 800c760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c764:	2300      	movs	r3, #0
 800c766:	4611      	mov	r1, r2
 800c768:	4620      	mov	r0, r4
 800c76a:	f7ff ff42 	bl	800c5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c76e:	e76e      	b.n	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c770:	4563      	cmp	r3, ip
 800c772:	dd14      	ble.n	800c79e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c774:	9b02      	ldr	r3, [sp, #8]
 800c776:	b113      	cbz	r3, 800c77e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c778:	2301      	movs	r3, #1
 800c77a:	460a      	mov	r2, r1
 800c77c:	e783      	b.n	800c686 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c77e:	9b01      	ldr	r3, [sp, #4]
 800c780:	2b00      	cmp	r3, #0
 800c782:	f43f af64 	beq.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c786:	2800      	cmp	r0, #0
 800c788:	f47f af61 	bne.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c78c:	b116      	cbz	r6, 800c794 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c78e:	2301      	movs	r3, #1
 800c790:	462a      	mov	r2, r5
 800c792:	e779      	b.n	800c688 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c794:	8a63      	ldrh	r3, [r4, #18]
 800c796:	2b00      	cmp	r3, #0
 800c798:	f43f af59 	beq.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c79c:	e7df      	b.n	800c75e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c79e:	2800      	cmp	r0, #0
 800c7a0:	f47f af55 	bne.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c7a4:	2e00      	cmp	r6, #0
 800c7a6:	f43f af52 	beq.w	800c64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c7aa:	2301      	movs	r3, #1
 800c7ac:	462a      	mov	r2, r5
 800c7ae:	e7db      	b.n	800c768 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c7b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7b4:	b0db      	sub	sp, #364	; 0x16c
 800c7b6:	4689      	mov	r9, r1
 800c7b8:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800c7bc:	900a      	str	r0, [sp, #40]	; 0x28
 800c7be:	461c      	mov	r4, r3
 800c7c0:	f1ba 0f00 	cmp.w	sl, #0
 800c7c4:	f000 80a5 	beq.w	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c7c8:	681b      	ldr	r3, [r3, #0]
 800c7ca:	2b00      	cmp	r3, #0
 800c7cc:	f000 80a1 	beq.w	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c7d0:	7ba3      	ldrb	r3, [r4, #14]
 800c7d2:	2b00      	cmp	r3, #0
 800c7d4:	f000 809d 	beq.w	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c7d8:	6810      	ldr	r0, [r2, #0]
 800c7da:	6851      	ldr	r1, [r2, #4]
 800c7dc:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c7e0:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c7e4:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800c7e8:	4643      	mov	r3, r8
 800c7ea:	c303      	stmia	r3!, {r0, r1}
 800c7ec:	2500      	movs	r5, #0
 800c7ee:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c7f2:	79a2      	ldrb	r2, [r4, #6]
 800c7f4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c7f8:	a90e      	add	r1, sp, #56	; 0x38
 800c7fa:	4640      	mov	r0, r8
 800c7fc:	950e      	str	r5, [sp, #56]	; 0x38
 800c7fe:	f7ff fd67 	bl	800c2d0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c802:	a90e      	add	r1, sp, #56	; 0x38
 800c804:	4608      	mov	r0, r1
 800c806:	79a2      	ldrb	r2, [r4, #6]
 800c808:	af18      	add	r7, sp, #96	; 0x60
 800c80a:	f7ff fd61 	bl	800c2d0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c80e:	4638      	mov	r0, r7
 800c810:	f002 f849 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800c814:	6820      	ldr	r0, [r4, #0]
 800c816:	6803      	ldr	r3, [r0, #0]
 800c818:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c81a:	4798      	blx	r3
 800c81c:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c81e:	4603      	mov	r3, r0
 800c820:	4651      	mov	r1, sl
 800c822:	4638      	mov	r0, r7
 800c824:	f002 f884 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c828:	6820      	ldr	r0, [r4, #0]
 800c82a:	7923      	ldrb	r3, [r4, #4]
 800c82c:	9308      	str	r3, [sp, #32]
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c832:	4798      	blx	r3
 800c834:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c838:	181e      	adds	r6, r3, r0
 800c83a:	42ae      	cmp	r6, r5
 800c83c:	dd06      	ble.n	800c84c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800c83e:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c842:	4282      	cmp	r2, r0
 800c844:	bfa4      	itt	ge
 800c846:	189d      	addge	r5, r3, r2
 800c848:	fb95 f5f6 	sdivge	r5, r5, r6
 800c84c:	a82e      	add	r0, sp, #184	; 0xb8
 800c84e:	f002 f82a 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800c852:	7c23      	ldrb	r3, [r4, #16]
 800c854:	b14b      	cbz	r3, 800c86a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800c856:	6820      	ldr	r0, [r4, #0]
 800c858:	6803      	ldr	r3, [r0, #0]
 800c85a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c85c:	4798      	blx	r3
 800c85e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c860:	4603      	mov	r3, r0
 800c862:	4651      	mov	r1, sl
 800c864:	a82e      	add	r0, sp, #184	; 0xb8
 800c866:	f002 f863 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c86a:	7c21      	ldrb	r1, [r4, #16]
 800c86c:	9101      	str	r1, [sp, #4]
 800c86e:	6821      	ldr	r1, [r4, #0]
 800c870:	7963      	ldrb	r3, [r4, #5]
 800c872:	9100      	str	r1, [sp, #0]
 800c874:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800c878:	a92e      	add	r1, sp, #184	; 0xb8
 800c87a:	a810      	add	r0, sp, #64	; 0x40
 800c87c:	f7ff fcb2 	bl	800c1e4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c880:	7c23      	ldrb	r3, [r4, #16]
 800c882:	b9bb      	cbnz	r3, 800c8b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800c884:	fa1f fa86 	uxth.w	sl, r6
 800c888:	2d00      	cmp	r5, #0
 800c88a:	dd45      	ble.n	800c918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c88c:	4638      	mov	r0, r7
 800c88e:	f002 fc41 	bl	800f114 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c892:	2800      	cmp	r0, #0
 800c894:	d03d      	beq.n	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c896:	280a      	cmp	r0, #10
 800c898:	d1f6      	bne.n	800c888 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c89a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c89e:	4453      	add	r3, sl
 800c8a0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c8a4:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c8a8:	eba3 030a 	sub.w	r3, r3, sl
 800c8ac:	3d01      	subs	r5, #1
 800c8ae:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c8b2:	e7e9      	b.n	800c888 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c8b4:	0073      	lsls	r3, r6, #1
 800c8b6:	9309      	str	r3, [sp, #36]	; 0x24
 800c8b8:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c8bc:	fa1f fa86 	uxth.w	sl, r6
 800c8c0:	2d00      	cmp	r5, #0
 800c8c2:	dd29      	ble.n	800c918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c8c4:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c8c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c8ca:	428b      	cmp	r3, r1
 800c8cc:	bfd4      	ite	le
 800c8ce:	2100      	movle	r1, #0
 800c8d0:	2101      	movgt	r1, #1
 800c8d2:	a810      	add	r0, sp, #64	; 0x40
 800c8d4:	f7ff fe9d 	bl	800c612 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c8d8:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800c8dc:	3b01      	subs	r3, #1
 800c8de:	b29b      	uxth	r3, r3
 800c8e0:	455b      	cmp	r3, fp
 800c8e2:	930b      	str	r3, [sp, #44]	; 0x2c
 800c8e4:	d005      	beq.n	800c8f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800c8e6:	7961      	ldrb	r1, [r4, #5]
 800c8e8:	4638      	mov	r0, r7
 800c8ea:	f7f7 f889 	bl	8003a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c8ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c8f0:	e7f4      	b.n	800c8dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800c8f2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c8f6:	4453      	add	r3, sl
 800c8f8:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c8fc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c900:	eba3 030a 	sub.w	r3, r3, sl
 800c904:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c908:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c90c:	3d01      	subs	r5, #1
 800c90e:	2b00      	cmp	r3, #0
 800c910:	d1d6      	bne.n	800c8c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800c912:	b05b      	add	sp, #364	; 0x16c
 800c914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c918:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c91c:	ad44      	add	r5, sp, #272	; 0x110
 800c91e:	f04f 0b00 	mov.w	fp, #0
 800c922:	7c23      	ldrb	r3, [r4, #16]
 800c924:	2b00      	cmp	r3, #0
 800c926:	d067      	beq.n	800c9f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c928:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c92c:	458a      	cmp	sl, r1
 800c92e:	bfd4      	ite	le
 800c930:	2100      	movle	r1, #0
 800c932:	2101      	movgt	r1, #1
 800c934:	a810      	add	r0, sp, #64	; 0x40
 800c936:	f7ff fe6c 	bl	800c612 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c93a:	9b08      	ldr	r3, [sp, #32]
 800c93c:	2b00      	cmp	r3, #0
 800c93e:	d056      	beq.n	800c9ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c940:	7c23      	ldrb	r3, [r4, #16]
 800c942:	9309      	str	r3, [sp, #36]	; 0x24
 800c944:	2258      	movs	r2, #88	; 0x58
 800c946:	4639      	mov	r1, r7
 800c948:	4628      	mov	r0, r5
 800c94a:	f00e feab 	bl	801b6a4 <memcpy>
 800c94e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c950:	2b00      	cmp	r3, #0
 800c952:	d059      	beq.n	800ca08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c954:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800c958:	7922      	ldrb	r2, [r4, #4]
 800c95a:	2a01      	cmp	r2, #1
 800c95c:	d13d      	bne.n	800c9da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800c95e:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800c962:	1ac0      	subs	r0, r0, r3
 800c964:	2302      	movs	r3, #2
 800c966:	fb90 f0f3 	sdiv	r0, r0, r3
 800c96a:	b200      	sxth	r0, r0
 800c96c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c970:	4418      	add	r0, r3
 800c972:	7c23      	ldrb	r3, [r4, #16]
 800c974:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d03a      	beq.n	800c9f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800c97c:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800c980:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800c984:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800c988:	9500      	str	r5, [sp, #0]
 800c98a:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c98e:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c992:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c996:	464a      	mov	r2, r9
 800c998:	2100      	movs	r1, #0
 800c99a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c99c:	f7ff fcc9 	bl	800c332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c9a0:	2800      	cmp	r0, #0
 800c9a2:	d1b6      	bne.n	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c9a4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c9a8:	b2b2      	uxth	r2, r6
 800c9aa:	4611      	mov	r1, r2
 800c9ac:	4413      	add	r3, r2
 800c9ae:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800c9b2:	1a52      	subs	r2, r2, r1
 800c9b4:	7c21      	ldrb	r1, [r4, #16]
 800c9b6:	b21b      	sxth	r3, r3
 800c9b8:	b212      	sxth	r2, r2
 800c9ba:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c9be:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c9c2:	b109      	cbz	r1, 800c9c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800c9c4:	42b2      	cmp	r2, r6
 800c9c6:	dba4      	blt.n	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c9c8:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c9cc:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c9d0:	440a      	add	r2, r1
 800c9d2:	b212      	sxth	r2, r2
 800c9d4:	4293      	cmp	r3, r2
 800c9d6:	dda4      	ble.n	800c922 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800c9d8:	e79b      	b.n	800c912 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c9da:	2a02      	cmp	r2, #2
 800c9dc:	d105      	bne.n	800c9ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800c9de:	7be2      	ldrb	r2, [r4, #15]
 800c9e0:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800c9e4:	1a80      	subs	r0, r0, r2
 800c9e6:	1ac0      	subs	r0, r0, r3
 800c9e8:	e7bf      	b.n	800c96a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800c9ea:	2000      	movs	r0, #0
 800c9ec:	e7be      	b.n	800c96c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c9ee:	7be0      	ldrb	r0, [r4, #15]
 800c9f0:	e7bc      	b.n	800c96c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c9f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c9f6:	e7c3      	b.n	800c980 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800c9f8:	9b08      	ldr	r3, [sp, #32]
 800c9fa:	2b00      	cmp	r3, #0
 800c9fc:	d0f7      	beq.n	800c9ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c9fe:	2258      	movs	r2, #88	; 0x58
 800ca00:	4639      	mov	r1, r7
 800ca02:	4628      	mov	r0, r5
 800ca04:	f00e fe4e 	bl	801b6a4 <memcpy>
 800ca08:	2300      	movs	r3, #0
 800ca0a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ca0e:	6821      	ldr	r1, [r4, #0]
 800ca10:	4628      	mov	r0, r5
 800ca12:	f7ff fc21 	bl	800c258 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ca16:	b203      	sxth	r3, r0
 800ca18:	e79e      	b.n	800c958 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800ca1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ca1a:	b510      	push	{r4, lr}
 800ca1c:	2b02      	cmp	r3, #2
 800ca1e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ca22:	d00b      	beq.n	800ca3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800ca24:	2b03      	cmp	r3, #3
 800ca26:	d00e      	beq.n	800ca46 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800ca28:	2b01      	cmp	r3, #1
 800ca2a:	d001      	beq.n	800ca30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800ca2c:	1860      	adds	r0, r4, r1
 800ca2e:	bd10      	pop	{r4, pc}
 800ca30:	8880      	ldrh	r0, [r0, #4]
 800ca32:	4420      	add	r0, r4
 800ca34:	b200      	sxth	r0, r0
 800ca36:	1a80      	subs	r0, r0, r2
 800ca38:	3801      	subs	r0, #1
 800ca3a:	e7f8      	b.n	800ca2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800ca3c:	8880      	ldrh	r0, [r0, #4]
 800ca3e:	4420      	add	r0, r4
 800ca40:	b200      	sxth	r0, r0
 800ca42:	1a40      	subs	r0, r0, r1
 800ca44:	e7f8      	b.n	800ca38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ca46:	18a0      	adds	r0, r4, r2
 800ca48:	e7f1      	b.n	800ca2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ca4a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ca4a:	b510      	push	{r4, lr}
 800ca4c:	2b02      	cmp	r3, #2
 800ca4e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ca52:	d006      	beq.n	800ca62 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ca54:	2b03      	cmp	r3, #3
 800ca56:	d00a      	beq.n	800ca6e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ca58:	2b01      	cmp	r3, #1
 800ca5a:	bf14      	ite	ne
 800ca5c:	18a0      	addne	r0, r4, r2
 800ca5e:	1860      	addeq	r0, r4, r1
 800ca60:	bd10      	pop	{r4, pc}
 800ca62:	88c0      	ldrh	r0, [r0, #6]
 800ca64:	4420      	add	r0, r4
 800ca66:	b200      	sxth	r0, r0
 800ca68:	1a80      	subs	r0, r0, r2
 800ca6a:	3801      	subs	r0, #1
 800ca6c:	e7f8      	b.n	800ca60 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800ca6e:	88c0      	ldrh	r0, [r0, #6]
 800ca70:	4420      	add	r0, r4
 800ca72:	b200      	sxth	r0, r0
 800ca74:	1a40      	subs	r0, r0, r1
 800ca76:	e7f8      	b.n	800ca6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800ca78 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ca78:	4b01      	ldr	r3, [pc, #4]	; (800ca80 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ca7a:	2200      	movs	r2, #0
 800ca7c:	601a      	str	r2, [r3, #0]
 800ca7e:	4770      	bx	lr
 800ca80:	20008998 	.word	0x20008998

0800ca84 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ca84:	4603      	mov	r3, r0
 800ca86:	b1c8      	cbz	r0, 800cabc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ca88:	0c02      	lsrs	r2, r0, #16
 800ca8a:	0412      	lsls	r2, r2, #16
 800ca8c:	b9a2      	cbnz	r2, 800cab8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ca8e:	0403      	lsls	r3, r0, #16
 800ca90:	2010      	movs	r0, #16
 800ca92:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800ca96:	bf04      	itt	eq
 800ca98:	021b      	lsleq	r3, r3, #8
 800ca9a:	3008      	addeq	r0, #8
 800ca9c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800caa0:	bf04      	itt	eq
 800caa2:	011b      	lsleq	r3, r3, #4
 800caa4:	3004      	addeq	r0, #4
 800caa6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800caaa:	bf04      	itt	eq
 800caac:	009b      	lsleq	r3, r3, #2
 800caae:	3002      	addeq	r0, #2
 800cab0:	2b00      	cmp	r3, #0
 800cab2:	db04      	blt.n	800cabe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800cab4:	3001      	adds	r0, #1
 800cab6:	4770      	bx	lr
 800cab8:	2000      	movs	r0, #0
 800caba:	e7ea      	b.n	800ca92 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800cabc:	2020      	movs	r0, #32
 800cabe:	4770      	bx	lr

0800cac0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800cac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cac4:	b087      	sub	sp, #28
 800cac6:	4681      	mov	r9, r0
 800cac8:	4698      	mov	r8, r3
 800caca:	4610      	mov	r0, r2
 800cacc:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800cad0:	460d      	mov	r5, r1
 800cad2:	b981      	cbnz	r1, 800caf6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800cad4:	b14b      	cbz	r3, 800caea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800cad6:	460b      	mov	r3, r1
 800cad8:	e9cd 4700 	strd	r4, r7, [sp]
 800cadc:	464a      	mov	r2, r9
 800cade:	4641      	mov	r1, r8
 800cae0:	f7ff ffee 	bl	800cac0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cae4:	b007      	add	sp, #28
 800cae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800caea:	f04f 33ff 	mov.w	r3, #4294967295
 800caee:	603b      	str	r3, [r7, #0]
 800caf0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800caf4:	e7f6      	b.n	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800caf6:	fa32 fa01 	lsrs.w	sl, r2, r1
 800cafa:	d107      	bne.n	800cb0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800cafc:	fb09 f602 	mul.w	r6, r9, r2
 800cb00:	fbb6 f0f4 	udiv	r0, r6, r4
 800cb04:	fb04 6610 	mls	r6, r4, r0, r6
 800cb08:	603e      	str	r6, [r7, #0]
 800cb0a:	e7eb      	b.n	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800cb0c:	2601      	movs	r6, #1
 800cb0e:	408e      	lsls	r6, r1
 800cb10:	3e01      	subs	r6, #1
 800cb12:	4016      	ands	r6, r2
 800cb14:	fa09 fb01 	lsl.w	fp, r9, r1
 800cb18:	4630      	mov	r0, r6
 800cb1a:	fbbb f3f4 	udiv	r3, fp, r4
 800cb1e:	9302      	str	r3, [sp, #8]
 800cb20:	fb0a f303 	mul.w	r3, sl, r3
 800cb24:	9303      	str	r3, [sp, #12]
 800cb26:	f7ff ffad 	bl	800ca84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb2a:	464a      	mov	r2, r9
 800cb2c:	460b      	mov	r3, r1
 800cb2e:	e9cd 4700 	strd	r4, r7, [sp]
 800cb32:	4601      	mov	r1, r0
 800cb34:	4630      	mov	r0, r6
 800cb36:	f7ff ffc3 	bl	800cac0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb3a:	9b02      	ldr	r3, [sp, #8]
 800cb3c:	fb04 bb13 	mls	fp, r4, r3, fp
 800cb40:	4606      	mov	r6, r0
 800cb42:	4658      	mov	r0, fp
 800cb44:	eb05 0108 	add.w	r1, r5, r8
 800cb48:	f7ff ff9c 	bl	800ca84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb4c:	ab05      	add	r3, sp, #20
 800cb4e:	e9cd 4300 	strd	r4, r3, [sp]
 800cb52:	465a      	mov	r2, fp
 800cb54:	4603      	mov	r3, r0
 800cb56:	4650      	mov	r0, sl
 800cb58:	f7ff ffb2 	bl	800cac0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb5c:	6839      	ldr	r1, [r7, #0]
 800cb5e:	9a05      	ldr	r2, [sp, #20]
 800cb60:	9b03      	ldr	r3, [sp, #12]
 800cb62:	4411      	add	r1, r2
 800cb64:	fbb1 f2f4 	udiv	r2, r1, r4
 800cb68:	18d3      	adds	r3, r2, r3
 800cb6a:	441e      	add	r6, r3
 800cb6c:	fb04 1412 	mls	r4, r4, r2, r1
 800cb70:	4430      	add	r0, r6
 800cb72:	603c      	str	r4, [r7, #0]
 800cb74:	e7b6      	b.n	800cae4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800cb76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cb76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb7a:	b085      	sub	sp, #20
 800cb7c:	f1b0 0900 	subs.w	r9, r0, #0
 800cb80:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800cb82:	461d      	mov	r5, r3
 800cb84:	bfbf      	itttt	lt
 800cb86:	6823      	ldrlt	r3, [r4, #0]
 800cb88:	425b      	neglt	r3, r3
 800cb8a:	f1c9 0900 	rsblt	r9, r9, #0
 800cb8e:	6023      	strlt	r3, [r4, #0]
 800cb90:	bfb4      	ite	lt
 800cb92:	f04f 36ff 	movlt.w	r6, #4294967295
 800cb96:	2601      	movge	r6, #1
 800cb98:	2a00      	cmp	r2, #0
 800cb9a:	4617      	mov	r7, r2
 800cb9c:	da04      	bge.n	800cba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cb9e:	6823      	ldr	r3, [r4, #0]
 800cba0:	425b      	negs	r3, r3
 800cba2:	4257      	negs	r7, r2
 800cba4:	4276      	negs	r6, r6
 800cba6:	6023      	str	r3, [r4, #0]
 800cba8:	2d00      	cmp	r5, #0
 800cbaa:	4638      	mov	r0, r7
 800cbac:	bfba      	itte	lt
 800cbae:	426d      	neglt	r5, r5
 800cbb0:	f04f 38ff 	movlt.w	r8, #4294967295
 800cbb4:	f04f 0801 	movge.w	r8, #1
 800cbb8:	f7ff ff64 	bl	800ca84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cbbc:	ab03      	add	r3, sp, #12
 800cbbe:	e9cd 5300 	strd	r5, r3, [sp]
 800cbc2:	463a      	mov	r2, r7
 800cbc4:	4603      	mov	r3, r0
 800cbc6:	4648      	mov	r0, r9
 800cbc8:	f7ff ff7a 	bl	800cac0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cbcc:	6823      	ldr	r3, [r4, #0]
 800cbce:	9a03      	ldr	r2, [sp, #12]
 800cbd0:	4546      	cmp	r6, r8
 800cbd2:	441a      	add	r2, r3
 800cbd4:	fb92 f3f5 	sdiv	r3, r2, r5
 800cbd8:	4418      	add	r0, r3
 800cbda:	bf18      	it	ne
 800cbdc:	4240      	negne	r0, r0
 800cbde:	fb05 2313 	mls	r3, r5, r3, r2
 800cbe2:	1c72      	adds	r2, r6, #1
 800cbe4:	6023      	str	r3, [r4, #0]
 800cbe6:	d105      	bne.n	800cbf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cbe8:	2b00      	cmp	r3, #0
 800cbea:	f1c3 0200 	rsb	r2, r3, #0
 800cbee:	db0b      	blt.n	800cc08 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cbf0:	6022      	str	r2, [r4, #0]
 800cbf2:	e006      	b.n	800cc02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbf4:	2e01      	cmp	r6, #1
 800cbf6:	d104      	bne.n	800cc02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbf8:	2b00      	cmp	r3, #0
 800cbfa:	da02      	bge.n	800cc02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbfc:	442b      	add	r3, r5
 800cbfe:	3801      	subs	r0, #1
 800cc00:	6023      	str	r3, [r4, #0]
 800cc02:	b005      	add	sp, #20
 800cc04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc08:	3801      	subs	r0, #1
 800cc0a:	1b52      	subs	r2, r2, r5
 800cc0c:	e7f0      	b.n	800cbf0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800cc10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cc10:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cc14:	4c1c      	ldr	r4, [pc, #112]	; (800cc88 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cc16:	6807      	ldr	r7, [r0, #0]
 800cc18:	69a3      	ldr	r3, [r4, #24]
 800cc1a:	4605      	mov	r5, r0
 800cc1c:	b92b      	cbnz	r3, 800cc2a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cc1e:	6840      	ldr	r0, [r0, #4]
 800cc20:	e9c5 7000 	strd	r7, r0, [r5]
 800cc24:	b004      	add	sp, #16
 800cc26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc2a:	68a2      	ldr	r2, [r4, #8]
 800cc2c:	6820      	ldr	r0, [r4, #0]
 800cc2e:	ae04      	add	r6, sp, #16
 800cc30:	f04f 0802 	mov.w	r8, #2
 800cc34:	fb93 f1f8 	sdiv	r1, r3, r8
 800cc38:	440a      	add	r2, r1
 800cc3a:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cc3e:	69e1      	ldr	r1, [r4, #28]
 800cc40:	9600      	str	r6, [sp, #0]
 800cc42:	463a      	mov	r2, r7
 800cc44:	f7ff ff97 	bl	800cb76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc48:	69a3      	ldr	r3, [r4, #24]
 800cc4a:	686a      	ldr	r2, [r5, #4]
 800cc4c:	6a21      	ldr	r1, [r4, #32]
 800cc4e:	9600      	str	r6, [sp, #0]
 800cc50:	4607      	mov	r7, r0
 800cc52:	6860      	ldr	r0, [r4, #4]
 800cc54:	f7ff ff8f 	bl	800cb76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc58:	6962      	ldr	r2, [r4, #20]
 800cc5a:	69a3      	ldr	r3, [r4, #24]
 800cc5c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cc60:	4442      	add	r2, r8
 800cc62:	9203      	str	r2, [sp, #12]
 800cc64:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cc66:	682a      	ldr	r2, [r5, #0]
 800cc68:	9600      	str	r6, [sp, #0]
 800cc6a:	4407      	add	r7, r0
 800cc6c:	68e0      	ldr	r0, [r4, #12]
 800cc6e:	f7ff ff82 	bl	800cb76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc72:	9600      	str	r6, [sp, #0]
 800cc74:	4680      	mov	r8, r0
 800cc76:	69a3      	ldr	r3, [r4, #24]
 800cc78:	686a      	ldr	r2, [r5, #4]
 800cc7a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800cc7c:	6920      	ldr	r0, [r4, #16]
 800cc7e:	f7ff ff7a 	bl	800cb76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc82:	4440      	add	r0, r8
 800cc84:	e7cc      	b.n	800cc20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cc86:	bf00      	nop
 800cc88:	2000899c 	.word	0x2000899c

0800cc8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cc8c:	b510      	push	{r4, lr}
 800cc8e:	4b07      	ldr	r3, [pc, #28]	; (800ccac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cc90:	781b      	ldrb	r3, [r3, #0]
 800cc92:	2b01      	cmp	r3, #1
 800cc94:	d108      	bne.n	800cca8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800cc96:	4b06      	ldr	r3, [pc, #24]	; (800ccb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cc98:	880c      	ldrh	r4, [r1, #0]
 800cc9a:	881b      	ldrh	r3, [r3, #0]
 800cc9c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cca0:	3b01      	subs	r3, #1
 800cca2:	1b1b      	subs	r3, r3, r4
 800cca4:	8003      	strh	r3, [r0, #0]
 800cca6:	800a      	strh	r2, [r1, #0]
 800cca8:	bd10      	pop	{r4, pc}
 800ccaa:	bf00      	nop
 800ccac:	20008988 	.word	0x20008988
 800ccb0:	2000898c 	.word	0x2000898c

0800ccb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ccb4:	b510      	push	{r4, lr}
 800ccb6:	4b0a      	ldr	r3, [pc, #40]	; (800cce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ccb8:	781b      	ldrb	r3, [r3, #0]
 800ccba:	2b01      	cmp	r3, #1
 800ccbc:	d10e      	bne.n	800ccdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ccbe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ccc2:	8843      	ldrh	r3, [r0, #2]
 800ccc4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ccc8:	8044      	strh	r4, [r0, #2]
 800ccca:	18ca      	adds	r2, r1, r3
 800cccc:	4b05      	ldr	r3, [pc, #20]	; (800cce4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ccce:	881b      	ldrh	r3, [r3, #0]
 800ccd0:	1a9b      	subs	r3, r3, r2
 800ccd2:	8003      	strh	r3, [r0, #0]
 800ccd4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ccd8:	80c3      	strh	r3, [r0, #6]
 800ccda:	8081      	strh	r1, [r0, #4]
 800ccdc:	bd10      	pop	{r4, pc}
 800ccde:	bf00      	nop
 800cce0:	20008988 	.word	0x20008988
 800cce4:	20008984 	.word	0x20008984

0800cce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800cce8:	b510      	push	{r4, lr}
 800ccea:	4b07      	ldr	r3, [pc, #28]	; (800cd08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ccec:	781b      	ldrb	r3, [r3, #0]
 800ccee:	2b01      	cmp	r3, #1
 800ccf0:	d108      	bne.n	800cd04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ccf2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ccf6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ccfa:	8003      	strh	r3, [r0, #0]
 800ccfc:	8893      	ldrh	r3, [r2, #4]
 800ccfe:	3b01      	subs	r3, #1
 800cd00:	1b1b      	subs	r3, r3, r4
 800cd02:	800b      	strh	r3, [r1, #0]
 800cd04:	bd10      	pop	{r4, pc}
 800cd06:	bf00      	nop
 800cd08:	20008988 	.word	0x20008988

0800cd0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cd0c:	b513      	push	{r0, r1, r4, lr}
 800cd0e:	4b08      	ldr	r3, [pc, #32]	; (800cd30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cd10:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd14:	4b07      	ldr	r3, [pc, #28]	; (800cd34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800cd16:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd1a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd1e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cd22:	2400      	movs	r4, #0
 800cd24:	466a      	mov	r2, sp
 800cd26:	9400      	str	r4, [sp, #0]
 800cd28:	f7ff ffde 	bl	800cce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cd2c:	b002      	add	sp, #8
 800cd2e:	bd10      	pop	{r4, pc}
 800cd30:	20008984 	.word	0x20008984
 800cd34:	20008986 	.word	0x20008986

0800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cd38:	b510      	push	{r4, lr}
 800cd3a:	4b0a      	ldr	r3, [pc, #40]	; (800cd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cd3c:	781b      	ldrb	r3, [r3, #0]
 800cd3e:	2b01      	cmp	r3, #1
 800cd40:	460a      	mov	r2, r1
 800cd42:	d10d      	bne.n	800cd60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cd44:	8881      	ldrh	r1, [r0, #4]
 800cd46:	8803      	ldrh	r3, [r0, #0]
 800cd48:	440b      	add	r3, r1
 800cd4a:	4601      	mov	r1, r0
 800cd4c:	3b01      	subs	r3, #1
 800cd4e:	f821 3b02 	strh.w	r3, [r1], #2
 800cd52:	f7ff ffc9 	bl	800cce8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cd56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd5a:	88c2      	ldrh	r2, [r0, #6]
 800cd5c:	8082      	strh	r2, [r0, #4]
 800cd5e:	80c3      	strh	r3, [r0, #6]
 800cd60:	bd10      	pop	{r4, pc}
 800cd62:	bf00      	nop
 800cd64:	20008988 	.word	0x20008988

0800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cd68:	b507      	push	{r0, r1, r2, lr}
 800cd6a:	4b09      	ldr	r3, [pc, #36]	; (800cd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cd6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd70:	4b08      	ldr	r3, [pc, #32]	; (800cd94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800cd72:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd76:	2100      	movs	r1, #0
 800cd78:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd7c:	9100      	str	r1, [sp, #0]
 800cd7e:	4669      	mov	r1, sp
 800cd80:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cd84:	f7ff ffd8 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800cd88:	b003      	add	sp, #12
 800cd8a:	f85d fb04 	ldr.w	pc, [sp], #4
 800cd8e:	bf00      	nop
 800cd90:	20008984 	.word	0x20008984
 800cd94:	20008986 	.word	0x20008986

0800cd98 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cd98:	4b06      	ldr	r3, [pc, #24]	; (800cdb4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cd9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd9e:	4b06      	ldr	r3, [pc, #24]	; (800cdb8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cda0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800cda4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cda8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800cdac:	2100      	movs	r1, #0
 800cdae:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800cdb2:	4770      	bx	lr
 800cdb4:	20008984 	.word	0x20008984
 800cdb8:	20008986 	.word	0x20008986

0800cdbc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cdbc:	4b03      	ldr	r3, [pc, #12]	; (800cdcc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cdbe:	6818      	ldr	r0, [r3, #0]
 800cdc0:	b110      	cbz	r0, 800cdc8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cdc2:	6803      	ldr	r3, [r0, #0]
 800cdc4:	699b      	ldr	r3, [r3, #24]
 800cdc6:	4718      	bx	r3
 800cdc8:	4770      	bx	lr
 800cdca:	bf00      	nop
 800cdcc:	200089cc 	.word	0x200089cc

0800cdd0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cdd0:	4770      	bx	lr
	...

0800cdd4 <_ZN8touchgfx11Application4drawEv>:
 800cdd4:	b507      	push	{r0, r1, r2, lr}
 800cdd6:	4b09      	ldr	r3, [pc, #36]	; (800cdfc <_ZN8touchgfx11Application4drawEv+0x28>)
 800cdd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cddc:	4b08      	ldr	r3, [pc, #32]	; (800ce00 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cdde:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cde2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cde6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cdea:	6803      	ldr	r3, [r0, #0]
 800cdec:	2100      	movs	r1, #0
 800cdee:	9100      	str	r1, [sp, #0]
 800cdf0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cdf2:	4669      	mov	r1, sp
 800cdf4:	4798      	blx	r3
 800cdf6:	b003      	add	sp, #12
 800cdf8:	f85d fb04 	ldr.w	pc, [sp], #4
 800cdfc:	20008984 	.word	0x20008984
 800ce00:	20008986 	.word	0x20008986

0800ce04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ce04:	4b03      	ldr	r3, [pc, #12]	; (800ce14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ce06:	6818      	ldr	r0, [r3, #0]
 800ce08:	b110      	cbz	r0, 800ce10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ce0a:	6803      	ldr	r3, [r0, #0]
 800ce0c:	69db      	ldr	r3, [r3, #28]
 800ce0e:	4718      	bx	r3
 800ce10:	4770      	bx	lr
 800ce12:	bf00      	nop
 800ce14:	200089cc 	.word	0x200089cc

0800ce18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ce18:	4b03      	ldr	r3, [pc, #12]	; (800ce28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ce1a:	6818      	ldr	r0, [r3, #0]
 800ce1c:	b110      	cbz	r0, 800ce24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ce1e:	6803      	ldr	r3, [r0, #0]
 800ce20:	6a1b      	ldr	r3, [r3, #32]
 800ce22:	4718      	bx	r3
 800ce24:	4770      	bx	lr
 800ce26:	bf00      	nop
 800ce28:	200089cc 	.word	0x200089cc

0800ce2c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ce2c:	4b03      	ldr	r3, [pc, #12]	; (800ce3c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ce2e:	6818      	ldr	r0, [r3, #0]
 800ce30:	b110      	cbz	r0, 800ce38 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ce32:	6803      	ldr	r3, [r0, #0]
 800ce34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce36:	4718      	bx	r3
 800ce38:	4770      	bx	lr
 800ce3a:	bf00      	nop
 800ce3c:	200089cc 	.word	0x200089cc

0800ce40 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ce40:	b570      	push	{r4, r5, r6, lr}
 800ce42:	4d34      	ldr	r5, [pc, #208]	; (800cf14 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800ce44:	4604      	mov	r4, r0
 800ce46:	6828      	ldr	r0, [r5, #0]
 800ce48:	b140      	cbz	r0, 800ce5c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ce4a:	7a03      	ldrb	r3, [r0, #8]
 800ce4c:	b933      	cbnz	r3, 800ce5c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ce4e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800ce52:	6803      	ldr	r3, [r0, #0]
 800ce54:	689b      	ldr	r3, [r3, #8]
 800ce56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce5a:	4718      	bx	r3
 800ce5c:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800ce60:	b97b      	cbnz	r3, 800ce82 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce62:	b170      	cbz	r0, 800ce82 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce64:	7a03      	ldrb	r3, [r0, #8]
 800ce66:	b163      	cbz	r3, 800ce82 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce68:	4b2b      	ldr	r3, [pc, #172]	; (800cf18 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ce6a:	6818      	ldr	r0, [r3, #0]
 800ce6c:	b110      	cbz	r0, 800ce74 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ce6e:	6803      	ldr	r3, [r0, #0]
 800ce70:	691b      	ldr	r3, [r3, #16]
 800ce72:	4798      	blx	r3
 800ce74:	6828      	ldr	r0, [r5, #0]
 800ce76:	6803      	ldr	r3, [r0, #0]
 800ce78:	68db      	ldr	r3, [r3, #12]
 800ce7a:	4798      	blx	r3
 800ce7c:	2301      	movs	r3, #1
 800ce7e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800ce82:	2500      	movs	r5, #0
 800ce84:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ce88:	42a8      	cmp	r0, r5
 800ce8a:	dd0c      	ble.n	800cea6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ce8c:	1963      	adds	r3, r4, r5
 800ce8e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ce92:	b132      	cbz	r2, 800cea2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ce94:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ce98:	4413      	add	r3, r2
 800ce9a:	6858      	ldr	r0, [r3, #4]
 800ce9c:	6803      	ldr	r3, [r0, #0]
 800ce9e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800cea0:	4798      	blx	r3
 800cea2:	3501      	adds	r5, #1
 800cea4:	e7ee      	b.n	800ce84 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800cea6:	2300      	movs	r3, #0
 800cea8:	461a      	mov	r2, r3
 800ceaa:	4298      	cmp	r0, r3
 800ceac:	d114      	bne.n	800ced8 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800ceae:	1d25      	adds	r5, r4, #4
 800ceb0:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ceb4:	1e48      	subs	r0, r1, #1
 800ceb6:	b280      	uxth	r0, r0
 800ceb8:	4291      	cmp	r1, r2
 800ceba:	dd24      	ble.n	800cf06 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800cebc:	4288      	cmp	r0, r1
 800cebe:	d2fb      	bcs.n	800ceb8 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800cec0:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800cec4:	3304      	adds	r3, #4
 800cec6:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ceca:	428b      	cmp	r3, r1
 800cecc:	d018      	beq.n	800cf00 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800cece:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ced2:	f843 6c04 	str.w	r6, [r3, #-4]
 800ced6:	e7f8      	b.n	800ceca <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800ced8:	18e1      	adds	r1, r4, r3
 800ceda:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800cede:	b16d      	cbz	r5, 800cefc <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800cee0:	429a      	cmp	r2, r3
 800cee2:	d00a      	beq.n	800cefa <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800cee4:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800cee8:	4431      	add	r1, r6
 800ceea:	684e      	ldr	r6, [r1, #4]
 800ceec:	b291      	uxth	r1, r2
 800ceee:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800cef2:	604e      	str	r6, [r1, #4]
 800cef4:	18a1      	adds	r1, r4, r2
 800cef6:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800cefa:	3201      	adds	r2, #1
 800cefc:	3301      	adds	r3, #1
 800cefe:	e7d4      	b.n	800ceaa <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800cf00:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800cf04:	e7d4      	b.n	800ceb0 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800cf06:	4b04      	ldr	r3, [pc, #16]	; (800cf18 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800cf08:	6818      	ldr	r0, [r3, #0]
 800cf0a:	b110      	cbz	r0, 800cf12 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800cf0c:	6803      	ldr	r3, [r0, #0]
 800cf0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf10:	e7a1      	b.n	800ce56 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cf12:	bd70      	pop	{r4, r5, r6, pc}
 800cf14:	200089d0 	.word	0x200089d0
 800cf18:	200089cc 	.word	0x200089cc

0800cf1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cf1c:	b570      	push	{r4, r5, r6, lr}
 800cf1e:	4606      	mov	r6, r0
 800cf20:	460c      	mov	r4, r1
 800cf22:	b929      	cbnz	r1, 800cf30 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800cf24:	4b0c      	ldr	r3, [pc, #48]	; (800cf58 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800cf26:	4a0d      	ldr	r2, [pc, #52]	; (800cf5c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800cf28:	480d      	ldr	r0, [pc, #52]	; (800cf60 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800cf2a:	2164      	movs	r1, #100	; 0x64
 800cf2c:	f00e fb3c 	bl	801b5a8 <__assert_func>
 800cf30:	4d0c      	ldr	r5, [pc, #48]	; (800cf64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800cf32:	2300      	movs	r3, #0
 800cf34:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cf38:	6828      	ldr	r0, [r5, #0]
 800cf3a:	b110      	cbz	r0, 800cf42 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800cf3c:	6803      	ldr	r3, [r0, #0]
 800cf3e:	695b      	ldr	r3, [r3, #20]
 800cf40:	4798      	blx	r3
 800cf42:	602c      	str	r4, [r5, #0]
 800cf44:	6823      	ldr	r3, [r4, #0]
 800cf46:	4620      	mov	r0, r4
 800cf48:	68db      	ldr	r3, [r3, #12]
 800cf4a:	4798      	blx	r3
 800cf4c:	6833      	ldr	r3, [r6, #0]
 800cf4e:	4630      	mov	r0, r6
 800cf50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cf52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf56:	4718      	bx	r3
 800cf58:	0801e6e8 	.word	0x0801e6e8
 800cf5c:	0801e7b8 	.word	0x0801e7b8
 800cf60:	0801e6f2 	.word	0x0801e6f2
 800cf64:	200089cc 	.word	0x200089cc

0800cf68 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cf68:	b510      	push	{r4, lr}
 800cf6a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cf6e:	888a      	ldrh	r2, [r1, #4]
 800cf70:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cf74:	4422      	add	r2, r4
 800cf76:	b212      	sxth	r2, r2
 800cf78:	4293      	cmp	r3, r2
 800cf7a:	da15      	bge.n	800cfa8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf7c:	8882      	ldrh	r2, [r0, #4]
 800cf7e:	4413      	add	r3, r2
 800cf80:	b21b      	sxth	r3, r3
 800cf82:	429c      	cmp	r4, r3
 800cf84:	da10      	bge.n	800cfa8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf86:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cf8a:	88c9      	ldrh	r1, [r1, #6]
 800cf8c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cf90:	4419      	add	r1, r3
 800cf92:	b209      	sxth	r1, r1
 800cf94:	428a      	cmp	r2, r1
 800cf96:	da07      	bge.n	800cfa8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf98:	88c0      	ldrh	r0, [r0, #6]
 800cf9a:	4410      	add	r0, r2
 800cf9c:	b200      	sxth	r0, r0
 800cf9e:	4283      	cmp	r3, r0
 800cfa0:	bfac      	ite	ge
 800cfa2:	2000      	movge	r0, #0
 800cfa4:	2001      	movlt	r0, #1
 800cfa6:	bd10      	pop	{r4, pc}
 800cfa8:	2000      	movs	r0, #0
 800cfaa:	e7fc      	b.n	800cfa6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cfac <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cfac:	b570      	push	{r4, r5, r6, lr}
 800cfae:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cfb2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cfb6:	42ac      	cmp	r4, r5
 800cfb8:	db18      	blt.n	800cfec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cfba:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800cfbe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cfc2:	429a      	cmp	r2, r3
 800cfc4:	db12      	blt.n	800cfec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cfc6:	8886      	ldrh	r6, [r0, #4]
 800cfc8:	4435      	add	r5, r6
 800cfca:	888e      	ldrh	r6, [r1, #4]
 800cfcc:	4434      	add	r4, r6
 800cfce:	b22d      	sxth	r5, r5
 800cfd0:	b224      	sxth	r4, r4
 800cfd2:	42a5      	cmp	r5, r4
 800cfd4:	db0a      	blt.n	800cfec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cfd6:	88c0      	ldrh	r0, [r0, #6]
 800cfd8:	4418      	add	r0, r3
 800cfda:	88cb      	ldrh	r3, [r1, #6]
 800cfdc:	441a      	add	r2, r3
 800cfde:	b200      	sxth	r0, r0
 800cfe0:	b212      	sxth	r2, r2
 800cfe2:	4290      	cmp	r0, r2
 800cfe4:	bfb4      	ite	lt
 800cfe6:	2000      	movlt	r0, #0
 800cfe8:	2001      	movge	r0, #1
 800cfea:	bd70      	pop	{r4, r5, r6, pc}
 800cfec:	2000      	movs	r0, #0
 800cfee:	e7fc      	b.n	800cfea <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800cff0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cff2:	4604      	mov	r4, r0
 800cff4:	4608      	mov	r0, r1
 800cff6:	460d      	mov	r5, r1
 800cff8:	f7fd fa43 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cffc:	b978      	cbnz	r0, 800d01e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cffe:	4620      	mov	r0, r4
 800d000:	f7fd fa3f 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d004:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d008:	b150      	cbz	r0, 800d020 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d00a:	8026      	strh	r6, [r4, #0]
 800d00c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d010:	8063      	strh	r3, [r4, #2]
 800d012:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d016:	80a3      	strh	r3, [r4, #4]
 800d018:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d01c:	80e3      	strh	r3, [r4, #6]
 800d01e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d020:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d024:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d028:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d02c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d030:	88ed      	ldrh	r5, [r5, #6]
 800d032:	42b1      	cmp	r1, r6
 800d034:	460f      	mov	r7, r1
 800d036:	bfa8      	it	ge
 800d038:	4637      	movge	r7, r6
 800d03a:	4293      	cmp	r3, r2
 800d03c:	4618      	mov	r0, r3
 800d03e:	4466      	add	r6, ip
 800d040:	bfa8      	it	ge
 800d042:	4610      	movge	r0, r2
 800d044:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d048:	8027      	strh	r7, [r4, #0]
 800d04a:	442a      	add	r2, r5
 800d04c:	88e5      	ldrh	r5, [r4, #6]
 800d04e:	8060      	strh	r0, [r4, #2]
 800d050:	4461      	add	r1, ip
 800d052:	442b      	add	r3, r5
 800d054:	b236      	sxth	r6, r6
 800d056:	b209      	sxth	r1, r1
 800d058:	b212      	sxth	r2, r2
 800d05a:	b21b      	sxth	r3, r3
 800d05c:	428e      	cmp	r6, r1
 800d05e:	bfac      	ite	ge
 800d060:	ebc7 0106 	rsbge	r1, r7, r6
 800d064:	ebc7 0101 	rsblt	r1, r7, r1
 800d068:	429a      	cmp	r2, r3
 800d06a:	bfac      	ite	ge
 800d06c:	ebc0 0202 	rsbge	r2, r0, r2
 800d070:	ebc0 0203 	rsblt	r2, r0, r3
 800d074:	80a1      	strh	r1, [r4, #4]
 800d076:	80e2      	strh	r2, [r4, #6]
 800d078:	e7d1      	b.n	800d01e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d07c <_ZN8touchgfx11Application11getInstanceEv>:
 800d07c:	4b01      	ldr	r3, [pc, #4]	; (800d084 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d07e:	6818      	ldr	r0, [r3, #0]
 800d080:	4770      	bx	lr
 800d082:	bf00      	nop
 800d084:	200089dc 	.word	0x200089dc

0800d088 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800d088:	2300      	movs	r3, #0
 800d08a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d08e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800d092:	30a8      	adds	r0, #168	; 0xa8
 800d094:	f802 3b01 	strb.w	r3, [r2], #1
 800d098:	4282      	cmp	r2, r0
 800d09a:	d1fb      	bne.n	800d094 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800d09c:	4770      	bx	lr

0800d09e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d09e:	4603      	mov	r3, r0
 800d0a0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d0a4:	2200      	movs	r2, #0
 800d0a6:	801a      	strh	r2, [r3, #0]
 800d0a8:	805a      	strh	r2, [r3, #2]
 800d0aa:	809a      	strh	r2, [r3, #4]
 800d0ac:	80da      	strh	r2, [r3, #6]
 800d0ae:	3308      	adds	r3, #8
 800d0b0:	428b      	cmp	r3, r1
 800d0b2:	d1f8      	bne.n	800d0a6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d0b4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d0b8:	4770      	bx	lr
	...

0800d0bc <_ZN8touchgfx11ApplicationC1Ev>:
 800d0bc:	b570      	push	{r4, r5, r6, lr}
 800d0be:	4b1a      	ldr	r3, [pc, #104]	; (800d128 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800d0c0:	6003      	str	r3, [r0, #0]
 800d0c2:	2500      	movs	r5, #0
 800d0c4:	4604      	mov	r4, r0
 800d0c6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800d0ca:	30a8      	adds	r0, #168	; 0xa8
 800d0cc:	f7ff ffe7 	bl	800d09e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d0d0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800d0d4:	f7ff ffe3 	bl	800d09e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d0d8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800d0dc:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800d0e0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800d0e4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800d0e8:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800d0ec:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800d0f0:	490e      	ldr	r1, [pc, #56]	; (800d12c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800d0f2:	480f      	ldr	r0, [pc, #60]	; (800d130 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800d0f4:	4e0f      	ldr	r6, [pc, #60]	; (800d134 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d0f6:	f00e f921 	bl	801b33c <CRC_Lock>
 800d0fa:	4b0f      	ldr	r3, [pc, #60]	; (800d138 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d0fc:	b158      	cbz	r0, 800d116 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800d0fe:	801d      	strh	r5, [r3, #0]
 800d100:	4a0e      	ldr	r2, [pc, #56]	; (800d13c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d102:	2300      	movs	r3, #0
 800d104:	6013      	str	r3, [r2, #0]
 800d106:	4a0e      	ldr	r2, [pc, #56]	; (800d140 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800d108:	6033      	str	r3, [r6, #0]
 800d10a:	4620      	mov	r0, r4
 800d10c:	6013      	str	r3, [r2, #0]
 800d10e:	f7ff ffbb 	bl	800d088 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800d112:	4620      	mov	r0, r4
 800d114:	bd70      	pop	{r4, r5, r6, pc}
 800d116:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d11a:	2002      	movs	r0, #2
 800d11c:	801a      	strh	r2, [r3, #0]
 800d11e:	6030      	str	r0, [r6, #0]
 800d120:	f001 fa76 	bl	800e610 <_ZN8touchgfx6Screen4drawEv>
 800d124:	e7ec      	b.n	800d100 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800d126:	bf00      	nop
 800d128:	0801e77c 	.word	0x0801e77c
 800d12c:	b5e8b5cd 	.word	0xb5e8b5cd
 800d130:	f407a5c2 	.word	0xf407a5c2
 800d134:	200089cc 	.word	0x200089cc
 800d138:	20000018 	.word	0x20000018
 800d13c:	200089dc 	.word	0x200089dc
 800d140:	200089d0 	.word	0x200089d0

0800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d144:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800d148:	428b      	cmp	r3, r1
 800d14a:	b510      	push	{r4, lr}
 800d14c:	d90e      	bls.n	800d16c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800d14e:	3b01      	subs	r3, #1
 800d150:	b29b      	uxth	r3, r3
 800d152:	428b      	cmp	r3, r1
 800d154:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800d158:	d908      	bls.n	800d16c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800d15a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d15e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d162:	681a      	ldr	r2, [r3, #0]
 800d164:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d168:	685a      	ldr	r2, [r3, #4]
 800d16a:	6062      	str	r2, [r4, #4]
 800d16c:	bd10      	pop	{r4, pc}
	...

0800d170 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d170:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d172:	466b      	mov	r3, sp
 800d174:	e883 0006 	stmia.w	r3, {r1, r2}
 800d178:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d17c:	2a07      	cmp	r2, #7
 800d17e:	4604      	mov	r4, r0
 800d180:	d906      	bls.n	800d190 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d182:	4b09      	ldr	r3, [pc, #36]	; (800d1a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d184:	4a09      	ldr	r2, [pc, #36]	; (800d1ac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d186:	480a      	ldr	r0, [pc, #40]	; (800d1b0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d188:	f240 118f 	movw	r1, #399	; 0x18f
 800d18c:	f00e fa0c 	bl	801b5a8 <__assert_func>
 800d190:	1c51      	adds	r1, r2, #1
 800d192:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d196:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d19a:	cb03      	ldmia	r3!, {r0, r1}
 800d19c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d1a0:	6069      	str	r1, [r5, #4]
 800d1a2:	b003      	add	sp, #12
 800d1a4:	bd30      	pop	{r4, r5, pc}
 800d1a6:	bf00      	nop
 800d1a8:	0801e71c 	.word	0x0801e71c
 800d1ac:	0801e7fc 	.word	0x0801e7fc
 800d1b0:	0801e74b 	.word	0x0801e74b

0800d1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1b8:	b08d      	sub	sp, #52	; 0x34
 800d1ba:	ac08      	add	r4, sp, #32
 800d1bc:	4683      	mov	fp, r0
 800d1be:	4620      	mov	r0, r4
 800d1c0:	e884 0006 	stmia.w	r4, {r1, r2}
 800d1c4:	f7fd f95d 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1c8:	2800      	cmp	r0, #0
 800d1ca:	d16a      	bne.n	800d2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d1cc:	9402      	str	r4, [sp, #8]
 800d1ce:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800d1d2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d1d6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800d1da:	2400      	movs	r4, #0
 800d1dc:	9301      	str	r3, [sp, #4]
 800d1de:	36a0      	adds	r6, #160	; 0xa0
 800d1e0:	42a5      	cmp	r5, r4
 800d1e2:	d00d      	beq.n	800d200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800d1e4:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800d1e8:	9802      	ldr	r0, [sp, #8]
 800d1ea:	f7ff fedf 	bl	800cfac <_ZNK8touchgfx4Rect8includesERKS0_>
 800d1ee:	b128      	cbz	r0, 800d1fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800d1f0:	1e69      	subs	r1, r5, #1
 800d1f2:	1b09      	subs	r1, r1, r4
 800d1f4:	b289      	uxth	r1, r1
 800d1f6:	9801      	ldr	r0, [sp, #4]
 800d1f8:	f7ff ffa4 	bl	800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d1fc:	3401      	adds	r4, #1
 800d1fe:	e7ef      	b.n	800d1e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d200:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d204:	9703      	str	r7, [sp, #12]
 800d206:	1e7b      	subs	r3, r7, #1
 800d208:	9300      	str	r3, [sp, #0]
 800d20a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800d20e:	2400      	movs	r4, #0
 800d210:	4655      	mov	r5, sl
 800d212:	9704      	str	r7, [sp, #16]
 800d214:	4626      	mov	r6, r4
 800d216:	9b04      	ldr	r3, [sp, #16]
 800d218:	2b00      	cmp	r3, #0
 800d21a:	d078      	beq.n	800d30e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800d21c:	9902      	ldr	r1, [sp, #8]
 800d21e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800d222:	f7ff fea1 	bl	800cf68 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d226:	b360      	cbz	r0, 800d282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800d228:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800d22c:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800d230:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800d234:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800d238:	45e6      	cmp	lr, ip
 800d23a:	db35      	blt.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800d23c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800d240:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800d244:	4472      	add	r2, lr
 800d246:	4463      	add	r3, ip
 800d248:	b212      	sxth	r2, r2
 800d24a:	b21b      	sxth	r3, r3
 800d24c:	429a      	cmp	r2, r3
 800d24e:	dc2b      	bgt.n	800d2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800d250:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800d254:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d258:	fa1f f288 	uxth.w	r2, r8
 800d25c:	4413      	add	r3, r2
 800d25e:	b29b      	uxth	r3, r3
 800d260:	45c1      	cmp	r9, r8
 800d262:	fa0f fe83 	sxth.w	lr, r3
 800d266:	fa1f fc89 	uxth.w	ip, r9
 800d26a:	db0f      	blt.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800d26c:	eba3 030c 	sub.w	r3, r3, ip
 800d270:	1ac9      	subs	r1, r1, r3
 800d272:	b209      	sxth	r1, r1
 800d274:	2900      	cmp	r1, #0
 800d276:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d27a:	dd12      	ble.n	800d2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d27c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800d280:	4604      	mov	r4, r0
 800d282:	9b04      	ldr	r3, [sp, #16]
 800d284:	3b01      	subs	r3, #1
 800d286:	9304      	str	r3, [sp, #16]
 800d288:	3d08      	subs	r5, #8
 800d28a:	e7c4      	b.n	800d216 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800d28c:	4461      	add	r1, ip
 800d28e:	b209      	sxth	r1, r1
 800d290:	4571      	cmp	r1, lr
 800d292:	dc3a      	bgt.n	800d30a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800d294:	eba2 020c 	sub.w	r2, r2, ip
 800d298:	b212      	sxth	r2, r2
 800d29a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d29e:	2a00      	cmp	r2, #0
 800d2a0:	dcee      	bgt.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800d2a2:	b00d      	add	sp, #52	; 0x34
 800d2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2a8:	45c1      	cmp	r9, r8
 800d2aa:	db2e      	blt.n	800d30a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800d2ac:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800d2b0:	4499      	add	r9, r3
 800d2b2:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800d2b6:	4498      	add	r8, r3
 800d2b8:	fa0f f989 	sxth.w	r9, r9
 800d2bc:	fa0f f888 	sxth.w	r8, r8
 800d2c0:	45c1      	cmp	r9, r8
 800d2c2:	dc22      	bgt.n	800d30a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800d2c4:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800d2c8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800d2cc:	fa1f f28c 	uxth.w	r2, ip
 800d2d0:	4413      	add	r3, r2
 800d2d2:	b29b      	uxth	r3, r3
 800d2d4:	45e6      	cmp	lr, ip
 800d2d6:	fa1f f88e 	uxth.w	r8, lr
 800d2da:	fa0f f983 	sxth.w	r9, r3
 800d2de:	db0a      	blt.n	800d2f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800d2e0:	eba3 0308 	sub.w	r3, r3, r8
 800d2e4:	1ac9      	subs	r1, r1, r3
 800d2e6:	b209      	sxth	r1, r1
 800d2e8:	2900      	cmp	r1, #0
 800d2ea:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d2ee:	ddd8      	ble.n	800d2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d2f0:	f8ad 9020 	strh.w	r9, [sp, #32]
 800d2f4:	e7c4      	b.n	800d280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800d2f6:	4441      	add	r1, r8
 800d2f8:	b209      	sxth	r1, r1
 800d2fa:	4549      	cmp	r1, r9
 800d2fc:	dc05      	bgt.n	800d30a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800d2fe:	eba2 0208 	sub.w	r2, r2, r8
 800d302:	b212      	sxth	r2, r2
 800d304:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800d308:	e7c9      	b.n	800d29e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d30a:	4606      	mov	r6, r0
 800d30c:	e7b9      	b.n	800d282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800d30e:	2c00      	cmp	r4, #0
 800d310:	f47f af7d 	bne.w	800d20e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800d314:	2e00      	cmp	r6, #0
 800d316:	f000 81dd 	beq.w	800d6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d31a:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800d31e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800d322:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800d326:	b2b9      	uxth	r1, r7
 800d328:	9104      	str	r1, [sp, #16]
 800d32a:	9804      	ldr	r0, [sp, #16]
 800d32c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d330:	4401      	add	r1, r0
 800d332:	b2b3      	uxth	r3, r6
 800d334:	b289      	uxth	r1, r1
 800d336:	441a      	add	r2, r3
 800d338:	9105      	str	r1, [sp, #20]
 800d33a:	b292      	uxth	r2, r2
 800d33c:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800d340:	fa0f f882 	sxth.w	r8, r2
 800d344:	4655      	mov	r5, sl
 800d346:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800d34a:	9b03      	ldr	r3, [sp, #12]
 800d34c:	2b00      	cmp	r3, #0
 800d34e:	d054      	beq.n	800d3fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800d350:	9902      	ldr	r1, [sp, #8]
 800d352:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800d356:	f7ff fe07 	bl	800cf68 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d35a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d35e:	b1d8      	cbz	r0, 800d398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d360:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800d364:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800d368:	4576      	cmp	r6, lr
 800d36a:	dc26      	bgt.n	800d3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d36c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800d370:	44f4      	add	ip, lr
 800d372:	fa0f fc8c 	sxth.w	ip, ip
 800d376:	45e0      	cmp	r8, ip
 800d378:	db1f      	blt.n	800d3ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d37a:	428f      	cmp	r7, r1
 800d37c:	fa1f fc81 	uxth.w	ip, r1
 800d380:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800d384:	dc0f      	bgt.n	800d3a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800d386:	9805      	ldr	r0, [sp, #20]
 800d388:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800d38c:	eba0 0c0c 	sub.w	ip, r0, ip
 800d390:	eba1 010c 	sub.w	r1, r1, ip
 800d394:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800d398:	4620      	mov	r0, r4
 800d39a:	9903      	ldr	r1, [sp, #12]
 800d39c:	3901      	subs	r1, #1
 800d39e:	9103      	str	r1, [sp, #12]
 800d3a0:	3d08      	subs	r5, #8
 800d3a2:	4604      	mov	r4, r0
 800d3a4:	e7cf      	b.n	800d346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800d3a6:	4461      	add	r1, ip
 800d3a8:	b209      	sxth	r1, r1
 800d3aa:	4549      	cmp	r1, r9
 800d3ac:	dcf5      	bgt.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d3ae:	9904      	ldr	r1, [sp, #16]
 800d3b0:	eba1 0c0c 	sub.w	ip, r1, ip
 800d3b4:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800d3b8:	e7ee      	b.n	800d398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d3ba:	428f      	cmp	r7, r1
 800d3bc:	dced      	bgt.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d3be:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800d3c2:	4461      	add	r1, ip
 800d3c4:	b209      	sxth	r1, r1
 800d3c6:	4589      	cmp	r9, r1
 800d3c8:	dbe7      	blt.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d3ca:	4576      	cmp	r6, lr
 800d3cc:	fa1f fc8e 	uxth.w	ip, lr
 800d3d0:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800d3d4:	dc08      	bgt.n	800d3e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800d3d6:	eba2 0c0c 	sub.w	ip, r2, ip
 800d3da:	eba1 010c 	sub.w	r1, r1, ip
 800d3de:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800d3e2:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800d3e6:	e7d7      	b.n	800d398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d3e8:	4461      	add	r1, ip
 800d3ea:	b209      	sxth	r1, r1
 800d3ec:	4588      	cmp	r8, r1
 800d3ee:	dbd4      	blt.n	800d39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d3f0:	eba3 0c0c 	sub.w	ip, r3, ip
 800d3f4:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800d3f8:	e7ce      	b.n	800d398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d3fa:	2c00      	cmp	r4, #0
 800d3fc:	f000 816a 	beq.w	800d6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d400:	9b00      	ldr	r3, [sp, #0]
 800d402:	3301      	adds	r3, #1
 800d404:	f000 8166 	beq.w	800d6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800d408:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800d40c:	4621      	mov	r1, r4
 800d40e:	9802      	ldr	r0, [sp, #8]
 800d410:	f7ff fdcc 	bl	800cfac <_ZNK8touchgfx4Rect8includesERKS0_>
 800d414:	b120      	cbz	r0, 800d420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800d416:	f8bd 1000 	ldrh.w	r1, [sp]
 800d41a:	9801      	ldr	r0, [sp, #4]
 800d41c:	f7ff fe92 	bl	800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d420:	9902      	ldr	r1, [sp, #8]
 800d422:	4620      	mov	r0, r4
 800d424:	f7ff fda0 	bl	800cf68 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d428:	2800      	cmp	r0, #0
 800d42a:	f000 809b 	beq.w	800d564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800d42e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800d432:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800d436:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800d43a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800d43e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d442:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800d446:	fa1f f288 	uxth.w	r2, r8
 800d44a:	19d5      	adds	r5, r2, r7
 800d44c:	fa1f f985 	uxth.w	r9, r5
 800d450:	fa0f f589 	sxth.w	r5, r9
 800d454:	b2a1      	uxth	r1, r4
 800d456:	440b      	add	r3, r1
 800d458:	9503      	str	r5, [sp, #12]
 800d45a:	45a0      	cmp	r8, r4
 800d45c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800d460:	9507      	str	r5, [sp, #28]
 800d462:	b29b      	uxth	r3, r3
 800d464:	f340 809d 	ble.w	800d5a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d468:	1a52      	subs	r2, r2, r1
 800d46a:	b292      	uxth	r2, r2
 800d46c:	4584      	cmp	ip, r0
 800d46e:	fa0f fe83 	sxth.w	lr, r3
 800d472:	b215      	sxth	r5, r2
 800d474:	dd2f      	ble.n	800d4d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800d476:	9e00      	ldr	r6, [sp, #0]
 800d478:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d47c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800d480:	9e03      	ldr	r6, [sp, #12]
 800d482:	eba6 060e 	sub.w	r6, r6, lr
 800d486:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800d48a:	fa1f fc8c 	uxth.w	ip, ip
 800d48e:	b280      	uxth	r0, r0
 800d490:	ebac 0300 	sub.w	r3, ip, r0
 800d494:	448c      	add	ip, r1
 800d496:	4470      	add	r0, lr
 800d498:	b29b      	uxth	r3, r3
 800d49a:	fa0f fc8c 	sxth.w	ip, ip
 800d49e:	b200      	sxth	r0, r0
 800d4a0:	b21c      	sxth	r4, r3
 800d4a2:	ebac 0000 	sub.w	r0, ip, r0
 800d4a6:	4366      	muls	r6, r4
 800d4a8:	4368      	muls	r0, r5
 800d4aa:	4286      	cmp	r6, r0
 800d4ac:	db09      	blt.n	800d4c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800d4ae:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800d4b2:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800d4b6:	4417      	add	r7, r2
 800d4b8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d4bc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d4c0:	e685      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d4c2:	440b      	add	r3, r1
 800d4c4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d4c8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800d4cc:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800d4d0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d4d4:	e67b      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d4d6:	9e03      	ldr	r6, [sp, #12]
 800d4d8:	45b6      	cmp	lr, r6
 800d4da:	da28      	bge.n	800d52e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800d4dc:	9b00      	ldr	r3, [sp, #0]
 800d4de:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800d4e2:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800d4e6:	eb04 030c 	add.w	r3, r4, ip
 800d4ea:	fa1f f883 	uxth.w	r8, r3
 800d4ee:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800d4f2:	4403      	add	r3, r0
 800d4f4:	eba3 0308 	sub.w	r3, r3, r8
 800d4f8:	b29b      	uxth	r3, r3
 800d4fa:	fa0f f988 	sxth.w	r9, r8
 800d4fe:	eba0 000c 	sub.w	r0, r0, ip
 800d502:	fa0f f883 	sxth.w	r8, r3
 800d506:	eba6 060e 	sub.w	r6, r6, lr
 800d50a:	4368      	muls	r0, r5
 800d50c:	fb08 f606 	mul.w	r6, r8, r6
 800d510:	42b0      	cmp	r0, r6
 800d512:	dc06      	bgt.n	800d522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800d514:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800d518:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800d51c:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800d520:	e7c9      	b.n	800d4b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800d522:	4423      	add	r3, r4
 800d524:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800d528:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d52c:	e64f      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d52e:	9807      	ldr	r0, [sp, #28]
 800d530:	eba3 0309 	sub.w	r3, r3, r9
 800d534:	b29b      	uxth	r3, r3
 800d536:	2806      	cmp	r0, #6
 800d538:	fa0f fc83 	sxth.w	ip, r3
 800d53c:	d818      	bhi.n	800d570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800d53e:	4652      	mov	r2, sl
 800d540:	ab0a      	add	r3, sp, #40	; 0x28
 800d542:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800d546:	6851      	ldr	r1, [r2, #4]
 800d548:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800d54c:	c303      	stmia	r3!, {r0, r1}
 800d54e:	9b03      	ldr	r3, [sp, #12]
 800d550:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800d554:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800d558:	ab0a      	add	r3, sp, #40	; 0x28
 800d55a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d55e:	9801      	ldr	r0, [sp, #4]
 800d560:	f7ff fe06 	bl	800d170 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d564:	9b00      	ldr	r3, [sp, #0]
 800d566:	3b01      	subs	r3, #1
 800d568:	9300      	str	r3, [sp, #0]
 800d56a:	f1aa 0a08 	sub.w	sl, sl, #8
 800d56e:	e747      	b.n	800d400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d570:	9800      	ldr	r0, [sp, #0]
 800d572:	45ac      	cmp	ip, r5
 800d574:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d578:	db0c      	blt.n	800d594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800d57a:	4417      	add	r7, r2
 800d57c:	b2bf      	uxth	r7, r7
 800d57e:	4458      	add	r0, fp
 800d580:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d584:	440f      	add	r7, r1
 800d586:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d58a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800d58e:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800d592:	e61c      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d594:	4458      	add	r0, fp
 800d596:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800d59a:	443b      	add	r3, r7
 800d59c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d5a0:	e615      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d5a2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800d5a6:	fa1f f18c 	uxth.w	r1, ip
 800d5aa:	eb01 0e05 	add.w	lr, r1, r5
 800d5ae:	b282      	uxth	r2, r0
 800d5b0:	fa1f fe8e 	uxth.w	lr, lr
 800d5b4:	9204      	str	r2, [sp, #16]
 800d5b6:	fa0f f28e 	sxth.w	r2, lr
 800d5ba:	9205      	str	r2, [sp, #20]
 800d5bc:	9e04      	ldr	r6, [sp, #16]
 800d5be:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800d5c2:	4432      	add	r2, r6
 800d5c4:	b292      	uxth	r2, r2
 800d5c6:	4584      	cmp	ip, r0
 800d5c8:	9206      	str	r2, [sp, #24]
 800d5ca:	da26      	bge.n	800d61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800d5cc:	eba3 0309 	sub.w	r3, r3, r9
 800d5d0:	eba2 020e 	sub.w	r2, r2, lr
 800d5d4:	b29b      	uxth	r3, r3
 800d5d6:	b292      	uxth	r2, r2
 800d5d8:	fa0f fa83 	sxth.w	sl, r3
 800d5dc:	b211      	sxth	r1, r2
 800d5de:	eba0 000c 	sub.w	r0, r0, ip
 800d5e2:	eba4 0408 	sub.w	r4, r4, r8
 800d5e6:	fb0a f000 	mul.w	r0, sl, r0
 800d5ea:	434c      	muls	r4, r1
 800d5ec:	42a0      	cmp	r0, r4
 800d5ee:	9800      	ldr	r0, [sp, #0]
 800d5f0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d5f4:	dc06      	bgt.n	800d604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800d5f6:	4458      	add	r0, fp
 800d5f8:	9a05      	ldr	r2, [sp, #20]
 800d5fa:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800d5fe:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800d602:	e7ca      	b.n	800d59a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d604:	eb0b 0300 	add.w	r3, fp, r0
 800d608:	9903      	ldr	r1, [sp, #12]
 800d60a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800d60e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800d612:	442a      	add	r2, r5
 800d614:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d618:	e5d9      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d61a:	9e04      	ldr	r6, [sp, #16]
 800d61c:	9a03      	ldr	r2, [sp, #12]
 800d61e:	1b89      	subs	r1, r1, r6
 800d620:	b21e      	sxth	r6, r3
 800d622:	b289      	uxth	r1, r1
 800d624:	4296      	cmp	r6, r2
 800d626:	fa0f fc81 	sxth.w	ip, r1
 800d62a:	dd26      	ble.n	800d67a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800d62c:	eba3 0309 	sub.w	r3, r3, r9
 800d630:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800d634:	9e05      	ldr	r6, [sp, #20]
 800d636:	b29b      	uxth	r3, r3
 800d638:	eba6 0902 	sub.w	r9, r6, r2
 800d63c:	b218      	sxth	r0, r3
 800d63e:	eba4 0408 	sub.w	r4, r4, r8
 800d642:	fb0c f404 	mul.w	r4, ip, r4
 800d646:	fb00 f909 	mul.w	r9, r0, r9
 800d64a:	9a00      	ldr	r2, [sp, #0]
 800d64c:	454c      	cmp	r4, r9
 800d64e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d652:	db03      	blt.n	800d65c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800d654:	445a      	add	r2, fp
 800d656:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800d65a:	e79e      	b.n	800d59a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d65c:	eb0b 0302 	add.w	r3, fp, r2
 800d660:	9a03      	ldr	r2, [sp, #12]
 800d662:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800d666:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800d66a:	4429      	add	r1, r5
 800d66c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800d670:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d674:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d678:	e5a9      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d67a:	9b06      	ldr	r3, [sp, #24]
 800d67c:	9c07      	ldr	r4, [sp, #28]
 800d67e:	eba3 020e 	sub.w	r2, r3, lr
 800d682:	b292      	uxth	r2, r2
 800d684:	2c06      	cmp	r4, #6
 800d686:	b213      	sxth	r3, r2
 800d688:	d80d      	bhi.n	800d6a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800d68a:	4651      	mov	r1, sl
 800d68c:	aa0a      	add	r2, sp, #40	; 0x28
 800d68e:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800d692:	6849      	ldr	r1, [r1, #4]
 800d694:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800d698:	9b05      	ldr	r3, [sp, #20]
 800d69a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d69e:	c203      	stmia	r2!, {r0, r1}
 800d6a0:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d6a4:	e758      	b.n	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800d6a6:	9c00      	ldr	r4, [sp, #0]
 800d6a8:	4563      	cmp	r3, ip
 800d6aa:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d6ae:	db0d      	blt.n	800d6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800d6b0:	4429      	add	r1, r5
 800d6b2:	9a04      	ldr	r2, [sp, #16]
 800d6b4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d6b8:	b289      	uxth	r1, r1
 800d6ba:	445c      	add	r4, fp
 800d6bc:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d6c0:	4411      	add	r1, r2
 800d6c2:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d6c6:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d6ca:	e580      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d6cc:	445c      	add	r4, fp
 800d6ce:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d6d2:	e79e      	b.n	800d612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800d6d4:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d6d8:	2f07      	cmp	r7, #7
 800d6da:	d806      	bhi.n	800d6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800d6dc:	ab08      	add	r3, sp, #32
 800d6de:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d6e2:	9801      	ldr	r0, [sp, #4]
 800d6e4:	f7ff fd44 	bl	800d170 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d6e8:	e5db      	b.n	800d2a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d6ea:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d6ee:	f107 39ff 	add.w	r9, r7, #4294967295
 800d6f2:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d6f6:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d6fa:	f04f 35ff 	mov.w	r5, #4294967295
 800d6fe:	2400      	movs	r4, #0
 800d700:	9304      	str	r3, [sp, #16]
 800d702:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d706:	9300      	str	r3, [sp, #0]
 800d708:	f109 32ff 	add.w	r2, r9, #4294967295
 800d70c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d710:	9303      	str	r3, [sp, #12]
 800d712:	4690      	mov	r8, r2
 800d714:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d718:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d71c:	bf14      	ite	ne
 800d71e:	9904      	ldrne	r1, [sp, #16]
 800d720:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d724:	6818      	ldr	r0, [r3, #0]
 800d726:	9206      	str	r2, [sp, #24]
 800d728:	bf18      	it	ne
 800d72a:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d72e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d732:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d736:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d73a:	9305      	str	r3, [sp, #20]
 800d73c:	fb16 f601 	smulbb	r6, r6, r1
 800d740:	6859      	ldr	r1, [r3, #4]
 800d742:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d746:	4671      	mov	r1, lr
 800d748:	a80a      	add	r0, sp, #40	; 0x28
 800d74a:	f7ff fc51 	bl	800cff0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d74e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d752:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d756:	9b03      	ldr	r3, [sp, #12]
 800d758:	9a00      	ldr	r2, [sp, #0]
 800d75a:	fb11 f100 	smulbb	r1, r1, r0
 800d75e:	fb02 6603 	mla	r6, r2, r3, r6
 800d762:	1b8e      	subs	r6, r1, r6
 800d764:	2008      	movs	r0, #8
 800d766:	fb91 f1f0 	sdiv	r1, r1, r0
 800d76a:	42b1      	cmp	r1, r6
 800d76c:	dc21      	bgt.n	800d7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d76e:	4556      	cmp	r6, sl
 800d770:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d774:	da03      	bge.n	800d77e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d776:	b1e6      	cbz	r6, 800d7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d778:	46b2      	mov	sl, r6
 800d77a:	4645      	mov	r5, r8
 800d77c:	464c      	mov	r4, r9
 800d77e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d782:	f118 0f02 	cmn.w	r8, #2
 800d786:	d1c7      	bne.n	800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800d788:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d78c:	f1a7 0708 	sub.w	r7, r7, #8
 800d790:	4691      	mov	r9, r2
 800d792:	d1b6      	bne.n	800d702 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800d794:	9b01      	ldr	r3, [sp, #4]
 800d796:	b2a6      	uxth	r6, r4
 800d798:	00e4      	lsls	r4, r4, #3
 800d79a:	1918      	adds	r0, r3, r4
 800d79c:	1c6b      	adds	r3, r5, #1
 800d79e:	d10b      	bne.n	800d7b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d7a0:	4601      	mov	r1, r0
 800d7a2:	9802      	ldr	r0, [sp, #8]
 800d7a4:	f7ff fc24 	bl	800cff0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d7a8:	4631      	mov	r1, r6
 800d7aa:	9801      	ldr	r0, [sp, #4]
 800d7ac:	f7ff fcca 	bl	800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d7b0:	e50d      	b.n	800d1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d7b2:	4645      	mov	r5, r8
 800d7b4:	464c      	mov	r4, r9
 800d7b6:	e7ed      	b.n	800d794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800d7b8:	9b01      	ldr	r3, [sp, #4]
 800d7ba:	00ed      	lsls	r5, r5, #3
 800d7bc:	1959      	adds	r1, r3, r5
 800d7be:	f7ff fc17 	bl	800cff0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d7c2:	9b02      	ldr	r3, [sp, #8]
 800d7c4:	cb03      	ldmia	r3!, {r0, r1}
 800d7c6:	445d      	add	r5, fp
 800d7c8:	445c      	add	r4, fp
 800d7ca:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d7ce:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d7d2:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d7d6:	9b02      	ldr	r3, [sp, #8]
 800d7d8:	6861      	ldr	r1, [r4, #4]
 800d7da:	c303      	stmia	r3!, {r0, r1}
 800d7dc:	e7e4      	b.n	800d7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800d7e0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d7e0:	b530      	push	{r4, r5, lr}
 800d7e2:	4b1d      	ldr	r3, [pc, #116]	; (800d858 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d7e4:	b085      	sub	sp, #20
 800d7e6:	460c      	mov	r4, r1
 800d7e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d7ec:	4b1b      	ldr	r3, [pc, #108]	; (800d85c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d7ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d7f2:	2100      	movs	r1, #0
 800d7f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d7f8:	9100      	str	r1, [sp, #0]
 800d7fa:	4605      	mov	r5, r0
 800d7fc:	6861      	ldr	r1, [r4, #4]
 800d7fe:	6820      	ldr	r0, [r4, #0]
 800d800:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d804:	ab02      	add	r3, sp, #8
 800d806:	c303      	stmia	r3!, {r0, r1}
 800d808:	4669      	mov	r1, sp
 800d80a:	a802      	add	r0, sp, #8
 800d80c:	f7fc fdf6 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800d810:	ab02      	add	r3, sp, #8
 800d812:	cb03      	ldmia	r3!, {r0, r1}
 800d814:	4b12      	ldr	r3, [pc, #72]	; (800d860 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d816:	6020      	str	r0, [r4, #0]
 800d818:	6818      	ldr	r0, [r3, #0]
 800d81a:	6061      	str	r1, [r4, #4]
 800d81c:	b138      	cbz	r0, 800d82e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d81e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d822:	b133      	cbz	r3, 800d832 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d824:	6821      	ldr	r1, [r4, #0]
 800d826:	6862      	ldr	r2, [r4, #4]
 800d828:	4628      	mov	r0, r5
 800d82a:	f7ff fcc3 	bl	800d1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d82e:	b005      	add	sp, #20
 800d830:	bd30      	pop	{r4, r5, pc}
 800d832:	6803      	ldr	r3, [r0, #0]
 800d834:	4621      	mov	r1, r4
 800d836:	689b      	ldr	r3, [r3, #8]
 800d838:	4798      	blx	r3
 800d83a:	4b0a      	ldr	r3, [pc, #40]	; (800d864 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d83c:	6818      	ldr	r0, [r3, #0]
 800d83e:	b118      	cbz	r0, 800d848 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d840:	6803      	ldr	r3, [r0, #0]
 800d842:	4621      	mov	r1, r4
 800d844:	689b      	ldr	r3, [r3, #8]
 800d846:	4798      	blx	r3
 800d848:	4b07      	ldr	r3, [pc, #28]	; (800d868 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d84a:	6818      	ldr	r0, [r3, #0]
 800d84c:	6803      	ldr	r3, [r0, #0]
 800d84e:	4621      	mov	r1, r4
 800d850:	695b      	ldr	r3, [r3, #20]
 800d852:	4798      	blx	r3
 800d854:	e7eb      	b.n	800d82e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d856:	bf00      	nop
 800d858:	20008984 	.word	0x20008984
 800d85c:	20008986 	.word	0x20008986
 800d860:	200089cc 	.word	0x200089cc
 800d864:	200089c8 	.word	0x200089c8
 800d868:	20008990 	.word	0x20008990

0800d86c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d86c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d870:	4604      	mov	r4, r0
 800d872:	b09b      	sub	sp, #108	; 0x6c
 800d874:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d878:	b129      	cbz	r1, 800d886 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d87a:	2300      	movs	r3, #0
 800d87c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d880:	b01b      	add	sp, #108	; 0x6c
 800d882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d886:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d88a:	4630      	mov	r0, r6
 800d88c:	f7fc fdf9 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d890:	4605      	mov	r5, r0
 800d892:	b940      	cbnz	r0, 800d8a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d894:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d898:	4620      	mov	r0, r4
 800d89a:	f7ff fc8b 	bl	800d1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d89e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d8a2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d8a6:	4ba6      	ldr	r3, [pc, #664]	; (800db40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 800d8a8:	681b      	ldr	r3, [r3, #0]
 800d8aa:	b33b      	cbz	r3, 800d8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d8ac:	4da5      	ldr	r5, [pc, #660]	; (800db44 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d8ae:	4628      	mov	r0, r5
 800d8b0:	f7fc fde7 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d8b4:	4606      	mov	r6, r0
 800d8b6:	bb08      	cbnz	r0, 800d8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d8b8:	4628      	mov	r0, r5
 800d8ba:	f7ff f9fb 	bl	800ccb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d8be:	6829      	ldr	r1, [r5, #0]
 800d8c0:	686a      	ldr	r2, [r5, #4]
 800d8c2:	4620      	mov	r0, r4
 800d8c4:	f7ff fc76 	bl	800d1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d8c8:	802e      	strh	r6, [r5, #0]
 800d8ca:	806e      	strh	r6, [r5, #2]
 800d8cc:	80ae      	strh	r6, [r5, #4]
 800d8ce:	80ee      	strh	r6, [r5, #6]
 800d8d0:	4f9d      	ldr	r7, [pc, #628]	; (800db48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d8d2:	a809      	add	r0, sp, #36	; 0x24
 800d8d4:	f7ff fbe3 	bl	800d09e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d8d8:	883d      	ldrh	r5, [r7, #0]
 800d8da:	462e      	mov	r6, r5
 800d8dc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d8e0:	42b3      	cmp	r3, r6
 800d8e2:	d910      	bls.n	800d906 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d8e4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d8e8:	a809      	add	r0, sp, #36	; 0x24
 800d8ea:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d8ee:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d8f2:	3601      	adds	r6, #1
 800d8f4:	f7ff fc3c 	bl	800d170 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d8f8:	b2b6      	uxth	r6, r6
 800d8fa:	e7ef      	b.n	800d8dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d8fc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d900:	2b00      	cmp	r3, #0
 800d902:	d1e5      	bne.n	800d8d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d904:	e7bc      	b.n	800d880 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d906:	462e      	mov	r6, r5
 800d908:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d90c:	42b3      	cmp	r3, r6
 800d90e:	d90b      	bls.n	800d928 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d910:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d914:	4620      	mov	r0, r4
 800d916:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d91a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d91e:	3601      	adds	r6, #1
 800d920:	f7ff fc48 	bl	800d1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d924:	b2b6      	uxth	r6, r6
 800d926:	e7ef      	b.n	800d908 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d928:	4a88      	ldr	r2, [pc, #544]	; (800db4c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d92a:	6813      	ldr	r3, [r2, #0]
 800d92c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d930:	2b01      	cmp	r3, #1
 800d932:	4690      	mov	r8, r2
 800d934:	f040 8093 	bne.w	800da5e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 800d938:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d93c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d940:	33aa      	adds	r3, #170	; 0xaa
 800d942:	f04f 0900 	mov.w	r9, #0
 800d946:	42a8      	cmp	r0, r5
 800d948:	f103 0308 	add.w	r3, r3, #8
 800d94c:	dd0a      	ble.n	800d964 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d94e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d952:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d956:	440a      	add	r2, r1
 800d958:	b212      	sxth	r2, r2
 800d95a:	4591      	cmp	r9, r2
 800d95c:	bfb8      	it	lt
 800d95e:	4691      	movlt	r9, r2
 800d960:	3501      	adds	r5, #1
 800d962:	e7f0      	b.n	800d946 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d964:	4b7a      	ldr	r3, [pc, #488]	; (800db50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d966:	4e7b      	ldr	r6, [pc, #492]	; (800db54 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d968:	881d      	ldrh	r5, [r3, #0]
 800d96a:	2300      	movs	r3, #0
 800d96c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d970:	2d0f      	cmp	r5, #15
 800d972:	bf8c      	ite	hi
 800d974:	08ed      	lsrhi	r5, r5, #3
 800d976:	2501      	movls	r5, #1
 800d978:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d97c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d980:	f8d8 0000 	ldr.w	r0, [r8]
 800d984:	440b      	add	r3, r1
 800d986:	b21b      	sxth	r3, r3
 800d988:	4599      	cmp	r9, r3
 800d98a:	6802      	ldr	r2, [r0, #0]
 800d98c:	dd4a      	ble.n	800da24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 800d98e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800d992:	4798      	blx	r3
 800d994:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d998:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d99c:	4413      	add	r3, r2
 800d99e:	b21b      	sxth	r3, r3
 800d9a0:	195a      	adds	r2, r3, r5
 800d9a2:	4290      	cmp	r0, r2
 800d9a4:	da07      	bge.n	800d9b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d9a6:	4581      	cmp	r9, r0
 800d9a8:	dd05      	ble.n	800d9b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d9aa:	4298      	cmp	r0, r3
 800d9ac:	da33      	bge.n	800da16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d9ae:	2b00      	cmp	r3, #0
 800d9b0:	dd31      	ble.n	800da16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d9b2:	4648      	mov	r0, r9
 800d9b4:	e004      	b.n	800d9c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d9b6:	4298      	cmp	r0, r3
 800d9b8:	dbfb      	blt.n	800d9b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d9ba:	4548      	cmp	r0, r9
 800d9bc:	bfa8      	it	ge
 800d9be:	4648      	movge	r0, r9
 800d9c0:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d9c4:	f8b7 a000 	ldrh.w	sl, [r7]
 800d9c8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d9cc:	2100      	movs	r1, #0
 800d9ce:	1ac0      	subs	r0, r0, r3
 800d9d0:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d9d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d9d8:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d9dc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d9e0:	4553      	cmp	r3, sl
 800d9e2:	d9c9      	bls.n	800d978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d9e4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d9e8:	ab07      	add	r3, sp, #28
 800d9ea:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d9ee:	6851      	ldr	r1, [r2, #4]
 800d9f0:	c303      	stmia	r3!, {r0, r1}
 800d9f2:	a807      	add	r0, sp, #28
 800d9f4:	a905      	add	r1, sp, #20
 800d9f6:	f7fc fd01 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800d9fa:	a807      	add	r0, sp, #28
 800d9fc:	f7fc fd41 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800da00:	b920      	cbnz	r0, 800da0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800da02:	6823      	ldr	r3, [r4, #0]
 800da04:	a907      	add	r1, sp, #28
 800da06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800da08:	4620      	mov	r0, r4
 800da0a:	4798      	blx	r3
 800da0c:	f10a 0a01 	add.w	sl, sl, #1
 800da10:	fa1f fa8a 	uxth.w	sl, sl
 800da14:	e7e2      	b.n	800d9dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800da16:	f8d8 0000 	ldr.w	r0, [r8]
 800da1a:	6803      	ldr	r3, [r0, #0]
 800da1c:	2101      	movs	r1, #1
 800da1e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800da20:	4798      	blx	r3
 800da22:	e7a9      	b.n	800d978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800da24:	69d3      	ldr	r3, [r2, #28]
 800da26:	4798      	blx	r3
 800da28:	4b4b      	ldr	r3, [pc, #300]	; (800db58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800da2a:	781b      	ldrb	r3, [r3, #0]
 800da2c:	2b00      	cmp	r3, #0
 800da2e:	f43f af27 	beq.w	800d880 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800da32:	2300      	movs	r3, #0
 800da34:	883d      	ldrh	r5, [r7, #0]
 800da36:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800da3a:	34ea      	adds	r4, #234	; 0xea
 800da3c:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800da40:	42ab      	cmp	r3, r5
 800da42:	f67f af1d 	bls.w	800d880 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800da46:	ab1a      	add	r3, sp, #104	; 0x68
 800da48:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800da4c:	3b44      	subs	r3, #68	; 0x44
 800da4e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800da52:	4620      	mov	r0, r4
 800da54:	3501      	adds	r5, #1
 800da56:	f7ff fb8b 	bl	800d170 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800da5a:	b2ad      	uxth	r5, r5
 800da5c:	e7ee      	b.n	800da3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 800da5e:	2b02      	cmp	r3, #2
 800da60:	f040 813c 	bne.w	800dcdc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 800da64:	4b3d      	ldr	r3, [pc, #244]	; (800db5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800da66:	781b      	ldrb	r3, [r3, #0]
 800da68:	2b01      	cmp	r3, #1
 800da6a:	d02c      	beq.n	800dac6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 800da6c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800da70:	883a      	ldrh	r2, [r7, #0]
 800da72:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800da76:	3201      	adds	r2, #1
 800da78:	b292      	uxth	r2, r2
 800da7a:	2900      	cmp	r1, #0
 800da7c:	d0d4      	beq.n	800da28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800da7e:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800da82:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800da86:	441d      	add	r5, r3
 800da88:	b22d      	sxth	r5, r5
 800da8a:	4610      	mov	r0, r2
 800da8c:	f04f 0a00 	mov.w	sl, #0
 800da90:	b283      	uxth	r3, r0
 800da92:	4299      	cmp	r1, r3
 800da94:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800da98:	f240 80c4 	bls.w	800dc24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 800da9c:	4426      	add	r6, r4
 800da9e:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800daa2:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800daa6:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800daaa:	4573      	cmp	r3, lr
 800daac:	4684      	mov	ip, r0
 800daae:	f340 80a6 	ble.w	800dbfe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 800dab2:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800dab6:	4475      	add	r5, lr
 800dab8:	b22d      	sxth	r5, r5
 800daba:	429d      	cmp	r5, r3
 800dabc:	bfa8      	it	ge
 800dabe:	461d      	movge	r5, r3
 800dac0:	3001      	adds	r0, #1
 800dac2:	46e2      	mov	sl, ip
 800dac4:	e7e4      	b.n	800da90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 800dac6:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800daca:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800dace:	f1bb 0f00 	cmp.w	fp, #0
 800dad2:	d0a9      	beq.n	800da28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800dad4:	883b      	ldrh	r3, [r7, #0]
 800dad6:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800dada:	3301      	adds	r3, #1
 800dadc:	b29b      	uxth	r3, r3
 800dade:	2600      	movs	r6, #0
 800dae0:	b299      	uxth	r1, r3
 800dae2:	458b      	cmp	fp, r1
 800dae4:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800dae8:	d93a      	bls.n	800db60 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800daea:	4425      	add	r5, r4
 800daec:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800daf0:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800daf4:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800daf8:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800dafc:	4408      	add	r0, r1
 800dafe:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800db02:	4471      	add	r1, lr
 800db04:	b200      	sxth	r0, r0
 800db06:	b209      	sxth	r1, r1
 800db08:	4288      	cmp	r0, r1
 800db0a:	469c      	mov	ip, r3
 800db0c:	da06      	bge.n	800db1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 800db0e:	4586      	cmp	lr, r0
 800db10:	4672      	mov	r2, lr
 800db12:	bfb8      	it	lt
 800db14:	4602      	movlt	r2, r0
 800db16:	3301      	adds	r3, #1
 800db18:	4666      	mov	r6, ip
 800db1a:	e7e1      	b.n	800dae0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 800db1c:	d10b      	bne.n	800db36 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 800db1e:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800db22:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800db26:	458c      	cmp	ip, r1
 800db28:	bfb4      	ite	lt
 800db2a:	469c      	movlt	ip, r3
 800db2c:	46b4      	movge	ip, r6
 800db2e:	4572      	cmp	r2, lr
 800db30:	bfb8      	it	lt
 800db32:	4672      	movlt	r2, lr
 800db34:	e7ef      	b.n	800db16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800db36:	428a      	cmp	r2, r1
 800db38:	bfb8      	it	lt
 800db3a:	460a      	movlt	r2, r1
 800db3c:	46b4      	mov	ip, r6
 800db3e:	e7ea      	b.n	800db16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800db40:	200089c8 	.word	0x200089c8
 800db44:	200089d4 	.word	0x200089d4
 800db48:	20000018 	.word	0x20000018
 800db4c:	20008990 	.word	0x20008990
 800db50:	20008986 	.word	0x20008986
 800db54:	20008984 	.word	0x20008984
 800db58:	2000898e 	.word	0x2000898e
 800db5c:	20008988 	.word	0x20008988
 800db60:	1961      	adds	r1, r4, r5
 800db62:	ab07      	add	r3, sp, #28
 800db64:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800db68:	6849      	ldr	r1, [r1, #4]
 800db6a:	c303      	stmia	r3!, {r0, r1}
 800db6c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800db70:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800db74:	2b13      	cmp	r3, #19
 800db76:	bfd8      	it	le
 800db78:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800db7c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800db80:	440b      	add	r3, r1
 800db82:	1a9b      	subs	r3, r3, r2
 800db84:	a807      	add	r0, sp, #28
 800db86:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db8a:	f7ff f8ed 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800db8e:	a807      	add	r0, sp, #28
 800db90:	f7fc fc77 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800db94:	2800      	cmp	r0, #0
 800db96:	d198      	bne.n	800daca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800db98:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800db9c:	f8d8 0000 	ldr.w	r0, [r8]
 800dba0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dba4:	f8d0 e000 	ldr.w	lr, [r0]
 800dba8:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dbac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dbb0:	f1bc 0f14 	cmp.w	ip, #20
 800dbb4:	bfa8      	it	ge
 800dbb6:	f04f 0c14 	movge.w	ip, #20
 800dbba:	fa1f fc8c 	uxth.w	ip, ip
 800dbbe:	f8cd c000 	str.w	ip, [sp]
 800dbc2:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 800dbc6:	47d0      	blx	sl
 800dbc8:	4682      	mov	sl, r0
 800dbca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dbce:	a807      	add	r0, sp, #28
 800dbd0:	f7ff f870 	bl	800ccb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dbd4:	6823      	ldr	r3, [r4, #0]
 800dbd6:	4425      	add	r5, r4
 800dbd8:	4620      	mov	r0, r4
 800dbda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dbdc:	a907      	add	r1, sp, #28
 800dbde:	4798      	blx	r3
 800dbe0:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800dbe4:	eba0 000a 	sub.w	r0, r0, sl
 800dbe8:	b200      	sxth	r0, r0
 800dbea:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800dbee:	2800      	cmp	r0, #0
 800dbf0:	f47f af6b 	bne.w	800daca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800dbf4:	b2b1      	uxth	r1, r6
 800dbf6:	4648      	mov	r0, r9
 800dbf8:	f7ff faa4 	bl	800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dbfc:	e765      	b.n	800daca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800dbfe:	d10c      	bne.n	800dc1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 800dc00:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800dc04:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800dc08:	45b4      	cmp	ip, r6
 800dc0a:	bfb4      	ite	lt
 800dc0c:	4684      	movlt	ip, r0
 800dc0e:	46d4      	movge	ip, sl
 800dc10:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800dc14:	4433      	add	r3, r6
 800dc16:	b21b      	sxth	r3, r3
 800dc18:	e74f      	b.n	800daba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 800dc1a:	4575      	cmp	r5, lr
 800dc1c:	bfa8      	it	ge
 800dc1e:	4675      	movge	r5, lr
 800dc20:	46d4      	mov	ip, sl
 800dc22:	e74d      	b.n	800dac0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 800dc24:	eb0b 0006 	add.w	r0, fp, r6
 800dc28:	4426      	add	r6, r4
 800dc2a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800dc2e:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800dc32:	f1b9 0f13 	cmp.w	r9, #19
 800dc36:	bfde      	ittt	le
 800dc38:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800dc3c:	444d      	addle	r5, r9
 800dc3e:	b22d      	sxthle	r5, r5
 800dc40:	f7fc fc1f 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc44:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800dc48:	2800      	cmp	r0, #0
 800dc4a:	f47f af16 	bne.w	800da7a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 800dc4e:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800dc52:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dc56:	eba5 050c 	sub.w	r5, r5, ip
 800dc5a:	fa1f f28c 	uxth.w	r2, ip
 800dc5e:	fa1f f989 	uxth.w	r9, r9
 800dc62:	eb02 0009 	add.w	r0, r2, r9
 800dc66:	2d14      	cmp	r5, #20
 800dc68:	bfa8      	it	ge
 800dc6a:	2514      	movge	r5, #20
 800dc6c:	b200      	sxth	r0, r0
 800dc6e:	fa1f fe85 	uxth.w	lr, r5
 800dc72:	eba0 000c 	sub.w	r0, r0, ip
 800dc76:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800dc7a:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800dc7e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dc82:	4586      	cmp	lr, r0
 800dc84:	f8d8 0000 	ldr.w	r0, [r8]
 800dc88:	f8ad c01e 	strh.w	ip, [sp, #30]
 800dc8c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dc90:	bfb8      	it	lt
 800dc92:	46f1      	movlt	r9, lr
 800dc94:	6805      	ldr	r5, [r0, #0]
 800dc96:	f8cd 9000 	str.w	r9, [sp]
 800dc9a:	b29b      	uxth	r3, r3
 800dc9c:	b289      	uxth	r1, r1
 800dc9e:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800dca0:	47a8      	blx	r5
 800dca2:	6823      	ldr	r3, [r4, #0]
 800dca4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dca8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dcaa:	a907      	add	r1, sp, #28
 800dcac:	4620      	mov	r0, r4
 800dcae:	4798      	blx	r3
 800dcb0:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800dcb4:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800dcb8:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800dcbc:	1a5b      	subs	r3, r3, r1
 800dcbe:	440a      	add	r2, r1
 800dcc0:	b21b      	sxth	r3, r3
 800dcc2:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800dcc6:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800dcca:	2b00      	cmp	r3, #0
 800dccc:	f47f aed0 	bne.w	800da70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800dcd0:	fa1f f18a 	uxth.w	r1, sl
 800dcd4:	4658      	mov	r0, fp
 800dcd6:	f7ff fa35 	bl	800d144 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dcda:	e6c9      	b.n	800da70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800dcdc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800dce0:	42ab      	cmp	r3, r5
 800dce2:	f67f aea1 	bls.w	800da28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800dce6:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800dcea:	ab07      	add	r3, sp, #28
 800dcec:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800dcf0:	6851      	ldr	r1, [r2, #4]
 800dcf2:	c303      	stmia	r3!, {r0, r1}
 800dcf4:	a807      	add	r0, sp, #28
 800dcf6:	f7fc fbc4 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dcfa:	b920      	cbnz	r0, 800dd06 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 800dcfc:	6823      	ldr	r3, [r4, #0]
 800dcfe:	a907      	add	r1, sp, #28
 800dd00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dd02:	4620      	mov	r0, r4
 800dd04:	4798      	blx	r3
 800dd06:	3501      	adds	r5, #1
 800dd08:	b2ad      	uxth	r5, r5
 800dd0a:	e7e7      	b.n	800dcdc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

0800dd0c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800dd0c:	4b03      	ldr	r3, [pc, #12]	; (800dd1c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800dd0e:	2200      	movs	r2, #0
 800dd10:	801a      	strh	r2, [r3, #0]
 800dd12:	805a      	strh	r2, [r3, #2]
 800dd14:	809a      	strh	r2, [r3, #4]
 800dd16:	80da      	strh	r2, [r3, #6]
 800dd18:	4770      	bx	lr
 800dd1a:	bf00      	nop
 800dd1c:	200089d4 	.word	0x200089d4

0800dd20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800dd20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd24:	4607      	mov	r7, r0
 800dd26:	b099      	sub	sp, #100	; 0x64
 800dd28:	a802      	add	r0, sp, #8
 800dd2a:	4614      	mov	r4, r2
 800dd2c:	461d      	mov	r5, r3
 800dd2e:	468a      	mov	sl, r1
 800dd30:	f000 fdb9 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800dd34:	683b      	ldr	r3, [r7, #0]
 800dd36:	4638      	mov	r0, r7
 800dd38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd3a:	4798      	blx	r3
 800dd3c:	462a      	mov	r2, r5
 800dd3e:	4603      	mov	r3, r0
 800dd40:	4621      	mov	r1, r4
 800dd42:	a802      	add	r0, sp, #8
 800dd44:	f000 fdf4 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd48:	2500      	movs	r5, #0
 800dd4a:	462c      	mov	r4, r5
 800dd4c:	46a9      	mov	r9, r5
 800dd4e:	46a8      	mov	r8, r5
 800dd50:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800dd54:	2300      	movs	r3, #0
 800dd56:	9301      	str	r3, [sp, #4]
 800dd58:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800dd5c:	429c      	cmp	r4, r3
 800dd5e:	d002      	beq.n	800dd66 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800dd60:	455c      	cmp	r4, fp
 800dd62:	bf18      	it	ne
 800dd64:	4625      	movne	r5, r4
 800dd66:	ab01      	add	r3, sp, #4
 800dd68:	463a      	mov	r2, r7
 800dd6a:	4651      	mov	r1, sl
 800dd6c:	a802      	add	r0, sp, #8
 800dd6e:	f001 f8d9 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd72:	4604      	mov	r4, r0
 800dd74:	b108      	cbz	r0, 800dd7a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800dd76:	280a      	cmp	r0, #10
 800dd78:	d10a      	bne.n	800dd90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800dd7a:	45c1      	cmp	r9, r8
 800dd7c:	bf38      	it	cc
 800dd7e:	46c1      	movcc	r9, r8
 800dd80:	f04f 0800 	mov.w	r8, #0
 800dd84:	2c00      	cmp	r4, #0
 800dd86:	d1e5      	bne.n	800dd54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800dd88:	4648      	mov	r0, r9
 800dd8a:	b019      	add	sp, #100	; 0x64
 800dd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd90:	9a01      	ldr	r2, [sp, #4]
 800dd92:	2a00      	cmp	r2, #0
 800dd94:	d0de      	beq.n	800dd54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800dd96:	7b56      	ldrb	r6, [r2, #13]
 800dd98:	683b      	ldr	r3, [r7, #0]
 800dd9a:	8894      	ldrh	r4, [r2, #4]
 800dd9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd9e:	0076      	lsls	r6, r6, #1
 800dda0:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800dda4:	7a96      	ldrb	r6, [r2, #10]
 800dda6:	4629      	mov	r1, r5
 800dda8:	4306      	orrs	r6, r0
 800ddaa:	4638      	mov	r0, r7
 800ddac:	4798      	blx	r3
 800ddae:	4430      	add	r0, r6
 800ddb0:	4480      	add	r8, r0
 800ddb2:	fa1f f888 	uxth.w	r8, r8
 800ddb6:	e7e5      	b.n	800dd84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800ddb8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ddb8:	b508      	push	{r3, lr}
 800ddba:	6803      	ldr	r3, [r0, #0]
 800ddbc:	68db      	ldr	r3, [r3, #12]
 800ddbe:	4798      	blx	r3
 800ddc0:	b128      	cbz	r0, 800ddce <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ddc2:	7b43      	ldrb	r3, [r0, #13]
 800ddc4:	7a80      	ldrb	r0, [r0, #10]
 800ddc6:	005b      	lsls	r3, r3, #1
 800ddc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ddcc:	4318      	orrs	r0, r3
 800ddce:	bd08      	pop	{r3, pc}

0800ddd0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ddd0:	b40e      	push	{r1, r2, r3}
 800ddd2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddd4:	b098      	sub	sp, #96	; 0x60
 800ddd6:	ab1d      	add	r3, sp, #116	; 0x74
 800ddd8:	4605      	mov	r5, r0
 800ddda:	f853 4b04 	ldr.w	r4, [r3], #4
 800ddde:	9300      	str	r3, [sp, #0]
 800dde0:	a802      	add	r0, sp, #8
 800dde2:	f000 fd60 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800dde6:	682b      	ldr	r3, [r5, #0]
 800dde8:	4628      	mov	r0, r5
 800ddea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ddec:	4798      	blx	r3
 800ddee:	ae18      	add	r6, sp, #96	; 0x60
 800ddf0:	4603      	mov	r3, r0
 800ddf2:	4621      	mov	r1, r4
 800ddf4:	9a00      	ldr	r2, [sp, #0]
 800ddf6:	2400      	movs	r4, #0
 800ddf8:	a802      	add	r0, sp, #8
 800ddfa:	f000 fd99 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ddfe:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800de02:	462a      	mov	r2, r5
 800de04:	4633      	mov	r3, r6
 800de06:	4621      	mov	r1, r4
 800de08:	a802      	add	r0, sp, #8
 800de0a:	f001 f88b 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de0e:	b1f0      	cbz	r0, 800de4e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800de10:	280a      	cmp	r0, #10
 800de12:	d018      	beq.n	800de46 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800de14:	9f01      	ldr	r7, [sp, #4]
 800de16:	b1b7      	cbz	r7, 800de46 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800de18:	7b78      	ldrb	r0, [r7, #13]
 800de1a:	7a3b      	ldrb	r3, [r7, #8]
 800de1c:	88aa      	ldrh	r2, [r5, #4]
 800de1e:	00c1      	lsls	r1, r0, #3
 800de20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800de24:	4319      	orrs	r1, r3
 800de26:	0643      	lsls	r3, r0, #25
 800de28:	bf44      	itt	mi
 800de2a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800de2e:	b219      	sxthmi	r1, r3
 800de30:	0100      	lsls	r0, r0, #4
 800de32:	79fb      	ldrb	r3, [r7, #7]
 800de34:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800de38:	4303      	orrs	r3, r0
 800de3a:	4413      	add	r3, r2
 800de3c:	1a5b      	subs	r3, r3, r1
 800de3e:	b29b      	uxth	r3, r3
 800de40:	42a3      	cmp	r3, r4
 800de42:	bfc8      	it	gt
 800de44:	b21c      	sxthgt	r4, r3
 800de46:	4633      	mov	r3, r6
 800de48:	462a      	mov	r2, r5
 800de4a:	2100      	movs	r1, #0
 800de4c:	e7dc      	b.n	800de08 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800de4e:	b2a0      	uxth	r0, r4
 800de50:	b018      	add	sp, #96	; 0x60
 800de52:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800de56:	b003      	add	sp, #12
 800de58:	4770      	bx	lr

0800de5a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800de5a:	b40e      	push	{r1, r2, r3}
 800de5c:	b530      	push	{r4, r5, lr}
 800de5e:	b098      	sub	sp, #96	; 0x60
 800de60:	ab1b      	add	r3, sp, #108	; 0x6c
 800de62:	4604      	mov	r4, r0
 800de64:	f853 5b04 	ldr.w	r5, [r3], #4
 800de68:	9301      	str	r3, [sp, #4]
 800de6a:	a802      	add	r0, sp, #8
 800de6c:	f000 fd1b 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800de70:	6823      	ldr	r3, [r4, #0]
 800de72:	4620      	mov	r0, r4
 800de74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de76:	4798      	blx	r3
 800de78:	9a01      	ldr	r2, [sp, #4]
 800de7a:	4603      	mov	r3, r0
 800de7c:	4629      	mov	r1, r5
 800de7e:	a802      	add	r0, sp, #8
 800de80:	f000 fd56 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800de84:	a802      	add	r0, sp, #8
 800de86:	f001 f945 	bl	800f114 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800de8a:	2401      	movs	r4, #1
 800de8c:	b2a3      	uxth	r3, r4
 800de8e:	b140      	cbz	r0, 800dea2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800de90:	280a      	cmp	r0, #10
 800de92:	bf08      	it	eq
 800de94:	3301      	addeq	r3, #1
 800de96:	a802      	add	r0, sp, #8
 800de98:	bf08      	it	eq
 800de9a:	b21c      	sxtheq	r4, r3
 800de9c:	f001 f93a 	bl	800f114 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dea0:	e7f4      	b.n	800de8c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800dea2:	4618      	mov	r0, r3
 800dea4:	b018      	add	sp, #96	; 0x60
 800dea6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800deaa:	b003      	add	sp, #12
 800deac:	4770      	bx	lr

0800deae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800deae:	b40e      	push	{r1, r2, r3}
 800deb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800deb2:	b098      	sub	sp, #96	; 0x60
 800deb4:	ab1d      	add	r3, sp, #116	; 0x74
 800deb6:	4604      	mov	r4, r0
 800deb8:	f853 5b04 	ldr.w	r5, [r3], #4
 800debc:	9300      	str	r3, [sp, #0]
 800debe:	a802      	add	r0, sp, #8
 800dec0:	f000 fcf1 	bl	800e8a6 <_ZN8touchgfx12TextProviderC1Ev>
 800dec4:	6823      	ldr	r3, [r4, #0]
 800dec6:	4620      	mov	r0, r4
 800dec8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800deca:	4798      	blx	r3
 800decc:	4629      	mov	r1, r5
 800dece:	4603      	mov	r3, r0
 800ded0:	9a00      	ldr	r2, [sp, #0]
 800ded2:	a802      	add	r0, sp, #8
 800ded4:	ad18      	add	r5, sp, #96	; 0x60
 800ded6:	f000 fd2b 	bl	800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800deda:	2100      	movs	r1, #0
 800dedc:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800dee0:	4622      	mov	r2, r4
 800dee2:	462b      	mov	r3, r5
 800dee4:	a802      	add	r0, sp, #8
 800dee6:	f001 f81d 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800deea:	26ff      	movs	r6, #255	; 0xff
 800deec:	b1d8      	cbz	r0, 800df26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800deee:	280a      	cmp	r0, #10
 800def0:	d012      	beq.n	800df18 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800def2:	9801      	ldr	r0, [sp, #4]
 800def4:	b180      	cbz	r0, 800df18 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800def6:	7b47      	ldrb	r7, [r0, #13]
 800def8:	7922      	ldrb	r2, [r4, #4]
 800defa:	00fb      	lsls	r3, r7, #3
 800defc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800df00:	7a03      	ldrb	r3, [r0, #8]
 800df02:	430b      	orrs	r3, r1
 800df04:	0679      	lsls	r1, r7, #25
 800df06:	bf44      	itt	mi
 800df08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800df0c:	b21b      	sxthmi	r3, r3
 800df0e:	1ad3      	subs	r3, r2, r3
 800df10:	b2db      	uxtb	r3, r3
 800df12:	429e      	cmp	r6, r3
 800df14:	bf28      	it	cs
 800df16:	461e      	movcs	r6, r3
 800df18:	462b      	mov	r3, r5
 800df1a:	4622      	mov	r2, r4
 800df1c:	2100      	movs	r1, #0
 800df1e:	a802      	add	r0, sp, #8
 800df20:	f001 f800 	bl	800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df24:	e7e2      	b.n	800deec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800df26:	4630      	mov	r0, r6
 800df28:	b018      	add	sp, #96	; 0x60
 800df2a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800df2e:	b003      	add	sp, #12
 800df30:	4770      	bx	lr

0800df32 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800df32:	b513      	push	{r0, r1, r4, lr}
 800df34:	1d01      	adds	r1, r0, #4
 800df36:	4603      	mov	r3, r0
 800df38:	c903      	ldmia	r1, {r0, r1}
 800df3a:	466a      	mov	r2, sp
 800df3c:	e882 0003 	stmia.w	r2, {r0, r1}
 800df40:	2100      	movs	r1, #0
 800df42:	9100      	str	r1, [sp, #0]
 800df44:	6819      	ldr	r1, [r3, #0]
 800df46:	4618      	mov	r0, r3
 800df48:	690c      	ldr	r4, [r1, #16]
 800df4a:	4611      	mov	r1, r2
 800df4c:	47a0      	blx	r4
 800df4e:	b002      	add	sp, #8
 800df50:	bd10      	pop	{r4, pc}

0800df52 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800df52:	b538      	push	{r3, r4, r5, lr}
 800df54:	680b      	ldr	r3, [r1, #0]
 800df56:	460c      	mov	r4, r1
 800df58:	68db      	ldr	r3, [r3, #12]
 800df5a:	4605      	mov	r5, r0
 800df5c:	4798      	blx	r3
 800df5e:	6823      	ldr	r3, [r4, #0]
 800df60:	4620      	mov	r0, r4
 800df62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800df64:	4629      	mov	r1, r5
 800df66:	4798      	blx	r3
 800df68:	4628      	mov	r0, r5
 800df6a:	bd38      	pop	{r3, r4, r5, pc}

0800df6c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800df6c:	b410      	push	{r4}
 800df6e:	880a      	ldrh	r2, [r1, #0]
 800df70:	8884      	ldrh	r4, [r0, #4]
 800df72:	4422      	add	r2, r4
 800df74:	800a      	strh	r2, [r1, #0]
 800df76:	88c4      	ldrh	r4, [r0, #6]
 800df78:	884a      	ldrh	r2, [r1, #2]
 800df7a:	4422      	add	r2, r4
 800df7c:	804a      	strh	r2, [r1, #2]
 800df7e:	6940      	ldr	r0, [r0, #20]
 800df80:	b120      	cbz	r0, 800df8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800df82:	6803      	ldr	r3, [r0, #0]
 800df84:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800df8a:	4718      	bx	r3
 800df8c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df90:	4770      	bx	lr

0800df92 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800df92:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df94:	460b      	mov	r3, r1
 800df96:	b085      	sub	sp, #20
 800df98:	4604      	mov	r4, r0
 800df9a:	b901      	cbnz	r1, 800df9e <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800df9c:	b322      	cbz	r2, 800dfe8 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800df9e:	1d27      	adds	r7, r4, #4
 800dfa0:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dfa4:	466e      	mov	r6, sp
 800dfa6:	e886 0003 	stmia.w	r6, {r0, r1}
 800dfaa:	88a1      	ldrh	r1, [r4, #4]
 800dfac:	88e5      	ldrh	r5, [r4, #6]
 800dfae:	4419      	add	r1, r3
 800dfb0:	6823      	ldr	r3, [r4, #0]
 800dfb2:	442a      	add	r2, r5
 800dfb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dfb6:	b209      	sxth	r1, r1
 800dfb8:	4620      	mov	r0, r4
 800dfba:	b215      	sxth	r5, r2
 800dfbc:	4798      	blx	r3
 800dfbe:	6823      	ldr	r3, [r4, #0]
 800dfc0:	4629      	mov	r1, r5
 800dfc2:	4620      	mov	r0, r4
 800dfc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dfc6:	4798      	blx	r3
 800dfc8:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dfcc:	ad02      	add	r5, sp, #8
 800dfce:	e885 0003 	stmia.w	r5, {r0, r1}
 800dfd2:	6960      	ldr	r0, [r4, #20]
 800dfd4:	b150      	cbz	r0, 800dfec <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800dfd6:	6803      	ldr	r3, [r0, #0]
 800dfd8:	4631      	mov	r1, r6
 800dfda:	691b      	ldr	r3, [r3, #16]
 800dfdc:	4798      	blx	r3
 800dfde:	6960      	ldr	r0, [r4, #20]
 800dfe0:	6803      	ldr	r3, [r0, #0]
 800dfe2:	691b      	ldr	r3, [r3, #16]
 800dfe4:	4629      	mov	r1, r5
 800dfe6:	4798      	blx	r3
 800dfe8:	b005      	add	sp, #20
 800dfea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfec:	f7ff f846 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800dff0:	6803      	ldr	r3, [r0, #0]
 800dff2:	4631      	mov	r1, r6
 800dff4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dff6:	4798      	blx	r3
 800dff8:	f7ff f840 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800dffc:	6803      	ldr	r3, [r0, #0]
 800dffe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e000:	e7f0      	b.n	800dfe4 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800e002 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e002:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e004:	8882      	ldrh	r2, [r0, #4]
 800e006:	880b      	ldrh	r3, [r1, #0]
 800e008:	4413      	add	r3, r2
 800e00a:	800b      	strh	r3, [r1, #0]
 800e00c:	88c2      	ldrh	r2, [r0, #6]
 800e00e:	884b      	ldrh	r3, [r1, #2]
 800e010:	4413      	add	r3, r2
 800e012:	4602      	mov	r2, r0
 800e014:	804b      	strh	r3, [r1, #2]
 800e016:	4605      	mov	r5, r0
 800e018:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e01c:	460c      	mov	r4, r1
 800e01e:	6851      	ldr	r1, [r2, #4]
 800e020:	466b      	mov	r3, sp
 800e022:	c303      	stmia	r3!, {r0, r1}
 800e024:	4621      	mov	r1, r4
 800e026:	4668      	mov	r0, sp
 800e028:	f7fc f9e8 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e02c:	466b      	mov	r3, sp
 800e02e:	cb03      	ldmia	r3!, {r0, r1}
 800e030:	6020      	str	r0, [r4, #0]
 800e032:	6061      	str	r1, [r4, #4]
 800e034:	6968      	ldr	r0, [r5, #20]
 800e036:	b128      	cbz	r0, 800e044 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800e038:	6803      	ldr	r3, [r0, #0]
 800e03a:	691b      	ldr	r3, [r3, #16]
 800e03c:	4621      	mov	r1, r4
 800e03e:	4798      	blx	r3
 800e040:	b003      	add	sp, #12
 800e042:	bd30      	pop	{r4, r5, pc}
 800e044:	f7ff f81a 	bl	800d07c <_ZN8touchgfx11Application11getInstanceEv>
 800e048:	6803      	ldr	r3, [r0, #0]
 800e04a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e04c:	e7f6      	b.n	800e03c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800e04e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e04e:	b570      	push	{r4, r5, r6, lr}
 800e050:	8882      	ldrh	r2, [r0, #4]
 800e052:	880b      	ldrh	r3, [r1, #0]
 800e054:	4413      	add	r3, r2
 800e056:	800b      	strh	r3, [r1, #0]
 800e058:	88c2      	ldrh	r2, [r0, #6]
 800e05a:	884b      	ldrh	r3, [r1, #2]
 800e05c:	460c      	mov	r4, r1
 800e05e:	4413      	add	r3, r2
 800e060:	804b      	strh	r3, [r1, #2]
 800e062:	4605      	mov	r5, r0
 800e064:	1d01      	adds	r1, r0, #4
 800e066:	4620      	mov	r0, r4
 800e068:	f7fc f9c8 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e06c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e070:	2b00      	cmp	r3, #0
 800e072:	dd0b      	ble.n	800e08c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e074:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e078:	2b00      	cmp	r3, #0
 800e07a:	dd07      	ble.n	800e08c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e07c:	6968      	ldr	r0, [r5, #20]
 800e07e:	b128      	cbz	r0, 800e08c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e080:	6803      	ldr	r3, [r0, #0]
 800e082:	4621      	mov	r1, r4
 800e084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e086:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e08a:	4718      	bx	r3
 800e08c:	bd70      	pop	{r4, r5, r6, pc}

0800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e08e:	b510      	push	{r4, lr}
 800e090:	4604      	mov	r4, r0
 800e092:	4608      	mov	r0, r1
 800e094:	2300      	movs	r3, #0
 800e096:	8023      	strh	r3, [r4, #0]
 800e098:	8063      	strh	r3, [r4, #2]
 800e09a:	6803      	ldr	r3, [r0, #0]
 800e09c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e0a0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e0a4:	80a1      	strh	r1, [r4, #4]
 800e0a6:	80e2      	strh	r2, [r4, #6]
 800e0a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e0aa:	4621      	mov	r1, r4
 800e0ac:	4798      	blx	r3
 800e0ae:	4620      	mov	r0, r4
 800e0b0:	bd10      	pop	{r4, pc}
	...

0800e0b4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800e0b4:	b530      	push	{r4, r5, lr}
 800e0b6:	8083      	strh	r3, [r0, #4]
 800e0b8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800e0bc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800e0c0:	7183      	strb	r3, [r0, #6]
 800e0c2:	79c3      	ldrb	r3, [r0, #7]
 800e0c4:	6101      	str	r1, [r0, #16]
 800e0c6:	f365 0306 	bfi	r3, r5, #0, #7
 800e0ca:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e0ce:	8282      	strh	r2, [r0, #20]
 800e0d0:	f365 13c7 	bfi	r3, r5, #7, #1
 800e0d4:	71c3      	strb	r3, [r0, #7]
 800e0d6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e0da:	7203      	strb	r3, [r0, #8]
 800e0dc:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800e0e0:	7243      	strb	r3, [r0, #9]
 800e0e2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800e0e6:	8143      	strh	r3, [r0, #10]
 800e0e8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e0ec:	8183      	strh	r3, [r0, #12]
 800e0ee:	4b01      	ldr	r3, [pc, #4]	; (800e0f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800e0f0:	6003      	str	r3, [r0, #0]
 800e0f2:	bd30      	pop	{r4, r5, pc}
 800e0f4:	0801e8d0 	.word	0x0801e8d0

0800e0f8 <_ZNK8touchgfx9ConstFont4findEt>:
 800e0f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0fa:	6904      	ldr	r4, [r0, #16]
 800e0fc:	b3bc      	cbz	r4, 800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e0fe:	88a3      	ldrh	r3, [r4, #4]
 800e100:	8a82      	ldrh	r2, [r0, #20]
 800e102:	1acb      	subs	r3, r1, r3
 800e104:	f102 32ff 	add.w	r2, r2, #4294967295
 800e108:	d431      	bmi.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e10a:	4293      	cmp	r3, r2
 800e10c:	dd0c      	ble.n	800e128 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e10e:	230e      	movs	r3, #14
 800e110:	fb03 4302 	mla	r3, r3, r2, r4
 800e114:	889b      	ldrh	r3, [r3, #4]
 800e116:	1a5b      	subs	r3, r3, r1
 800e118:	1ad3      	subs	r3, r2, r3
 800e11a:	429a      	cmp	r2, r3
 800e11c:	db27      	blt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e11e:	2b00      	cmp	r3, #0
 800e120:	bfbc      	itt	lt
 800e122:	2302      	movlt	r3, #2
 800e124:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e128:	2500      	movs	r5, #0
 800e12a:	260e      	movs	r6, #14
 800e12c:	4295      	cmp	r5, r2
 800e12e:	dc1e      	bgt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e130:	fb06 4003 	mla	r0, r6, r3, r4
 800e134:	8887      	ldrh	r7, [r0, #4]
 800e136:	42b9      	cmp	r1, r7
 800e138:	d01a      	beq.n	800e170 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e13a:	d20d      	bcs.n	800e158 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e13c:	1e5a      	subs	r2, r3, #1
 800e13e:	4295      	cmp	r5, r2
 800e140:	dc15      	bgt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e142:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e146:	1a5b      	subs	r3, r3, r1
 800e148:	1ad3      	subs	r3, r2, r3
 800e14a:	429a      	cmp	r2, r3
 800e14c:	db0f      	blt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e14e:	429d      	cmp	r5, r3
 800e150:	ddec      	ble.n	800e12c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e152:	1953      	adds	r3, r2, r5
 800e154:	105b      	asrs	r3, r3, #1
 800e156:	e7e9      	b.n	800e12c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e158:	1c5d      	adds	r5, r3, #1
 800e15a:	42aa      	cmp	r2, r5
 800e15c:	db07      	blt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e15e:	8a43      	ldrh	r3, [r0, #18]
 800e160:	1acb      	subs	r3, r1, r3
 800e162:	442b      	add	r3, r5
 800e164:	429d      	cmp	r5, r3
 800e166:	dc02      	bgt.n	800e16e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e168:	429a      	cmp	r2, r3
 800e16a:	dadf      	bge.n	800e12c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e16c:	e7f1      	b.n	800e152 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e16e:	2000      	movs	r0, #0
 800e170:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e172 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e172:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e174:	4604      	mov	r4, r0
 800e176:	4617      	mov	r7, r2
 800e178:	461e      	mov	r6, r3
 800e17a:	b911      	cbnz	r1, 800e182 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e17c:	2500      	movs	r5, #0
 800e17e:	4628      	mov	r0, r5
 800e180:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e182:	290a      	cmp	r1, #10
 800e184:	d0fa      	beq.n	800e17c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e186:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e18a:	4291      	cmp	r1, r2
 800e18c:	d0f6      	beq.n	800e17c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e18e:	f242 020b 	movw	r2, #8203	; 0x200b
 800e192:	4291      	cmp	r1, r2
 800e194:	d0f2      	beq.n	800e17c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e196:	f7ff ffaf 	bl	800e0f8 <_ZNK8touchgfx9ConstFont4findEt>
 800e19a:	4605      	mov	r5, r0
 800e19c:	b950      	cbnz	r0, 800e1b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e19e:	6823      	ldr	r3, [r4, #0]
 800e1a0:	4620      	mov	r0, r4
 800e1a2:	691b      	ldr	r3, [r3, #16]
 800e1a4:	4798      	blx	r3
 800e1a6:	4601      	mov	r1, r0
 800e1a8:	4620      	mov	r0, r4
 800e1aa:	f7ff ffa5 	bl	800e0f8 <_ZNK8touchgfx9ConstFont4findEt>
 800e1ae:	4605      	mov	r5, r0
 800e1b0:	2800      	cmp	r0, #0
 800e1b2:	d0e3      	beq.n	800e17c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e1b4:	6823      	ldr	r3, [r4, #0]
 800e1b6:	4629      	mov	r1, r5
 800e1b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e1ba:	4620      	mov	r0, r4
 800e1bc:	4798      	blx	r3
 800e1be:	6038      	str	r0, [r7, #0]
 800e1c0:	6823      	ldr	r3, [r4, #0]
 800e1c2:	4620      	mov	r0, r4
 800e1c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e1c6:	4798      	blx	r3
 800e1c8:	7030      	strb	r0, [r6, #0]
 800e1ca:	e7d8      	b.n	800e17e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e1cc <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800e1cc:	2000      	movs	r0, #0
 800e1ce:	4770      	bx	lr

0800e1d0 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800e1d0:	2001      	movs	r0, #1
 800e1d2:	4770      	bx	lr

0800e1d4 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800e1d4:	2002      	movs	r0, #2
 800e1d6:	4770      	bx	lr

0800e1d8 <_ZN8touchgfx12GestureEventD1Ev>:
 800e1d8:	4770      	bx	lr

0800e1da <_ZN8touchgfx9DragEventD1Ev>:
 800e1da:	4770      	bx	lr

0800e1dc <_ZN8touchgfx10ClickEventD1Ev>:
 800e1dc:	4770      	bx	lr

0800e1de <_ZN8touchgfx10ClickEventD0Ev>:
 800e1de:	b510      	push	{r4, lr}
 800e1e0:	210c      	movs	r1, #12
 800e1e2:	4604      	mov	r4, r0
 800e1e4:	f00d f9b4 	bl	801b550 <_ZdlPvj>
 800e1e8:	4620      	mov	r0, r4
 800e1ea:	bd10      	pop	{r4, pc}

0800e1ec <_ZN8touchgfx9DragEventD0Ev>:
 800e1ec:	b510      	push	{r4, lr}
 800e1ee:	2110      	movs	r1, #16
 800e1f0:	4604      	mov	r4, r0
 800e1f2:	f00d f9ad 	bl	801b550 <_ZdlPvj>
 800e1f6:	4620      	mov	r0, r4
 800e1f8:	bd10      	pop	{r4, pc}

0800e1fa <_ZN8touchgfx12GestureEventD0Ev>:
 800e1fa:	b510      	push	{r4, lr}
 800e1fc:	210c      	movs	r1, #12
 800e1fe:	4604      	mov	r4, r0
 800e200:	f00d f9a6 	bl	801b550 <_ZdlPvj>
 800e204:	4620      	mov	r0, r4
 800e206:	bd10      	pop	{r4, pc}

0800e208 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e208:	b530      	push	{r4, r5, lr}
 800e20a:	460d      	mov	r5, r1
 800e20c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e20e:	b087      	sub	sp, #28
 800e210:	4604      	mov	r4, r0
 800e212:	b301      	cbz	r1, 800e256 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e214:	a801      	add	r0, sp, #4
 800e216:	f7ff ff3a 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e21a:	892a      	ldrh	r2, [r5, #8]
 800e21c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e220:	7928      	ldrb	r0, [r5, #4]
 800e222:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e226:	f88d 0010 	strb.w	r0, [sp, #16]
 800e22a:	1ad2      	subs	r2, r2, r3
 800e22c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e22e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e230:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e234:	441a      	add	r2, r3
 800e236:	896b      	ldrh	r3, [r5, #10]
 800e238:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e23c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e240:	1b5b      	subs	r3, r3, r5
 800e242:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e244:	442b      	add	r3, r5
 800e246:	4d05      	ldr	r5, [pc, #20]	; (800e25c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e248:	9503      	str	r5, [sp, #12]
 800e24a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e24e:	6803      	ldr	r3, [r0, #0]
 800e250:	a903      	add	r1, sp, #12
 800e252:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e254:	4798      	blx	r3
 800e256:	b007      	add	sp, #28
 800e258:	bd30      	pop	{r4, r5, pc}
 800e25a:	bf00      	nop
 800e25c:	0801e94c 	.word	0x0801e94c

0800e260 <_ZNK8touchgfx4Rect9intersectEss>:
 800e260:	b510      	push	{r4, lr}
 800e262:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e266:	428b      	cmp	r3, r1
 800e268:	dc10      	bgt.n	800e28c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e26a:	8884      	ldrh	r4, [r0, #4]
 800e26c:	4423      	add	r3, r4
 800e26e:	b21b      	sxth	r3, r3
 800e270:	4299      	cmp	r1, r3
 800e272:	da0b      	bge.n	800e28c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e274:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e278:	4293      	cmp	r3, r2
 800e27a:	dc07      	bgt.n	800e28c <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e27c:	88c0      	ldrh	r0, [r0, #6]
 800e27e:	4418      	add	r0, r3
 800e280:	b200      	sxth	r0, r0
 800e282:	4282      	cmp	r2, r0
 800e284:	bfac      	ite	ge
 800e286:	2000      	movge	r0, #0
 800e288:	2001      	movlt	r0, #1
 800e28a:	bd10      	pop	{r4, pc}
 800e28c:	2000      	movs	r0, #0
 800e28e:	e7fc      	b.n	800e28a <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800e290 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e290:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e292:	460c      	mov	r4, r1
 800e294:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e296:	b089      	sub	sp, #36	; 0x24
 800e298:	4605      	mov	r5, r0
 800e29a:	2900      	cmp	r1, #0
 800e29c:	d054      	beq.n	800e348 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800e29e:	4668      	mov	r0, sp
 800e2a0:	f7ff fef5 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2a4:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800e2a6:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800e2a8:	8922      	ldrh	r2, [r4, #8]
 800e2aa:	88e1      	ldrh	r1, [r4, #6]
 800e2ac:	443a      	add	r2, r7
 800e2ae:	4431      	add	r1, r6
 800e2b0:	b212      	sxth	r2, r2
 800e2b2:	b209      	sxth	r1, r1
 800e2b4:	4668      	mov	r0, sp
 800e2b6:	f7ff ffd3 	bl	800e260 <_ZNK8touchgfx4Rect9intersectEss>
 800e2ba:	b1d0      	cbz	r0, 800e2f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e2bc:	89a2      	ldrh	r2, [r4, #12]
 800e2be:	8961      	ldrh	r1, [r4, #10]
 800e2c0:	443a      	add	r2, r7
 800e2c2:	4431      	add	r1, r6
 800e2c4:	b212      	sxth	r2, r2
 800e2c6:	b209      	sxth	r1, r1
 800e2c8:	4668      	mov	r0, sp
 800e2ca:	f7ff ffc9 	bl	800e260 <_ZNK8touchgfx4Rect9intersectEss>
 800e2ce:	4603      	mov	r3, r0
 800e2d0:	b978      	cbnz	r0, 800e2f2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e2d2:	4a1e      	ldr	r2, [pc, #120]	; (800e34c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800e2d4:	9204      	str	r2, [sp, #16]
 800e2d6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e2d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e2dc:	2202      	movs	r2, #2
 800e2de:	f88d 2014 	strb.w	r2, [sp, #20]
 800e2e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e2e6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e2ea:	6803      	ldr	r3, [r0, #0]
 800e2ec:	a904      	add	r1, sp, #16
 800e2ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e2f0:	4798      	blx	r3
 800e2f2:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800e2f4:	a802      	add	r0, sp, #8
 800e2f6:	f7ff feca 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2fa:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e2fe:	88e0      	ldrh	r0, [r4, #6]
 800e300:	8961      	ldrh	r1, [r4, #10]
 800e302:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e306:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800e30a:	8923      	ldrh	r3, [r4, #8]
 800e30c:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e30e:	7927      	ldrb	r7, [r4, #4]
 800e310:	f88d 7014 	strb.w	r7, [sp, #20]
 800e314:	1a80      	subs	r0, r0, r2
 800e316:	1a89      	subs	r1, r1, r2
 800e318:	89a2      	ldrh	r2, [r4, #12]
 800e31a:	4c0d      	ldr	r4, [pc, #52]	; (800e350 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800e31c:	9404      	str	r4, [sp, #16]
 800e31e:	4460      	add	r0, ip
 800e320:	eba3 030e 	sub.w	r3, r3, lr
 800e324:	eba2 020e 	sub.w	r2, r2, lr
 800e328:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e32c:	4433      	add	r3, r6
 800e32e:	4461      	add	r1, ip
 800e330:	4432      	add	r2, r6
 800e332:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e334:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e338:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e33c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e340:	6803      	ldr	r3, [r0, #0]
 800e342:	a904      	add	r1, sp, #16
 800e344:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e346:	4798      	blx	r3
 800e348:	b009      	add	sp, #36	; 0x24
 800e34a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e34c:	0801e924 	.word	0x0801e924
 800e350:	0801e938 	.word	0x0801e938

0800e354 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e358:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800e35c:	790b      	ldrb	r3, [r1, #4]
 800e35e:	b0a1      	sub	sp, #132	; 0x84
 800e360:	4604      	mov	r4, r0
 800e362:	460d      	mov	r5, r1
 800e364:	f1b9 0f00 	cmp.w	r9, #0
 800e368:	d00f      	beq.n	800e38a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800e36a:	2b00      	cmp	r3, #0
 800e36c:	f040 80a0 	bne.w	800e4b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e370:	b021      	add	sp, #132	; 0x84
 800e372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e376:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e37a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e37e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e382:	1d20      	adds	r0, r4, #4
 800e384:	f7fb ff88 	bl	800a298 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e388:	e092      	b.n	800e4b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e38a:	2b00      	cmp	r3, #0
 800e38c:	d1f0      	bne.n	800e370 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e38e:	4b5e      	ldr	r3, [pc, #376]	; (800e508 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800e390:	681b      	ldr	r3, [r3, #0]
 800e392:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800e396:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800e39a:	f1ba 0f03 	cmp.w	sl, #3
 800e39e:	ddea      	ble.n	800e376 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800e3a0:	f1ba 0f0c 	cmp.w	sl, #12
 800e3a4:	f04f 0303 	mov.w	r3, #3
 800e3a8:	bfdc      	itt	le
 800e3aa:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800e3ae:	fb92 f3f3 	sdivle	r3, r2, r3
 800e3b2:	9301      	str	r3, [sp, #4]
 800e3b4:	4b55      	ldr	r3, [pc, #340]	; (800e50c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800e3b6:	4956      	ldr	r1, [pc, #344]	; (800e510 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800e3b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e3bc:	4b55      	ldr	r3, [pc, #340]	; (800e514 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800e3be:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e3c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e3c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e3ca:	ab0e      	add	r3, sp, #56	; 0x38
 800e3cc:	2248      	movs	r2, #72	; 0x48
 800e3ce:	2600      	movs	r6, #0
 800e3d0:	4618      	mov	r0, r3
 800e3d2:	960a      	str	r6, [sp, #40]	; 0x28
 800e3d4:	f00d f966 	bl	801b6a4 <memcpy>
 800e3d8:	f04f 32ff 	mov.w	r2, #4294967295
 800e3dc:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800e3e0:	f8cd a008 	str.w	sl, [sp, #8]
 800e3e4:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e3e8:	fb93 f3f2 	sdiv	r3, r3, r2
 800e3ec:	b29b      	uxth	r3, r3
 800e3ee:	46b3      	mov	fp, r6
 800e3f0:	9303      	str	r3, [sp, #12]
 800e3f2:	2300      	movs	r3, #0
 800e3f4:	9309      	str	r3, [sp, #36]	; 0x24
 800e3f6:	9b07      	ldr	r3, [sp, #28]
 800e3f8:	9a03      	ldr	r2, [sp, #12]
 800e3fa:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800e3fe:	88ef      	ldrh	r7, [r5, #6]
 800e400:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800e404:	fb13 f302 	smulbb	r3, r3, r2
 800e408:	b29b      	uxth	r3, r3
 800e40a:	9304      	str	r3, [sp, #16]
 800e40c:	9b07      	ldr	r3, [sp, #28]
 800e40e:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800e412:	a80a      	add	r0, sp, #40	; 0x28
 800e414:	685b      	ldr	r3, [r3, #4]
 800e416:	fb13 f302 	smulbb	r3, r3, r2
 800e41a:	b29b      	uxth	r3, r3
 800e41c:	9305      	str	r3, [sp, #20]
 800e41e:	9b04      	ldr	r3, [sp, #16]
 800e420:	441f      	add	r7, r3
 800e422:	9b05      	ldr	r3, [sp, #20]
 800e424:	4498      	add	r8, r3
 800e426:	b23f      	sxth	r7, r7
 800e428:	fa0f f888 	sxth.w	r8, r8
 800e42c:	4642      	mov	r2, r8
 800e42e:	4639      	mov	r1, r7
 800e430:	f7ff ff16 	bl	800e260 <_ZNK8touchgfx4Rect9intersectEss>
 800e434:	b380      	cbz	r0, 800e498 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e436:	4639      	mov	r1, r7
 800e438:	ab09      	add	r3, sp, #36	; 0x24
 800e43a:	4642      	mov	r2, r8
 800e43c:	1d20      	adds	r0, r4, #4
 800e43e:	f7fb ff2b 	bl	800a298 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e442:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e444:	b341      	cbz	r1, 800e498 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e446:	4549      	cmp	r1, r9
 800e448:	d026      	beq.n	800e498 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e44a:	a80c      	add	r0, sp, #48	; 0x30
 800e44c:	f7ff fe1f 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e450:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e454:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e458:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800e45c:	2002      	movs	r0, #2
 800e45e:	fb92 f2f0 	sdiv	r2, r2, r0
 800e462:	440a      	add	r2, r1
 800e464:	1a99      	subs	r1, r3, r2
 800e466:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800e46a:	fb93 f3f0 	sdiv	r3, r3, r0
 800e46e:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800e472:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e476:	4403      	add	r3, r0
 800e478:	1ad3      	subs	r3, r2, r3
 800e47a:	435b      	muls	r3, r3
 800e47c:	9a06      	ldr	r2, [sp, #24]
 800e47e:	fb01 3301 	mla	r3, r1, r1, r3
 800e482:	4293      	cmp	r3, r2
 800e484:	d208      	bcs.n	800e498 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e486:	9a04      	ldr	r2, [sp, #16]
 800e488:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e48c:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e48e:	9a05      	ldr	r2, [sp, #20]
 800e490:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800e494:	86e2      	strh	r2, [r4, #54]	; 0x36
 800e496:	9306      	str	r3, [sp, #24]
 800e498:	f10b 0b02 	add.w	fp, fp, #2
 800e49c:	f1bb 0f08 	cmp.w	fp, #8
 800e4a0:	dda7      	ble.n	800e3f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e4a2:	9b02      	ldr	r3, [sp, #8]
 800e4a4:	4453      	add	r3, sl
 800e4a6:	9302      	str	r3, [sp, #8]
 800e4a8:	9b01      	ldr	r3, [sp, #4]
 800e4aa:	3601      	adds	r6, #1
 800e4ac:	42b3      	cmp	r3, r6
 800e4ae:	d199      	bne.n	800e3e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800e4b0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e4b2:	2900      	cmp	r1, #0
 800e4b4:	f43f af5c 	beq.w	800e370 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e4b8:	a80c      	add	r0, sp, #48	; 0x30
 800e4ba:	f7ff fde8 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4be:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e4c2:	88ea      	ldrh	r2, [r5, #6]
 800e4c4:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800e4c8:	7929      	ldrb	r1, [r5, #4]
 800e4ca:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800e4ce:	1ad2      	subs	r2, r2, r3
 800e4d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e4d2:	441a      	add	r2, r3
 800e4d4:	892b      	ldrh	r3, [r5, #8]
 800e4d6:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800e4da:	1a1b      	subs	r3, r3, r0
 800e4dc:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800e4de:	4403      	add	r3, r0
 800e4e0:	480d      	ldr	r0, [pc, #52]	; (800e518 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800e4e2:	900e      	str	r0, [sp, #56]	; 0x38
 800e4e4:	2600      	movs	r6, #0
 800e4e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e4e8:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800e4ec:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800e4f0:	6803      	ldr	r3, [r0, #0]
 800e4f2:	a90e      	add	r1, sp, #56	; 0x38
 800e4f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e4f6:	4798      	blx	r3
 800e4f8:	792b      	ldrb	r3, [r5, #4]
 800e4fa:	2b00      	cmp	r3, #0
 800e4fc:	f43f af38 	beq.w	800e370 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e500:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e504:	e734      	b.n	800e370 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e506:	bf00      	nop
 800e508:	20008990 	.word	0x20008990
 800e50c:	20008984 	.word	0x20008984
 800e510:	0801cbe0 	.word	0x0801cbe0
 800e514:	20008986 	.word	0x20008986
 800e518:	0801e924 	.word	0x0801e924

0800e51c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e51c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e51e:	4604      	mov	r4, r0
 800e520:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e524:	3201      	adds	r2, #1
 800e526:	d112      	bne.n	800e54e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e528:	6803      	ldr	r3, [r0, #0]
 800e52a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e52e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e532:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e536:	2500      	movs	r5, #0
 800e538:	9500      	str	r5, [sp, #0]
 800e53a:	466d      	mov	r5, sp
 800e53c:	4629      	mov	r1, r5
 800e53e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e542:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e544:	4798      	blx	r3
 800e546:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e54a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e54e:	4620      	mov	r0, r4
 800e550:	b003      	add	sp, #12
 800e552:	bd30      	pop	{r4, r5, pc}

0800e554 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e554:	b513      	push	{r0, r1, r4, lr}
 800e556:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e55a:	3301      	adds	r3, #1
 800e55c:	4604      	mov	r4, r0
 800e55e:	d109      	bne.n	800e574 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e560:	4601      	mov	r1, r0
 800e562:	4668      	mov	r0, sp
 800e564:	f7ff fd93 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e568:	f8bd 3000 	ldrh.w	r3, [sp]
 800e56c:	8423      	strh	r3, [r4, #32]
 800e56e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e572:	8463      	strh	r3, [r4, #34]	; 0x22
 800e574:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e578:	b002      	add	sp, #8
 800e57a:	bd10      	pop	{r4, pc}

0800e57c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e57c:	b513      	push	{r0, r1, r4, lr}
 800e57e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e582:	3301      	adds	r3, #1
 800e584:	4604      	mov	r4, r0
 800e586:	d109      	bne.n	800e59c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e588:	4601      	mov	r1, r0
 800e58a:	4668      	mov	r0, sp
 800e58c:	f7ff fd7f 	bl	800e08e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e590:	f8bd 3000 	ldrh.w	r3, [sp]
 800e594:	8423      	strh	r3, [r4, #32]
 800e596:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e59a:	8463      	strh	r3, [r4, #34]	; 0x22
 800e59c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e5a0:	b002      	add	sp, #8
 800e5a2:	bd10      	pop	{r4, pc}

0800e5a4 <_ZN8touchgfx6ScreenC1Ev>:
 800e5a4:	b570      	push	{r4, r5, r6, lr}
 800e5a6:	4605      	mov	r5, r0
 800e5a8:	4b15      	ldr	r3, [pc, #84]	; (800e600 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 800e5aa:	f845 3b04 	str.w	r3, [r5], #4
 800e5ae:	2300      	movs	r3, #0
 800e5b0:	8103      	strh	r3, [r0, #8]
 800e5b2:	8143      	strh	r3, [r0, #10]
 800e5b4:	8183      	strh	r3, [r0, #12]
 800e5b6:	81c3      	strh	r3, [r0, #14]
 800e5b8:	8203      	strh	r3, [r0, #16]
 800e5ba:	8243      	strh	r3, [r0, #18]
 800e5bc:	8283      	strh	r3, [r0, #20]
 800e5be:	82c3      	strh	r3, [r0, #22]
 800e5c0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e5c4:	6203      	str	r3, [r0, #32]
 800e5c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e5ca:	4a0e      	ldr	r2, [pc, #56]	; (800e604 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e5cc:	6343      	str	r3, [r0, #52]	; 0x34
 800e5ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e5d2:	4b0d      	ldr	r3, [pc, #52]	; (800e608 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e5d4:	6042      	str	r2, [r0, #4]
 800e5d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e5da:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800e5dc:	4a0b      	ldr	r2, [pc, #44]	; (800e60c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e5de:	4604      	mov	r4, r0
 800e5e0:	2101      	movs	r1, #1
 800e5e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e5e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e5ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e5ee:	4628      	mov	r0, r5
 800e5f0:	4798      	blx	r3
 800e5f2:	6863      	ldr	r3, [r4, #4]
 800e5f4:	4628      	mov	r0, r5
 800e5f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e5f8:	4631      	mov	r1, r6
 800e5fa:	4798      	blx	r3
 800e5fc:	4620      	mov	r0, r4
 800e5fe:	bd70      	pop	{r4, r5, r6, pc}
 800e600:	0801e960 	.word	0x0801e960
 800e604:	0801daec 	.word	0x0801daec
 800e608:	20008986 	.word	0x20008986
 800e60c:	20008984 	.word	0x20008984

0800e610 <_ZN8touchgfx6Screen4drawEv>:
 800e610:	b507      	push	{r0, r1, r2, lr}
 800e612:	4b09      	ldr	r3, [pc, #36]	; (800e638 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e614:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e618:	4b08      	ldr	r3, [pc, #32]	; (800e63c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e61a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e61e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e622:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e626:	6803      	ldr	r3, [r0, #0]
 800e628:	2100      	movs	r1, #0
 800e62a:	9100      	str	r1, [sp, #0]
 800e62c:	689b      	ldr	r3, [r3, #8]
 800e62e:	4669      	mov	r1, sp
 800e630:	4798      	blx	r3
 800e632:	b003      	add	sp, #12
 800e634:	f85d fb04 	ldr.w	pc, [sp], #4
 800e638:	20008984 	.word	0x20008984
 800e63c:	20008986 	.word	0x20008986

0800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e644:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e648:	2b00      	cmp	r3, #0
 800e64a:	b089      	sub	sp, #36	; 0x24
 800e64c:	4680      	mov	r8, r0
 800e64e:	460c      	mov	r4, r1
 800e650:	4615      	mov	r5, r2
 800e652:	dd0e      	ble.n	800e672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e654:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e658:	2b00      	cmp	r3, #0
 800e65a:	dd0a      	ble.n	800e672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e65c:	4628      	mov	r0, r5
 800e65e:	f7ff ff5d 	bl	800e51c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e662:	4621      	mov	r1, r4
 800e664:	f7fe fc80 	bl	800cf68 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e668:	69eb      	ldr	r3, [r5, #28]
 800e66a:	b928      	cbnz	r0, 800e678 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e66c:	461d      	mov	r5, r3
 800e66e:	2b00      	cmp	r3, #0
 800e670:	d1f4      	bne.n	800e65c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e672:	b009      	add	sp, #36	; 0x24
 800e674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e678:	ae04      	add	r6, sp, #16
 800e67a:	2b00      	cmp	r3, #0
 800e67c:	f000 80b5 	beq.w	800e7ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e680:	682b      	ldr	r3, [r5, #0]
 800e682:	4629      	mov	r1, r5
 800e684:	68db      	ldr	r3, [r3, #12]
 800e686:	a802      	add	r0, sp, #8
 800e688:	4798      	blx	r3
 800e68a:	4628      	mov	r0, r5
 800e68c:	f7ff ff62 	bl	800e554 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e690:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e694:	4407      	add	r7, r0
 800e696:	4628      	mov	r0, r5
 800e698:	f7ff ff70 	bl	800e57c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e69c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e6a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e6a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e6a8:	4418      	add	r0, r3
 800e6aa:	4621      	mov	r1, r4
 800e6ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e6b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e6b4:	b23f      	sxth	r7, r7
 800e6b6:	4630      	mov	r0, r6
 800e6b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e6bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e6c0:	f7fb fe9c 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e6c4:	4628      	mov	r0, r5
 800e6c6:	f7ff ff29 	bl	800e51c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e6ca:	4602      	mov	r2, r0
 800e6cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e6d0:	ab06      	add	r3, sp, #24
 800e6d2:	e883 0003 	stmia.w	r3, {r0, r1}
 800e6d6:	4611      	mov	r1, r2
 800e6d8:	4618      	mov	r0, r3
 800e6da:	f7fb fe8f 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e6de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e6e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e6e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e6ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e6ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e6f2:	4299      	cmp	r1, r3
 800e6f4:	d10b      	bne.n	800e70e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e6f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e6fa:	4552      	cmp	r2, sl
 800e6fc:	d107      	bne.n	800e70e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e6fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e702:	455a      	cmp	r2, fp
 800e704:	d103      	bne.n	800e70e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e706:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e70a:	454a      	cmp	r2, r9
 800e70c:	d06d      	beq.n	800e7ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e70e:	f1bb 0f00 	cmp.w	fp, #0
 800e712:	dd65      	ble.n	800e7e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e714:	f1b9 0f00 	cmp.w	r9, #0
 800e718:	dd62      	ble.n	800e7e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e71a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e71e:	fa1f f08a 	uxth.w	r0, sl
 800e722:	4552      	cmp	r2, sl
 800e724:	9000      	str	r0, [sp, #0]
 800e726:	da12      	bge.n	800e74e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e728:	9301      	str	r3, [sp, #4]
 800e72a:	9b00      	ldr	r3, [sp, #0]
 800e72c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e730:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e734:	1a9a      	subs	r2, r3, r2
 800e736:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e73a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e73e:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e742:	69ea      	ldr	r2, [r5, #28]
 800e744:	4631      	mov	r1, r6
 800e746:	4640      	mov	r0, r8
 800e748:	f7ff ff7a 	bl	800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e74c:	9b01      	ldr	r3, [sp, #4]
 800e74e:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e752:	429a      	cmp	r2, r3
 800e754:	b29f      	uxth	r7, r3
 800e756:	da0d      	bge.n	800e774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e758:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e75c:	1aba      	subs	r2, r7, r2
 800e75e:	f8ad a012 	strh.w	sl, [sp, #18]
 800e762:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e766:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e76a:	69ea      	ldr	r2, [r5, #28]
 800e76c:	4631      	mov	r1, r6
 800e76e:	4640      	mov	r0, r8
 800e770:	f7ff ff66 	bl	800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e774:	8822      	ldrh	r2, [r4, #0]
 800e776:	88a3      	ldrh	r3, [r4, #4]
 800e778:	445f      	add	r7, fp
 800e77a:	4413      	add	r3, r2
 800e77c:	b29b      	uxth	r3, r3
 800e77e:	b2bf      	uxth	r7, r7
 800e780:	b23a      	sxth	r2, r7
 800e782:	b219      	sxth	r1, r3
 800e784:	4291      	cmp	r1, r2
 800e786:	dd0d      	ble.n	800e7a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e788:	1bdb      	subs	r3, r3, r7
 800e78a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e78e:	f8ad a012 	strh.w	sl, [sp, #18]
 800e792:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e796:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e79a:	69ea      	ldr	r2, [r5, #28]
 800e79c:	4631      	mov	r1, r6
 800e79e:	4640      	mov	r0, r8
 800e7a0:	f7ff ff4e 	bl	800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e7a4:	88e2      	ldrh	r2, [r4, #6]
 800e7a6:	8863      	ldrh	r3, [r4, #2]
 800e7a8:	4413      	add	r3, r2
 800e7aa:	9a00      	ldr	r2, [sp, #0]
 800e7ac:	444a      	add	r2, r9
 800e7ae:	b29b      	uxth	r3, r3
 800e7b0:	fa1f f982 	uxth.w	r9, r2
 800e7b4:	fa0f f289 	sxth.w	r2, r9
 800e7b8:	b219      	sxth	r1, r3
 800e7ba:	428a      	cmp	r2, r1
 800e7bc:	da15      	bge.n	800e7ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e7be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e7c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e7c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e7ca:	eba3 0309 	sub.w	r3, r3, r9
 800e7ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e7d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e7d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e7da:	69ea      	ldr	r2, [r5, #28]
 800e7dc:	4631      	mov	r1, r6
 800e7de:	e001      	b.n	800e7e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e7e0:	69ea      	ldr	r2, [r5, #28]
 800e7e2:	4621      	mov	r1, r4
 800e7e4:	4640      	mov	r0, r8
 800e7e6:	f7ff ff2b 	bl	800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e7ea:	4628      	mov	r0, r5
 800e7ec:	f7ff fe96 	bl	800e51c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e7f0:	6861      	ldr	r1, [r4, #4]
 800e7f2:	4602      	mov	r2, r0
 800e7f4:	6820      	ldr	r0, [r4, #0]
 800e7f6:	4633      	mov	r3, r6
 800e7f8:	c303      	stmia	r3!, {r0, r1}
 800e7fa:	4611      	mov	r1, r2
 800e7fc:	4630      	mov	r0, r6
 800e7fe:	f7fb fdfd 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e802:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e806:	2b00      	cmp	r3, #0
 800e808:	f77f af33 	ble.w	800e672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e80c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e810:	2b00      	cmp	r3, #0
 800e812:	f77f af2e 	ble.w	800e672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e816:	4628      	mov	r0, r5
 800e818:	f7ff fe9c 	bl	800e554 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e81c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e820:	1a18      	subs	r0, r3, r0
 800e822:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e826:	4628      	mov	r0, r5
 800e828:	f7ff fea8 	bl	800e57c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e82c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e830:	1a18      	subs	r0, r3, r0
 800e832:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e836:	682b      	ldr	r3, [r5, #0]
 800e838:	4631      	mov	r1, r6
 800e83a:	689b      	ldr	r3, [r3, #8]
 800e83c:	4628      	mov	r0, r5
 800e83e:	4798      	blx	r3
 800e840:	e717      	b.n	800e672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e842 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e842:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e844:	aa02      	add	r2, sp, #8
 800e846:	2300      	movs	r3, #0
 800e848:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e84c:	4604      	mov	r4, r0
 800e84e:	3004      	adds	r0, #4
 800e850:	460d      	mov	r5, r1
 800e852:	f7fb feab 	bl	800a5ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e856:	9a01      	ldr	r2, [sp, #4]
 800e858:	b11a      	cbz	r2, 800e862 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e85a:	4629      	mov	r1, r5
 800e85c:	4620      	mov	r0, r4
 800e85e:	f7ff feef 	bl	800e640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e862:	b003      	add	sp, #12
 800e864:	bd30      	pop	{r4, r5, pc}

0800e866 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e866:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e868:	4602      	mov	r2, r0
 800e86a:	4604      	mov	r4, r0
 800e86c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e870:	460d      	mov	r5, r1
 800e872:	6851      	ldr	r1, [r2, #4]
 800e874:	466b      	mov	r3, sp
 800e876:	c303      	stmia	r3!, {r0, r1}
 800e878:	4629      	mov	r1, r5
 800e87a:	4668      	mov	r0, sp
 800e87c:	f7fb fdbe 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 800e880:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e884:	4669      	mov	r1, sp
 800e886:	b123      	cbz	r3, 800e892 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e888:	4620      	mov	r0, r4
 800e88a:	f7ff ffda 	bl	800e842 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e88e:	b003      	add	sp, #12
 800e890:	bd30      	pop	{r4, r5, pc}
 800e892:	1d20      	adds	r0, r4, #4
 800e894:	f7fb fe51 	bl	800a53a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e898:	e7f9      	b.n	800e88e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e89a <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e89a:	680a      	ldr	r2, [r1, #0]
 800e89c:	460b      	mov	r3, r1
 800e89e:	6992      	ldr	r2, [r2, #24]
 800e8a0:	1d01      	adds	r1, r0, #4
 800e8a2:	4618      	mov	r0, r3
 800e8a4:	4710      	bx	r2

0800e8a6 <_ZN8touchgfx12TextProviderC1Ev>:
 800e8a6:	b510      	push	{r4, lr}
 800e8a8:	2300      	movs	r3, #0
 800e8aa:	2201      	movs	r2, #1
 800e8ac:	4604      	mov	r4, r0
 800e8ae:	e9c0 3300 	strd	r3, r3, [r0]
 800e8b2:	60c3      	str	r3, [r0, #12]
 800e8b4:	7403      	strb	r3, [r0, #16]
 800e8b6:	82c3      	strh	r3, [r0, #22]
 800e8b8:	8303      	strh	r3, [r0, #24]
 800e8ba:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e8bc:	8603      	strh	r3, [r0, #48]	; 0x30
 800e8be:	86c3      	strh	r3, [r0, #54]	; 0x36
 800e8c0:	8703      	strh	r3, [r0, #56]	; 0x38
 800e8c2:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e8c4:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800e8c8:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800e8cc:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e8d0:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800e8d4:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800e8d8:	f7f5 f936 	bl	8003b48 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e8dc:	4620      	mov	r0, r4
 800e8de:	bd10      	pop	{r4, pc}

0800e8e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e8e0:	b530      	push	{r4, r5, lr}
 800e8e2:	2500      	movs	r5, #0
 800e8e4:	2401      	movs	r4, #1
 800e8e6:	6843      	ldr	r3, [r0, #4]
 800e8e8:	b913      	cbnz	r3, 800e8f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e8ea:	6803      	ldr	r3, [r0, #0]
 800e8ec:	b1f3      	cbz	r3, 800e92c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e8ee:	6043      	str	r3, [r0, #4]
 800e8f0:	7c03      	ldrb	r3, [r0, #16]
 800e8f2:	b143      	cbz	r3, 800e906 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e8f4:	68c3      	ldr	r3, [r0, #12]
 800e8f6:	b12b      	cbz	r3, 800e904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e8f8:	881a      	ldrh	r2, [r3, #0]
 800e8fa:	b11a      	cbz	r2, 800e904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e8fc:	1c9a      	adds	r2, r3, #2
 800e8fe:	60c2      	str	r2, [r0, #12]
 800e900:	8818      	ldrh	r0, [r3, #0]
 800e902:	bd30      	pop	{r4, r5, pc}
 800e904:	7405      	strb	r5, [r0, #16]
 800e906:	6843      	ldr	r3, [r0, #4]
 800e908:	8819      	ldrh	r1, [r3, #0]
 800e90a:	b179      	cbz	r1, 800e92c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e90c:	1c9a      	adds	r2, r3, #2
 800e90e:	2902      	cmp	r1, #2
 800e910:	6042      	str	r2, [r0, #4]
 800e912:	d1f5      	bne.n	800e900 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e914:	6883      	ldr	r3, [r0, #8]
 800e916:	1d1a      	adds	r2, r3, #4
 800e918:	6082      	str	r2, [r0, #8]
 800e91a:	681b      	ldr	r3, [r3, #0]
 800e91c:	60c3      	str	r3, [r0, #12]
 800e91e:	2b00      	cmp	r3, #0
 800e920:	d0e1      	beq.n	800e8e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e922:	881b      	ldrh	r3, [r3, #0]
 800e924:	2b00      	cmp	r3, #0
 800e926:	d0de      	beq.n	800e8e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e928:	7404      	strb	r4, [r0, #16]
 800e92a:	e7dc      	b.n	800e8e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e92c:	2000      	movs	r0, #0
 800e92e:	e7e8      	b.n	800e902 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e930 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800e930:	b410      	push	{r4}
 800e932:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e934:	2300      	movs	r3, #0
 800e936:	6082      	str	r2, [r0, #8]
 800e938:	6001      	str	r1, [r0, #0]
 800e93a:	6043      	str	r3, [r0, #4]
 800e93c:	60c3      	str	r3, [r0, #12]
 800e93e:	7403      	strb	r3, [r0, #16]
 800e940:	8603      	strh	r3, [r0, #48]	; 0x30
 800e942:	8303      	strh	r3, [r0, #24]
 800e944:	8703      	strh	r3, [r0, #56]	; 0x38
 800e946:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e94a:	f7f5 b8fd 	b.w	8003b48 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e94e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e94e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e950:	4605      	mov	r5, r0
 800e952:	4608      	mov	r0, r1
 800e954:	b1e9      	cbz	r1, 800e992 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e956:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e95a:	460b      	mov	r3, r1
 800e95c:	f101 0708 	add.w	r7, r1, #8
 800e960:	4622      	mov	r2, r4
 800e962:	6818      	ldr	r0, [r3, #0]
 800e964:	6859      	ldr	r1, [r3, #4]
 800e966:	4626      	mov	r6, r4
 800e968:	c603      	stmia	r6!, {r0, r1}
 800e96a:	3308      	adds	r3, #8
 800e96c:	42bb      	cmp	r3, r7
 800e96e:	4634      	mov	r4, r6
 800e970:	d1f7      	bne.n	800e962 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e972:	6818      	ldr	r0, [r3, #0]
 800e974:	6030      	str	r0, [r6, #0]
 800e976:	889b      	ldrh	r3, [r3, #4]
 800e978:	80b3      	strh	r3, [r6, #4]
 800e97a:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e97e:	015b      	lsls	r3, r3, #5
 800e980:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e984:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e988:	430b      	orrs	r3, r1
 800e98a:	425b      	negs	r3, r3
 800e98c:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e990:	4610      	mov	r0, r2
 800e992:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e994 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e994:	b538      	push	{r3, r4, r5, lr}
 800e996:	460c      	mov	r4, r1
 800e998:	6811      	ldr	r1, [r2, #0]
 800e99a:	4610      	mov	r0, r2
 800e99c:	68cd      	ldr	r5, [r1, #12]
 800e99e:	4619      	mov	r1, r3
 800e9a0:	47a8      	blx	r5
 800e9a2:	2800      	cmp	r0, #0
 800e9a4:	bf08      	it	eq
 800e9a6:	4620      	moveq	r0, r4
 800e9a8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e9ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e9ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e9ae:	4604      	mov	r4, r0
 800e9b0:	4615      	mov	r5, r2
 800e9b2:	4608      	mov	r0, r1
 800e9b4:	b93a      	cbnz	r2, 800e9c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e9b6:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e9ba:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e9be:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e9c2:	4628      	mov	r0, r5
 800e9c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9c6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e9ca:	8893      	ldrh	r3, [r2, #4]
 800e9cc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e9d0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e9d4:	79ee      	ldrb	r6, [r5, #7]
 800e9d6:	4316      	orrs	r6, r2
 800e9d8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e9dc:	189a      	adds	r2, r3, r2
 800e9de:	b291      	uxth	r1, r2
 800e9e0:	291d      	cmp	r1, #29
 800e9e2:	b2b7      	uxth	r7, r6
 800e9e4:	f200 8083 	bhi.w	800eaee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e9e8:	2201      	movs	r2, #1
 800e9ea:	408a      	lsls	r2, r1
 800e9ec:	4978      	ldr	r1, [pc, #480]	; (800ebd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e9ee:	420a      	tst	r2, r1
 800e9f0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e9f4:	d12d      	bne.n	800ea52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e9f6:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e9fa:	d078      	beq.n	800eaee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e9fc:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800ea00:	462b      	mov	r3, r5
 800ea02:	f105 0e08 	add.w	lr, r5, #8
 800ea06:	4615      	mov	r5, r2
 800ea08:	6818      	ldr	r0, [r3, #0]
 800ea0a:	6859      	ldr	r1, [r3, #4]
 800ea0c:	4694      	mov	ip, r2
 800ea0e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ea12:	3308      	adds	r3, #8
 800ea14:	4573      	cmp	r3, lr
 800ea16:	4662      	mov	r2, ip
 800ea18:	d1f6      	bne.n	800ea08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800ea1a:	6818      	ldr	r0, [r3, #0]
 800ea1c:	f8cc 0000 	str.w	r0, [ip]
 800ea20:	889b      	ldrh	r3, [r3, #4]
 800ea22:	f8ac 3004 	strh.w	r3, [ip, #4]
 800ea26:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800ea2a:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800ea2e:	b2b3      	uxth	r3, r6
 800ea30:	1aca      	subs	r2, r1, r3
 800ea32:	b292      	uxth	r2, r2
 800ea34:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800ea38:	10d2      	asrs	r2, r2, #3
 800ea3a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800ea3e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800ea42:	4302      	orrs	r2, r0
 800ea44:	1bcf      	subs	r7, r1, r7
 800ea46:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800ea4a:	1afb      	subs	r3, r7, r3
 800ea4c:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800ea50:	e7b7      	b.n	800e9c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800ea52:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ea54:	b92b      	cbnz	r3, 800ea62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800ea56:	4b5f      	ldr	r3, [pc, #380]	; (800ebd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800ea58:	4a5f      	ldr	r2, [pc, #380]	; (800ebd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800ea5a:	4860      	ldr	r0, [pc, #384]	; (800ebdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800ea5c:	21c0      	movs	r1, #192	; 0xc0
 800ea5e:	f00c fda3 	bl	801b5a8 <__assert_func>
 800ea62:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800ea64:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea68:	8b59      	ldrh	r1, [r3, #26]
 800ea6a:	f640 6333 	movw	r3, #3635	; 0xe33
 800ea6e:	4299      	cmp	r1, r3
 800ea70:	d110      	bne.n	800ea94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800ea72:	6803      	ldr	r3, [r0, #0]
 800ea74:	68db      	ldr	r3, [r3, #12]
 800ea76:	4798      	blx	r3
 800ea78:	7b41      	ldrb	r1, [r0, #13]
 800ea7a:	00cb      	lsls	r3, r1, #3
 800ea7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ea80:	7a03      	ldrb	r3, [r0, #8]
 800ea82:	0648      	lsls	r0, r1, #25
 800ea84:	ea43 0302 	orr.w	r3, r3, r2
 800ea88:	bf44      	itt	mi
 800ea8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ea8e:	b21b      	sxthmi	r3, r3
 800ea90:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ea94:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800ea98:	443b      	add	r3, r7
 800ea9a:	4433      	add	r3, r6
 800ea9c:	b29b      	uxth	r3, r3
 800ea9e:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800eaa2:	462a      	mov	r2, r5
 800eaa4:	f105 0c08 	add.w	ip, r5, #8
 800eaa8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800eaac:	4635      	mov	r5, r6
 800eaae:	6810      	ldr	r0, [r2, #0]
 800eab0:	6851      	ldr	r1, [r2, #4]
 800eab2:	4637      	mov	r7, r6
 800eab4:	c703      	stmia	r7!, {r0, r1}
 800eab6:	3208      	adds	r2, #8
 800eab8:	4562      	cmp	r2, ip
 800eaba:	463e      	mov	r6, r7
 800eabc:	d1f7      	bne.n	800eaae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800eabe:	6810      	ldr	r0, [r2, #0]
 800eac0:	6038      	str	r0, [r7, #0]
 800eac2:	8892      	ldrh	r2, [r2, #4]
 800eac4:	80ba      	strh	r2, [r7, #4]
 800eac6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800eaca:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800eace:	10db      	asrs	r3, r3, #3
 800ead0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ead4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ead8:	4313      	orrs	r3, r2
 800eada:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800eade:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800eae2:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800eae6:	1a9b      	subs	r3, r3, r2
 800eae8:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800eaec:	e769      	b.n	800e9c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eaee:	f023 0204 	bic.w	r2, r3, #4
 800eaf2:	f640 611b 	movw	r1, #3611	; 0xe1b
 800eaf6:	428a      	cmp	r2, r1
 800eaf8:	d003      	beq.n	800eb02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800eafa:	f640 621d 	movw	r2, #3613	; 0xe1d
 800eafe:	4293      	cmp	r3, r2
 800eb00:	d120      	bne.n	800eb44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800eb02:	3b01      	subs	r3, #1
 800eb04:	4602      	mov	r2, r0
 800eb06:	b29b      	uxth	r3, r3
 800eb08:	4629      	mov	r1, r5
 800eb0a:	4620      	mov	r0, r4
 800eb0c:	f7ff ff42 	bl	800e994 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800eb10:	7b41      	ldrb	r1, [r0, #13]
 800eb12:	00cb      	lsls	r3, r1, #3
 800eb14:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eb18:	7a03      	ldrb	r3, [r0, #8]
 800eb1a:	0649      	lsls	r1, r1, #25
 800eb1c:	ea43 0302 	orr.w	r3, r3, r2
 800eb20:	bf44      	itt	mi
 800eb22:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb26:	b21b      	sxthmi	r3, r3
 800eb28:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800eb2c:	7b6b      	ldrb	r3, [r5, #13]
 800eb2e:	7aaa      	ldrb	r2, [r5, #10]
 800eb30:	005b      	lsls	r3, r3, #1
 800eb32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eb36:	4313      	orrs	r3, r2
 800eb38:	115a      	asrs	r2, r3, #5
 800eb3a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800eb3e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800eb42:	e036      	b.n	800ebb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800eb44:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800eb48:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800eb4c:	7a2a      	ldrb	r2, [r5, #8]
 800eb4e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800eb52:	ea42 0201 	orr.w	r2, r2, r1
 800eb56:	bf1c      	itt	ne
 800eb58:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800eb5c:	b212      	sxthne	r2, r2
 800eb5e:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800eb62:	f640 6109 	movw	r1, #3593	; 0xe09
 800eb66:	f023 0210 	bic.w	r2, r3, #16
 800eb6a:	428a      	cmp	r2, r1
 800eb6c:	d003      	beq.n	800eb76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800eb6e:	f640 6213 	movw	r2, #3603	; 0xe13
 800eb72:	4293      	cmp	r3, r2
 800eb74:	d12a      	bne.n	800ebcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800eb76:	7b6e      	ldrb	r6, [r5, #13]
 800eb78:	0076      	lsls	r6, r6, #1
 800eb7a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800eb7e:	7aae      	ldrb	r6, [r5, #10]
 800eb80:	4316      	orrs	r6, r2
 800eb82:	f640 6213 	movw	r2, #3603	; 0xe13
 800eb86:	4293      	cmp	r3, r2
 800eb88:	bf18      	it	ne
 800eb8a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800eb8e:	4602      	mov	r2, r0
 800eb90:	bf14      	ite	ne
 800eb92:	b29b      	uxthne	r3, r3
 800eb94:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800eb98:	4629      	mov	r1, r5
 800eb9a:	4620      	mov	r0, r4
 800eb9c:	f7ff fefa 	bl	800e994 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800eba0:	7b43      	ldrb	r3, [r0, #13]
 800eba2:	7a82      	ldrb	r2, [r0, #10]
 800eba4:	005b      	lsls	r3, r3, #1
 800eba6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ebaa:	4313      	orrs	r3, r2
 800ebac:	1af6      	subs	r6, r6, r3
 800ebae:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800ebb2:	7b69      	ldrb	r1, [r5, #13]
 800ebb4:	00cb      	lsls	r3, r1, #3
 800ebb6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ebba:	7a2b      	ldrb	r3, [r5, #8]
 800ebbc:	4313      	orrs	r3, r2
 800ebbe:	064a      	lsls	r2, r1, #25
 800ebc0:	bf44      	itt	mi
 800ebc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ebc6:	b21b      	sxthmi	r3, r3
 800ebc8:	1bdb      	subs	r3, r3, r7
 800ebca:	e73f      	b.n	800ea4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800ebcc:	2300      	movs	r3, #0
 800ebce:	e7b6      	b.n	800eb3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800ebd0:	3fc00079 	.word	0x3fc00079
 800ebd4:	0801e98c 	.word	0x0801e98c
 800ebd8:	0801ebfe 	.word	0x0801ebfe
 800ebdc:	0801e995 	.word	0x0801e995

0800ebe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ebe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebe4:	4604      	mov	r4, r0
 800ebe6:	b942      	cbnz	r2, 800ebfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ebe8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ebec:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800ebf0:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800ebf4:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800ebf8:	e046      	b.n	800ec88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800ebfa:	7b51      	ldrb	r1, [r2, #13]
 800ebfc:	8893      	ldrh	r3, [r2, #4]
 800ebfe:	010f      	lsls	r7, r1, #4
 800ec00:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ec04:	79d7      	ldrb	r7, [r2, #7]
 800ec06:	4307      	orrs	r7, r0
 800ec08:	2f04      	cmp	r7, #4
 800ec0a:	b2bd      	uxth	r5, r7
 800ec0c:	bfcc      	ite	gt
 800ec0e:	08bf      	lsrgt	r7, r7, #2
 800ec10:	2701      	movle	r7, #1
 800ec12:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800ec16:	f200 80ab 	bhi.w	800ed70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800ec1a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800ec1e:	4283      	cmp	r3, r0
 800ec20:	d216      	bcs.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ec22:	f240 605b 	movw	r0, #1627	; 0x65b
 800ec26:	4283      	cmp	r3, r0
 800ec28:	d859      	bhi.n	800ecde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800ec2a:	f240 6057 	movw	r0, #1623	; 0x657
 800ec2e:	4283      	cmp	r3, r0
 800ec30:	d20e      	bcs.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ec32:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ec36:	d24a      	bcs.n	800ecce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800ec38:	f240 604e 	movw	r0, #1614	; 0x64e
 800ec3c:	4283      	cmp	r3, r0
 800ec3e:	d207      	bcs.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ec40:	f240 601a 	movw	r0, #1562	; 0x61a
 800ec44:	4283      	cmp	r3, r0
 800ec46:	d02a      	beq.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ec48:	d821      	bhi.n	800ec8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800ec4a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800ec4e:	d35b      	bcc.n	800ed08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ec50:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800ec54:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ec58:	f040 80d0 	bne.w	800edfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ec5c:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800ec60:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ec64:	f040 80ca 	bne.w	800edfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ec68:	00cb      	lsls	r3, r1, #3
 800ec6a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ec6e:	7a13      	ldrb	r3, [r2, #8]
 800ec70:	0649      	lsls	r1, r1, #25
 800ec72:	ea43 0300 	orr.w	r3, r3, r0
 800ec76:	bf44      	itt	mi
 800ec78:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec7c:	b21b      	sxthmi	r3, r3
 800ec7e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ec82:	1b5d      	subs	r5, r3, r5
 800ec84:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ec88:	4610      	mov	r0, r2
 800ec8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec8e:	f240 604b 	movw	r0, #1611	; 0x64b
 800ec92:	4283      	cmp	r3, r0
 800ec94:	d338      	bcc.n	800ed08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ec96:	f240 604c 	movw	r0, #1612	; 0x64c
 800ec9a:	4283      	cmp	r3, r0
 800ec9c:	d9d8      	bls.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ec9e:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800eca2:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800eca6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ecaa:	f040 80f1 	bne.w	800ee90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ecae:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ecb2:	f040 80ed 	bne.w	800ee90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ecb6:	00cb      	lsls	r3, r1, #3
 800ecb8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ecbc:	7a13      	ldrb	r3, [r2, #8]
 800ecbe:	064e      	lsls	r6, r1, #25
 800ecc0:	ea43 0300 	orr.w	r3, r3, r0
 800ecc4:	bf44      	itt	mi
 800ecc6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ecca:	b21b      	sxthmi	r3, r3
 800eccc:	e7d9      	b.n	800ec82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800ecce:	f240 6054 	movw	r0, #1620	; 0x654
 800ecd2:	4283      	cmp	r3, r0
 800ecd4:	d8e3      	bhi.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ecd6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ecda:	d9e0      	bls.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ecdc:	e7b8      	b.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ecde:	f240 6074 	movw	r0, #1652	; 0x674
 800ece2:	4283      	cmp	r3, r0
 800ece4:	d0b4      	beq.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ece6:	d82d      	bhi.n	800ed44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800ece8:	f240 605e 	movw	r0, #1630	; 0x65e
 800ecec:	4283      	cmp	r3, r0
 800ecee:	d804      	bhi.n	800ecfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800ecf0:	f240 605d 	movw	r0, #1629	; 0x65d
 800ecf4:	4283      	cmp	r3, r0
 800ecf6:	d3d2      	bcc.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ecf8:	e7aa      	b.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ecfa:	f240 605f 	movw	r0, #1631	; 0x65f
 800ecfe:	4283      	cmp	r3, r0
 800ed00:	d0cd      	beq.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ed02:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800ed06:	d0a3      	beq.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed08:	00cb      	lsls	r3, r1, #3
 800ed0a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ed0e:	7a13      	ldrb	r3, [r2, #8]
 800ed10:	0649      	lsls	r1, r1, #25
 800ed12:	ea43 0300 	orr.w	r3, r3, r0
 800ed16:	bf44      	itt	mi
 800ed18:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed1c:	b21b      	sxthmi	r3, r3
 800ed1e:	1b5d      	subs	r5, r3, r5
 800ed20:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ed24:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ed28:	7b53      	ldrb	r3, [r2, #13]
 800ed2a:	015b      	lsls	r3, r3, #5
 800ed2c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ed30:	7993      	ldrb	r3, [r2, #6]
 800ed32:	430b      	orrs	r3, r1
 800ed34:	005b      	lsls	r3, r3, #1
 800ed36:	2105      	movs	r1, #5
 800ed38:	fb93 f3f1 	sdiv	r3, r3, r1
 800ed3c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ed40:	440b      	add	r3, r1
 800ed42:	e757      	b.n	800ebf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ed44:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ed48:	4283      	cmp	r3, r0
 800ed4a:	d809      	bhi.n	800ed60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800ed4c:	f240 60df 	movw	r0, #1759	; 0x6df
 800ed50:	4283      	cmp	r3, r0
 800ed52:	f4bf af7d 	bcs.w	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed56:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ed5a:	2b05      	cmp	r3, #5
 800ed5c:	d8d4      	bhi.n	800ed08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ed5e:	e777      	b.n	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed60:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ed64:	4283      	cmp	r3, r0
 800ed66:	d09a      	beq.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ed68:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ed6c:	4283      	cmp	r3, r0
 800ed6e:	e7ca      	b.n	800ed06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800ed70:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ed74:	d22b      	bcs.n	800edce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800ed76:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ed7a:	4283      	cmp	r3, r0
 800ed7c:	d28f      	bcs.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ed7e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ed82:	4283      	cmp	r3, r0
 800ed84:	d816      	bhi.n	800edb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800ed86:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ed8a:	4283      	cmp	r3, r0
 800ed8c:	f4bf af60 	bcs.w	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed90:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ed94:	4283      	cmp	r3, r0
 800ed96:	d80a      	bhi.n	800edae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800ed98:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ed9c:	4283      	cmp	r3, r0
 800ed9e:	f4bf af57 	bcs.w	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eda2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800eda6:	4283      	cmp	r3, r0
 800eda8:	f43f af79 	beq.w	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800edac:	e7ac      	b.n	800ed08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800edae:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800edb2:	e7f8      	b.n	800eda6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800edb4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800edb8:	4283      	cmp	r3, r0
 800edba:	d802      	bhi.n	800edc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800edbc:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800edc0:	e798      	b.n	800ecf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800edc2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800edc6:	4283      	cmp	r3, r0
 800edc8:	f47f af42 	bne.w	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800edcc:	e767      	b.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800edce:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800edd2:	4283      	cmp	r3, r0
 800edd4:	f43f af63 	beq.w	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800edd8:	d802      	bhi.n	800ede0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800edda:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800edde:	e7f2      	b.n	800edc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800ede0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ede4:	4283      	cmp	r3, r0
 800ede6:	d805      	bhi.n	800edf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800ede8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800edec:	4283      	cmp	r3, r0
 800edee:	f4ff af2f 	bcc.w	800ec50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800edf2:	e754      	b.n	800ec9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800edf4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800edf8:	4283      	cmp	r3, r0
 800edfa:	e7af      	b.n	800ed5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800edfc:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800ee00:	4617      	mov	r7, r2
 800ee02:	f102 0808 	add.w	r8, r2, #8
 800ee06:	4666      	mov	r6, ip
 800ee08:	6838      	ldr	r0, [r7, #0]
 800ee0a:	6879      	ldr	r1, [r7, #4]
 800ee0c:	46e6      	mov	lr, ip
 800ee0e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800ee12:	3708      	adds	r7, #8
 800ee14:	4547      	cmp	r7, r8
 800ee16:	46f4      	mov	ip, lr
 800ee18:	d1f6      	bne.n	800ee08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800ee1a:	6838      	ldr	r0, [r7, #0]
 800ee1c:	f8ce 0000 	str.w	r0, [lr]
 800ee20:	88b9      	ldrh	r1, [r7, #4]
 800ee22:	f8ae 1004 	strh.w	r1, [lr, #4]
 800ee26:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800ee2a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ee2e:	d009      	beq.n	800ee44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800ee30:	7b51      	ldrb	r1, [r2, #13]
 800ee32:	7992      	ldrb	r2, [r2, #6]
 800ee34:	0149      	lsls	r1, r1, #5
 800ee36:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ee3a:	4311      	orrs	r1, r2
 800ee3c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ee40:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800ee44:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ee48:	d00d      	beq.n	800ee66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800ee4a:	442b      	add	r3, r5
 800ee4c:	b29b      	uxth	r3, r3
 800ee4e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800ee52:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800ee56:	10db      	asrs	r3, r3, #3
 800ee58:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ee5c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ee60:	4313      	orrs	r3, r2
 800ee62:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800ee66:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800ee6a:	00cb      	lsls	r3, r1, #3
 800ee6c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ee70:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800ee74:	064f      	lsls	r7, r1, #25
 800ee76:	ea43 0302 	orr.w	r3, r3, r2
 800ee7a:	bf44      	itt	mi
 800ee7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ee80:	b21b      	sxthmi	r3, r3
 800ee82:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ee86:	1b5d      	subs	r5, r3, r5
 800ee88:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ee8c:	4632      	mov	r2, r6
 800ee8e:	e6fb      	b.n	800ec88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800ee90:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800ee94:	4694      	mov	ip, r2
 800ee96:	f102 0908 	add.w	r9, r2, #8
 800ee9a:	4676      	mov	r6, lr
 800ee9c:	f8dc 0000 	ldr.w	r0, [ip]
 800eea0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800eea4:	46f0      	mov	r8, lr
 800eea6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800eeaa:	f10c 0c08 	add.w	ip, ip, #8
 800eeae:	45cc      	cmp	ip, r9
 800eeb0:	46c6      	mov	lr, r8
 800eeb2:	d1f3      	bne.n	800ee9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800eeb4:	f8dc 0000 	ldr.w	r0, [ip]
 800eeb8:	f8c8 0000 	str.w	r0, [r8]
 800eebc:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800eec0:	f8a8 1004 	strh.w	r1, [r8, #4]
 800eec4:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800eec8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eecc:	d009      	beq.n	800eee2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800eece:	7b51      	ldrb	r1, [r2, #13]
 800eed0:	7992      	ldrb	r2, [r2, #6]
 800eed2:	0149      	lsls	r1, r1, #5
 800eed4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800eed8:	4311      	orrs	r1, r2
 800eeda:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800eede:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800eee2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eee6:	d00d      	beq.n	800ef04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800eee8:	1bdb      	subs	r3, r3, r7
 800eeea:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800eeee:	b29b      	uxth	r3, r3
 800eef0:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800eef4:	10db      	asrs	r3, r3, #3
 800eef6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800eefa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800eefe:	4313      	orrs	r3, r2
 800ef00:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800ef04:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800ef08:	00cb      	lsls	r3, r1, #3
 800ef0a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ef0e:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800ef12:	0648      	lsls	r0, r1, #25
 800ef14:	ea43 0302 	orr.w	r3, r3, r2
 800ef18:	bf44      	itt	mi
 800ef1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ef1e:	b21b      	sxthmi	r3, r3
 800ef20:	e7b1      	b.n	800ee86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800ef24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ef24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef28:	461e      	mov	r6, r3
 800ef2a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ef2c:	4604      	mov	r4, r0
 800ef2e:	4617      	mov	r7, r2
 800ef30:	b92b      	cbnz	r3, 800ef3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800ef32:	4b25      	ldr	r3, [pc, #148]	; (800efc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800ef34:	4a25      	ldr	r2, [pc, #148]	; (800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800ef36:	4826      	ldr	r0, [pc, #152]	; (800efd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800ef38:	21c0      	movs	r1, #192	; 0xc0
 800ef3a:	f00c fb35 	bl	801b5a8 <__assert_func>
 800ef3e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ef40:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ef44:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ef48:	f7f4 fd5a 	bl	8003a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ef4c:	4605      	mov	r5, r0
 800ef4e:	b918      	cbnz	r0, 800ef58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800ef50:	6030      	str	r0, [r6, #0]
 800ef52:	4628      	mov	r0, r5
 800ef54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef58:	683b      	ldr	r3, [r7, #0]
 800ef5a:	4601      	mov	r1, r0
 800ef5c:	68db      	ldr	r3, [r3, #12]
 800ef5e:	4638      	mov	r0, r7
 800ef60:	4798      	blx	r3
 800ef62:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ef66:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ef6a:	4602      	mov	r2, r0
 800ef6c:	6030      	str	r0, [r6, #0]
 800ef6e:	d213      	bcs.n	800ef98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800ef70:	4643      	mov	r3, r8
 800ef72:	4639      	mov	r1, r7
 800ef74:	4620      	mov	r0, r4
 800ef76:	f7ff fe33 	bl	800ebe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ef7a:	6030      	str	r0, [r6, #0]
 800ef7c:	6833      	ldr	r3, [r6, #0]
 800ef7e:	b143      	cbz	r3, 800ef92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800ef80:	7b5a      	ldrb	r2, [r3, #13]
 800ef82:	7a9b      	ldrb	r3, [r3, #10]
 800ef84:	0052      	lsls	r2, r2, #1
 800ef86:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ef8a:	4313      	orrs	r3, r2
 800ef8c:	bf0c      	ite	eq
 800ef8e:	2301      	moveq	r3, #1
 800ef90:	2300      	movne	r3, #0
 800ef92:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800ef96:	e7dc      	b.n	800ef52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800ef98:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ef9c:	b29b      	uxth	r3, r3
 800ef9e:	2b7f      	cmp	r3, #127	; 0x7f
 800efa0:	d804      	bhi.n	800efac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800efa2:	4639      	mov	r1, r7
 800efa4:	4620      	mov	r0, r4
 800efa6:	f7ff fd01 	bl	800e9ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800efaa:	e7e6      	b.n	800ef7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800efac:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800efb0:	2b00      	cmp	r3, #0
 800efb2:	d0e3      	beq.n	800ef7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800efb4:	f640 1302 	movw	r3, #2306	; 0x902
 800efb8:	429d      	cmp	r5, r3
 800efba:	d1df      	bne.n	800ef7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800efbc:	4601      	mov	r1, r0
 800efbe:	4620      	mov	r0, r4
 800efc0:	f7ff fcc5 	bl	800e94e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800efc4:	e7d9      	b.n	800ef7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800efc6:	bf00      	nop
 800efc8:	0801e98c 	.word	0x0801e98c
 800efcc:	0801ebfe 	.word	0x0801ebfe
 800efd0:	0801e995 	.word	0x0801e995

0800efd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800efd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800efd8:	461e      	mov	r6, r3
 800efda:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800efdc:	4604      	mov	r4, r0
 800efde:	4617      	mov	r7, r2
 800efe0:	b92b      	cbnz	r3, 800efee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800efe2:	4b26      	ldr	r3, [pc, #152]	; (800f07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800efe4:	4a26      	ldr	r2, [pc, #152]	; (800f080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800efe6:	4827      	ldr	r0, [pc, #156]	; (800f084 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800efe8:	21c0      	movs	r1, #192	; 0xc0
 800efea:	f00c fadd 	bl	801b5a8 <__assert_func>
 800efee:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800eff0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800eff4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800eff8:	f7f4 fd02 	bl	8003a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800effc:	4605      	mov	r5, r0
 800effe:	b918      	cbnz	r0, 800f008 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800f000:	6030      	str	r0, [r6, #0]
 800f002:	4628      	mov	r0, r5
 800f004:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f008:	683b      	ldr	r3, [r7, #0]
 800f00a:	4601      	mov	r1, r0
 800f00c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800f010:	4638      	mov	r0, r7
 800f012:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800f016:	47c8      	blx	r9
 800f018:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800f01c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800f020:	4602      	mov	r2, r0
 800f022:	6030      	str	r0, [r6, #0]
 800f024:	d213      	bcs.n	800f04e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800f026:	4643      	mov	r3, r8
 800f028:	4639      	mov	r1, r7
 800f02a:	4620      	mov	r0, r4
 800f02c:	f7ff fdd8 	bl	800ebe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f030:	6030      	str	r0, [r6, #0]
 800f032:	6833      	ldr	r3, [r6, #0]
 800f034:	b143      	cbz	r3, 800f048 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800f036:	7b5a      	ldrb	r2, [r3, #13]
 800f038:	7a9b      	ldrb	r3, [r3, #10]
 800f03a:	0052      	lsls	r2, r2, #1
 800f03c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f040:	4313      	orrs	r3, r2
 800f042:	bf0c      	ite	eq
 800f044:	2301      	moveq	r3, #1
 800f046:	2300      	movne	r3, #0
 800f048:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800f04c:	e7d9      	b.n	800f002 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800f04e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800f052:	b29b      	uxth	r3, r3
 800f054:	2b7f      	cmp	r3, #127	; 0x7f
 800f056:	d804      	bhi.n	800f062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800f058:	4639      	mov	r1, r7
 800f05a:	4620      	mov	r0, r4
 800f05c:	f7ff fca6 	bl	800e9ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f060:	e7e6      	b.n	800f030 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800f062:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800f066:	2b00      	cmp	r3, #0
 800f068:	d0e3      	beq.n	800f032 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800f06a:	f640 1302 	movw	r3, #2306	; 0x902
 800f06e:	429d      	cmp	r5, r3
 800f070:	d1df      	bne.n	800f032 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800f072:	4601      	mov	r1, r0
 800f074:	4620      	mov	r0, r4
 800f076:	f7ff fc6a 	bl	800e94e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f07a:	e7d9      	b.n	800f030 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800f07c:	0801e98c 	.word	0x0801e98c
 800f080:	0801ebfe 	.word	0x0801ebfe
 800f084:	0801e995 	.word	0x0801e995

0800f088 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f088:	b510      	push	{r4, lr}
 800f08a:	4604      	mov	r4, r0
 800f08c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800f08e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f090:	b9d9      	cbnz	r1, 800f0ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800f092:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f094:	2b0a      	cmp	r3, #10
 800f096:	d036      	beq.n	800f106 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800f098:	4620      	mov	r0, r4
 800f09a:	f7ff fc21 	bl	800e8e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f09e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f0a0:	2b09      	cmp	r3, #9
 800f0a2:	d906      	bls.n	800f0b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800f0a4:	4b18      	ldr	r3, [pc, #96]	; (800f108 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800f0a6:	4a19      	ldr	r2, [pc, #100]	; (800f10c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800f0a8:	4819      	ldr	r0, [pc, #100]	; (800f110 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800f0aa:	f44f 7182 	mov.w	r1, #260	; 0x104
 800f0ae:	f00c fa7b 	bl	801b5a8 <__assert_func>
 800f0b2:	1c5a      	adds	r2, r3, #1
 800f0b4:	8622      	strh	r2, [r4, #48]	; 0x30
 800f0b6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800f0b8:	4413      	add	r3, r2
 800f0ba:	b29b      	uxth	r3, r3
 800f0bc:	2b09      	cmp	r3, #9
 800f0be:	bf88      	it	hi
 800f0c0:	3b0a      	subhi	r3, #10
 800f0c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f0c6:	8358      	strh	r0, [r3, #26]
 800f0c8:	e7e3      	b.n	800f092 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800f0ca:	2b0a      	cmp	r3, #10
 800f0cc:	d01b      	beq.n	800f106 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800f0ce:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f0d0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f0d4:	3901      	subs	r1, #1
 800f0d6:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800f0d8:	8721      	strh	r1, [r4, #56]	; 0x38
 800f0da:	1c51      	adds	r1, r2, #1
 800f0dc:	b289      	uxth	r1, r1
 800f0de:	2901      	cmp	r1, #1
 800f0e0:	bf8a      	itet	hi
 800f0e2:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f0e6:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800f0e8:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800f0ea:	2b09      	cmp	r3, #9
 800f0ec:	d8da      	bhi.n	800f0a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800f0ee:	1c5a      	adds	r2, r3, #1
 800f0f0:	8622      	strh	r2, [r4, #48]	; 0x30
 800f0f2:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800f0f4:	4413      	add	r3, r2
 800f0f6:	b29b      	uxth	r3, r3
 800f0f8:	2b09      	cmp	r3, #9
 800f0fa:	bf88      	it	hi
 800f0fc:	3b0a      	subhi	r3, #10
 800f0fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f102:	8358      	strh	r0, [r3, #26]
 800f104:	e7c2      	b.n	800f08c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f106:	bd10      	pop	{r4, pc}
 800f108:	0801e9c1 	.word	0x0801e9c1
 800f10c:	0801ed54 	.word	0x0801ed54
 800f110:	0801e995 	.word	0x0801e995

0800f114 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f114:	b538      	push	{r3, r4, r5, lr}
 800f116:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800f118:	4604      	mov	r4, r0
 800f11a:	b92a      	cbnz	r2, 800f128 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800f11c:	4b13      	ldr	r3, [pc, #76]	; (800f16c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800f11e:	4a14      	ldr	r2, [pc, #80]	; (800f170 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800f120:	4814      	ldr	r0, [pc, #80]	; (800f174 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800f122:	21d5      	movs	r1, #213	; 0xd5
 800f124:	f00c fa40 	bl	801b5a8 <__assert_func>
 800f128:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800f12a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800f12e:	3a01      	subs	r2, #1
 800f130:	8b4d      	ldrh	r5, [r1, #26]
 800f132:	8602      	strh	r2, [r0, #48]	; 0x30
 800f134:	1c5a      	adds	r2, r3, #1
 800f136:	b292      	uxth	r2, r2
 800f138:	2a09      	cmp	r2, #9
 800f13a:	bf86      	itte	hi
 800f13c:	3b09      	subhi	r3, #9
 800f13e:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800f140:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800f142:	f7ff ffa1 	bl	800f088 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f146:	8b23      	ldrh	r3, [r4, #24]
 800f148:	2b01      	cmp	r3, #1
 800f14a:	bf9c      	itt	ls
 800f14c:	3301      	addls	r3, #1
 800f14e:	8323      	strhls	r3, [r4, #24]
 800f150:	8ae3      	ldrh	r3, [r4, #22]
 800f152:	b90b      	cbnz	r3, 800f158 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800f154:	2302      	movs	r3, #2
 800f156:	82e3      	strh	r3, [r4, #22]
 800f158:	8ae3      	ldrh	r3, [r4, #22]
 800f15a:	3b01      	subs	r3, #1
 800f15c:	b29b      	uxth	r3, r3
 800f15e:	82e3      	strh	r3, [r4, #22]
 800f160:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f164:	4628      	mov	r0, r5
 800f166:	8265      	strh	r5, [r4, #18]
 800f168:	bd38      	pop	{r3, r4, r5, pc}
 800f16a:	bf00      	nop
 800f16c:	0801e98c 	.word	0x0801e98c
 800f170:	0801eca9 	.word	0x0801eca9
 800f174:	0801e995 	.word	0x0801e995

0800f178 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f178:	b538      	push	{r3, r4, r5, lr}
 800f17a:	428a      	cmp	r2, r1
 800f17c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800f17e:	d90c      	bls.n	800f19a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800f180:	b92c      	cbnz	r4, 800f18e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800f182:	4b1c      	ldr	r3, [pc, #112]	; (800f1f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800f184:	4a1c      	ldr	r2, [pc, #112]	; (800f1f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800f186:	21e1      	movs	r1, #225	; 0xe1
 800f188:	481c      	ldr	r0, [pc, #112]	; (800f1fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800f18a:	f00c fa0d 	bl	801b5a8 <__assert_func>
 800f18e:	3c01      	subs	r4, #1
 800f190:	8604      	strh	r4, [r0, #48]	; 0x30
 800f192:	4b1b      	ldr	r3, [pc, #108]	; (800f200 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800f194:	4a1b      	ldr	r2, [pc, #108]	; (800f204 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800f196:	21c5      	movs	r1, #197	; 0xc5
 800f198:	e7f6      	b.n	800f188 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f19a:	428c      	cmp	r4, r1
 800f19c:	d203      	bcs.n	800f1a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800f19e:	4b1a      	ldr	r3, [pc, #104]	; (800f208 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800f1a0:	4a1a      	ldr	r2, [pc, #104]	; (800f20c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800f1a2:	21cb      	movs	r1, #203	; 0xcb
 800f1a4:	e7f0      	b.n	800f188 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f1a6:	1a64      	subs	r4, r4, r1
 800f1a8:	8604      	strh	r4, [r0, #48]	; 0x30
 800f1aa:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800f1ac:	4421      	add	r1, r4
 800f1ae:	b289      	uxth	r1, r1
 800f1b0:	2909      	cmp	r1, #9
 800f1b2:	bf88      	it	hi
 800f1b4:	390a      	subhi	r1, #10
 800f1b6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800f1b8:	250a      	movs	r5, #10
 800f1ba:	b1ba      	cbz	r2, 800f1ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800f1bc:	3a01      	subs	r2, #1
 800f1be:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800f1c0:	b292      	uxth	r2, r2
 800f1c2:	2909      	cmp	r1, #9
 800f1c4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f1c8:	d903      	bls.n	800f1d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800f1ca:	4b11      	ldr	r3, [pc, #68]	; (800f210 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800f1cc:	4a11      	ldr	r2, [pc, #68]	; (800f214 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800f1ce:	21e6      	movs	r1, #230	; 0xe6
 800f1d0:	e7da      	b.n	800f188 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f1d2:	3101      	adds	r1, #1
 800f1d4:	8601      	strh	r1, [r0, #48]	; 0x30
 800f1d6:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800f1d8:	b901      	cbnz	r1, 800f1dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800f1da:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800f1dc:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800f1de:	3901      	subs	r1, #1
 800f1e0:	b289      	uxth	r1, r1
 800f1e2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800f1e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f1e8:	834c      	strh	r4, [r1, #26]
 800f1ea:	e7e6      	b.n	800f1ba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800f1ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f1f0:	f7ff bf4a 	b.w	800f088 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f1f4:	0801e98c 	.word	0x0801e98c
 800f1f8:	0801ea82 	.word	0x0801ea82
 800f1fc:	0801e995 	.word	0x0801e995
 800f200:	0801e9cd 	.word	0x0801e9cd
 800f204:	0801eb2c 	.word	0x0801eb2c
 800f208:	0801e9db 	.word	0x0801e9db
 800f20c:	0801ee03 	.word	0x0801ee03
 800f210:	0801e9e7 	.word	0x0801e9e7
 800f214:	0801e9fa 	.word	0x0801e9fa

0800f218 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f218:	3a01      	subs	r2, #1
 800f21a:	b570      	push	{r4, r5, r6, lr}
 800f21c:	b292      	uxth	r2, r2
 800f21e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f222:	42b2      	cmp	r2, r6
 800f224:	d019      	beq.n	800f25a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800f226:	8b04      	ldrh	r4, [r0, #24]
 800f228:	f831 5b02 	ldrh.w	r5, [r1], #2
 800f22c:	4294      	cmp	r4, r2
 800f22e:	d805      	bhi.n	800f23c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800f230:	4b19      	ldr	r3, [pc, #100]	; (800f298 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f232:	4a1a      	ldr	r2, [pc, #104]	; (800f29c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800f234:	481a      	ldr	r0, [pc, #104]	; (800f2a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800f236:	21c5      	movs	r1, #197	; 0xc5
 800f238:	f00c f9b6 	bl	801b5a8 <__assert_func>
 800f23c:	8ac4      	ldrh	r4, [r0, #22]
 800f23e:	4414      	add	r4, r2
 800f240:	b2a4      	uxth	r4, r4
 800f242:	2c01      	cmp	r4, #1
 800f244:	bf88      	it	hi
 800f246:	3c02      	subhi	r4, #2
 800f248:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f24c:	3a01      	subs	r2, #1
 800f24e:	8a64      	ldrh	r4, [r4, #18]
 800f250:	42ac      	cmp	r4, r5
 800f252:	b292      	uxth	r2, r2
 800f254:	d0e5      	beq.n	800f222 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800f256:	2000      	movs	r0, #0
 800f258:	bd70      	pop	{r4, r5, r6, pc}
 800f25a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f25e:	2400      	movs	r4, #0
 800f260:	4413      	add	r3, r2
 800f262:	b2a2      	uxth	r2, r4
 800f264:	429a      	cmp	r2, r3
 800f266:	da14      	bge.n	800f292 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800f268:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f26a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f26e:	4296      	cmp	r6, r2
 800f270:	d802      	bhi.n	800f278 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800f272:	4b09      	ldr	r3, [pc, #36]	; (800f298 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f274:	4a0b      	ldr	r2, [pc, #44]	; (800f2a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800f276:	e7dd      	b.n	800f234 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800f278:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800f27a:	4432      	add	r2, r6
 800f27c:	b292      	uxth	r2, r2
 800f27e:	2a09      	cmp	r2, #9
 800f280:	bf88      	it	hi
 800f282:	3a0a      	subhi	r2, #10
 800f284:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f288:	3401      	adds	r4, #1
 800f28a:	8b52      	ldrh	r2, [r2, #26]
 800f28c:	42aa      	cmp	r2, r5
 800f28e:	d0e8      	beq.n	800f262 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800f290:	e7e1      	b.n	800f256 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f292:	2001      	movs	r0, #1
 800f294:	e7e0      	b.n	800f258 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f296:	bf00      	nop
 800f298:	0801e9cd 	.word	0x0801e9cd
 800f29c:	0801ee87 	.word	0x0801ee87
 800f2a0:	0801e995 	.word	0x0801e995
 800f2a4:	0801eb2c 	.word	0x0801eb2c

0800f2a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f2a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2ac:	4605      	mov	r5, r0
 800f2ae:	4616      	mov	r6, r2
 800f2b0:	1c8c      	adds	r4, r1, #2
 800f2b2:	8809      	ldrh	r1, [r1, #0]
 800f2b4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f2b8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f2bc:	42b3      	cmp	r3, r6
 800f2be:	d124      	bne.n	800f30a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f2c0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f2c4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f2c8:	f001 070f 	and.w	r7, r1, #15
 800f2cc:	f8cd 8000 	str.w	r8, [sp]
 800f2d0:	464b      	mov	r3, r9
 800f2d2:	4652      	mov	r2, sl
 800f2d4:	4621      	mov	r1, r4
 800f2d6:	4628      	mov	r0, r5
 800f2d8:	f7ff ff9e 	bl	800f218 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f2dc:	4683      	mov	fp, r0
 800f2de:	b168      	cbz	r0, 800f2fc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f2e0:	eb0a 0109 	add.w	r1, sl, r9
 800f2e4:	4441      	add	r1, r8
 800f2e6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f2ea:	463a      	mov	r2, r7
 800f2ec:	4649      	mov	r1, r9
 800f2ee:	4628      	mov	r0, r5
 800f2f0:	f7ff ff42 	bl	800f178 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f2f4:	4658      	mov	r0, fp
 800f2f6:	b003      	add	sp, #12
 800f2f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2fc:	eb07 010a 	add.w	r1, r7, sl
 800f300:	4449      	add	r1, r9
 800f302:	4441      	add	r1, r8
 800f304:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f308:	e7d2      	b.n	800f2b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f30a:	f04f 0b00 	mov.w	fp, #0
 800f30e:	e7f1      	b.n	800f2f4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f310 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f310:	b570      	push	{r4, r5, r6, lr}
 800f312:	8810      	ldrh	r0, [r2, #0]
 800f314:	4298      	cmp	r0, r3
 800f316:	d817      	bhi.n	800f348 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f318:	1e48      	subs	r0, r1, #1
 800f31a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f31e:	4298      	cmp	r0, r3
 800f320:	d312      	bcc.n	800f348 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f322:	2400      	movs	r4, #0
 800f324:	428c      	cmp	r4, r1
 800f326:	d20f      	bcs.n	800f348 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f328:	1860      	adds	r0, r4, r1
 800f32a:	1040      	asrs	r0, r0, #1
 800f32c:	0085      	lsls	r5, r0, #2
 800f32e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f332:	42b3      	cmp	r3, r6
 800f334:	d902      	bls.n	800f33c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f336:	3001      	adds	r0, #1
 800f338:	b284      	uxth	r4, r0
 800f33a:	e7f3      	b.n	800f324 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f33c:	d201      	bcs.n	800f342 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f33e:	b281      	uxth	r1, r0
 800f340:	e7f0      	b.n	800f324 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f342:	442a      	add	r2, r5
 800f344:	8850      	ldrh	r0, [r2, #2]
 800f346:	bd70      	pop	{r4, r5, r6, pc}
 800f348:	2000      	movs	r0, #0
 800f34a:	e7fc      	b.n	800f346 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f34c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f34c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f350:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800f352:	886f      	ldrh	r7, [r5, #2]
 800f354:	4604      	mov	r4, r0
 800f356:	087f      	lsrs	r7, r7, #1
 800f358:	260b      	movs	r6, #11
 800f35a:	3e01      	subs	r6, #1
 800f35c:	d01b      	beq.n	800f396 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f35e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f360:	b92b      	cbnz	r3, 800f36e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800f362:	4b0e      	ldr	r3, [pc, #56]	; (800f39c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800f364:	4a0e      	ldr	r2, [pc, #56]	; (800f3a0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800f366:	480f      	ldr	r0, [pc, #60]	; (800f3a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800f368:	21c0      	movs	r1, #192	; 0xc0
 800f36a:	f00c f91d 	bl	801b5a8 <__assert_func>
 800f36e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f370:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f374:	462a      	mov	r2, r5
 800f376:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800f37a:	4639      	mov	r1, r7
 800f37c:	4643      	mov	r3, r8
 800f37e:	4620      	mov	r0, r4
 800f380:	f7ff ffc6 	bl	800f310 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f384:	b138      	cbz	r0, 800f396 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f386:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f38a:	4642      	mov	r2, r8
 800f38c:	4620      	mov	r0, r4
 800f38e:	f7ff ff8b 	bl	800f2a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f392:	2800      	cmp	r0, #0
 800f394:	d1e1      	bne.n	800f35a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f39a:	bf00      	nop
 800f39c:	0801e98c 	.word	0x0801e98c
 800f3a0:	0801ebfe 	.word	0x0801ebfe
 800f3a4:	0801e995 	.word	0x0801e995

0800f3a8 <_ZN8touchgfx8ceil28_4El>:
 800f3a8:	f110 030f 	adds.w	r3, r0, #15
 800f3ac:	d401      	bmi.n	800f3b2 <_ZN8touchgfx8ceil28_4El+0xa>
 800f3ae:	1118      	asrs	r0, r3, #4
 800f3b0:	4770      	bx	lr
 800f3b2:	f1c0 0001 	rsb	r0, r0, #1
 800f3b6:	f010 000f 	ands.w	r0, r0, #15
 800f3ba:	bf18      	it	ne
 800f3bc:	2001      	movne	r0, #1
 800f3be:	2210      	movs	r2, #16
 800f3c0:	fb93 f3f2 	sdiv	r3, r3, r2
 800f3c4:	1a18      	subs	r0, r3, r0
 800f3c6:	4770      	bx	lr

0800f3c8 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800f3c8:	2900      	cmp	r1, #0
 800f3ca:	b538      	push	{r3, r4, r5, lr}
 800f3cc:	dc05      	bgt.n	800f3da <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800f3ce:	4b0f      	ldr	r3, [pc, #60]	; (800f40c <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800f3d0:	4a0f      	ldr	r2, [pc, #60]	; (800f410 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800f3d2:	4810      	ldr	r0, [pc, #64]	; (800f414 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800f3d4:	21fa      	movs	r1, #250	; 0xfa
 800f3d6:	f00c f8e7 	bl	801b5a8 <__assert_func>
 800f3da:	2800      	cmp	r0, #0
 800f3dc:	db06      	blt.n	800f3ec <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800f3de:	fb90 f4f1 	sdiv	r4, r0, r1
 800f3e2:	6014      	str	r4, [r2, #0]
 800f3e4:	fb01 0114 	mls	r1, r1, r4, r0
 800f3e8:	6019      	str	r1, [r3, #0]
 800f3ea:	bd38      	pop	{r3, r4, r5, pc}
 800f3ec:	4240      	negs	r0, r0
 800f3ee:	fb90 f4f1 	sdiv	r4, r0, r1
 800f3f2:	4265      	negs	r5, r4
 800f3f4:	fb01 0014 	mls	r0, r1, r4, r0
 800f3f8:	6015      	str	r5, [r2, #0]
 800f3fa:	6018      	str	r0, [r3, #0]
 800f3fc:	2800      	cmp	r0, #0
 800f3fe:	d0f4      	beq.n	800f3ea <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800f400:	6810      	ldr	r0, [r2, #0]
 800f402:	3801      	subs	r0, #1
 800f404:	6010      	str	r0, [r2, #0]
 800f406:	6818      	ldr	r0, [r3, #0]
 800f408:	1a09      	subs	r1, r1, r0
 800f40a:	e7ed      	b.n	800f3e8 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800f40c:	0801ef58 	.word	0x0801ef58
 800f410:	0801ef97 	.word	0x0801ef97
 800f414:	0801ef68 	.word	0x0801ef68

0800f418 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f418:	b570      	push	{r4, r5, r6, lr}
 800f41a:	694a      	ldr	r2, [r1, #20]
 800f41c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f41e:	684b      	ldr	r3, [r1, #4]
 800f420:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f422:	1b54      	subs	r4, r2, r5
 800f424:	f000 8106 	beq.w	800f634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f428:	1b9b      	subs	r3, r3, r6
 800f42a:	d003      	beq.n	800f434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f42c:	4363      	muls	r3, r4
 800f42e:	2210      	movs	r2, #16
 800f430:	fb93 f3f2 	sdiv	r3, r3, r2
 800f434:	680c      	ldr	r4, [r1, #0]
 800f436:	698a      	ldr	r2, [r1, #24]
 800f438:	1b65      	subs	r5, r4, r5
 800f43a:	f000 80fd 	beq.w	800f638 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f43e:	1b92      	subs	r2, r2, r6
 800f440:	d003      	beq.n	800f44a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f442:	436a      	muls	r2, r5
 800f444:	2410      	movs	r4, #16
 800f446:	fb92 f2f4 	sdiv	r2, r2, r4
 800f44a:	1a9b      	subs	r3, r3, r2
 800f44c:	ee07 3a90 	vmov	s15, r3
 800f450:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f674 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f454:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f458:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f45c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f460:	460a      	mov	r2, r1
 800f462:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f466:	4603      	mov	r3, r0
 800f468:	f100 040c 	add.w	r4, r0, #12
 800f46c:	eeb1 6a43 	vneg.f32	s12, s6
 800f470:	edd2 7a02 	vldr	s15, [r2, #8]
 800f474:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f478:	3214      	adds	r2, #20
 800f47a:	ece3 6a01 	vstmia	r3!, {s13}
 800f47e:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f482:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f486:	429c      	cmp	r4, r3
 800f488:	edc3 7a02 	vstr	s15, [r3, #8]
 800f48c:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f490:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f494:	edc3 7a05 	vstr	s15, [r3, #20]
 800f498:	d1ea      	bne.n	800f470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f49a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f49c:	698b      	ldr	r3, [r1, #24]
 800f49e:	edd0 4a02 	vldr	s9, [r0, #8]
 800f4a2:	edd0 3a00 	vldr	s7, [r0]
 800f4a6:	edd0 6a01 	vldr	s13, [r0, #4]
 800f4aa:	ed90 5a05 	vldr	s10, [r0, #20]
 800f4ae:	ed90 2a03 	vldr	s4, [r0, #12]
 800f4b2:	edd0 5a04 	vldr	s11, [r0, #16]
 800f4b6:	ed90 1a07 	vldr	s2, [r0, #28]
 800f4ba:	edd0 2a06 	vldr	s5, [r0, #24]
 800f4be:	1a9b      	subs	r3, r3, r2
 800f4c0:	ee07 3a90 	vmov	s15, r3
 800f4c4:	684b      	ldr	r3, [r1, #4]
 800f4c6:	1a9b      	subs	r3, r3, r2
 800f4c8:	ee07 3a10 	vmov	s14, r3
 800f4cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f4d0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f4d4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f4d8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f4dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4e0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f4e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f4e8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f4ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f4f0:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f4f4:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f4f8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f4fc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f4fe:	694a      	ldr	r2, [r1, #20]
 800f500:	1b13      	subs	r3, r2, r4
 800f502:	ee07 3a10 	vmov	s14, r3
 800f506:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f50a:	680b      	ldr	r3, [r1, #0]
 800f50c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f510:	1b1b      	subs	r3, r3, r4
 800f512:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f516:	ee07 3a10 	vmov	s14, r3
 800f51a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f51e:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f522:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f526:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f52a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f52e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f530:	698b      	ldr	r3, [r1, #24]
 800f532:	1a9b      	subs	r3, r3, r2
 800f534:	ee06 3a90 	vmov	s13, r3
 800f538:	684b      	ldr	r3, [r1, #4]
 800f53a:	1a9b      	subs	r3, r3, r2
 800f53c:	ee07 3a10 	vmov	s14, r3
 800f540:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f544:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f548:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f54c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f550:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f554:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f558:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f55c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f560:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f562:	694a      	ldr	r2, [r1, #20]
 800f564:	1b13      	subs	r3, r2, r4
 800f566:	ee07 3a10 	vmov	s14, r3
 800f56a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f56e:	680b      	ldr	r3, [r1, #0]
 800f570:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f574:	1b1b      	subs	r3, r3, r4
 800f576:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f57a:	ee07 3a10 	vmov	s14, r3
 800f57e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f582:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f586:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f58a:	edd0 5a08 	vldr	s11, [r0, #32]
 800f58e:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f592:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f596:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f59a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f59c:	698b      	ldr	r3, [r1, #24]
 800f59e:	1a9b      	subs	r3, r3, r2
 800f5a0:	ee07 3a10 	vmov	s14, r3
 800f5a4:	684b      	ldr	r3, [r1, #4]
 800f5a6:	1a9b      	subs	r3, r3, r2
 800f5a8:	ee01 3a90 	vmov	s3, r3
 800f5ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5b0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f5b4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5b8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f5bc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f5c0:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f5c4:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f5c8:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f5cc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f5d0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f5d2:	694a      	ldr	r2, [r1, #20]
 800f5d4:	1b13      	subs	r3, r2, r4
 800f5d6:	ee03 3a10 	vmov	s6, r3
 800f5da:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f5de:	680b      	ldr	r3, [r1, #0]
 800f5e0:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f5e4:	1b1b      	subs	r3, r3, r4
 800f5e6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f5ea:	ee03 3a10 	vmov	s6, r3
 800f5ee:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f5f2:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f5f6:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f5fa:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f5fe:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f602:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f606:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f60a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f60e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f612:	dd13      	ble.n	800f63c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f614:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f618:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f61c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f61e:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f622:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f62a:	dd15      	ble.n	800f658 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f62c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f630:	6403      	str	r3, [r0, #64]	; 0x40
 800f632:	bd70      	pop	{r4, r5, r6, pc}
 800f634:	4623      	mov	r3, r4
 800f636:	e6fd      	b.n	800f434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f638:	462a      	mov	r2, r5
 800f63a:	e706      	b.n	800f44a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f63c:	d502      	bpl.n	800f644 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f63e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f642:	e7e9      	b.n	800f618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f644:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f648:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f64c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f654:	dade      	bge.n	800f614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f656:	e7f2      	b.n	800f63e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f658:	d502      	bpl.n	800f660 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f65a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f65e:	e7e7      	b.n	800f630 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f660:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f664:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f668:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f66c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f670:	dadc      	bge.n	800f62c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f672:	e7f2      	b.n	800f65a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f674:	3d800000 	.word	0x3d800000

0800f678 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f678:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f67c:	f04f 0814 	mov.w	r8, #20
 800f680:	fb08 f903 	mul.w	r9, r8, r3
 800f684:	eb02 0a09 	add.w	sl, r2, r9
 800f688:	4604      	mov	r4, r0
 800f68a:	f8da 0004 	ldr.w	r0, [sl, #4]
 800f68e:	4617      	mov	r7, r2
 800f690:	460d      	mov	r5, r1
 800f692:	461e      	mov	r6, r3
 800f694:	f7ff fe88 	bl	800f3a8 <_ZN8touchgfx8ceil28_4El>
 800f698:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f69a:	6160      	str	r0, [r4, #20]
 800f69c:	fb08 f803 	mul.w	r8, r8, r3
 800f6a0:	eb07 0b08 	add.w	fp, r7, r8
 800f6a4:	9001      	str	r0, [sp, #4]
 800f6a6:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f6aa:	f7ff fe7d 	bl	800f3a8 <_ZN8touchgfx8ceil28_4El>
 800f6ae:	9a01      	ldr	r2, [sp, #4]
 800f6b0:	1a80      	subs	r0, r0, r2
 800f6b2:	61a0      	str	r0, [r4, #24]
 800f6b4:	2800      	cmp	r0, #0
 800f6b6:	f000 8088 	beq.w	800f7ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800f6ba:	f857 3009 	ldr.w	r3, [r7, r9]
 800f6be:	f857 c008 	ldr.w	ip, [r7, r8]
 800f6c2:	f8da 1004 	ldr.w	r1, [sl, #4]
 800f6c6:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f6ca:	ebac 0c03 	sub.w	ip, ip, r3
 800f6ce:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800f6d2:	fb0b f202 	mul.w	r2, fp, r2
 800f6d6:	fb0c 2211 	mls	r2, ip, r1, r2
 800f6da:	1a40      	subs	r0, r0, r1
 800f6dc:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800f6e0:	fb00 2003 	mla	r0, r0, r3, r2
 800f6e4:	3801      	subs	r0, #1
 800f6e6:	f104 0310 	add.w	r3, r4, #16
 800f6ea:	4622      	mov	r2, r4
 800f6ec:	4641      	mov	r1, r8
 800f6ee:	4440      	add	r0, r8
 800f6f0:	f7ff fe6a 	bl	800f3c8 <_ZN8touchgfx11floorDivModEllRlS0_>
 800f6f4:	f104 0308 	add.w	r3, r4, #8
 800f6f8:	1d22      	adds	r2, r4, #4
 800f6fa:	4641      	mov	r1, r8
 800f6fc:	4658      	mov	r0, fp
 800f6fe:	f7ff fe63 	bl	800f3c8 <_ZN8touchgfx11floorDivModEllRlS0_>
 800f702:	f8c4 800c 	str.w	r8, [r4, #12]
 800f706:	f8da 3004 	ldr.w	r3, [sl, #4]
 800f70a:	6962      	ldr	r2, [r4, #20]
 800f70c:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f7d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f710:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f714:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f718:	ee07 3a10 	vmov	s14, r3
 800f71c:	6822      	ldr	r2, [r4, #0]
 800f71e:	f857 3009 	ldr.w	r3, [r7, r9]
 800f722:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f726:	ee07 3a90 	vmov	s15, r3
 800f72a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f72e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f732:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800f736:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f73a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f73e:	edd3 6a00 	vldr	s13, [r3]
 800f742:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f746:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f74a:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f74e:	edc4 6a07 	vstr	s13, [r4, #28]
 800f752:	edd4 6a01 	vldr	s13, [r4, #4]
 800f756:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800f75a:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f75e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f762:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f766:	ed84 6a08 	vstr	s12, [r4, #32]
 800f76a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800f76c:	6262      	str	r2, [r4, #36]	; 0x24
 800f76e:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800f772:	ed93 6a03 	vldr	s12, [r3, #12]
 800f776:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f77a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f77e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f782:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f786:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f78a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f78e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f792:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f796:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f798:	6322      	str	r2, [r4, #48]	; 0x30
 800f79a:	ed93 6a06 	vldr	s12, [r3, #24]
 800f79e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f7a2:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f7a6:	eeb0 7a46 	vmov.f32	s14, s12
 800f7aa:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f7ae:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f7b2:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f7b6:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f7ba:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f7be:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f7c2:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f7c6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f7c8:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f7ca:	4620      	mov	r0, r4
 800f7cc:	b003      	add	sp, #12
 800f7ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7d2:	bf00      	nop
 800f7d4:	3d800000 	.word	0x3d800000

0800f7d8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f7d8:	4b01      	ldr	r3, [pc, #4]	; (800f7e0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f7da:	6018      	str	r0, [r3, #0]
 800f7dc:	4770      	bx	lr
 800f7de:	bf00      	nop
 800f7e0:	200089f0 	.word	0x200089f0

0800f7e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f7e4:	4b06      	ldr	r3, [pc, #24]	; (800f800 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f7e6:	881a      	ldrh	r2, [r3, #0]
 800f7e8:	4282      	cmp	r2, r0
 800f7ea:	d807      	bhi.n	800f7fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f7ec:	4b05      	ldr	r3, [pc, #20]	; (800f804 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f7ee:	881b      	ldrh	r3, [r3, #0]
 800f7f0:	4413      	add	r3, r2
 800f7f2:	4298      	cmp	r0, r3
 800f7f4:	bfac      	ite	ge
 800f7f6:	2000      	movge	r0, #0
 800f7f8:	2001      	movlt	r0, #1
 800f7fa:	4770      	bx	lr
 800f7fc:	2000      	movs	r0, #0
 800f7fe:	4770      	bx	lr
 800f800:	20008a10 	.word	0x20008a10
 800f804:	20008a14 	.word	0x20008a14

0800f808 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f808:	b508      	push	{r3, lr}
 800f80a:	4601      	mov	r1, r0
 800f80c:	f7ff ffea 	bl	800f7e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f810:	b118      	cbz	r0, 800f81a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f812:	4b02      	ldr	r3, [pc, #8]	; (800f81c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f814:	681b      	ldr	r3, [r3, #0]
 800f816:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f81a:	bd08      	pop	{r3, pc}
 800f81c:	200089f4 	.word	0x200089f4

0800f820 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f824:	4d28      	ldr	r5, [pc, #160]	; (800f8c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f826:	682b      	ldr	r3, [r5, #0]
 800f828:	2b00      	cmp	r3, #0
 800f82a:	d04a      	beq.n	800f8c2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f82c:	4a27      	ldr	r2, [pc, #156]	; (800f8cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f82e:	4e28      	ldr	r6, [pc, #160]	; (800f8d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f830:	8810      	ldrh	r0, [r2, #0]
 800f832:	f8b6 8000 	ldrh.w	r8, [r6]
 800f836:	4c27      	ldr	r4, [pc, #156]	; (800f8d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f838:	4f27      	ldr	r7, [pc, #156]	; (800f8d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f83a:	4440      	add	r0, r8
 800f83c:	1c41      	adds	r1, r0, #1
 800f83e:	f021 0101 	bic.w	r1, r1, #1
 800f842:	0409      	lsls	r1, r1, #16
 800f844:	0c09      	lsrs	r1, r1, #16
 800f846:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f84a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f84e:	eb03 020e 	add.w	r2, r3, lr
 800f852:	eb0e 010c 	add.w	r1, lr, ip
 800f856:	6022      	str	r2, [r4, #0]
 800f858:	185a      	adds	r2, r3, r1
 800f85a:	603a      	str	r2, [r7, #0]
 800f85c:	220e      	movs	r2, #14
 800f85e:	fb02 f208 	mul.w	r2, r2, r8
 800f862:	3203      	adds	r2, #3
 800f864:	f022 0203 	bic.w	r2, r2, #3
 800f868:	4411      	add	r1, r2
 800f86a:	440b      	add	r3, r1
 800f86c:	491b      	ldr	r1, [pc, #108]	; (800f8dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f86e:	600b      	str	r3, [r1, #0]
 800f870:	491b      	ldr	r1, [pc, #108]	; (800f8e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f872:	2300      	movs	r3, #0
 800f874:	800b      	strh	r3, [r1, #0]
 800f876:	491b      	ldr	r1, [pc, #108]	; (800f8e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f878:	6809      	ldr	r1, [r1, #0]
 800f87a:	eba1 010e 	sub.w	r1, r1, lr
 800f87e:	eba1 010c 	sub.w	r1, r1, ip
 800f882:	1a8a      	subs	r2, r1, r2
 800f884:	4918      	ldr	r1, [pc, #96]	; (800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f886:	600a      	str	r2, [r1, #0]
 800f888:	4a18      	ldr	r2, [pc, #96]	; (800f8ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f88a:	469c      	mov	ip, r3
 800f88c:	8013      	strh	r3, [r2, #0]
 800f88e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f892:	4283      	cmp	r3, r0
 800f894:	d10d      	bne.n	800f8b2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f896:	8835      	ldrh	r5, [r6, #0]
 800f898:	6838      	ldr	r0, [r7, #0]
 800f89a:	2300      	movs	r3, #0
 800f89c:	240e      	movs	r4, #14
 800f89e:	429d      	cmp	r5, r3
 800f8a0:	d90f      	bls.n	800f8c2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f8a2:	fb04 0203 	mla	r2, r4, r3, r0
 800f8a6:	3301      	adds	r3, #1
 800f8a8:	7b11      	ldrb	r1, [r2, #12]
 800f8aa:	f36f 1145 	bfc	r1, #5, #1
 800f8ae:	7311      	strb	r1, [r2, #12]
 800f8b0:	e7f5      	b.n	800f89e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f8b2:	682a      	ldr	r2, [r5, #0]
 800f8b4:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f8b8:	6822      	ldr	r2, [r4, #0]
 800f8ba:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f8be:	3301      	adds	r3, #1
 800f8c0:	e7e7      	b.n	800f892 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f8c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f8c6:	bf00      	nop
 800f8c8:	200089f4 	.word	0x200089f4
 800f8cc:	20008a10 	.word	0x20008a10
 800f8d0:	20008a14 	.word	0x20008a14
 800f8d4:	20008a08 	.word	0x20008a08
 800f8d8:	200089f8 	.word	0x200089f8
 800f8dc:	20008a00 	.word	0x20008a00
 800f8e0:	20008a12 	.word	0x20008a12
 800f8e4:	200089fc 	.word	0x200089fc
 800f8e8:	20008a0c 	.word	0x20008a0c
 800f8ec:	20008a04 	.word	0x20008a04

0800f8f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f8f0:	b510      	push	{r4, lr}
 800f8f2:	4b10      	ldr	r3, [pc, #64]	; (800f934 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f8f4:	681b      	ldr	r3, [r3, #0]
 800f8f6:	b9db      	cbnz	r3, 800f930 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f8f8:	b1d1      	cbz	r1, 800f930 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f8fa:	4b0f      	ldr	r3, [pc, #60]	; (800f938 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f8fc:	801a      	strh	r2, [r3, #0]
 800f8fe:	4b0f      	ldr	r3, [pc, #60]	; (800f93c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f900:	881b      	ldrh	r3, [r3, #0]
 800f902:	b292      	uxth	r2, r2
 800f904:	240e      	movs	r4, #14
 800f906:	4413      	add	r3, r2
 800f908:	4362      	muls	r2, r4
 800f90a:	2406      	movs	r4, #6
 800f90c:	fb04 2203 	mla	r2, r4, r3, r2
 800f910:	428a      	cmp	r2, r1
 800f912:	d305      	bcc.n	800f920 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f914:	4b0a      	ldr	r3, [pc, #40]	; (800f940 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f916:	4a0b      	ldr	r2, [pc, #44]	; (800f944 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f918:	480b      	ldr	r0, [pc, #44]	; (800f948 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f91a:	2137      	movs	r1, #55	; 0x37
 800f91c:	f00b fe44 	bl	801b5a8 <__assert_func>
 800f920:	4b0a      	ldr	r3, [pc, #40]	; (800f94c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f922:	6019      	str	r1, [r3, #0]
 800f924:	4b0a      	ldr	r3, [pc, #40]	; (800f950 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f926:	6018      	str	r0, [r3, #0]
 800f928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f92c:	f7ff bf78 	b.w	800f820 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f930:	bd10      	pop	{r4, pc}
 800f932:	bf00      	nop
 800f934:	20008a00 	.word	0x20008a00
 800f938:	20008a14 	.word	0x20008a14
 800f93c:	20008a10 	.word	0x20008a10
 800f940:	0801f035 	.word	0x0801f035
 800f944:	0801f08e 	.word	0x0801f08e
 800f948:	0801f010 	.word	0x0801f010
 800f94c:	200089fc 	.word	0x200089fc
 800f950:	200089f4 	.word	0x200089f4

0800f954 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f954:	b470      	push	{r4, r5, r6}
 800f956:	4c07      	ldr	r4, [pc, #28]	; (800f974 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f958:	6826      	ldr	r6, [r4, #0]
 800f95a:	4605      	mov	r5, r0
 800f95c:	4610      	mov	r0, r2
 800f95e:	9a03      	ldr	r2, [sp, #12]
 800f960:	b936      	cbnz	r6, 800f970 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f962:	6025      	str	r5, [r4, #0]
 800f964:	4c04      	ldr	r4, [pc, #16]	; (800f978 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f966:	8021      	strh	r1, [r4, #0]
 800f968:	bc70      	pop	{r4, r5, r6}
 800f96a:	4619      	mov	r1, r3
 800f96c:	f7ff bfc0 	b.w	800f8f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f970:	bc70      	pop	{r4, r5, r6}
 800f972:	4770      	bx	lr
 800f974:	20008a18 	.word	0x20008a18
 800f978:	20008a10 	.word	0x20008a10

0800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f97c:	b508      	push	{r3, lr}
 800f97e:	4b14      	ldr	r3, [pc, #80]	; (800f9d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f980:	6819      	ldr	r1, [r3, #0]
 800f982:	b931      	cbnz	r1, 800f992 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f984:	4b13      	ldr	r3, [pc, #76]	; (800f9d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f986:	4a14      	ldr	r2, [pc, #80]	; (800f9d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f988:	4814      	ldr	r0, [pc, #80]	; (800f9dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f98a:	f240 3187 	movw	r1, #903	; 0x387
 800f98e:	f00b fe0b 	bl	801b5a8 <__assert_func>
 800f992:	4a13      	ldr	r2, [pc, #76]	; (800f9e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f994:	8803      	ldrh	r3, [r0, #0]
 800f996:	8812      	ldrh	r2, [r2, #0]
 800f998:	4293      	cmp	r3, r2
 800f99a:	d204      	bcs.n	800f9a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f99c:	2214      	movs	r2, #20
 800f99e:	fb02 1303 	mla	r3, r2, r3, r1
 800f9a2:	8918      	ldrh	r0, [r3, #8]
 800f9a4:	bd08      	pop	{r3, pc}
 800f9a6:	490f      	ldr	r1, [pc, #60]	; (800f9e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f9a8:	8809      	ldrh	r1, [r1, #0]
 800f9aa:	4411      	add	r1, r2
 800f9ac:	428b      	cmp	r3, r1
 800f9ae:	da06      	bge.n	800f9be <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f9b0:	1a9b      	subs	r3, r3, r2
 800f9b2:	4a0d      	ldr	r2, [pc, #52]	; (800f9e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f9b4:	6812      	ldr	r2, [r2, #0]
 800f9b6:	210e      	movs	r1, #14
 800f9b8:	fb01 2303 	mla	r3, r1, r3, r2
 800f9bc:	e7f1      	b.n	800f9a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f9be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f9c2:	4293      	cmp	r3, r2
 800f9c4:	bf0a      	itet	eq
 800f9c6:	4b09      	ldreq	r3, [pc, #36]	; (800f9ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f9c8:	2000      	movne	r0, #0
 800f9ca:	8818      	ldrheq	r0, [r3, #0]
 800f9cc:	e7ea      	b.n	800f9a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f9ce:	bf00      	nop
 800f9d0:	20008a18 	.word	0x20008a18
 800f9d4:	0801e3c8 	.word	0x0801e3c8
 800f9d8:	0801f13b 	.word	0x0801f13b
 800f9dc:	0801f010 	.word	0x0801f010
 800f9e0:	20008a10 	.word	0x20008a10
 800f9e4:	20008a14 	.word	0x20008a14
 800f9e8:	200089f8 	.word	0x200089f8
 800f9ec:	20008984 	.word	0x20008984

0800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f9f0:	b508      	push	{r3, lr}
 800f9f2:	4b14      	ldr	r3, [pc, #80]	; (800fa44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f9f4:	6819      	ldr	r1, [r3, #0]
 800f9f6:	b931      	cbnz	r1, 800fa06 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f9f8:	4b13      	ldr	r3, [pc, #76]	; (800fa48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f9fa:	4a14      	ldr	r2, [pc, #80]	; (800fa4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f9fc:	4814      	ldr	r0, [pc, #80]	; (800fa50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f9fe:	f240 319b 	movw	r1, #923	; 0x39b
 800fa02:	f00b fdd1 	bl	801b5a8 <__assert_func>
 800fa06:	4a13      	ldr	r2, [pc, #76]	; (800fa54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fa08:	8803      	ldrh	r3, [r0, #0]
 800fa0a:	8812      	ldrh	r2, [r2, #0]
 800fa0c:	4293      	cmp	r3, r2
 800fa0e:	d204      	bcs.n	800fa1a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800fa10:	2214      	movs	r2, #20
 800fa12:	fb02 1303 	mla	r3, r2, r3, r1
 800fa16:	8958      	ldrh	r0, [r3, #10]
 800fa18:	bd08      	pop	{r3, pc}
 800fa1a:	490f      	ldr	r1, [pc, #60]	; (800fa58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800fa1c:	8809      	ldrh	r1, [r1, #0]
 800fa1e:	4411      	add	r1, r2
 800fa20:	428b      	cmp	r3, r1
 800fa22:	da06      	bge.n	800fa32 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800fa24:	1a9b      	subs	r3, r3, r2
 800fa26:	4a0d      	ldr	r2, [pc, #52]	; (800fa5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800fa28:	6812      	ldr	r2, [r2, #0]
 800fa2a:	210e      	movs	r1, #14
 800fa2c:	fb01 2303 	mla	r3, r1, r3, r2
 800fa30:	e7f1      	b.n	800fa16 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800fa32:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa36:	4293      	cmp	r3, r2
 800fa38:	bf0a      	itet	eq
 800fa3a:	4b09      	ldreq	r3, [pc, #36]	; (800fa60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fa3c:	2000      	movne	r0, #0
 800fa3e:	8818      	ldrheq	r0, [r3, #0]
 800fa40:	e7ea      	b.n	800fa18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fa42:	bf00      	nop
 800fa44:	20008a18 	.word	0x20008a18
 800fa48:	0801e3c8 	.word	0x0801e3c8
 800fa4c:	0801f167 	.word	0x0801f167
 800fa50:	0801f010 	.word	0x0801f010
 800fa54:	20008a10 	.word	0x20008a10
 800fa58:	20008a14 	.word	0x20008a14
 800fa5c:	200089f8 	.word	0x200089f8
 800fa60:	20008986 	.word	0x20008986

0800fa64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fa64:	b510      	push	{r4, lr}
 800fa66:	4b23      	ldr	r3, [pc, #140]	; (800faf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fa68:	681c      	ldr	r4, [r3, #0]
 800fa6a:	b934      	cbnz	r4, 800fa7a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fa6c:	4b22      	ldr	r3, [pc, #136]	; (800faf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fa6e:	4a23      	ldr	r2, [pc, #140]	; (800fafc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800fa70:	4823      	ldr	r0, [pc, #140]	; (800fb00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800fa72:	f240 31af 	movw	r1, #943	; 0x3af
 800fa76:	f00b fd97 	bl	801b5a8 <__assert_func>
 800fa7a:	4a22      	ldr	r2, [pc, #136]	; (800fb04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800fa7c:	880b      	ldrh	r3, [r1, #0]
 800fa7e:	8812      	ldrh	r2, [r2, #0]
 800fa80:	4293      	cmp	r3, r2
 800fa82:	d211      	bcs.n	800faa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fa84:	2214      	movs	r2, #20
 800fa86:	fb02 4303 	mla	r3, r2, r3, r4
 800fa8a:	8a1a      	ldrh	r2, [r3, #16]
 800fa8c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fa90:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fa94:	8a5b      	ldrh	r3, [r3, #18]
 800fa96:	8004      	strh	r4, [r0, #0]
 800fa98:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fa9c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800faa0:	8041      	strh	r1, [r0, #2]
 800faa2:	8082      	strh	r2, [r0, #4]
 800faa4:	80c3      	strh	r3, [r0, #6]
 800faa6:	e00e      	b.n	800fac6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800faa8:	4917      	ldr	r1, [pc, #92]	; (800fb08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800faaa:	8809      	ldrh	r1, [r1, #0]
 800faac:	4411      	add	r1, r2
 800faae:	428b      	cmp	r3, r1
 800fab0:	da0a      	bge.n	800fac8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fab2:	1a9b      	subs	r3, r3, r2
 800fab4:	4a15      	ldr	r2, [pc, #84]	; (800fb0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fab6:	6812      	ldr	r2, [r2, #0]
 800fab8:	210e      	movs	r1, #14
 800faba:	fb01 2303 	mla	r3, r1, r3, r2
 800fabe:	681a      	ldr	r2, [r3, #0]
 800fac0:	6002      	str	r2, [r0, #0]
 800fac2:	685a      	ldr	r2, [r3, #4]
 800fac4:	6042      	str	r2, [r0, #4]
 800fac6:	bd10      	pop	{r4, pc}
 800fac8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800facc:	4293      	cmp	r3, r2
 800face:	d10b      	bne.n	800fae8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fad0:	4b0f      	ldr	r3, [pc, #60]	; (800fb10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fad2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fad6:	4b0f      	ldr	r3, [pc, #60]	; (800fb14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fad8:	8081      	strh	r1, [r0, #4]
 800fada:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fade:	80c2      	strh	r2, [r0, #6]
 800fae0:	2300      	movs	r3, #0
 800fae2:	8003      	strh	r3, [r0, #0]
 800fae4:	8043      	strh	r3, [r0, #2]
 800fae6:	e7ee      	b.n	800fac6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fae8:	2300      	movs	r3, #0
 800faea:	8003      	strh	r3, [r0, #0]
 800faec:	8043      	strh	r3, [r0, #2]
 800faee:	8083      	strh	r3, [r0, #4]
 800faf0:	e7d8      	b.n	800faa4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800faf2:	bf00      	nop
 800faf4:	20008a18 	.word	0x20008a18
 800faf8:	0801e3c8 	.word	0x0801e3c8
 800fafc:	0801f0d4 	.word	0x0801f0d4
 800fb00:	0801f010 	.word	0x0801f010
 800fb04:	20008a10 	.word	0x20008a10
 800fb08:	20008a14 	.word	0x20008a14
 800fb0c:	200089f8 	.word	0x200089f8
 800fb10:	20008984 	.word	0x20008984
 800fb14:	20008986 	.word	0x20008986

0800fb18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fb18:	4b18      	ldr	r3, [pc, #96]	; (800fb7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fb1a:	681b      	ldr	r3, [r3, #0]
 800fb1c:	b34b      	cbz	r3, 800fb72 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fb1e:	4a18      	ldr	r2, [pc, #96]	; (800fb80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fb20:	8800      	ldrh	r0, [r0, #0]
 800fb22:	8812      	ldrh	r2, [r2, #0]
 800fb24:	4290      	cmp	r0, r2
 800fb26:	d211      	bcs.n	800fb4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800fb28:	2214      	movs	r2, #20
 800fb2a:	fb02 3300 	mla	r3, r2, r0, r3
 800fb2e:	8a1a      	ldrh	r2, [r3, #16]
 800fb30:	8919      	ldrh	r1, [r3, #8]
 800fb32:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fb36:	428a      	cmp	r2, r1
 800fb38:	db1d      	blt.n	800fb76 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fb3a:	8a58      	ldrh	r0, [r3, #18]
 800fb3c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fb40:	895b      	ldrh	r3, [r3, #10]
 800fb42:	4298      	cmp	r0, r3
 800fb44:	bfac      	ite	ge
 800fb46:	2000      	movge	r0, #0
 800fb48:	2001      	movlt	r0, #1
 800fb4a:	4770      	bx	lr
 800fb4c:	4b0d      	ldr	r3, [pc, #52]	; (800fb84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fb4e:	881b      	ldrh	r3, [r3, #0]
 800fb50:	4413      	add	r3, r2
 800fb52:	4298      	cmp	r0, r3
 800fb54:	da0d      	bge.n	800fb72 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fb56:	4b0c      	ldr	r3, [pc, #48]	; (800fb88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fb58:	681b      	ldr	r3, [r3, #0]
 800fb5a:	1a80      	subs	r0, r0, r2
 800fb5c:	220e      	movs	r2, #14
 800fb5e:	fb02 3300 	mla	r3, r2, r0, r3
 800fb62:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fb66:	891a      	ldrh	r2, [r3, #8]
 800fb68:	4291      	cmp	r1, r2
 800fb6a:	db04      	blt.n	800fb76 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fb6c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fb70:	e7e6      	b.n	800fb40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fb72:	2000      	movs	r0, #0
 800fb74:	4770      	bx	lr
 800fb76:	2001      	movs	r0, #1
 800fb78:	4770      	bx	lr
 800fb7a:	bf00      	nop
 800fb7c:	20008a18 	.word	0x20008a18
 800fb80:	20008a10 	.word	0x20008a10
 800fb84:	20008a14 	.word	0x20008a14
 800fb88:	200089f8 	.word	0x200089f8

0800fb8c <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fb8c:	b508      	push	{r3, lr}
 800fb8e:	4b12      	ldr	r3, [pc, #72]	; (800fbd8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fb90:	6819      	ldr	r1, [r3, #0]
 800fb92:	b931      	cbnz	r1, 800fba2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fb94:	4b11      	ldr	r3, [pc, #68]	; (800fbdc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fb96:	4a12      	ldr	r2, [pc, #72]	; (800fbe0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fb98:	4812      	ldr	r0, [pc, #72]	; (800fbe4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fb9a:	f240 31d3 	movw	r1, #979	; 0x3d3
 800fb9e:	f00b fd03 	bl	801b5a8 <__assert_func>
 800fba2:	8803      	ldrh	r3, [r0, #0]
 800fba4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fba8:	4293      	cmp	r3, r2
 800fbaa:	d012      	beq.n	800fbd2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fbac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fbb0:	4293      	cmp	r3, r2
 800fbb2:	d103      	bne.n	800fbbc <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fbb4:	4b0c      	ldr	r3, [pc, #48]	; (800fbe8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fbb6:	681b      	ldr	r3, [r3, #0]
 800fbb8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fbba:	bd08      	pop	{r3, pc}
 800fbbc:	4a0b      	ldr	r2, [pc, #44]	; (800fbec <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fbbe:	6812      	ldr	r2, [r2, #0]
 800fbc0:	b11a      	cbz	r2, 800fbca <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fbc2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fbc6:	2800      	cmp	r0, #0
 800fbc8:	d1f7      	bne.n	800fbba <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fbca:	2214      	movs	r2, #20
 800fbcc:	4353      	muls	r3, r2
 800fbce:	58c8      	ldr	r0, [r1, r3]
 800fbd0:	e7f3      	b.n	800fbba <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fbd2:	2000      	movs	r0, #0
 800fbd4:	e7f1      	b.n	800fbba <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fbd6:	bf00      	nop
 800fbd8:	20008a18 	.word	0x20008a18
 800fbdc:	0801e3c8 	.word	0x0801e3c8
 800fbe0:	0801f10a 	.word	0x0801f10a
 800fbe4:	0801f010 	.word	0x0801f010
 800fbe8:	20008990 	.word	0x20008990
 800fbec:	200089f4 	.word	0x200089f4

0800fbf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fbf0:	8802      	ldrh	r2, [r0, #0]
 800fbf2:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fbf6:	429a      	cmp	r2, r3
 800fbf8:	d845      	bhi.n	800fc86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fbfa:	4b24      	ldr	r3, [pc, #144]	; (800fc8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fbfc:	8818      	ldrh	r0, [r3, #0]
 800fbfe:	4282      	cmp	r2, r0
 800fc00:	d221      	bcs.n	800fc46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fc02:	4b23      	ldr	r3, [pc, #140]	; (800fc90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fc04:	6819      	ldr	r1, [r3, #0]
 800fc06:	2314      	movs	r3, #20
 800fc08:	fb03 1302 	mla	r3, r3, r2, r1
 800fc0c:	6858      	ldr	r0, [r3, #4]
 800fc0e:	2800      	cmp	r0, #0
 800fc10:	d03a      	beq.n	800fc88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc12:	4920      	ldr	r1, [pc, #128]	; (800fc94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fc14:	6809      	ldr	r1, [r1, #0]
 800fc16:	2900      	cmp	r1, #0
 800fc18:	d036      	beq.n	800fc88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc1a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fc1e:	2900      	cmp	r1, #0
 800fc20:	d032      	beq.n	800fc88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fc22:	891a      	ldrh	r2, [r3, #8]
 800fc24:	8958      	ldrh	r0, [r3, #10]
 800fc26:	4350      	muls	r0, r2
 800fc28:	7c5a      	ldrb	r2, [r3, #17]
 800fc2a:	7cdb      	ldrb	r3, [r3, #19]
 800fc2c:	0952      	lsrs	r2, r2, #5
 800fc2e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fc32:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fc36:	2b0b      	cmp	r3, #11
 800fc38:	bf18      	it	ne
 800fc3a:	0040      	lslne	r0, r0, #1
 800fc3c:	3003      	adds	r0, #3
 800fc3e:	f020 0003 	bic.w	r0, r0, #3
 800fc42:	4408      	add	r0, r1
 800fc44:	4770      	bx	lr
 800fc46:	4b14      	ldr	r3, [pc, #80]	; (800fc98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fc48:	881b      	ldrh	r3, [r3, #0]
 800fc4a:	4403      	add	r3, r0
 800fc4c:	429a      	cmp	r2, r3
 800fc4e:	da1a      	bge.n	800fc86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc50:	4b12      	ldr	r3, [pc, #72]	; (800fc9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fc52:	681b      	ldr	r3, [r3, #0]
 800fc54:	1a10      	subs	r0, r2, r0
 800fc56:	210e      	movs	r1, #14
 800fc58:	fb01 3000 	mla	r0, r1, r0, r3
 800fc5c:	7b03      	ldrb	r3, [r0, #12]
 800fc5e:	f003 031f 	and.w	r3, r3, #31
 800fc62:	2b0b      	cmp	r3, #11
 800fc64:	d10b      	bne.n	800fc7e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fc66:	8903      	ldrh	r3, [r0, #8]
 800fc68:	8940      	ldrh	r0, [r0, #10]
 800fc6a:	4358      	muls	r0, r3
 800fc6c:	4b09      	ldr	r3, [pc, #36]	; (800fc94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fc6e:	6819      	ldr	r1, [r3, #0]
 800fc70:	3003      	adds	r0, #3
 800fc72:	f020 0303 	bic.w	r3, r0, #3
 800fc76:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fc7a:	4418      	add	r0, r3
 800fc7c:	4770      	bx	lr
 800fc7e:	2b0d      	cmp	r3, #13
 800fc80:	d101      	bne.n	800fc86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc82:	300d      	adds	r0, #13
 800fc84:	4770      	bx	lr
 800fc86:	2000      	movs	r0, #0
 800fc88:	4770      	bx	lr
 800fc8a:	bf00      	nop
 800fc8c:	20008a10 	.word	0x20008a10
 800fc90:	20008a18 	.word	0x20008a18
 800fc94:	200089f4 	.word	0x200089f4
 800fc98:	20008a14 	.word	0x20008a14
 800fc9c:	200089f8 	.word	0x200089f8

0800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fca0:	4b19      	ldr	r3, [pc, #100]	; (800fd08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fca2:	6819      	ldr	r1, [r3, #0]
 800fca4:	8803      	ldrh	r3, [r0, #0]
 800fca6:	b1e9      	cbz	r1, 800fce4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fca8:	4a18      	ldr	r2, [pc, #96]	; (800fd0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fcaa:	8812      	ldrh	r2, [r2, #0]
 800fcac:	429a      	cmp	r2, r3
 800fcae:	d90a      	bls.n	800fcc6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fcb0:	2214      	movs	r2, #20
 800fcb2:	fb02 1303 	mla	r3, r2, r3, r1
 800fcb6:	7c58      	ldrb	r0, [r3, #17]
 800fcb8:	0942      	lsrs	r2, r0, #5
 800fcba:	7cd8      	ldrb	r0, [r3, #19]
 800fcbc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fcc0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fcc4:	4770      	bx	lr
 800fcc6:	4912      	ldr	r1, [pc, #72]	; (800fd10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800fcc8:	8809      	ldrh	r1, [r1, #0]
 800fcca:	4411      	add	r1, r2
 800fccc:	428b      	cmp	r3, r1
 800fcce:	da09      	bge.n	800fce4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fcd0:	1a9b      	subs	r3, r3, r2
 800fcd2:	4a10      	ldr	r2, [pc, #64]	; (800fd14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800fcd4:	6812      	ldr	r2, [r2, #0]
 800fcd6:	210e      	movs	r1, #14
 800fcd8:	fb01 2303 	mla	r3, r1, r3, r2
 800fcdc:	7b18      	ldrb	r0, [r3, #12]
 800fcde:	f000 001f 	and.w	r0, r0, #31
 800fce2:	4770      	bx	lr
 800fce4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fce8:	4293      	cmp	r3, r2
 800fcea:	d10a      	bne.n	800fd02 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800fcec:	4b0a      	ldr	r3, [pc, #40]	; (800fd18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800fcee:	681b      	ldr	r3, [r3, #0]
 800fcf0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fcf4:	b10a      	cbz	r2, 800fcfa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800fcf6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fcf8:	b900      	cbnz	r0, 800fcfc <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fcfa:	6898      	ldr	r0, [r3, #8]
 800fcfc:	6803      	ldr	r3, [r0, #0]
 800fcfe:	6a1b      	ldr	r3, [r3, #32]
 800fd00:	4718      	bx	r3
 800fd02:	2000      	movs	r0, #0
 800fd04:	4770      	bx	lr
 800fd06:	bf00      	nop
 800fd08:	20008a18 	.word	0x20008a18
 800fd0c:	20008a10 	.word	0x20008a10
 800fd10:	20008a14 	.word	0x20008a14
 800fd14:	200089f8 	.word	0x200089f8
 800fd18:	20008990 	.word	0x20008990

0800fd1c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fd1c:	2010      	movs	r0, #16
 800fd1e:	4770      	bx	lr

0800fd20 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fd20:	2000      	movs	r0, #0
 800fd22:	4770      	bx	lr

0800fd24 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800fd24:	00d2      	lsls	r2, r2, #3
 800fd26:	0209      	lsls	r1, r1, #8
 800fd28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fd2c:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800fd30:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800fd34:	4310      	orrs	r0, r2
 800fd36:	4770      	bx	lr

0800fd38 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800fd38:	0a09      	lsrs	r1, r1, #8
 800fd3a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fd3e:	4770      	bx	lr

0800fd40 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800fd40:	08c9      	lsrs	r1, r1, #3
 800fd42:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800fd46:	4770      	bx	lr

0800fd48 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800fd48:	00c9      	lsls	r1, r1, #3
 800fd4a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fd4e:	4770      	bx	lr

0800fd50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fd50:	2bff      	cmp	r3, #255	; 0xff
 800fd52:	d050      	beq.n	800fdf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fd54:	2a0b      	cmp	r2, #11
 800fd56:	d04a      	beq.n	800fdee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fd58:	d80e      	bhi.n	800fd78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fd5a:	2a03      	cmp	r2, #3
 800fd5c:	d03f      	beq.n	800fdde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fd5e:	d804      	bhi.n	800fd6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fd60:	2a01      	cmp	r2, #1
 800fd62:	d03e      	beq.n	800fde2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fd64:	d93f      	bls.n	800fde6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fd66:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fd68:	4770      	bx	lr
 800fd6a:	2a09      	cmp	r2, #9
 800fd6c:	d03f      	beq.n	800fdee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fd6e:	d83c      	bhi.n	800fdea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd70:	2a08      	cmp	r2, #8
 800fd72:	d03a      	beq.n	800fdea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd74:	2000      	movs	r0, #0
 800fd76:	4770      	bx	lr
 800fd78:	2a2f      	cmp	r2, #47	; 0x2f
 800fd7a:	d024      	beq.n	800fdc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fd7c:	d80d      	bhi.n	800fd9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fd7e:	2a2d      	cmp	r2, #45	; 0x2d
 800fd80:	d014      	beq.n	800fdac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fd82:	d826      	bhi.n	800fdd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fd84:	2a2c      	cmp	r2, #44	; 0x2c
 800fd86:	d1f5      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd88:	684b      	ldr	r3, [r1, #4]
 800fd8a:	781b      	ldrb	r3, [r3, #0]
 800fd8c:	2b01      	cmp	r3, #1
 800fd8e:	d018      	beq.n	800fdc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fd90:	d323      	bcc.n	800fdda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fd92:	2b02      	cmp	r3, #2
 800fd94:	d1ee      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd96:	6880      	ldr	r0, [r0, #8]
 800fd98:	4770      	bx	lr
 800fd9a:	2a31      	cmp	r2, #49	; 0x31
 800fd9c:	d004      	beq.n	800fda8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fd9e:	d328      	bcc.n	800fdf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fda0:	2a32      	cmp	r2, #50	; 0x32
 800fda2:	d026      	beq.n	800fdf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fda4:	2a33      	cmp	r2, #51	; 0x33
 800fda6:	d1e5      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fda8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fdaa:	4770      	bx	lr
 800fdac:	684b      	ldr	r3, [r1, #4]
 800fdae:	781b      	ldrb	r3, [r3, #0]
 800fdb0:	2b01      	cmp	r3, #1
 800fdb2:	d004      	beq.n	800fdbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fdb4:	d30b      	bcc.n	800fdce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fdb6:	2b02      	cmp	r3, #2
 800fdb8:	d1dc      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdba:	6900      	ldr	r0, [r0, #16]
 800fdbc:	4770      	bx	lr
 800fdbe:	6a00      	ldr	r0, [r0, #32]
 800fdc0:	4770      	bx	lr
 800fdc2:	6980      	ldr	r0, [r0, #24]
 800fdc4:	4770      	bx	lr
 800fdc6:	684b      	ldr	r3, [r1, #4]
 800fdc8:	781b      	ldrb	r3, [r3, #0]
 800fdca:	2b00      	cmp	r3, #0
 800fdcc:	d1d2      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdce:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fdd0:	4770      	bx	lr
 800fdd2:	684b      	ldr	r3, [r1, #4]
 800fdd4:	781b      	ldrb	r3, [r3, #0]
 800fdd6:	2b00      	cmp	r3, #0
 800fdd8:	d1cc      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdda:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fddc:	4770      	bx	lr
 800fdde:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fde0:	4770      	bx	lr
 800fde2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fde4:	4770      	bx	lr
 800fde6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fde8:	4770      	bx	lr
 800fdea:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fdec:	4770      	bx	lr
 800fdee:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fdf0:	4770      	bx	lr
 800fdf2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fdf4:	4770      	bx	lr
 800fdf6:	2a0b      	cmp	r2, #11
 800fdf8:	d049      	beq.n	800fe8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fdfa:	d80e      	bhi.n	800fe1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fdfc:	2a03      	cmp	r2, #3
 800fdfe:	d040      	beq.n	800fe82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fe00:	d804      	bhi.n	800fe0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fe02:	2a01      	cmp	r2, #1
 800fe04:	d03f      	beq.n	800fe86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fe06:	d940      	bls.n	800fe8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fe08:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fe0a:	4770      	bx	lr
 800fe0c:	2a09      	cmp	r2, #9
 800fe0e:	d03e      	beq.n	800fe8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe10:	d801      	bhi.n	800fe16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fe12:	2a08      	cmp	r2, #8
 800fe14:	d1ae      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe16:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fe18:	4770      	bx	lr
 800fe1a:	2a2f      	cmp	r2, #47	; 0x2f
 800fe1c:	d024      	beq.n	800fe68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fe1e:	d80d      	bhi.n	800fe3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fe20:	2a2d      	cmp	r2, #45	; 0x2d
 800fe22:	d014      	beq.n	800fe4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fe24:	d826      	bhi.n	800fe74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fe26:	2a2c      	cmp	r2, #44	; 0x2c
 800fe28:	d1a4      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe2a:	684b      	ldr	r3, [r1, #4]
 800fe2c:	781b      	ldrb	r3, [r3, #0]
 800fe2e:	2b01      	cmp	r3, #1
 800fe30:	d018      	beq.n	800fe64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fe32:	d324      	bcc.n	800fe7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fe34:	2b02      	cmp	r3, #2
 800fe36:	d19d      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe38:	68c0      	ldr	r0, [r0, #12]
 800fe3a:	4770      	bx	lr
 800fe3c:	2a31      	cmp	r2, #49	; 0x31
 800fe3e:	d004      	beq.n	800fe4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fe40:	d327      	bcc.n	800fe92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe42:	2a32      	cmp	r2, #50	; 0x32
 800fe44:	d025      	beq.n	800fe92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fe46:	2a33      	cmp	r2, #51	; 0x33
 800fe48:	d194      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe4a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fe4c:	4770      	bx	lr
 800fe4e:	684b      	ldr	r3, [r1, #4]
 800fe50:	781b      	ldrb	r3, [r3, #0]
 800fe52:	2b01      	cmp	r3, #1
 800fe54:	d004      	beq.n	800fe60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fe56:	d30b      	bcc.n	800fe70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fe58:	2b02      	cmp	r3, #2
 800fe5a:	d18b      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe5c:	6940      	ldr	r0, [r0, #20]
 800fe5e:	4770      	bx	lr
 800fe60:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fe62:	4770      	bx	lr
 800fe64:	69c0      	ldr	r0, [r0, #28]
 800fe66:	4770      	bx	lr
 800fe68:	684b      	ldr	r3, [r1, #4]
 800fe6a:	781b      	ldrb	r3, [r3, #0]
 800fe6c:	2b00      	cmp	r3, #0
 800fe6e:	d181      	bne.n	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe70:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fe72:	4770      	bx	lr
 800fe74:	684b      	ldr	r3, [r1, #4]
 800fe76:	781b      	ldrb	r3, [r3, #0]
 800fe78:	2b00      	cmp	r3, #0
 800fe7a:	f47f af7b 	bne.w	800fd74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe7e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fe80:	4770      	bx	lr
 800fe82:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe84:	4770      	bx	lr
 800fe86:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fe88:	4770      	bx	lr
 800fe8a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fe8c:	4770      	bx	lr
 800fe8e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fe90:	4770      	bx	lr
 800fe92:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fe94:	4770      	bx	lr

0800fe96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fe96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe9a:	b087      	sub	sp, #28
 800fe9c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fe9e:	9205      	str	r2, [sp, #20]
 800fea0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fea4:	9202      	str	r2, [sp, #8]
 800fea6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800feaa:	9101      	str	r1, [sp, #4]
 800feac:	6841      	ldr	r1, [r0, #4]
 800feae:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800feb2:	fb01 2404 	mla	r4, r1, r4, r2
 800feb6:	6802      	ldr	r2, [r0, #0]
 800feb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800febc:	f8de 2000 	ldr.w	r2, [lr]
 800fec0:	9203      	str	r2, [sp, #12]
 800fec2:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fec6:	3204      	adds	r2, #4
 800fec8:	9204      	str	r2, [sp, #16]
 800feca:	9a02      	ldr	r2, [sp, #8]
 800fecc:	43d6      	mvns	r6, r2
 800fece:	b2f6      	uxtb	r6, r6
 800fed0:	9a01      	ldr	r2, [sp, #4]
 800fed2:	2a00      	cmp	r2, #0
 800fed4:	dc03      	bgt.n	800fede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fed6:	9a05      	ldr	r2, [sp, #20]
 800fed8:	2a00      	cmp	r2, #0
 800feda:	f340 8129 	ble.w	8010130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fede:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fee0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fee4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fee8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800feec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800feee:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fef2:	2b00      	cmp	r3, #0
 800fef4:	dd0e      	ble.n	800ff14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fef6:	1408      	asrs	r0, r1, #16
 800fef8:	d405      	bmi.n	800ff06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fefa:	4560      	cmp	r0, ip
 800fefc:	da03      	bge.n	800ff06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fefe:	1410      	asrs	r0, r2, #16
 800ff00:	d401      	bmi.n	800ff06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff02:	42b8      	cmp	r0, r7
 800ff04:	db07      	blt.n	800ff16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ff06:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff08:	4401      	add	r1, r0
 800ff0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff0c:	3b01      	subs	r3, #1
 800ff0e:	4402      	add	r2, r0
 800ff10:	3402      	adds	r4, #2
 800ff12:	e7ee      	b.n	800fef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ff14:	d071      	beq.n	800fffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ff16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ff18:	1e58      	subs	r0, r3, #1
 800ff1a:	fb05 1500 	mla	r5, r5, r0, r1
 800ff1e:	142d      	asrs	r5, r5, #16
 800ff20:	d45f      	bmi.n	800ffe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff22:	4565      	cmp	r5, ip
 800ff24:	da5d      	bge.n	800ffe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ff28:	fb05 2000 	mla	r0, r5, r0, r2
 800ff2c:	1400      	asrs	r0, r0, #16
 800ff2e:	d458      	bmi.n	800ffe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff30:	42b8      	cmp	r0, r7
 800ff32:	da56      	bge.n	800ffe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ff34:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ff38:	4699      	mov	r9, r3
 800ff3a:	46a2      	mov	sl, r4
 800ff3c:	f1b9 0f00 	cmp.w	r9, #0
 800ff40:	dd57      	ble.n	800fff2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ff42:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ff46:	9803      	ldr	r0, [sp, #12]
 800ff48:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ff4c:	140d      	asrs	r5, r1, #16
 800ff4e:	fb07 000c 	mla	r0, r7, ip, r0
 800ff52:	f109 39ff 	add.w	r9, r9, #4294967295
 800ff56:	5d40      	ldrb	r0, [r0, r5]
 800ff58:	9d04      	ldr	r5, [sp, #16]
 800ff5a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ff5e:	f8ba 5000 	ldrh.w	r5, [sl]
 800ff62:	122f      	asrs	r7, r5, #8
 800ff64:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ff68:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff6c:	fb17 f706 	smulbb	r7, r7, r6
 800ff70:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ff74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff78:	00ed      	lsls	r5, r5, #3
 800ff7a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ff7e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ff82:	10c7      	asrs	r7, r0, #3
 800ff84:	b2ed      	uxtb	r5, r5
 800ff86:	00c0      	lsls	r0, r0, #3
 800ff88:	fb18 f806 	smulbb	r8, r8, r6
 800ff8c:	fb15 f506 	smulbb	r5, r5, r6
 800ff90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ff94:	b2c0      	uxtb	r0, r0
 800ff96:	fa1f fc8c 	uxth.w	ip, ip
 800ff9a:	fb07 870b 	mla	r7, r7, fp, r8
 800ff9e:	fb00 500b 	mla	r0, r0, fp, r5
 800ffa2:	b280      	uxth	r0, r0
 800ffa4:	b2bf      	uxth	r7, r7
 800ffa6:	f10c 0501 	add.w	r5, ip, #1
 800ffaa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ffae:	f107 0801 	add.w	r8, r7, #1
 800ffb2:	1c45      	adds	r5, r0, #1
 800ffb4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ffb8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800ffbc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ffc2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ffc6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800ffca:	ea4c 0c05 	orr.w	ip, ip, r5
 800ffce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800ffd2:	4401      	add	r1, r0
 800ffd4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ffd6:	ea4c 0c08 	orr.w	ip, ip, r8
 800ffda:	f82a cb02 	strh.w	ip, [sl], #2
 800ffde:	4402      	add	r2, r0
 800ffe0:	e7ac      	b.n	800ff3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800ffe2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800ffe6:	f04f 0800 	mov.w	r8, #0
 800ffea:	eb03 0008 	add.w	r0, r3, r8
 800ffee:	2800      	cmp	r0, #0
 800fff0:	dc41      	bgt.n	8010076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fff2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fff6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fffa:	9b01      	ldr	r3, [sp, #4]
 800fffc:	2b00      	cmp	r3, #0
 800fffe:	f340 8097 	ble.w	8010130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010002:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010006:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801000a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801000e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010010:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010014:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010018:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801001c:	eef0 6a62 	vmov.f32	s13, s5
 8010020:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010024:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010028:	ee77 2a62 	vsub.f32	s5, s14, s5
 801002c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010030:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010034:	eef0 6a43 	vmov.f32	s13, s6
 8010038:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801003c:	ee12 2a90 	vmov	r2, s5
 8010040:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010044:	fb92 f3f3 	sdiv	r3, r2, r3
 8010048:	ee13 2a10 	vmov	r2, s6
 801004c:	9313      	str	r3, [sp, #76]	; 0x4c
 801004e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010050:	fb92 f3f3 	sdiv	r3, r2, r3
 8010054:	9314      	str	r3, [sp, #80]	; 0x50
 8010056:	9b01      	ldr	r3, [sp, #4]
 8010058:	9a05      	ldr	r2, [sp, #20]
 801005a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801005e:	3b01      	subs	r3, #1
 8010060:	9301      	str	r3, [sp, #4]
 8010062:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010066:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010068:	eeb0 3a67 	vmov.f32	s6, s15
 801006c:	bf08      	it	eq
 801006e:	4613      	moveq	r3, r2
 8010070:	eef0 2a47 	vmov.f32	s5, s14
 8010074:	e72c      	b.n	800fed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010076:	140f      	asrs	r7, r1, #16
 8010078:	d453      	bmi.n	8010122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801007a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801007e:	42bd      	cmp	r5, r7
 8010080:	dd4f      	ble.n	8010122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010082:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010086:	d44c      	bmi.n	8010122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010088:	f8de 000c 	ldr.w	r0, [lr, #12]
 801008c:	4560      	cmp	r0, ip
 801008e:	dd48      	ble.n	8010122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010090:	9803      	ldr	r0, [sp, #12]
 8010092:	b22d      	sxth	r5, r5
 8010094:	fb0c 0505 	mla	r5, ip, r5, r0
 8010098:	5de8      	ldrb	r0, [r5, r7]
 801009a:	9d04      	ldr	r5, [sp, #16]
 801009c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80100a0:	f06f 0501 	mvn.w	r5, #1
 80100a4:	fb05 fb08 	mul.w	fp, r5, r8
 80100a8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80100ac:	f834 500b 	ldrh.w	r5, [r4, fp]
 80100b0:	122f      	asrs	r7, r5, #8
 80100b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100b6:	fb17 f706 	smulbb	r7, r7, r6
 80100ba:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80100be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80100c2:	00ed      	lsls	r5, r5, #3
 80100c4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80100c8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80100cc:	10c7      	asrs	r7, r0, #3
 80100ce:	b2ed      	uxtb	r5, r5
 80100d0:	00c0      	lsls	r0, r0, #3
 80100d2:	fb19 f906 	smulbb	r9, r9, r6
 80100d6:	fb15 f506 	smulbb	r5, r5, r6
 80100da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80100de:	b2c0      	uxtb	r0, r0
 80100e0:	fa1f fc8c 	uxth.w	ip, ip
 80100e4:	fb07 970a 	mla	r7, r7, sl, r9
 80100e8:	fb00 500a 	mla	r0, r0, sl, r5
 80100ec:	b2bf      	uxth	r7, r7
 80100ee:	b280      	uxth	r0, r0
 80100f0:	f10c 0501 	add.w	r5, ip, #1
 80100f4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80100f8:	f107 0901 	add.w	r9, r7, #1
 80100fc:	1c45      	adds	r5, r0, #1
 80100fe:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010102:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010106:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801010a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801010e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010112:	ea4c 0c05 	orr.w	ip, ip, r5
 8010116:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801011a:	ea4c 0c09 	orr.w	ip, ip, r9
 801011e:	f824 c00b 	strh.w	ip, [r4, fp]
 8010122:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010124:	4401      	add	r1, r0
 8010126:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010128:	f108 38ff 	add.w	r8, r8, #4294967295
 801012c:	4402      	add	r2, r0
 801012e:	e75c      	b.n	800ffea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8010130:	b007      	add	sp, #28
 8010132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010136 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010136:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801013a:	b085      	sub	sp, #20
 801013c:	4693      	mov	fp, r2
 801013e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010140:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010142:	6870      	ldr	r0, [r6, #4]
 8010144:	9100      	str	r1, [sp, #0]
 8010146:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801014a:	fb00 2404 	mla	r4, r0, r4, r2
 801014e:	6832      	ldr	r2, [r6, #0]
 8010150:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010154:	682a      	ldr	r2, [r5, #0]
 8010156:	9201      	str	r2, [sp, #4]
 8010158:	686a      	ldr	r2, [r5, #4]
 801015a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801015e:	3204      	adds	r2, #4
 8010160:	9202      	str	r2, [sp, #8]
 8010162:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010166:	9a00      	ldr	r2, [sp, #0]
 8010168:	2a00      	cmp	r2, #0
 801016a:	dc03      	bgt.n	8010174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801016c:	f1bb 0f00 	cmp.w	fp, #0
 8010170:	f340 80a0 	ble.w	80102b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010174:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010176:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801017a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801017e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010182:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010184:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010188:	2b00      	cmp	r3, #0
 801018a:	dd0c      	ble.n	80101a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801018c:	1406      	asrs	r6, r0, #16
 801018e:	d405      	bmi.n	801019c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010190:	454e      	cmp	r6, r9
 8010192:	da03      	bge.n	801019c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010194:	1416      	asrs	r6, r2, #16
 8010196:	d401      	bmi.n	801019c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010198:	4546      	cmp	r6, r8
 801019a:	db05      	blt.n	80101a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801019c:	4470      	add	r0, lr
 801019e:	4462      	add	r2, ip
 80101a0:	3b01      	subs	r3, #1
 80101a2:	3402      	adds	r4, #2
 80101a4:	e7f0      	b.n	8010188 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80101a6:	d00f      	beq.n	80101c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80101a8:	1e5e      	subs	r6, r3, #1
 80101aa:	fb0e 0706 	mla	r7, lr, r6, r0
 80101ae:	143f      	asrs	r7, r7, #16
 80101b0:	d541      	bpl.n	8010236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80101b2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80101b6:	4698      	mov	r8, r3
 80101b8:	9603      	str	r6, [sp, #12]
 80101ba:	f1b8 0f00 	cmp.w	r8, #0
 80101be:	dc59      	bgt.n	8010274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80101c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80101c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80101c8:	9b00      	ldr	r3, [sp, #0]
 80101ca:	2b00      	cmp	r3, #0
 80101cc:	dd72      	ble.n	80102b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80101ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80101d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80101d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80101da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80101dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80101e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80101e4:	eeb0 6a62 	vmov.f32	s12, s5
 80101e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80101ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80101f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80101f4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80101f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80101fc:	eeb0 6a43 	vmov.f32	s12, s6
 8010200:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010204:	ee12 2a90 	vmov	r2, s5
 8010208:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801020c:	fb92 fef3 	sdiv	lr, r2, r3
 8010210:	ee13 2a10 	vmov	r2, s6
 8010214:	fb92 fcf3 	sdiv	ip, r2, r3
 8010218:	9b00      	ldr	r3, [sp, #0]
 801021a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801021e:	3b01      	subs	r3, #1
 8010220:	9300      	str	r3, [sp, #0]
 8010222:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010226:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010228:	eeb0 3a67 	vmov.f32	s6, s15
 801022c:	bf08      	it	eq
 801022e:	465b      	moveq	r3, fp
 8010230:	eef0 2a47 	vmov.f32	s5, s14
 8010234:	e797      	b.n	8010166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010236:	454f      	cmp	r7, r9
 8010238:	dabb      	bge.n	80101b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801023a:	fb0c 2606 	mla	r6, ip, r6, r2
 801023e:	1436      	asrs	r6, r6, #16
 8010240:	d4b7      	bmi.n	80101b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010242:	4546      	cmp	r6, r8
 8010244:	dab5      	bge.n	80101b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010246:	461e      	mov	r6, r3
 8010248:	46a0      	mov	r8, r4
 801024a:	2e00      	cmp	r6, #0
 801024c:	ddb8      	ble.n	80101c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801024e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8010252:	9901      	ldr	r1, [sp, #4]
 8010254:	1417      	asrs	r7, r2, #16
 8010256:	ea4f 4920 	mov.w	r9, r0, asr #16
 801025a:	fb0a 1707 	mla	r7, sl, r7, r1
 801025e:	9902      	ldr	r1, [sp, #8]
 8010260:	f817 7009 	ldrb.w	r7, [r7, r9]
 8010264:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010268:	f828 7b02 	strh.w	r7, [r8], #2
 801026c:	4470      	add	r0, lr
 801026e:	4462      	add	r2, ip
 8010270:	3e01      	subs	r6, #1
 8010272:	e7ea      	b.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010274:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010278:	d417      	bmi.n	80102aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801027a:	68ae      	ldr	r6, [r5, #8]
 801027c:	454e      	cmp	r6, r9
 801027e:	dd14      	ble.n	80102aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010280:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010284:	d411      	bmi.n	80102aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010286:	68ef      	ldr	r7, [r5, #12]
 8010288:	4557      	cmp	r7, sl
 801028a:	dd0e      	ble.n	80102aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801028c:	9f01      	ldr	r7, [sp, #4]
 801028e:	b236      	sxth	r6, r6
 8010290:	fb0a 7606 	mla	r6, sl, r6, r7
 8010294:	9f02      	ldr	r7, [sp, #8]
 8010296:	f816 6009 	ldrb.w	r6, [r6, r9]
 801029a:	f06f 0101 	mvn.w	r1, #1
 801029e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80102a2:	fb01 f608 	mul.w	r6, r1, r8
 80102a6:	9903      	ldr	r1, [sp, #12]
 80102a8:	538f      	strh	r7, [r1, r6]
 80102aa:	4470      	add	r0, lr
 80102ac:	4462      	add	r2, ip
 80102ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80102b2:	e782      	b.n	80101ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80102b4:	b005      	add	sp, #20
 80102b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102be:	b087      	sub	sp, #28
 80102c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80102c2:	9205      	str	r2, [sp, #20]
 80102c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80102c8:	9203      	str	r2, [sp, #12]
 80102ca:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80102ce:	9102      	str	r1, [sp, #8]
 80102d0:	6861      	ldr	r1, [r4, #4]
 80102d2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80102d6:	fb01 2000 	mla	r0, r1, r0, r2
 80102da:	6822      	ldr	r2, [r4, #0]
 80102dc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80102e0:	9200      	str	r2, [sp, #0]
 80102e2:	f8dc 2000 	ldr.w	r2, [ip]
 80102e6:	9204      	str	r2, [sp, #16]
 80102e8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80102ec:	3204      	adds	r2, #4
 80102ee:	9201      	str	r2, [sp, #4]
 80102f0:	9a03      	ldr	r2, [sp, #12]
 80102f2:	43d5      	mvns	r5, r2
 80102f4:	b2ed      	uxtb	r5, r5
 80102f6:	9a02      	ldr	r2, [sp, #8]
 80102f8:	2a00      	cmp	r2, #0
 80102fa:	dc03      	bgt.n	8010304 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80102fc:	9a05      	ldr	r2, [sp, #20]
 80102fe:	2a00      	cmp	r2, #0
 8010300:	f340 812c 	ble.w	801055c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010304:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010306:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801030a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801030e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010312:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010314:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010318:	2b00      	cmp	r3, #0
 801031a:	dd10      	ble.n	801033e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801031c:	140c      	asrs	r4, r1, #16
 801031e:	d405      	bmi.n	801032c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010320:	4574      	cmp	r4, lr
 8010322:	da03      	bge.n	801032c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010324:	1414      	asrs	r4, r2, #16
 8010326:	d401      	bmi.n	801032c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010328:	42bc      	cmp	r4, r7
 801032a:	db09      	blt.n	8010340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801032c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801032e:	9800      	ldr	r0, [sp, #0]
 8010330:	4421      	add	r1, r4
 8010332:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010334:	3002      	adds	r0, #2
 8010336:	4422      	add	r2, r4
 8010338:	3b01      	subs	r3, #1
 801033a:	9000      	str	r0, [sp, #0]
 801033c:	e7ec      	b.n	8010318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801033e:	d071      	beq.n	8010424 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010340:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010342:	1e5c      	subs	r4, r3, #1
 8010344:	fb06 1604 	mla	r6, r6, r4, r1
 8010348:	1436      	asrs	r6, r6, #16
 801034a:	d45d      	bmi.n	8010408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801034c:	4576      	cmp	r6, lr
 801034e:	da5b      	bge.n	8010408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010350:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010352:	fb06 2404 	mla	r4, r6, r4, r2
 8010356:	1424      	asrs	r4, r4, #16
 8010358:	d456      	bmi.n	8010408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801035a:	42bc      	cmp	r4, r7
 801035c:	da54      	bge.n	8010408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801035e:	f8dd 9000 	ldr.w	r9, [sp]
 8010362:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8010366:	4698      	mov	r8, r3
 8010368:	f1b8 0f00 	cmp.w	r8, #0
 801036c:	dd54      	ble.n	8010418 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801036e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010372:	9804      	ldr	r0, [sp, #16]
 8010374:	1414      	asrs	r4, r2, #16
 8010376:	fb07 0404 	mla	r4, r7, r4, r0
 801037a:	140e      	asrs	r6, r1, #16
 801037c:	9801      	ldr	r0, [sp, #4]
 801037e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010382:	f8b9 4000 	ldrh.w	r4, [r9]
 8010386:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801038a:	eb00 0b0e 	add.w	fp, r0, lr
 801038e:	1227      	asrs	r7, r4, #8
 8010390:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010394:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010398:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801039c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801039e:	fb16 f60a 	smulbb	r6, r6, sl
 80103a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80103a6:	fb07 6705 	mla	r7, r7, r5, r6
 80103aa:	10e6      	asrs	r6, r4, #3
 80103ac:	00e4      	lsls	r4, r4, #3
 80103ae:	b2e4      	uxtb	r4, r4
 80103b0:	fb1b fb0a 	smulbb	fp, fp, sl
 80103b4:	fb14 f405 	smulbb	r4, r4, r5
 80103b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80103bc:	b2bf      	uxth	r7, r7
 80103be:	fb06 b605 	mla	r6, r6, r5, fp
 80103c2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80103c6:	b2b6      	uxth	r6, r6
 80103c8:	fa1f fe8e 	uxth.w	lr, lr
 80103cc:	1c7c      	adds	r4, r7, #1
 80103ce:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80103d2:	f106 0b01 	add.w	fp, r6, #1
 80103d6:	f10e 0401 	add.w	r4, lr, #1
 80103da:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80103de:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80103e2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80103e6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80103ea:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80103ee:	4327      	orrs	r7, r4
 80103f0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80103f4:	4401      	add	r1, r0
 80103f6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80103f8:	ea47 070b 	orr.w	r7, r7, fp
 80103fc:	f829 7b02 	strh.w	r7, [r9], #2
 8010400:	4402      	add	r2, r0
 8010402:	f108 38ff 	add.w	r8, r8, #4294967295
 8010406:	e7af      	b.n	8010368 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010408:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801040c:	f04f 0e00 	mov.w	lr, #0
 8010410:	eb03 040e 	add.w	r4, r3, lr
 8010414:	2c00      	cmp	r4, #0
 8010416:	dc43      	bgt.n	80104a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010418:	9a00      	ldr	r2, [sp, #0]
 801041a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801041e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010422:	9300      	str	r3, [sp, #0]
 8010424:	9b02      	ldr	r3, [sp, #8]
 8010426:	2b00      	cmp	r3, #0
 8010428:	f340 8098 	ble.w	801055c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801042c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010430:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010434:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010438:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801043a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801043e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010442:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010446:	eef0 6a62 	vmov.f32	s13, s5
 801044a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801044e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010452:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010456:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801045a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801045e:	eef0 6a43 	vmov.f32	s13, s6
 8010462:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010466:	ee12 2a90 	vmov	r2, s5
 801046a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801046e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010472:	ee13 2a10 	vmov	r2, s6
 8010476:	9313      	str	r3, [sp, #76]	; 0x4c
 8010478:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801047a:	fb92 f3f3 	sdiv	r3, r2, r3
 801047e:	9314      	str	r3, [sp, #80]	; 0x50
 8010480:	9b02      	ldr	r3, [sp, #8]
 8010482:	9a05      	ldr	r2, [sp, #20]
 8010484:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010488:	3b01      	subs	r3, #1
 801048a:	9302      	str	r3, [sp, #8]
 801048c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010492:	eeb0 3a67 	vmov.f32	s6, s15
 8010496:	bf08      	it	eq
 8010498:	4613      	moveq	r3, r2
 801049a:	eef0 2a47 	vmov.f32	s5, s14
 801049e:	e72a      	b.n	80102f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80104a0:	140f      	asrs	r7, r1, #16
 80104a2:	d454      	bmi.n	801054e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104a4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80104a8:	42be      	cmp	r6, r7
 80104aa:	dd50      	ble.n	801054e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104ac:	ea5f 4822 	movs.w	r8, r2, asr #16
 80104b0:	d44d      	bmi.n	801054e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104b2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80104b6:	4544      	cmp	r4, r8
 80104b8:	dd49      	ble.n	801054e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80104ba:	9c04      	ldr	r4, [sp, #16]
 80104bc:	b236      	sxth	r6, r6
 80104be:	fb08 4606 	mla	r6, r8, r6, r4
 80104c2:	f06f 0001 	mvn.w	r0, #1
 80104c6:	f816 8007 	ldrb.w	r8, [r6, r7]
 80104ca:	9c01      	ldr	r4, [sp, #4]
 80104cc:	fb00 fa0e 	mul.w	sl, r0, lr
 80104d0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80104d4:	9800      	ldr	r0, [sp, #0]
 80104d6:	eb04 0b08 	add.w	fp, r4, r8
 80104da:	f830 400a 	ldrh.w	r4, [r0, sl]
 80104de:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80104e2:	9801      	ldr	r0, [sp, #4]
 80104e4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80104e8:	f810 8008 	ldrb.w	r8, [r0, r8]
 80104ec:	9800      	ldr	r0, [sp, #0]
 80104ee:	1227      	asrs	r7, r4, #8
 80104f0:	fb16 f609 	smulbb	r6, r6, r9
 80104f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80104f8:	fb07 6705 	mla	r7, r7, r5, r6
 80104fc:	10e6      	asrs	r6, r4, #3
 80104fe:	00e4      	lsls	r4, r4, #3
 8010500:	b2e4      	uxtb	r4, r4
 8010502:	fb1b fb09 	smulbb	fp, fp, r9
 8010506:	fb14 f405 	smulbb	r4, r4, r5
 801050a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801050e:	b2bf      	uxth	r7, r7
 8010510:	fb06 b605 	mla	r6, r6, r5, fp
 8010514:	fb08 4809 	mla	r8, r8, r9, r4
 8010518:	b2b6      	uxth	r6, r6
 801051a:	fa1f f888 	uxth.w	r8, r8
 801051e:	1c7c      	adds	r4, r7, #1
 8010520:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010524:	f106 0b01 	add.w	fp, r6, #1
 8010528:	f108 0401 	add.w	r4, r8, #1
 801052c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010530:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010534:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010538:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801053c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010540:	4327      	orrs	r7, r4
 8010542:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010546:	ea47 070b 	orr.w	r7, r7, fp
 801054a:	f820 700a 	strh.w	r7, [r0, sl]
 801054e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010550:	4401      	add	r1, r0
 8010552:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010554:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010558:	4402      	add	r2, r0
 801055a:	e759      	b.n	8010410 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801055c:	b007      	add	sp, #28
 801055e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010564 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010568:	b085      	sub	sp, #20
 801056a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801056e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010570:	9203      	str	r2, [sp, #12]
 8010572:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010576:	6870      	ldr	r0, [r6, #4]
 8010578:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801057a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801057e:	686f      	ldr	r7, [r5, #4]
 8010580:	9101      	str	r1, [sp, #4]
 8010582:	fb00 2404 	mla	r4, r0, r4, r2
 8010586:	6832      	ldr	r2, [r6, #0]
 8010588:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801058c:	682a      	ldr	r2, [r5, #0]
 801058e:	9202      	str	r2, [sp, #8]
 8010590:	3704      	adds	r7, #4
 8010592:	9a01      	ldr	r2, [sp, #4]
 8010594:	2a00      	cmp	r2, #0
 8010596:	dc03      	bgt.n	80105a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010598:	9a03      	ldr	r2, [sp, #12]
 801059a:	2a00      	cmp	r2, #0
 801059c:	f340 80cc 	ble.w	8010738 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80105a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80105a2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80105a6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80105aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80105b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105b4:	2b00      	cmp	r3, #0
 80105b6:	dd0d      	ble.n	80105d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80105b8:	1406      	asrs	r6, r0, #16
 80105ba:	d405      	bmi.n	80105c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105bc:	454e      	cmp	r6, r9
 80105be:	da03      	bge.n	80105c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105c0:	1416      	asrs	r6, r2, #16
 80105c2:	d401      	bmi.n	80105c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80105c4:	4546      	cmp	r6, r8
 80105c6:	db06      	blt.n	80105d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80105c8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80105ca:	4460      	add	r0, ip
 80105cc:	4432      	add	r2, r6
 80105ce:	3b01      	subs	r3, #1
 80105d0:	3402      	adds	r4, #2
 80105d2:	e7ef      	b.n	80105b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80105d4:	d00f      	beq.n	80105f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80105d6:	1e5e      	subs	r6, r3, #1
 80105d8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80105dc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80105e0:	d543      	bpl.n	801066a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80105e2:	4698      	mov	r8, r3
 80105e4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80105e8:	f1b8 0f00 	cmp.w	r8, #0
 80105ec:	dc71      	bgt.n	80106d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80105ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80105f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80105f6:	9b01      	ldr	r3, [sp, #4]
 80105f8:	2b00      	cmp	r3, #0
 80105fa:	f340 809d 	ble.w	8010738 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80105fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010602:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010606:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801060a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801060c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010610:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010614:	eeb0 6a62 	vmov.f32	s12, s5
 8010618:	ee61 7a27 	vmul.f32	s15, s2, s15
 801061c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010620:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010624:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010628:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801062c:	eeb0 6a43 	vmov.f32	s12, s6
 8010630:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010634:	ee12 2a90 	vmov	r2, s5
 8010638:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801063c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010640:	ee13 2a10 	vmov	r2, s6
 8010644:	fb92 f3f3 	sdiv	r3, r2, r3
 8010648:	9312      	str	r3, [sp, #72]	; 0x48
 801064a:	9b01      	ldr	r3, [sp, #4]
 801064c:	9a03      	ldr	r2, [sp, #12]
 801064e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010652:	3b01      	subs	r3, #1
 8010654:	9301      	str	r3, [sp, #4]
 8010656:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801065a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801065c:	eeb0 3a67 	vmov.f32	s6, s15
 8010660:	bf08      	it	eq
 8010662:	4613      	moveq	r3, r2
 8010664:	eef0 2a47 	vmov.f32	s5, s14
 8010668:	e793      	b.n	8010592 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801066a:	45ce      	cmp	lr, r9
 801066c:	dab9      	bge.n	80105e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801066e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010670:	fb01 2606 	mla	r6, r1, r6, r2
 8010674:	1436      	asrs	r6, r6, #16
 8010676:	d4b4      	bmi.n	80105e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010678:	4546      	cmp	r6, r8
 801067a:	dab2      	bge.n	80105e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801067c:	4698      	mov	r8, r3
 801067e:	46a2      	mov	sl, r4
 8010680:	f1b8 0f00 	cmp.w	r8, #0
 8010684:	ddb3      	ble.n	80105ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010686:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801068a:	9902      	ldr	r1, [sp, #8]
 801068c:	1416      	asrs	r6, r2, #16
 801068e:	fb09 1606 	mla	r6, r9, r6, r1
 8010692:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010696:	492a      	ldr	r1, [pc, #168]	; (8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010698:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801069c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80106a0:	eb07 0b0e 	add.w	fp, r7, lr
 80106a4:	4460      	add	r0, ip
 80106a6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80106aa:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80106ae:	00f6      	lsls	r6, r6, #3
 80106b0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80106b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80106b8:	ea49 0606 	orr.w	r6, r9, r6
 80106bc:	f817 900e 	ldrb.w	r9, [r7, lr]
 80106c0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80106c2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80106c6:	f82a 6b02 	strh.w	r6, [sl], #2
 80106ca:	440a      	add	r2, r1
 80106cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80106d0:	e7d6      	b.n	8010680 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80106d2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80106d6:	d429      	bmi.n	801072c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106d8:	68ae      	ldr	r6, [r5, #8]
 80106da:	454e      	cmp	r6, r9
 80106dc:	dd26      	ble.n	801072c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106de:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80106e2:	d423      	bmi.n	801072c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106e4:	68e9      	ldr	r1, [r5, #12]
 80106e6:	4559      	cmp	r1, fp
 80106e8:	dd20      	ble.n	801072c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80106ea:	9902      	ldr	r1, [sp, #8]
 80106ec:	fa0f fe86 	sxth.w	lr, r6
 80106f0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80106f4:	f06f 0101 	mvn.w	r1, #1
 80106f8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80106fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010700:	eb07 060e 	add.w	r6, r7, lr
 8010704:	fb01 f908 	mul.w	r9, r1, r8
 8010708:	f896 b002 	ldrb.w	fp, [r6, #2]
 801070c:	7876      	ldrb	r6, [r6, #1]
 801070e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010712:	00f6      	lsls	r6, r6, #3
 8010714:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010718:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801071c:	ea4b 0606 	orr.w	r6, fp, r6
 8010720:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8010724:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010728:	f82a 6009 	strh.w	r6, [sl, r9]
 801072c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801072e:	4460      	add	r0, ip
 8010730:	440a      	add	r2, r1
 8010732:	f108 38ff 	add.w	r8, r8, #4294967295
 8010736:	e757      	b.n	80105e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010738:	b005      	add	sp, #20
 801073a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801073e:	bf00      	nop
 8010740:	fffff800 	.word	0xfffff800

08010744 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010748:	b087      	sub	sp, #28
 801074a:	468b      	mov	fp, r1
 801074c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801074e:	9204      	str	r2, [sp, #16]
 8010750:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010754:	9205      	str	r2, [sp, #20]
 8010756:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801075a:	6841      	ldr	r1, [r0, #4]
 801075c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010760:	fb01 2404 	mla	r4, r1, r4, r2
 8010764:	6802      	ldr	r2, [r0, #0]
 8010766:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801076a:	f8dc 2000 	ldr.w	r2, [ip]
 801076e:	9201      	str	r2, [sp, #4]
 8010770:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010774:	3204      	adds	r2, #4
 8010776:	9202      	str	r2, [sp, #8]
 8010778:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801077c:	f1bb 0f00 	cmp.w	fp, #0
 8010780:	dc03      	bgt.n	801078a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010782:	9a04      	ldr	r2, [sp, #16]
 8010784:	2a00      	cmp	r2, #0
 8010786:	f340 8138 	ble.w	80109fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801078a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801078c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010790:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010794:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010798:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801079a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801079e:	2b00      	cmp	r3, #0
 80107a0:	dd0e      	ble.n	80107c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80107a2:	1402      	asrs	r2, r0, #16
 80107a4:	d405      	bmi.n	80107b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107a6:	42ba      	cmp	r2, r7
 80107a8:	da03      	bge.n	80107b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107aa:	140a      	asrs	r2, r1, #16
 80107ac:	d401      	bmi.n	80107b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80107ae:	42b2      	cmp	r2, r6
 80107b0:	db07      	blt.n	80107c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80107b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80107b4:	4410      	add	r0, r2
 80107b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107b8:	3b01      	subs	r3, #1
 80107ba:	4411      	add	r1, r2
 80107bc:	3402      	adds	r4, #2
 80107be:	e7ee      	b.n	801079e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80107c0:	d019      	beq.n	80107f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80107c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80107c4:	1e5a      	subs	r2, r3, #1
 80107c6:	fb05 0502 	mla	r5, r5, r2, r0
 80107ca:	142d      	asrs	r5, r5, #16
 80107cc:	d409      	bmi.n	80107e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107ce:	42bd      	cmp	r5, r7
 80107d0:	da07      	bge.n	80107e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80107d4:	fb05 1202 	mla	r2, r5, r2, r1
 80107d8:	1412      	asrs	r2, r2, #16
 80107da:	d402      	bmi.n	80107e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80107dc:	42b2      	cmp	r2, r6
 80107de:	f2c0 80ac 	blt.w	801093a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80107e2:	f04f 0e00 	mov.w	lr, #0
 80107e6:	eb03 020e 	add.w	r2, r3, lr
 80107ea:	2a00      	cmp	r2, #0
 80107ec:	dc3e      	bgt.n	801086c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80107ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80107f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80107f6:	f1bb 0f00 	cmp.w	fp, #0
 80107fa:	f340 80fe 	ble.w	80109fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80107fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010802:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010806:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801080a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801080c:	f1bb 0b01 	subs.w	fp, fp, #1
 8010810:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010814:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010818:	eeb0 6a62 	vmov.f32	s12, s5
 801081c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010824:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010828:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801082c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010830:	eeb0 6a43 	vmov.f32	s12, s6
 8010834:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010838:	ee12 2a90 	vmov	r2, s5
 801083c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010840:	fb92 f3f3 	sdiv	r3, r2, r3
 8010844:	ee13 2a10 	vmov	r2, s6
 8010848:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801084c:	9313      	str	r3, [sp, #76]	; 0x4c
 801084e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010850:	fb92 f3f3 	sdiv	r3, r2, r3
 8010854:	9a04      	ldr	r2, [sp, #16]
 8010856:	9314      	str	r3, [sp, #80]	; 0x50
 8010858:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801085c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801085e:	eeb0 3a67 	vmov.f32	s6, s15
 8010862:	bf08      	it	eq
 8010864:	4613      	moveq	r3, r2
 8010866:	eef0 2a47 	vmov.f32	s5, s14
 801086a:	e787      	b.n	801077c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801086c:	1406      	asrs	r6, r0, #16
 801086e:	d45d      	bmi.n	801092c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010870:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010874:	42b5      	cmp	r5, r6
 8010876:	dd59      	ble.n	801092c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010878:	140f      	asrs	r7, r1, #16
 801087a:	d457      	bmi.n	801092c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801087c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010880:	42ba      	cmp	r2, r7
 8010882:	dd53      	ble.n	801092c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010884:	9a01      	ldr	r2, [sp, #4]
 8010886:	b22d      	sxth	r5, r5
 8010888:	fb07 2505 	mla	r5, r7, r5, r2
 801088c:	5daa      	ldrb	r2, [r5, r6]
 801088e:	9d02      	ldr	r5, [sp, #8]
 8010890:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010894:	0e2e      	lsrs	r6, r5, #24
 8010896:	d049      	beq.n	801092c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010898:	f06f 0201 	mvn.w	r2, #1
 801089c:	fb02 f20e 	mul.w	r2, r2, lr
 80108a0:	9203      	str	r2, [sp, #12]
 80108a2:	f834 8002 	ldrh.w	r8, [r4, r2]
 80108a6:	9a05      	ldr	r2, [sp, #20]
 80108a8:	4356      	muls	r6, r2
 80108aa:	1c72      	adds	r2, r6, #1
 80108ac:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80108b0:	1212      	asrs	r2, r2, #8
 80108b2:	fa1f f982 	uxth.w	r9, r2
 80108b6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80108ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80108be:	43d2      	mvns	r2, r2
 80108c0:	b2d2      	uxtb	r2, r2
 80108c2:	fb16 f609 	smulbb	r6, r6, r9
 80108c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80108ca:	fb07 6702 	mla	r7, r7, r2, r6
 80108ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80108d2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80108d6:	b2ed      	uxtb	r5, r5
 80108d8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80108dc:	fa5f f888 	uxtb.w	r8, r8
 80108e0:	fb15 f509 	smulbb	r5, r5, r9
 80108e4:	fb08 5502 	mla	r5, r8, r2, r5
 80108e8:	b2bf      	uxth	r7, r7
 80108ea:	fb1a fa09 	smulbb	sl, sl, r9
 80108ee:	b2ad      	uxth	r5, r5
 80108f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80108f4:	fb06 a602 	mla	r6, r6, r2, sl
 80108f8:	1c7a      	adds	r2, r7, #1
 80108fa:	f105 0a01 	add.w	sl, r5, #1
 80108fe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010902:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010906:	b2b6      	uxth	r6, r6
 8010908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801090c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010910:	ea47 070a 	orr.w	r7, r7, sl
 8010914:	f106 0a01 	add.w	sl, r6, #1
 8010918:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801091c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010920:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010924:	9a03      	ldr	r2, [sp, #12]
 8010926:	ea47 070a 	orr.w	r7, r7, sl
 801092a:	52a7      	strh	r7, [r4, r2]
 801092c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801092e:	4410      	add	r0, r2
 8010930:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010932:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010936:	4411      	add	r1, r2
 8010938:	e755      	b.n	80107e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801093a:	f04f 0800 	mov.w	r8, #0
 801093e:	eba3 0208 	sub.w	r2, r3, r8
 8010942:	2a00      	cmp	r2, #0
 8010944:	f77f af53 	ble.w	80107ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010948:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801094c:	9f01      	ldr	r7, [sp, #4]
 801094e:	140a      	asrs	r2, r1, #16
 8010950:	1405      	asrs	r5, r0, #16
 8010952:	fb06 7202 	mla	r2, r6, r2, r7
 8010956:	5d52      	ldrb	r2, [r2, r5]
 8010958:	9d02      	ldr	r5, [sp, #8]
 801095a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801095e:	0e2e      	lsrs	r6, r5, #24
 8010960:	d044      	beq.n	80109ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010962:	9a05      	ldr	r2, [sp, #20]
 8010964:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010968:	4356      	muls	r6, r2
 801096a:	1c72      	adds	r2, r6, #1
 801096c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010970:	1212      	asrs	r2, r2, #8
 8010972:	fa1f f982 	uxth.w	r9, r2
 8010976:	ea4f 272e 	mov.w	r7, lr, asr #8
 801097a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801097e:	43d2      	mvns	r2, r2
 8010980:	b2d2      	uxtb	r2, r2
 8010982:	fb16 f609 	smulbb	r6, r6, r9
 8010986:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801098a:	fb07 6702 	mla	r7, r7, r2, r6
 801098e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010992:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010996:	b2ed      	uxtb	r5, r5
 8010998:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801099c:	fa5f fe8e 	uxtb.w	lr, lr
 80109a0:	fb15 f509 	smulbb	r5, r5, r9
 80109a4:	fb0e 5502 	mla	r5, lr, r2, r5
 80109a8:	b2bf      	uxth	r7, r7
 80109aa:	fb1a fa09 	smulbb	sl, sl, r9
 80109ae:	b2ad      	uxth	r5, r5
 80109b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80109b4:	fb06 a602 	mla	r6, r6, r2, sl
 80109b8:	1c7a      	adds	r2, r7, #1
 80109ba:	f105 0a01 	add.w	sl, r5, #1
 80109be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80109c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80109c6:	b2b6      	uxth	r6, r6
 80109c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109d0:	ea47 070a 	orr.w	r7, r7, sl
 80109d4:	f106 0a01 	add.w	sl, r6, #1
 80109d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80109dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109e4:	ea47 070a 	orr.w	r7, r7, sl
 80109e8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80109ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80109ee:	4410      	add	r0, r2
 80109f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80109f2:	f108 0801 	add.w	r8, r8, #1
 80109f6:	4411      	add	r1, r2
 80109f8:	e7a1      	b.n	801093e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80109fa:	b007      	add	sp, #28
 80109fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a04:	b085      	sub	sp, #20
 8010a06:	468b      	mov	fp, r1
 8010a08:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a0a:	9203      	str	r2, [sp, #12]
 8010a0c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010a10:	6841      	ldr	r1, [r0, #4]
 8010a12:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010a16:	fb01 2404 	mla	r4, r1, r4, r2
 8010a1a:	6802      	ldr	r2, [r0, #0]
 8010a1c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a20:	f8de 2000 	ldr.w	r2, [lr]
 8010a24:	9200      	str	r2, [sp, #0]
 8010a26:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010a2a:	3204      	adds	r2, #4
 8010a2c:	9201      	str	r2, [sp, #4]
 8010a2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010a32:	f1bb 0f00 	cmp.w	fp, #0
 8010a36:	dc03      	bgt.n	8010a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010a38:	9a03      	ldr	r2, [sp, #12]
 8010a3a:	2a00      	cmp	r2, #0
 8010a3c:	f340 8153 	ble.w	8010ce6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010a40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010a42:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010a46:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010a4a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a50:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010a54:	2b00      	cmp	r3, #0
 8010a56:	dd0e      	ble.n	8010a76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010a58:	1408      	asrs	r0, r1, #16
 8010a5a:	d405      	bmi.n	8010a68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a5c:	42b8      	cmp	r0, r7
 8010a5e:	da03      	bge.n	8010a68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a60:	1410      	asrs	r0, r2, #16
 8010a62:	d401      	bmi.n	8010a68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010a64:	42b0      	cmp	r0, r6
 8010a66:	db07      	blt.n	8010a78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010a68:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a6a:	4401      	add	r1, r0
 8010a6c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a6e:	3b01      	subs	r3, #1
 8010a70:	4402      	add	r2, r0
 8010a72:	3402      	adds	r4, #2
 8010a74:	e7ee      	b.n	8010a54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010a76:	d017      	beq.n	8010aa8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010a78:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010a7a:	1e58      	subs	r0, r3, #1
 8010a7c:	fb05 1500 	mla	r5, r5, r0, r1
 8010a80:	142d      	asrs	r5, r5, #16
 8010a82:	d409      	bmi.n	8010a98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a84:	42bd      	cmp	r5, r7
 8010a86:	da07      	bge.n	8010a98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a88:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010a8a:	fb05 2000 	mla	r0, r5, r0, r2
 8010a8e:	1400      	asrs	r0, r0, #16
 8010a90:	d402      	bmi.n	8010a98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a92:	42b0      	cmp	r0, r6
 8010a94:	f2c0 80bc 	blt.w	8010c10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010a98:	2600      	movs	r6, #0
 8010a9a:	1998      	adds	r0, r3, r6
 8010a9c:	2800      	cmp	r0, #0
 8010a9e:	dc3e      	bgt.n	8010b1e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010aa0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010aa4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010aa8:	f1bb 0f00 	cmp.w	fp, #0
 8010aac:	f340 811b 	ble.w	8010ce6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ab0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010ab4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010ab8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010abc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010abe:	f1bb 0b01 	subs.w	fp, fp, #1
 8010ac2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010ac6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010aca:	eeb0 6a62 	vmov.f32	s12, s5
 8010ace:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ad2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ad6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010ada:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010ade:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ae2:	eeb0 6a43 	vmov.f32	s12, s6
 8010ae6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010aea:	ee12 2a90 	vmov	r2, s5
 8010aee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010af2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010af6:	ee13 2a10 	vmov	r2, s6
 8010afa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010afe:	9311      	str	r3, [sp, #68]	; 0x44
 8010b00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b02:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b06:	9a03      	ldr	r2, [sp, #12]
 8010b08:	9312      	str	r3, [sp, #72]	; 0x48
 8010b0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010b0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b10:	eeb0 3a67 	vmov.f32	s6, s15
 8010b14:	bf08      	it	eq
 8010b16:	4613      	moveq	r3, r2
 8010b18:	eef0 2a47 	vmov.f32	s5, s14
 8010b1c:	e789      	b.n	8010a32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010b1e:	140f      	asrs	r7, r1, #16
 8010b20:	d45e      	bmi.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010b22:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010b26:	42bd      	cmp	r5, r7
 8010b28:	dd5a      	ble.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010b2a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010b2e:	d457      	bmi.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010b30:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010b34:	4560      	cmp	r0, ip
 8010b36:	dd53      	ble.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010b38:	9800      	ldr	r0, [sp, #0]
 8010b3a:	b22d      	sxth	r5, r5
 8010b3c:	fb0c 0505 	mla	r5, ip, r5, r0
 8010b40:	5de8      	ldrb	r0, [r5, r7]
 8010b42:	9d01      	ldr	r5, [sp, #4]
 8010b44:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010b48:	0e07      	lsrs	r7, r0, #24
 8010b4a:	2fff      	cmp	r7, #255	; 0xff
 8010b4c:	d04e      	beq.n	8010bec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010b4e:	b2fd      	uxtb	r5, r7
 8010b50:	2f00      	cmp	r7, #0
 8010b52:	d045      	beq.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010b54:	f06f 0701 	mvn.w	r7, #1
 8010b58:	4377      	muls	r7, r6
 8010b5a:	fa1f f985 	uxth.w	r9, r5
 8010b5e:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010b62:	9702      	str	r7, [sp, #8]
 8010b64:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010b68:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010b6c:	43ed      	mvns	r5, r5
 8010b6e:	b2ed      	uxtb	r5, r5
 8010b70:	fb17 f709 	smulbb	r7, r7, r9
 8010b74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010b78:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010b7c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010b80:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010b84:	b2c0      	uxtb	r0, r0
 8010b86:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010b8a:	fa5f f888 	uxtb.w	r8, r8
 8010b8e:	fb10 f009 	smulbb	r0, r0, r9
 8010b92:	fb08 0005 	mla	r0, r8, r5, r0
 8010b96:	b280      	uxth	r0, r0
 8010b98:	fa1f fc8c 	uxth.w	ip, ip
 8010b9c:	fb1a fa09 	smulbb	sl, sl, r9
 8010ba0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010ba4:	fb07 a705 	mla	r7, r7, r5, sl
 8010ba8:	f100 0a01 	add.w	sl, r0, #1
 8010bac:	f10c 0501 	add.w	r5, ip, #1
 8010bb0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010bb4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010bb8:	b2bf      	uxth	r7, r7
 8010bba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010bc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010bc6:	f107 0a01 	add.w	sl, r7, #1
 8010bca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010bce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010bd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010bd6:	9802      	ldr	r0, [sp, #8]
 8010bd8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010bdc:	f824 c000 	strh.w	ip, [r4, r0]
 8010be0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010be2:	4401      	add	r1, r0
 8010be4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010be6:	3e01      	subs	r6, #1
 8010be8:	4402      	add	r2, r0
 8010bea:	e756      	b.n	8010a9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010bec:	f06f 0501 	mvn.w	r5, #1
 8010bf0:	fb05 f706 	mul.w	r7, r5, r6
 8010bf4:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010bf8:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010bfc:	0945      	lsrs	r5, r0, #5
 8010bfe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010c02:	ea4c 0505 	orr.w	r5, ip, r5
 8010c06:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010c0a:	4305      	orrs	r5, r0
 8010c0c:	53e5      	strh	r5, [r4, r7]
 8010c0e:	e7e7      	b.n	8010be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010c10:	f04f 0800 	mov.w	r8, #0
 8010c14:	eba3 0008 	sub.w	r0, r3, r8
 8010c18:	2800      	cmp	r0, #0
 8010c1a:	f77f af41 	ble.w	8010aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010c1e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010c22:	9f00      	ldr	r7, [sp, #0]
 8010c24:	1410      	asrs	r0, r2, #16
 8010c26:	140d      	asrs	r5, r1, #16
 8010c28:	fb06 7000 	mla	r0, r6, r0, r7
 8010c2c:	5d40      	ldrb	r0, [r0, r5]
 8010c2e:	9d01      	ldr	r5, [sp, #4]
 8010c30:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010c34:	0e06      	lsrs	r6, r0, #24
 8010c36:	2eff      	cmp	r6, #255	; 0xff
 8010c38:	d048      	beq.n	8010ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8010c3a:	b2f5      	uxtb	r5, r6
 8010c3c:	2e00      	cmp	r6, #0
 8010c3e:	d03e      	beq.n	8010cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010c40:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010c44:	fa1f f985 	uxth.w	r9, r5
 8010c48:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010c4c:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010c50:	43ed      	mvns	r5, r5
 8010c52:	b2ed      	uxtb	r5, r5
 8010c54:	fb16 f609 	smulbb	r6, r6, r9
 8010c58:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c5c:	fb07 6705 	mla	r7, r7, r5, r6
 8010c60:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010c64:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010c68:	b2c0      	uxtb	r0, r0
 8010c6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010c6e:	fa5f fc8c 	uxtb.w	ip, ip
 8010c72:	fb10 f009 	smulbb	r0, r0, r9
 8010c76:	fb0c 0005 	mla	r0, ip, r5, r0
 8010c7a:	b2bf      	uxth	r7, r7
 8010c7c:	fb1a fa09 	smulbb	sl, sl, r9
 8010c80:	b280      	uxth	r0, r0
 8010c82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c86:	fb06 a605 	mla	r6, r6, r5, sl
 8010c8a:	1c7d      	adds	r5, r7, #1
 8010c8c:	f100 0a01 	add.w	sl, r0, #1
 8010c90:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010c94:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010c98:	b2b6      	uxth	r6, r6
 8010c9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ca2:	ea47 070a 	orr.w	r7, r7, sl
 8010ca6:	f106 0a01 	add.w	sl, r6, #1
 8010caa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010cae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010cb2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cb6:	ea47 070a 	orr.w	r7, r7, sl
 8010cba:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010cbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010cc0:	4401      	add	r1, r0
 8010cc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010cc4:	f108 0801 	add.w	r8, r8, #1
 8010cc8:	4402      	add	r2, r0
 8010cca:	e7a3      	b.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010ccc:	4d07      	ldr	r5, [pc, #28]	; (8010cec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010cce:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010cd2:	0945      	lsrs	r5, r0, #5
 8010cd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010cd8:	4335      	orrs	r5, r6
 8010cda:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010cde:	4305      	orrs	r5, r0
 8010ce0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010ce4:	e7eb      	b.n	8010cbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010ce6:	b005      	add	sp, #20
 8010ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cec:	fffff800 	.word	0xfffff800

08010cf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cf4:	b087      	sub	sp, #28
 8010cf6:	468b      	mov	fp, r1
 8010cf8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010cfa:	9204      	str	r2, [sp, #16]
 8010cfc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d00:	9205      	str	r2, [sp, #20]
 8010d02:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010d06:	6861      	ldr	r1, [r4, #4]
 8010d08:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010d0c:	fb01 2000 	mla	r0, r1, r0, r2
 8010d10:	6822      	ldr	r2, [r4, #0]
 8010d12:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010d16:	f8de 2000 	ldr.w	r2, [lr]
 8010d1a:	9201      	str	r2, [sp, #4]
 8010d1c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010d20:	9202      	str	r2, [sp, #8]
 8010d22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d26:	f1bb 0f00 	cmp.w	fp, #0
 8010d2a:	dc03      	bgt.n	8010d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010d2c:	9a04      	ldr	r2, [sp, #16]
 8010d2e:	2a00      	cmp	r2, #0
 8010d30:	f340 8142 	ble.w	8010fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010d34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d36:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010d3a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010d3e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d42:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d44:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d48:	2b00      	cmp	r3, #0
 8010d4a:	dd0e      	ble.n	8010d6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010d4c:	140c      	asrs	r4, r1, #16
 8010d4e:	d405      	bmi.n	8010d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d50:	42bc      	cmp	r4, r7
 8010d52:	da03      	bge.n	8010d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d54:	1414      	asrs	r4, r2, #16
 8010d56:	d401      	bmi.n	8010d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010d58:	42b4      	cmp	r4, r6
 8010d5a:	db07      	blt.n	8010d6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010d5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010d5e:	4421      	add	r1, r4
 8010d60:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010d62:	3b01      	subs	r3, #1
 8010d64:	4422      	add	r2, r4
 8010d66:	3002      	adds	r0, #2
 8010d68:	e7ee      	b.n	8010d48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010d6a:	d019      	beq.n	8010da0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010d6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d6e:	1e5c      	subs	r4, r3, #1
 8010d70:	fb05 1504 	mla	r5, r5, r4, r1
 8010d74:	142d      	asrs	r5, r5, #16
 8010d76:	d409      	bmi.n	8010d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d78:	42bd      	cmp	r5, r7
 8010d7a:	da07      	bge.n	8010d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d7c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d7e:	fb05 2404 	mla	r4, r5, r4, r2
 8010d82:	1424      	asrs	r4, r4, #16
 8010d84:	d402      	bmi.n	8010d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d86:	42b4      	cmp	r4, r6
 8010d88:	f2c0 80b1 	blt.w	8010eee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010d8c:	f04f 0800 	mov.w	r8, #0
 8010d90:	eb03 0408 	add.w	r4, r3, r8
 8010d94:	2c00      	cmp	r4, #0
 8010d96:	dc3e      	bgt.n	8010e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010d98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010da0:	f1bb 0f00 	cmp.w	fp, #0
 8010da4:	f340 8108 	ble.w	8010fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010da8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010dac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010db0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010db4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010db6:	f1bb 0b01 	subs.w	fp, fp, #1
 8010dba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010dbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010dc2:	eeb0 6a62 	vmov.f32	s12, s5
 8010dc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010dca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010dce:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010dd2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010dd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010dda:	eeb0 6a43 	vmov.f32	s12, s6
 8010dde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010de2:	ee12 2a90 	vmov	r2, s5
 8010de6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010dea:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dee:	ee13 2a10 	vmov	r2, s6
 8010df2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010df6:	9313      	str	r3, [sp, #76]	; 0x4c
 8010df8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dfe:	9a04      	ldr	r2, [sp, #16]
 8010e00:	9314      	str	r3, [sp, #80]	; 0x50
 8010e02:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e08:	eeb0 3a67 	vmov.f32	s6, s15
 8010e0c:	bf08      	it	eq
 8010e0e:	4613      	moveq	r3, r2
 8010e10:	eef0 2a47 	vmov.f32	s5, s14
 8010e14:	e787      	b.n	8010d26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010e16:	140e      	asrs	r6, r1, #16
 8010e18:	d462      	bmi.n	8010ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e1a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010e1e:	42b5      	cmp	r5, r6
 8010e20:	dd5e      	ble.n	8010ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e22:	1417      	asrs	r7, r2, #16
 8010e24:	d45c      	bmi.n	8010ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e26:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010e2a:	42bc      	cmp	r4, r7
 8010e2c:	dd58      	ble.n	8010ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e2e:	b22d      	sxth	r5, r5
 8010e30:	fb07 6505 	mla	r5, r7, r5, r6
 8010e34:	9c02      	ldr	r4, [sp, #8]
 8010e36:	5d66      	ldrb	r6, [r4, r5]
 8010e38:	2e00      	cmp	r6, #0
 8010e3a:	d051      	beq.n	8010ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010e3c:	9c01      	ldr	r4, [sp, #4]
 8010e3e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010e42:	f06f 0401 	mvn.w	r4, #1
 8010e46:	fb04 f408 	mul.w	r4, r4, r8
 8010e4a:	9403      	str	r4, [sp, #12]
 8010e4c:	5b05      	ldrh	r5, [r0, r4]
 8010e4e:	9c05      	ldr	r4, [sp, #20]
 8010e50:	4366      	muls	r6, r4
 8010e52:	1c74      	adds	r4, r6, #1
 8010e54:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010e58:	1224      	asrs	r4, r4, #8
 8010e5a:	b2a7      	uxth	r7, r4
 8010e5c:	122e      	asrs	r6, r5, #8
 8010e5e:	43e4      	mvns	r4, r4
 8010e60:	b2e4      	uxtb	r4, r4
 8010e62:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010e66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010e6a:	fb16 f604 	smulbb	r6, r6, r4
 8010e6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010e72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e76:	00ed      	lsls	r5, r5, #3
 8010e78:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010e7c:	b2ed      	uxtb	r5, r5
 8010e7e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010e82:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010e86:	fb15 f504 	smulbb	r5, r5, r4
 8010e8a:	fa5f f989 	uxtb.w	r9, r9
 8010e8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010e92:	fb09 5507 	mla	r5, r9, r7, r5
 8010e96:	fb1a fa04 	smulbb	sl, sl, r4
 8010e9a:	fa1f fc8c 	uxth.w	ip, ip
 8010e9e:	b2ad      	uxth	r5, r5
 8010ea0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ea4:	fb06 a607 	mla	r6, r6, r7, sl
 8010ea8:	f10c 0401 	add.w	r4, ip, #1
 8010eac:	f105 0a01 	add.w	sl, r5, #1
 8010eb0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010eb4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010eb8:	b2b6      	uxth	r6, r6
 8010eba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ebe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010ec2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010ec6:	f106 0a01 	add.w	sl, r6, #1
 8010eca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ece:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ed2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010ed6:	9c03      	ldr	r4, [sp, #12]
 8010ed8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010edc:	f820 c004 	strh.w	ip, [r0, r4]
 8010ee0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010ee2:	4421      	add	r1, r4
 8010ee4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010ee6:	f108 38ff 	add.w	r8, r8, #4294967295
 8010eea:	4422      	add	r2, r4
 8010eec:	e750      	b.n	8010d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010eee:	f04f 0900 	mov.w	r9, #0
 8010ef2:	eba3 0409 	sub.w	r4, r3, r9
 8010ef6:	2c00      	cmp	r4, #0
 8010ef8:	f77f af4e 	ble.w	8010d98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010efc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010f00:	140d      	asrs	r5, r1, #16
 8010f02:	1414      	asrs	r4, r2, #16
 8010f04:	fb06 5404 	mla	r4, r6, r4, r5
 8010f08:	9d02      	ldr	r5, [sp, #8]
 8010f0a:	5d2e      	ldrb	r6, [r5, r4]
 8010f0c:	2e00      	cmp	r6, #0
 8010f0e:	d04c      	beq.n	8010faa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010f10:	9d01      	ldr	r5, [sp, #4]
 8010f12:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010f16:	9c05      	ldr	r4, [sp, #20]
 8010f18:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010f1c:	4366      	muls	r6, r4
 8010f1e:	1c74      	adds	r4, r6, #1
 8010f20:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010f24:	1224      	asrs	r4, r4, #8
 8010f26:	b2a7      	uxth	r7, r4
 8010f28:	122e      	asrs	r6, r5, #8
 8010f2a:	43e4      	mvns	r4, r4
 8010f2c:	b2e4      	uxtb	r4, r4
 8010f2e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010f32:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f36:	fb16 f604 	smulbb	r6, r6, r4
 8010f3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f42:	00ed      	lsls	r5, r5, #3
 8010f44:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f48:	b2ed      	uxtb	r5, r5
 8010f4a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010f4e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010f52:	fb15 f504 	smulbb	r5, r5, r4
 8010f56:	fa5f f888 	uxtb.w	r8, r8
 8010f5a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f5e:	fb08 5507 	mla	r5, r8, r7, r5
 8010f62:	fb1a fa04 	smulbb	sl, sl, r4
 8010f66:	fa1f fc8c 	uxth.w	ip, ip
 8010f6a:	b2ad      	uxth	r5, r5
 8010f6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f70:	fb06 a607 	mla	r6, r6, r7, sl
 8010f74:	f10c 0401 	add.w	r4, ip, #1
 8010f78:	f105 0a01 	add.w	sl, r5, #1
 8010f7c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f84:	b2b6      	uxth	r6, r6
 8010f86:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f8a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010f92:	f106 0a01 	add.w	sl, r6, #1
 8010f96:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f9e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fa2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010fa6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010faa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fac:	4421      	add	r1, r4
 8010fae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010fb0:	f109 0901 	add.w	r9, r9, #1
 8010fb4:	4422      	add	r2, r4
 8010fb6:	e79c      	b.n	8010ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010fb8:	b007      	add	sp, #28
 8010fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fc2:	b085      	sub	sp, #20
 8010fc4:	468b      	mov	fp, r1
 8010fc6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fc8:	9203      	str	r2, [sp, #12]
 8010fca:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010fce:	6861      	ldr	r1, [r4, #4]
 8010fd0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010fd4:	fb01 2000 	mla	r0, r1, r0, r2
 8010fd8:	6822      	ldr	r2, [r4, #0]
 8010fda:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010fde:	f8d8 2000 	ldr.w	r2, [r8]
 8010fe2:	9200      	str	r2, [sp, #0]
 8010fe4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010fe8:	9201      	str	r2, [sp, #4]
 8010fea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010fee:	f1bb 0f00 	cmp.w	fp, #0
 8010ff2:	dc03      	bgt.n	8010ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010ff4:	9a03      	ldr	r2, [sp, #12]
 8010ff6:	2a00      	cmp	r2, #0
 8010ff8:	f340 8146 	ble.w	8011288 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010ffc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010ffe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011002:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011006:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801100a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801100c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011010:	2b00      	cmp	r3, #0
 8011012:	dd0e      	ble.n	8011032 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011014:	140c      	asrs	r4, r1, #16
 8011016:	d405      	bmi.n	8011024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011018:	42bc      	cmp	r4, r7
 801101a:	da03      	bge.n	8011024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801101c:	1414      	asrs	r4, r2, #16
 801101e:	d401      	bmi.n	8011024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011020:	42b4      	cmp	r4, r6
 8011022:	db07      	blt.n	8011034 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011024:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011026:	4421      	add	r1, r4
 8011028:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801102a:	3b01      	subs	r3, #1
 801102c:	4422      	add	r2, r4
 801102e:	3002      	adds	r0, #2
 8011030:	e7ee      	b.n	8011010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011032:	d017      	beq.n	8011064 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011034:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011036:	1e5c      	subs	r4, r3, #1
 8011038:	fb05 1504 	mla	r5, r5, r4, r1
 801103c:	142d      	asrs	r5, r5, #16
 801103e:	d409      	bmi.n	8011054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011040:	42bd      	cmp	r5, r7
 8011042:	da07      	bge.n	8011054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011044:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011046:	fb05 2404 	mla	r4, r5, r4, r2
 801104a:	1424      	asrs	r4, r4, #16
 801104c:	d402      	bmi.n	8011054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801104e:	42b4      	cmp	r4, r6
 8011050:	f2c0 80b3 	blt.w	80111ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011054:	2600      	movs	r6, #0
 8011056:	199c      	adds	r4, r3, r6
 8011058:	2c00      	cmp	r4, #0
 801105a:	dc3e      	bgt.n	80110da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801105c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011060:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011064:	f1bb 0f00 	cmp.w	fp, #0
 8011068:	f340 810e 	ble.w	8011288 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801106c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011070:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011074:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011078:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801107a:	f1bb 0b01 	subs.w	fp, fp, #1
 801107e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011082:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011086:	eeb0 6a62 	vmov.f32	s12, s5
 801108a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801108e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011092:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011096:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801109a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801109e:	eeb0 6a43 	vmov.f32	s12, s6
 80110a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110a6:	ee12 2a90 	vmov	r2, s5
 80110aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80110b2:	ee13 2a10 	vmov	r2, s6
 80110b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110ba:	9311      	str	r3, [sp, #68]	; 0x44
 80110bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110be:	fb92 f3f3 	sdiv	r3, r2, r3
 80110c2:	9a03      	ldr	r2, [sp, #12]
 80110c4:	9312      	str	r3, [sp, #72]	; 0x48
 80110c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80110ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80110cc:	eeb0 3a67 	vmov.f32	s6, s15
 80110d0:	bf08      	it	eq
 80110d2:	4613      	moveq	r3, r2
 80110d4:	eef0 2a47 	vmov.f32	s5, s14
 80110d8:	e789      	b.n	8010fee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80110da:	140f      	asrs	r7, r1, #16
 80110dc:	d45f      	bmi.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80110de:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80110e2:	42bd      	cmp	r5, r7
 80110e4:	dd5b      	ble.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80110e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80110ea:	d458      	bmi.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80110ec:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80110f0:	4564      	cmp	r4, ip
 80110f2:	dd54      	ble.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80110f4:	b22d      	sxth	r5, r5
 80110f6:	fb0c 7505 	mla	r5, ip, r5, r7
 80110fa:	9c01      	ldr	r4, [sp, #4]
 80110fc:	5d64      	ldrb	r4, [r4, r5]
 80110fe:	2cff      	cmp	r4, #255	; 0xff
 8011100:	d053      	beq.n	80111aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8011102:	2c00      	cmp	r4, #0
 8011104:	d04b      	beq.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011106:	9f00      	ldr	r7, [sp, #0]
 8011108:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801110c:	f06f 0501 	mvn.w	r5, #1
 8011110:	4375      	muls	r5, r6
 8011112:	9502      	str	r5, [sp, #8]
 8011114:	5b45      	ldrh	r5, [r0, r5]
 8011116:	fa1f fc84 	uxth.w	ip, r4
 801111a:	122f      	asrs	r7, r5, #8
 801111c:	43e4      	mvns	r4, r4
 801111e:	b2e4      	uxtb	r4, r4
 8011120:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8011124:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011128:	fb17 f704 	smulbb	r7, r7, r4
 801112c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011130:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011134:	00ed      	lsls	r5, r5, #3
 8011136:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801113a:	b2ed      	uxtb	r5, r5
 801113c:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8011140:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011144:	fb15 f504 	smulbb	r5, r5, r4
 8011148:	fa5f f989 	uxtb.w	r9, r9
 801114c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011150:	fb09 550c 	mla	r5, r9, ip, r5
 8011154:	fb1a fa04 	smulbb	sl, sl, r4
 8011158:	fa1f fe8e 	uxth.w	lr, lr
 801115c:	b2ad      	uxth	r5, r5
 801115e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011162:	fb07 a70c 	mla	r7, r7, ip, sl
 8011166:	f10e 0401 	add.w	r4, lr, #1
 801116a:	f105 0a01 	add.w	sl, r5, #1
 801116e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011172:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011176:	b2bf      	uxth	r7, r7
 8011178:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801117c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011180:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011184:	f107 0a01 	add.w	sl, r7, #1
 8011188:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801118c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011190:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011194:	9c02      	ldr	r4, [sp, #8]
 8011196:	ea4e 0e0a 	orr.w	lr, lr, sl
 801119a:	f820 e004 	strh.w	lr, [r0, r4]
 801119e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80111a0:	4421      	add	r1, r4
 80111a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80111a4:	3e01      	subs	r6, #1
 80111a6:	4422      	add	r2, r4
 80111a8:	e755      	b.n	8011056 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111aa:	9c00      	ldr	r4, [sp, #0]
 80111ac:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80111b0:	f06f 0401 	mvn.w	r4, #1
 80111b4:	4374      	muls	r4, r6
 80111b6:	5305      	strh	r5, [r0, r4]
 80111b8:	e7f1      	b.n	801119e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80111ba:	f04f 0900 	mov.w	r9, #0
 80111be:	eba3 0409 	sub.w	r4, r3, r9
 80111c2:	2c00      	cmp	r4, #0
 80111c4:	f77f af4a 	ble.w	801105c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80111c8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80111cc:	1414      	asrs	r4, r2, #16
 80111ce:	140d      	asrs	r5, r1, #16
 80111d0:	fb06 5504 	mla	r5, r6, r4, r5
 80111d4:	9c01      	ldr	r4, [sp, #4]
 80111d6:	5d64      	ldrb	r4, [r4, r5]
 80111d8:	2cff      	cmp	r4, #255	; 0xff
 80111da:	d04f      	beq.n	801127c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80111dc:	2c00      	cmp	r4, #0
 80111de:	d046      	beq.n	801126e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80111e0:	9e00      	ldr	r6, [sp, #0]
 80111e2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80111e6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80111ea:	b2a7      	uxth	r7, r4
 80111ec:	122e      	asrs	r6, r5, #8
 80111ee:	43e4      	mvns	r4, r4
 80111f0:	b2e4      	uxtb	r4, r4
 80111f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80111f6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80111fa:	fb16 f604 	smulbb	r6, r6, r4
 80111fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011202:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011206:	00ed      	lsls	r5, r5, #3
 8011208:	fb0c 6c07 	mla	ip, ip, r7, r6
 801120c:	b2ed      	uxtb	r5, r5
 801120e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011212:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011216:	fb15 f504 	smulbb	r5, r5, r4
 801121a:	fa5f fe8e 	uxtb.w	lr, lr
 801121e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011222:	fb0e 5507 	mla	r5, lr, r7, r5
 8011226:	fb1a fa04 	smulbb	sl, sl, r4
 801122a:	fa1f fc8c 	uxth.w	ip, ip
 801122e:	b2ad      	uxth	r5, r5
 8011230:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011234:	fb06 a607 	mla	r6, r6, r7, sl
 8011238:	f10c 0401 	add.w	r4, ip, #1
 801123c:	f105 0a01 	add.w	sl, r5, #1
 8011240:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011244:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011248:	b2b6      	uxth	r6, r6
 801124a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801124e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011252:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011256:	f106 0a01 	add.w	sl, r6, #1
 801125a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801125e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011262:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011266:	ea4c 0c0a 	orr.w	ip, ip, sl
 801126a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801126e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011270:	4421      	add	r1, r4
 8011272:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011274:	f109 0901 	add.w	r9, r9, #1
 8011278:	4422      	add	r2, r4
 801127a:	e7a0      	b.n	80111be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801127c:	9c00      	ldr	r4, [sp, #0]
 801127e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011282:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8011286:	e7f2      	b.n	801126e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8011288:	b005      	add	sp, #20
 801128a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801128e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801128e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011292:	b085      	sub	sp, #20
 8011294:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011296:	9203      	str	r2, [sp, #12]
 8011298:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801129c:	9201      	str	r2, [sp, #4]
 801129e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80112a2:	9100      	str	r1, [sp, #0]
 80112a4:	6841      	ldr	r1, [r0, #4]
 80112a6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80112aa:	fb01 2404 	mla	r4, r1, r4, r2
 80112ae:	6802      	ldr	r2, [r0, #0]
 80112b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80112b4:	f8de 2000 	ldr.w	r2, [lr]
 80112b8:	9202      	str	r2, [sp, #8]
 80112ba:	9a01      	ldr	r2, [sp, #4]
 80112bc:	43d6      	mvns	r6, r2
 80112be:	b2f6      	uxtb	r6, r6
 80112c0:	9a00      	ldr	r2, [sp, #0]
 80112c2:	2a00      	cmp	r2, #0
 80112c4:	dc03      	bgt.n	80112ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80112c6:	9a03      	ldr	r2, [sp, #12]
 80112c8:	2a00      	cmp	r2, #0
 80112ca:	f340 8124 	ble.w	8011516 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80112ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80112d0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80112d4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80112d8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80112dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80112de:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80112e2:	2b00      	cmp	r3, #0
 80112e4:	dd0e      	ble.n	8011304 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80112e6:	1408      	asrs	r0, r1, #16
 80112e8:	d405      	bmi.n	80112f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80112ea:	4560      	cmp	r0, ip
 80112ec:	da03      	bge.n	80112f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80112ee:	1410      	asrs	r0, r2, #16
 80112f0:	d401      	bmi.n	80112f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80112f2:	42b8      	cmp	r0, r7
 80112f4:	db07      	blt.n	8011306 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80112f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80112f8:	4401      	add	r1, r0
 80112fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80112fc:	3b01      	subs	r3, #1
 80112fe:	4402      	add	r2, r0
 8011300:	3402      	adds	r4, #2
 8011302:	e7ee      	b.n	80112e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011304:	d06e      	beq.n	80113e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011306:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011308:	1e58      	subs	r0, r3, #1
 801130a:	fb05 1500 	mla	r5, r5, r0, r1
 801130e:	142d      	asrs	r5, r5, #16
 8011310:	d45c      	bmi.n	80113cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011312:	4565      	cmp	r5, ip
 8011314:	da5a      	bge.n	80113cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011316:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011318:	fb05 2000 	mla	r0, r5, r0, r2
 801131c:	1400      	asrs	r0, r0, #16
 801131e:	d455      	bmi.n	80113cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011320:	42b8      	cmp	r0, r7
 8011322:	da53      	bge.n	80113cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011324:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011328:	4699      	mov	r9, r3
 801132a:	46a2      	mov	sl, r4
 801132c:	f1b9 0f00 	cmp.w	r9, #0
 8011330:	dd54      	ble.n	80113dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011332:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011336:	140d      	asrs	r5, r1, #16
 8011338:	1410      	asrs	r0, r2, #16
 801133a:	fb07 5000 	mla	r0, r7, r0, r5
 801133e:	9d02      	ldr	r5, [sp, #8]
 8011340:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011344:	f8ba 5000 	ldrh.w	r5, [sl]
 8011348:	122f      	asrs	r7, r5, #8
 801134a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801134e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011352:	fb17 f706 	smulbb	r7, r7, r6
 8011356:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801135a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801135e:	00ed      	lsls	r5, r5, #3
 8011360:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011364:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011368:	10c7      	asrs	r7, r0, #3
 801136a:	b2ed      	uxtb	r5, r5
 801136c:	00c0      	lsls	r0, r0, #3
 801136e:	fb18 f806 	smulbb	r8, r8, r6
 8011372:	fb15 f506 	smulbb	r5, r5, r6
 8011376:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801137a:	b2c0      	uxtb	r0, r0
 801137c:	fa1f fc8c 	uxth.w	ip, ip
 8011380:	fb07 870b 	mla	r7, r7, fp, r8
 8011384:	fb00 500b 	mla	r0, r0, fp, r5
 8011388:	b280      	uxth	r0, r0
 801138a:	b2bf      	uxth	r7, r7
 801138c:	f10c 0501 	add.w	r5, ip, #1
 8011390:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011394:	f107 0801 	add.w	r8, r7, #1
 8011398:	1c45      	adds	r5, r0, #1
 801139a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801139e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80113a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80113a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80113a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80113ac:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80113b0:	ea4c 0c05 	orr.w	ip, ip, r5
 80113b4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80113b8:	4401      	add	r1, r0
 80113ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 80113bc:	ea4c 0c08 	orr.w	ip, ip, r8
 80113c0:	f82a cb02 	strh.w	ip, [sl], #2
 80113c4:	4402      	add	r2, r0
 80113c6:	f109 39ff 	add.w	r9, r9, #4294967295
 80113ca:	e7af      	b.n	801132c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80113cc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80113d0:	f04f 0800 	mov.w	r8, #0
 80113d4:	eb03 0008 	add.w	r0, r3, r8
 80113d8:	2800      	cmp	r0, #0
 80113da:	dc41      	bgt.n	8011460 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80113dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113e4:	9b00      	ldr	r3, [sp, #0]
 80113e6:	2b00      	cmp	r3, #0
 80113e8:	f340 8095 	ble.w	8011516 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80113ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80113f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80113f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011402:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011406:	eef0 6a62 	vmov.f32	s13, s5
 801140a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801140e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011412:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011416:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801141a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801141e:	eef0 6a43 	vmov.f32	s13, s6
 8011422:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011426:	ee12 2a90 	vmov	r2, s5
 801142a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801142e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011432:	ee13 2a10 	vmov	r2, s6
 8011436:	9311      	str	r3, [sp, #68]	; 0x44
 8011438:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801143a:	fb92 f3f3 	sdiv	r3, r2, r3
 801143e:	9312      	str	r3, [sp, #72]	; 0x48
 8011440:	9b00      	ldr	r3, [sp, #0]
 8011442:	9a03      	ldr	r2, [sp, #12]
 8011444:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011448:	3b01      	subs	r3, #1
 801144a:	9300      	str	r3, [sp, #0]
 801144c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011452:	eeb0 3a67 	vmov.f32	s6, s15
 8011456:	bf08      	it	eq
 8011458:	4613      	moveq	r3, r2
 801145a:	eef0 2a47 	vmov.f32	s5, s14
 801145e:	e72f      	b.n	80112c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011460:	140f      	asrs	r7, r1, #16
 8011462:	d451      	bmi.n	8011508 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011464:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011468:	42bd      	cmp	r5, r7
 801146a:	dd4d      	ble.n	8011508 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801146c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011470:	d44a      	bmi.n	8011508 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011472:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011476:	4560      	cmp	r0, ip
 8011478:	dd46      	ble.n	8011508 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801147a:	b22d      	sxth	r5, r5
 801147c:	fb0c 7505 	mla	r5, ip, r5, r7
 8011480:	9802      	ldr	r0, [sp, #8]
 8011482:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011486:	f06f 0501 	mvn.w	r5, #1
 801148a:	fb05 fb08 	mul.w	fp, r5, r8
 801148e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011492:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011496:	122f      	asrs	r7, r5, #8
 8011498:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801149c:	fb17 f706 	smulbb	r7, r7, r6
 80114a0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80114a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80114a8:	00ed      	lsls	r5, r5, #3
 80114aa:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80114ae:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80114b2:	10c7      	asrs	r7, r0, #3
 80114b4:	b2ed      	uxtb	r5, r5
 80114b6:	00c0      	lsls	r0, r0, #3
 80114b8:	fb19 f906 	smulbb	r9, r9, r6
 80114bc:	fb15 f506 	smulbb	r5, r5, r6
 80114c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80114c4:	b2c0      	uxtb	r0, r0
 80114c6:	fa1f fc8c 	uxth.w	ip, ip
 80114ca:	fb07 970a 	mla	r7, r7, sl, r9
 80114ce:	fb00 500a 	mla	r0, r0, sl, r5
 80114d2:	b2bf      	uxth	r7, r7
 80114d4:	b280      	uxth	r0, r0
 80114d6:	f10c 0501 	add.w	r5, ip, #1
 80114da:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80114de:	f107 0901 	add.w	r9, r7, #1
 80114e2:	1c45      	adds	r5, r0, #1
 80114e4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80114e8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80114ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80114f0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80114f4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80114f8:	ea4c 0c05 	orr.w	ip, ip, r5
 80114fc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011500:	ea4c 0c09 	orr.w	ip, ip, r9
 8011504:	f824 c00b 	strh.w	ip, [r4, fp]
 8011508:	9811      	ldr	r0, [sp, #68]	; 0x44
 801150a:	4401      	add	r1, r0
 801150c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801150e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011512:	4402      	add	r2, r0
 8011514:	e75e      	b.n	80113d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8011516:	b005      	add	sp, #20
 8011518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801151c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801151c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011520:	b085      	sub	sp, #20
 8011522:	4693      	mov	fp, r2
 8011524:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011526:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011528:	6870      	ldr	r0, [r6, #4]
 801152a:	9101      	str	r1, [sp, #4]
 801152c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011530:	fb00 2404 	mla	r4, r0, r4, r2
 8011534:	6832      	ldr	r2, [r6, #0]
 8011536:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801153a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801153e:	682a      	ldr	r2, [r5, #0]
 8011540:	9202      	str	r2, [sp, #8]
 8011542:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011546:	9a01      	ldr	r2, [sp, #4]
 8011548:	2a00      	cmp	r2, #0
 801154a:	dc03      	bgt.n	8011554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801154c:	f1bb 0f00 	cmp.w	fp, #0
 8011550:	f340 809a 	ble.w	8011688 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011554:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011556:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801155a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801155e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011562:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011564:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011568:	2b00      	cmp	r3, #0
 801156a:	dd0c      	ble.n	8011586 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801156c:	1406      	asrs	r6, r0, #16
 801156e:	d405      	bmi.n	801157c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011570:	454e      	cmp	r6, r9
 8011572:	da03      	bge.n	801157c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011574:	1416      	asrs	r6, r2, #16
 8011576:	d401      	bmi.n	801157c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011578:	4546      	cmp	r6, r8
 801157a:	db05      	blt.n	8011588 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801157c:	4470      	add	r0, lr
 801157e:	4462      	add	r2, ip
 8011580:	3b01      	subs	r3, #1
 8011582:	3402      	adds	r4, #2
 8011584:	e7f0      	b.n	8011568 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011586:	d00f      	beq.n	80115a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011588:	1e5e      	subs	r6, r3, #1
 801158a:	fb0e 0706 	mla	r7, lr, r6, r0
 801158e:	143f      	asrs	r7, r7, #16
 8011590:	d541      	bpl.n	8011616 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011592:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011596:	4698      	mov	r8, r3
 8011598:	9603      	str	r6, [sp, #12]
 801159a:	f1b8 0f00 	cmp.w	r8, #0
 801159e:	dc56      	bgt.n	801164e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80115a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80115a8:	9b01      	ldr	r3, [sp, #4]
 80115aa:	2b00      	cmp	r3, #0
 80115ac:	dd6c      	ble.n	8011688 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80115ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80115c4:	eeb0 6a62 	vmov.f32	s12, s5
 80115c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80115cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80115d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80115d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80115dc:	eeb0 6a43 	vmov.f32	s12, s6
 80115e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80115e4:	ee12 2a90 	vmov	r2, s5
 80115e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80115ec:	fb92 fef3 	sdiv	lr, r2, r3
 80115f0:	ee13 2a10 	vmov	r2, s6
 80115f4:	fb92 fcf3 	sdiv	ip, r2, r3
 80115f8:	9b01      	ldr	r3, [sp, #4]
 80115fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115fe:	3b01      	subs	r3, #1
 8011600:	9301      	str	r3, [sp, #4]
 8011602:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011606:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011608:	eeb0 3a67 	vmov.f32	s6, s15
 801160c:	bf08      	it	eq
 801160e:	465b      	moveq	r3, fp
 8011610:	eef0 2a47 	vmov.f32	s5, s14
 8011614:	e797      	b.n	8011546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011616:	454f      	cmp	r7, r9
 8011618:	dabb      	bge.n	8011592 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801161a:	fb0c 2606 	mla	r6, ip, r6, r2
 801161e:	1436      	asrs	r6, r6, #16
 8011620:	d4b7      	bmi.n	8011592 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011622:	4546      	cmp	r6, r8
 8011624:	dab5      	bge.n	8011592 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011626:	461e      	mov	r6, r3
 8011628:	46a0      	mov	r8, r4
 801162a:	2e00      	cmp	r6, #0
 801162c:	ddb8      	ble.n	80115a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801162e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011632:	9902      	ldr	r1, [sp, #8]
 8011634:	1417      	asrs	r7, r2, #16
 8011636:	ea4f 4920 	mov.w	r9, r0, asr #16
 801163a:	fb0a 9707 	mla	r7, sl, r7, r9
 801163e:	4470      	add	r0, lr
 8011640:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011644:	f828 7b02 	strh.w	r7, [r8], #2
 8011648:	4462      	add	r2, ip
 801164a:	3e01      	subs	r6, #1
 801164c:	e7ed      	b.n	801162a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801164e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011652:	d414      	bmi.n	801167e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011654:	68ae      	ldr	r6, [r5, #8]
 8011656:	454e      	cmp	r6, r9
 8011658:	dd11      	ble.n	801167e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801165a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801165e:	d40e      	bmi.n	801167e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011660:	68ef      	ldr	r7, [r5, #12]
 8011662:	4557      	cmp	r7, sl
 8011664:	dd0b      	ble.n	801167e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011666:	b236      	sxth	r6, r6
 8011668:	fb0a 9606 	mla	r6, sl, r6, r9
 801166c:	9f02      	ldr	r7, [sp, #8]
 801166e:	f06f 0101 	mvn.w	r1, #1
 8011672:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011676:	fb01 f608 	mul.w	r6, r1, r8
 801167a:	9903      	ldr	r1, [sp, #12]
 801167c:	538f      	strh	r7, [r1, r6]
 801167e:	4470      	add	r0, lr
 8011680:	4462      	add	r2, ip
 8011682:	f108 38ff 	add.w	r8, r8, #4294967295
 8011686:	e788      	b.n	801159a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011688:	b005      	add	sp, #20
 801168a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801168e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801168e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011692:	b085      	sub	sp, #20
 8011694:	468b      	mov	fp, r1
 8011696:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011698:	9202      	str	r2, [sp, #8]
 801169a:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801169e:	9203      	str	r2, [sp, #12]
 80116a0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80116a4:	6841      	ldr	r1, [r0, #4]
 80116a6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80116aa:	fb01 2404 	mla	r4, r1, r4, r2
 80116ae:	6802      	ldr	r2, [r0, #0]
 80116b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80116b4:	f8d8 2000 	ldr.w	r2, [r8]
 80116b8:	9200      	str	r2, [sp, #0]
 80116ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116be:	f1bb 0f00 	cmp.w	fp, #0
 80116c2:	dc03      	bgt.n	80116cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80116c4:	9a02      	ldr	r2, [sp, #8]
 80116c6:	2a00      	cmp	r2, #0
 80116c8:	f340 8134 	ble.w	8011934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80116cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80116ce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80116d2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80116d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80116da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80116dc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80116e0:	2b00      	cmp	r3, #0
 80116e2:	dd0e      	ble.n	8011702 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80116e4:	1402      	asrs	r2, r0, #16
 80116e6:	d405      	bmi.n	80116f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80116e8:	42ba      	cmp	r2, r7
 80116ea:	da03      	bge.n	80116f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80116ec:	140a      	asrs	r2, r1, #16
 80116ee:	d401      	bmi.n	80116f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80116f0:	42b2      	cmp	r2, r6
 80116f2:	db07      	blt.n	8011704 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80116f6:	4410      	add	r0, r2
 80116f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80116fa:	3b01      	subs	r3, #1
 80116fc:	4411      	add	r1, r2
 80116fe:	3402      	adds	r4, #2
 8011700:	e7ee      	b.n	80116e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011702:	d019      	beq.n	8011738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011704:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011706:	1e5a      	subs	r2, r3, #1
 8011708:	fb05 0502 	mla	r5, r5, r2, r0
 801170c:	142d      	asrs	r5, r5, #16
 801170e:	d409      	bmi.n	8011724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011710:	42bd      	cmp	r5, r7
 8011712:	da07      	bge.n	8011724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011714:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011716:	fb05 1202 	mla	r2, r5, r2, r1
 801171a:	1412      	asrs	r2, r2, #16
 801171c:	d402      	bmi.n	8011724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801171e:	42b2      	cmp	r2, r6
 8011720:	f2c0 80aa 	blt.w	8011878 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8011724:	f04f 0c00 	mov.w	ip, #0
 8011728:	eb03 020c 	add.w	r2, r3, ip
 801172c:	2a00      	cmp	r2, #0
 801172e:	dc3e      	bgt.n	80117ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8011730:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011734:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011738:	f1bb 0f00 	cmp.w	fp, #0
 801173c:	f340 80fa 	ble.w	8011934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011740:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011744:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011748:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801174c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801174e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011752:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011756:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801175a:	eeb0 6a62 	vmov.f32	s12, s5
 801175e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011762:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011766:	ee77 2a62 	vsub.f32	s5, s14, s5
 801176a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801176e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011772:	eeb0 6a43 	vmov.f32	s12, s6
 8011776:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801177a:	ee12 2a90 	vmov	r2, s5
 801177e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011782:	fb92 f3f3 	sdiv	r3, r2, r3
 8011786:	ee13 2a10 	vmov	r2, s6
 801178a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801178e:	9311      	str	r3, [sp, #68]	; 0x44
 8011790:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011792:	fb92 f3f3 	sdiv	r3, r2, r3
 8011796:	9a02      	ldr	r2, [sp, #8]
 8011798:	9312      	str	r3, [sp, #72]	; 0x48
 801179a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801179e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80117a0:	eeb0 3a67 	vmov.f32	s6, s15
 80117a4:	bf08      	it	eq
 80117a6:	4613      	moveq	r3, r2
 80117a8:	eef0 2a47 	vmov.f32	s5, s14
 80117ac:	e787      	b.n	80116be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80117ae:	1406      	asrs	r6, r0, #16
 80117b0:	d45b      	bmi.n	801186a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80117b2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80117b6:	42b5      	cmp	r5, r6
 80117b8:	dd57      	ble.n	801186a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80117ba:	140f      	asrs	r7, r1, #16
 80117bc:	d455      	bmi.n	801186a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80117be:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80117c2:	42ba      	cmp	r2, r7
 80117c4:	dd51      	ble.n	801186a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80117c6:	b22d      	sxth	r5, r5
 80117c8:	fb07 6505 	mla	r5, r7, r5, r6
 80117cc:	9a00      	ldr	r2, [sp, #0]
 80117ce:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80117d2:	0e2e      	lsrs	r6, r5, #24
 80117d4:	d049      	beq.n	801186a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80117d6:	f06f 0201 	mvn.w	r2, #1
 80117da:	fb02 f20c 	mul.w	r2, r2, ip
 80117de:	9201      	str	r2, [sp, #4]
 80117e0:	f834 e002 	ldrh.w	lr, [r4, r2]
 80117e4:	9a03      	ldr	r2, [sp, #12]
 80117e6:	4356      	muls	r6, r2
 80117e8:	1c72      	adds	r2, r6, #1
 80117ea:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80117ee:	1212      	asrs	r2, r2, #8
 80117f0:	fa1f f982 	uxth.w	r9, r2
 80117f4:	ea4f 272e 	mov.w	r7, lr, asr #8
 80117f8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80117fc:	43d2      	mvns	r2, r2
 80117fe:	b2d2      	uxtb	r2, r2
 8011800:	fb16 f609 	smulbb	r6, r6, r9
 8011804:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011808:	fb07 6702 	mla	r7, r7, r2, r6
 801180c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011810:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011814:	b2ed      	uxtb	r5, r5
 8011816:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801181a:	fa5f fe8e 	uxtb.w	lr, lr
 801181e:	fb15 f509 	smulbb	r5, r5, r9
 8011822:	fb0e 5502 	mla	r5, lr, r2, r5
 8011826:	b2bf      	uxth	r7, r7
 8011828:	fb1a fa09 	smulbb	sl, sl, r9
 801182c:	b2ad      	uxth	r5, r5
 801182e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011832:	fb06 a602 	mla	r6, r6, r2, sl
 8011836:	1c7a      	adds	r2, r7, #1
 8011838:	f105 0a01 	add.w	sl, r5, #1
 801183c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011840:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011844:	b2b6      	uxth	r6, r6
 8011846:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801184a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801184e:	ea47 070a 	orr.w	r7, r7, sl
 8011852:	f106 0a01 	add.w	sl, r6, #1
 8011856:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801185a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801185e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011862:	9a01      	ldr	r2, [sp, #4]
 8011864:	ea47 070a 	orr.w	r7, r7, sl
 8011868:	52a7      	strh	r7, [r4, r2]
 801186a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801186c:	4410      	add	r0, r2
 801186e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011870:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011874:	4411      	add	r1, r2
 8011876:	e757      	b.n	8011728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8011878:	f04f 0e00 	mov.w	lr, #0
 801187c:	eba3 020e 	sub.w	r2, r3, lr
 8011880:	2a00      	cmp	r2, #0
 8011882:	f77f af55 	ble.w	8011730 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011886:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801188a:	1405      	asrs	r5, r0, #16
 801188c:	140a      	asrs	r2, r1, #16
 801188e:	fb06 5202 	mla	r2, r6, r2, r5
 8011892:	9d00      	ldr	r5, [sp, #0]
 8011894:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011898:	0e2e      	lsrs	r6, r5, #24
 801189a:	d044      	beq.n	8011926 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801189c:	9a03      	ldr	r2, [sp, #12]
 801189e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80118a2:	4356      	muls	r6, r2
 80118a4:	1c72      	adds	r2, r6, #1
 80118a6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80118aa:	1212      	asrs	r2, r2, #8
 80118ac:	fa1f f982 	uxth.w	r9, r2
 80118b0:	ea4f 272c 	mov.w	r7, ip, asr #8
 80118b4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80118b8:	43d2      	mvns	r2, r2
 80118ba:	b2d2      	uxtb	r2, r2
 80118bc:	fb16 f609 	smulbb	r6, r6, r9
 80118c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80118c4:	fb07 6702 	mla	r7, r7, r2, r6
 80118c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80118cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80118d0:	b2ed      	uxtb	r5, r5
 80118d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80118d6:	fa5f fc8c 	uxtb.w	ip, ip
 80118da:	fb15 f509 	smulbb	r5, r5, r9
 80118de:	fb0c 5502 	mla	r5, ip, r2, r5
 80118e2:	b2bf      	uxth	r7, r7
 80118e4:	fb1a fa09 	smulbb	sl, sl, r9
 80118e8:	b2ad      	uxth	r5, r5
 80118ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80118ee:	fb06 a602 	mla	r6, r6, r2, sl
 80118f2:	1c7a      	adds	r2, r7, #1
 80118f4:	f105 0a01 	add.w	sl, r5, #1
 80118f8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80118fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011900:	b2b6      	uxth	r6, r6
 8011902:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011906:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801190a:	ea47 070a 	orr.w	r7, r7, sl
 801190e:	f106 0a01 	add.w	sl, r6, #1
 8011912:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011916:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801191a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801191e:	ea47 070a 	orr.w	r7, r7, sl
 8011922:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011926:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011928:	4410      	add	r0, r2
 801192a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801192c:	f10e 0e01 	add.w	lr, lr, #1
 8011930:	4411      	add	r1, r2
 8011932:	e7a3      	b.n	801187c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8011934:	b005      	add	sp, #20
 8011936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801193c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801193c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011940:	b085      	sub	sp, #20
 8011942:	468b      	mov	fp, r1
 8011944:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011946:	9203      	str	r2, [sp, #12]
 8011948:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801194c:	6861      	ldr	r1, [r4, #4]
 801194e:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8011952:	fb01 2000 	mla	r0, r1, r0, r2
 8011956:	6822      	ldr	r2, [r4, #0]
 8011958:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801195c:	f8d9 2000 	ldr.w	r2, [r9]
 8011960:	9200      	str	r2, [sp, #0]
 8011962:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011966:	f1bb 0f00 	cmp.w	fp, #0
 801196a:	dc03      	bgt.n	8011974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801196c:	9a03      	ldr	r2, [sp, #12]
 801196e:	2a00      	cmp	r2, #0
 8011970:	f340 8154 	ble.w	8011c1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8011974:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011976:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801197a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801197e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011982:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011984:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011988:	2b00      	cmp	r3, #0
 801198a:	dd0e      	ble.n	80119aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801198c:	140c      	asrs	r4, r1, #16
 801198e:	d405      	bmi.n	801199c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011990:	42bc      	cmp	r4, r7
 8011992:	da03      	bge.n	801199c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011994:	1414      	asrs	r4, r2, #16
 8011996:	d401      	bmi.n	801199c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011998:	42b4      	cmp	r4, r6
 801199a:	db07      	blt.n	80119ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801199c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801199e:	4421      	add	r1, r4
 80119a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80119a2:	3b01      	subs	r3, #1
 80119a4:	4422      	add	r2, r4
 80119a6:	3002      	adds	r0, #2
 80119a8:	e7ee      	b.n	8011988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80119aa:	d017      	beq.n	80119dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80119ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80119ae:	1e5c      	subs	r4, r3, #1
 80119b0:	fb05 1504 	mla	r5, r5, r4, r1
 80119b4:	142d      	asrs	r5, r5, #16
 80119b6:	d409      	bmi.n	80119cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80119b8:	42bd      	cmp	r5, r7
 80119ba:	da07      	bge.n	80119cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80119bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80119be:	fb05 2404 	mla	r4, r5, r4, r2
 80119c2:	1424      	asrs	r4, r4, #16
 80119c4:	d402      	bmi.n	80119cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80119c6:	42b4      	cmp	r4, r6
 80119c8:	f2c0 80c0 	blt.w	8011b4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80119cc:	2700      	movs	r7, #0
 80119ce:	19dc      	adds	r4, r3, r7
 80119d0:	2c00      	cmp	r4, #0
 80119d2:	dc3e      	bgt.n	8011a52 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80119d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80119dc:	f1bb 0f00 	cmp.w	fp, #0
 80119e0:	f340 811c 	ble.w	8011c1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80119e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80119f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119f2:	f1bb 0b01 	subs.w	fp, fp, #1
 80119f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119fe:	eeb0 6a62 	vmov.f32	s12, s5
 8011a02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a0e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011a12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a16:	eeb0 6a43 	vmov.f32	s12, s6
 8011a1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a1e:	ee12 2a90 	vmov	r2, s5
 8011a22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a2a:	ee13 2a10 	vmov	r2, s6
 8011a2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a32:	9311      	str	r3, [sp, #68]	; 0x44
 8011a34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a36:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a3a:	9a03      	ldr	r2, [sp, #12]
 8011a3c:	9312      	str	r3, [sp, #72]	; 0x48
 8011a3e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011a42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a44:	eeb0 3a67 	vmov.f32	s6, s15
 8011a48:	bf08      	it	eq
 8011a4a:	4613      	moveq	r3, r2
 8011a4c:	eef0 2a47 	vmov.f32	s5, s14
 8011a50:	e789      	b.n	8011966 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011a52:	140e      	asrs	r6, r1, #16
 8011a54:	d461      	bmi.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011a56:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8011a5a:	42b5      	cmp	r5, r6
 8011a5c:	dd5d      	ble.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011a5e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011a62:	d45a      	bmi.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011a64:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8011a68:	4564      	cmp	r4, ip
 8011a6a:	dd56      	ble.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011a6c:	b22d      	sxth	r5, r5
 8011a6e:	fb0c 6505 	mla	r5, ip, r5, r6
 8011a72:	9c00      	ldr	r4, [sp, #0]
 8011a74:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 8011a78:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8011a7c:	d04d      	beq.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011a7e:	0a26      	lsrs	r6, r4, #8
 8011a80:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8011a84:	fa5f f58e 	uxtb.w	r5, lr
 8011a88:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8011a8c:	9601      	str	r6, [sp, #4]
 8011a8e:	d04a      	beq.n	8011b26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8011a90:	f06f 0601 	mvn.w	r6, #1
 8011a94:	437e      	muls	r6, r7
 8011a96:	fa1f fa85 	uxth.w	sl, r5
 8011a9a:	f830 8006 	ldrh.w	r8, [r0, r6]
 8011a9e:	9602      	str	r6, [sp, #8]
 8011aa0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011aa4:	43ed      	mvns	r5, r5
 8011aa6:	fa5f fc8c 	uxtb.w	ip, ip
 8011aaa:	b2ed      	uxtb	r5, r5
 8011aac:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011ab0:	fb1c fc0a 	smulbb	ip, ip, sl
 8011ab4:	fb0e cc05 	mla	ip, lr, r5, ip
 8011ab8:	b2e4      	uxtb	r4, r4
 8011aba:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8011abe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011ac2:	f89d 6004 	ldrb.w	r6, [sp, #4]
 8011ac6:	fa5f f888 	uxtb.w	r8, r8
 8011aca:	fb14 f40a 	smulbb	r4, r4, sl
 8011ace:	fb08 4405 	mla	r4, r8, r5, r4
 8011ad2:	b2a4      	uxth	r4, r4
 8011ad4:	fa1f fc8c 	uxth.w	ip, ip
 8011ad8:	fb16 f60a 	smulbb	r6, r6, sl
 8011adc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011ae0:	fb0e 6e05 	mla	lr, lr, r5, r6
 8011ae4:	1c66      	adds	r6, r4, #1
 8011ae6:	f10c 0501 	add.w	r5, ip, #1
 8011aea:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011aee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011af2:	fa1f fe8e 	uxth.w	lr, lr
 8011af6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011afa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011afe:	ea4c 0c06 	orr.w	ip, ip, r6
 8011b02:	f10e 0601 	add.w	r6, lr, #1
 8011b06:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8011b0a:	0976      	lsrs	r6, r6, #5
 8011b0c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011b10:	9c02      	ldr	r4, [sp, #8]
 8011b12:	ea4c 0c06 	orr.w	ip, ip, r6
 8011b16:	f820 c004 	strh.w	ip, [r0, r4]
 8011b1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011b1c:	4421      	add	r1, r4
 8011b1e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011b20:	3f01      	subs	r7, #1
 8011b22:	4422      	add	r2, r4
 8011b24:	e753      	b.n	80119ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b26:	4e3f      	ldr	r6, [pc, #252]	; (8011c24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8011b28:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011b2c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8011b30:	ea4c 0c04 	orr.w	ip, ip, r4
 8011b34:	9c01      	ldr	r4, [sp, #4]
 8011b36:	f06f 0501 	mvn.w	r5, #1
 8011b3a:	00e6      	lsls	r6, r4, #3
 8011b3c:	437d      	muls	r5, r7
 8011b3e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011b42:	ea4c 0c04 	orr.w	ip, ip, r4
 8011b46:	f820 c005 	strh.w	ip, [r0, r5]
 8011b4a:	e7e6      	b.n	8011b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8011b4c:	f04f 0800 	mov.w	r8, #0
 8011b50:	eba3 0408 	sub.w	r4, r3, r8
 8011b54:	2c00      	cmp	r4, #0
 8011b56:	f77f af3d 	ble.w	80119d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011b5a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011b5e:	140d      	asrs	r5, r1, #16
 8011b60:	1414      	asrs	r4, r2, #16
 8011b62:	fb06 5404 	mla	r4, r6, r4, r5
 8011b66:	9d00      	ldr	r5, [sp, #0]
 8011b68:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011b6c:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8011b70:	d042      	beq.n	8011bf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8011b72:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8011b76:	fa5f f58c 	uxtb.w	r5, ip
 8011b7a:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8011b7e:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011b82:	d040      	beq.n	8011c06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011b84:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8011b88:	fa1f fa85 	uxth.w	sl, r5
 8011b8c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b90:	43ed      	mvns	r5, r5
 8011b92:	b2ff      	uxtb	r7, r7
 8011b94:	b2ed      	uxtb	r5, r5
 8011b96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b9a:	fb17 f70a 	smulbb	r7, r7, sl
 8011b9e:	fb0c 7705 	mla	r7, ip, r5, r7
 8011ba2:	b2e4      	uxtb	r4, r4
 8011ba4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011ba8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bac:	fa5f fe8e 	uxtb.w	lr, lr
 8011bb0:	fb14 f40a 	smulbb	r4, r4, sl
 8011bb4:	fb0e 4405 	mla	r4, lr, r5, r4
 8011bb8:	b2f6      	uxtb	r6, r6
 8011bba:	b2bf      	uxth	r7, r7
 8011bbc:	fb16 f60a 	smulbb	r6, r6, sl
 8011bc0:	b2a4      	uxth	r4, r4
 8011bc2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011bc6:	fb0c 6c05 	mla	ip, ip, r5, r6
 8011bca:	1c7d      	adds	r5, r7, #1
 8011bcc:	1c66      	adds	r6, r4, #1
 8011bce:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011bd2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011bd6:	fa1f fc8c 	uxth.w	ip, ip
 8011bda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011bde:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011be2:	4337      	orrs	r7, r6
 8011be4:	f10c 0601 	add.w	r6, ip, #1
 8011be8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011bec:	0976      	lsrs	r6, r6, #5
 8011bee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011bf2:	4337      	orrs	r7, r6
 8011bf4:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8011bf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011bfa:	4421      	add	r1, r4
 8011bfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011bfe:	f108 0801 	add.w	r8, r8, #1
 8011c02:	4422      	add	r2, r4
 8011c04:	e7a4      	b.n	8011b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011c06:	4d07      	ldr	r5, [pc, #28]	; (8011c24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8011c08:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011c0c:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011c10:	00f6      	lsls	r6, r6, #3
 8011c12:	4327      	orrs	r7, r4
 8011c14:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011c18:	4327      	orrs	r7, r4
 8011c1a:	e7eb      	b.n	8011bf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8011c1c:	b005      	add	sp, #20
 8011c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c22:	bf00      	nop
 8011c24:	fffff800 	.word	0xfffff800

08011c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c2c:	b087      	sub	sp, #28
 8011c2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c32:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c34:	9204      	str	r2, [sp, #16]
 8011c36:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011c3a:	9205      	str	r2, [sp, #20]
 8011c3c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c40:	9101      	str	r1, [sp, #4]
 8011c42:	6841      	ldr	r1, [r0, #4]
 8011c44:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011c48:	fb01 2404 	mla	r4, r1, r4, r2
 8011c4c:	6802      	ldr	r2, [r0, #0]
 8011c4e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c52:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011c56:	3201      	adds	r2, #1
 8011c58:	f022 0201 	bic.w	r2, r2, #1
 8011c5c:	9202      	str	r2, [sp, #8]
 8011c5e:	f8d8 2000 	ldr.w	r2, [r8]
 8011c62:	9203      	str	r2, [sp, #12]
 8011c64:	9a01      	ldr	r2, [sp, #4]
 8011c66:	2a00      	cmp	r2, #0
 8011c68:	dc03      	bgt.n	8011c72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011c6a:	9a04      	ldr	r2, [sp, #16]
 8011c6c:	2a00      	cmp	r2, #0
 8011c6e:	f340 814d 	ble.w	8011f0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c72:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011c74:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011c78:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011c7c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011c80:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011c82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c86:	2b00      	cmp	r3, #0
 8011c88:	dd0e      	ble.n	8011ca8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011c8a:	1402      	asrs	r2, r0, #16
 8011c8c:	d405      	bmi.n	8011c9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c8e:	42ba      	cmp	r2, r7
 8011c90:	da03      	bge.n	8011c9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c92:	140a      	asrs	r2, r1, #16
 8011c94:	d401      	bmi.n	8011c9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c96:	42b2      	cmp	r2, r6
 8011c98:	db07      	blt.n	8011caa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011c9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c9c:	4410      	add	r0, r2
 8011c9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ca0:	3b01      	subs	r3, #1
 8011ca2:	4411      	add	r1, r2
 8011ca4:	3402      	adds	r4, #2
 8011ca6:	e7ee      	b.n	8011c86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011ca8:	d019      	beq.n	8011cde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8011caa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cac:	1e5a      	subs	r2, r3, #1
 8011cae:	fb05 0502 	mla	r5, r5, r2, r0
 8011cb2:	142d      	asrs	r5, r5, #16
 8011cb4:	d409      	bmi.n	8011cca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011cb6:	42bd      	cmp	r5, r7
 8011cb8:	da07      	bge.n	8011cca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011cba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011cbc:	fb05 1202 	mla	r2, r5, r2, r1
 8011cc0:	1412      	asrs	r2, r2, #16
 8011cc2:	d402      	bmi.n	8011cca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011cc4:	42b2      	cmp	r2, r6
 8011cc6:	f2c0 80b7 	blt.w	8011e38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011cca:	f04f 0c00 	mov.w	ip, #0
 8011cce:	eb03 020c 	add.w	r2, r3, ip
 8011cd2:	2a00      	cmp	r2, #0
 8011cd4:	dc3f      	bgt.n	8011d56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8011cd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011cda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011cde:	9b01      	ldr	r3, [sp, #4]
 8011ce0:	2b00      	cmp	r3, #0
 8011ce2:	f340 8113 	ble.w	8011f0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8011ce6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011cf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011cf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011cf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011cfc:	eeb0 6a62 	vmov.f32	s12, s5
 8011d00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d0c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d14:	eeb0 6a43 	vmov.f32	s12, s6
 8011d18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d1c:	ee12 2a90 	vmov	r2, s5
 8011d20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d28:	ee13 2a10 	vmov	r2, s6
 8011d2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d30:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d34:	9314      	str	r3, [sp, #80]	; 0x50
 8011d36:	9b01      	ldr	r3, [sp, #4]
 8011d38:	9a04      	ldr	r2, [sp, #16]
 8011d3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d3e:	3b01      	subs	r3, #1
 8011d40:	9301      	str	r3, [sp, #4]
 8011d42:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d48:	eeb0 3a67 	vmov.f32	s6, s15
 8011d4c:	bf08      	it	eq
 8011d4e:	4613      	moveq	r3, r2
 8011d50:	eef0 2a47 	vmov.f32	s5, s14
 8011d54:	e786      	b.n	8011c64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011d56:	1405      	asrs	r5, r0, #16
 8011d58:	d467      	bmi.n	8011e2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011d5a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011d5e:	42aa      	cmp	r2, r5
 8011d60:	dd63      	ble.n	8011e2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011d62:	140e      	asrs	r6, r1, #16
 8011d64:	d461      	bmi.n	8011e2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011d66:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011d6a:	42b2      	cmp	r2, r6
 8011d6c:	dd5d      	ble.n	8011e2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011d6e:	9a02      	ldr	r2, [sp, #8]
 8011d70:	fb06 5502 	mla	r5, r6, r2, r5
 8011d74:	086a      	lsrs	r2, r5, #1
 8011d76:	9e03      	ldr	r6, [sp, #12]
 8011d78:	5cb2      	ldrb	r2, [r6, r2]
 8011d7a:	07ee      	lsls	r6, r5, #31
 8011d7c:	bf54      	ite	pl
 8011d7e:	f002 020f 	andpl.w	r2, r2, #15
 8011d82:	1112      	asrmi	r2, r2, #4
 8011d84:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011d88:	b2d2      	uxtb	r2, r2
 8011d8a:	2a00      	cmp	r2, #0
 8011d8c:	d04d      	beq.n	8011e2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011d8e:	f06f 0601 	mvn.w	r6, #1
 8011d92:	fb06 fb0c 	mul.w	fp, r6, ip
 8011d96:	9e05      	ldr	r6, [sp, #20]
 8011d98:	4d5e      	ldr	r5, [pc, #376]	; (8011f14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011d9a:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8011d9e:	682d      	ldr	r5, [r5, #0]
 8011da0:	4372      	muls	r2, r6
 8011da2:	1c56      	adds	r6, r2, #1
 8011da4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011da8:	1212      	asrs	r2, r2, #8
 8011daa:	0a2f      	lsrs	r7, r5, #8
 8011dac:	fa1f fa82 	uxth.w	sl, r2
 8011db0:	ea4f 262e 	mov.w	r6, lr, asr #8
 8011db4:	43d2      	mvns	r2, r2
 8011db6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011dba:	b2d2      	uxtb	r2, r2
 8011dbc:	fb17 f70a 	smulbb	r7, r7, sl
 8011dc0:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8011dc4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011dc8:	fb06 7602 	mla	r6, r6, r2, r7
 8011dcc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011dd0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011dd4:	fb19 f90a 	smulbb	r9, r9, sl
 8011dd8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011ddc:	00ed      	lsls	r5, r5, #3
 8011dde:	fb07 9702 	mla	r7, r7, r2, r9
 8011de2:	b2ed      	uxtb	r5, r5
 8011de4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011de8:	b2bf      	uxth	r7, r7
 8011dea:	fa5f fe8e 	uxtb.w	lr, lr
 8011dee:	fb15 f50a 	smulbb	r5, r5, sl
 8011df2:	b2b6      	uxth	r6, r6
 8011df4:	fb0e 5502 	mla	r5, lr, r2, r5
 8011df8:	f107 0901 	add.w	r9, r7, #1
 8011dfc:	b2ad      	uxth	r5, r5
 8011dfe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011e02:	f106 0901 	add.w	r9, r6, #1
 8011e06:	097f      	lsrs	r7, r7, #5
 8011e08:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011e0c:	f105 0e01 	add.w	lr, r5, #1
 8011e10:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011e14:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011e18:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8011e1c:	4337      	orrs	r7, r6
 8011e1e:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011e22:	ea47 070e 	orr.w	r7, r7, lr
 8011e26:	f824 700b 	strh.w	r7, [r4, fp]
 8011e2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e2c:	4410      	add	r0, r2
 8011e2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e30:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011e34:	4411      	add	r1, r2
 8011e36:	e74a      	b.n	8011cce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011e38:	f04f 0e00 	mov.w	lr, #0
 8011e3c:	eba3 020e 	sub.w	r2, r3, lr
 8011e40:	2a00      	cmp	r2, #0
 8011e42:	f77f af48 	ble.w	8011cd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011e46:	9e02      	ldr	r6, [sp, #8]
 8011e48:	1402      	asrs	r2, r0, #16
 8011e4a:	140d      	asrs	r5, r1, #16
 8011e4c:	fb06 2505 	mla	r5, r6, r5, r2
 8011e50:	086a      	lsrs	r2, r5, #1
 8011e52:	9e03      	ldr	r6, [sp, #12]
 8011e54:	5cb2      	ldrb	r2, [r6, r2]
 8011e56:	07ed      	lsls	r5, r5, #31
 8011e58:	bf54      	ite	pl
 8011e5a:	f002 020f 	andpl.w	r2, r2, #15
 8011e5e:	1112      	asrmi	r2, r2, #4
 8011e60:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e64:	b2d2      	uxtb	r2, r2
 8011e66:	2a00      	cmp	r2, #0
 8011e68:	d049      	beq.n	8011efe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011e6a:	9e05      	ldr	r6, [sp, #20]
 8011e6c:	4d29      	ldr	r5, [pc, #164]	; (8011f14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011e6e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011e72:	682d      	ldr	r5, [r5, #0]
 8011e74:	4372      	muls	r2, r6
 8011e76:	1c56      	adds	r6, r2, #1
 8011e78:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011e7c:	1212      	asrs	r2, r2, #8
 8011e7e:	0a2f      	lsrs	r7, r5, #8
 8011e80:	fa1f fa82 	uxth.w	sl, r2
 8011e84:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011e88:	43d2      	mvns	r2, r2
 8011e8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e8e:	b2d2      	uxtb	r2, r2
 8011e90:	fb17 f70a 	smulbb	r7, r7, sl
 8011e94:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8011e98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011e9c:	fb06 7602 	mla	r6, r6, r2, r7
 8011ea0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011ea4:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8011ea8:	fb19 f90a 	smulbb	r9, r9, sl
 8011eac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011eb0:	00ed      	lsls	r5, r5, #3
 8011eb2:	fb07 9702 	mla	r7, r7, r2, r9
 8011eb6:	b2ed      	uxtb	r5, r5
 8011eb8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011ebc:	b2bf      	uxth	r7, r7
 8011ebe:	fa5f fc8c 	uxtb.w	ip, ip
 8011ec2:	fb15 f50a 	smulbb	r5, r5, sl
 8011ec6:	b2b6      	uxth	r6, r6
 8011ec8:	fb0c 5502 	mla	r5, ip, r2, r5
 8011ecc:	f107 0901 	add.w	r9, r7, #1
 8011ed0:	b2ad      	uxth	r5, r5
 8011ed2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011ed6:	f106 0b01 	add.w	fp, r6, #1
 8011eda:	097f      	lsrs	r7, r7, #5
 8011edc:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8011ee0:	f105 0c01 	add.w	ip, r5, #1
 8011ee4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011ee8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011eec:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8011ef0:	4337      	orrs	r7, r6
 8011ef2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011ef6:	ea47 070c 	orr.w	r7, r7, ip
 8011efa:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011efe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f00:	4410      	add	r0, r2
 8011f02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f04:	f10e 0e01 	add.w	lr, lr, #1
 8011f08:	4411      	add	r1, r2
 8011f0a:	e797      	b.n	8011e3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011f0c:	b007      	add	sp, #28
 8011f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f12:	bf00      	nop
 8011f14:	20008998 	.word	0x20008998

08011f18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f1c:	b087      	sub	sp, #28
 8011f1e:	468b      	mov	fp, r1
 8011f20:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011f22:	9205      	str	r2, [sp, #20]
 8011f24:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011f28:	6841      	ldr	r1, [r0, #4]
 8011f2a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011f2e:	fb01 2404 	mla	r4, r1, r4, r2
 8011f32:	6802      	ldr	r2, [r0, #0]
 8011f34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011f38:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011f3c:	3201      	adds	r2, #1
 8011f3e:	f022 0201 	bic.w	r2, r2, #1
 8011f42:	9201      	str	r2, [sp, #4]
 8011f44:	f8d8 2000 	ldr.w	r2, [r8]
 8011f48:	9202      	str	r2, [sp, #8]
 8011f4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f4e:	f1bb 0f00 	cmp.w	fp, #0
 8011f52:	dc03      	bgt.n	8011f5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011f54:	9a05      	ldr	r2, [sp, #20]
 8011f56:	2a00      	cmp	r2, #0
 8011f58:	f340 8156 	ble.w	8012208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011f5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f5e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011f62:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011f66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011f6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f6c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f70:	2b00      	cmp	r3, #0
 8011f72:	dd0e      	ble.n	8011f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011f74:	1402      	asrs	r2, r0, #16
 8011f76:	d405      	bmi.n	8011f84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f78:	42ba      	cmp	r2, r7
 8011f7a:	da03      	bge.n	8011f84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f7c:	140a      	asrs	r2, r1, #16
 8011f7e:	d401      	bmi.n	8011f84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f80:	42b2      	cmp	r2, r6
 8011f82:	db07      	blt.n	8011f94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011f84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f86:	4410      	add	r0, r2
 8011f88:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f8a:	3b01      	subs	r3, #1
 8011f8c:	4411      	add	r1, r2
 8011f8e:	3402      	adds	r4, #2
 8011f90:	e7ee      	b.n	8011f70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011f92:	d017      	beq.n	8011fc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8011f94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f96:	1e5a      	subs	r2, r3, #1
 8011f98:	fb05 0502 	mla	r5, r5, r2, r0
 8011f9c:	142d      	asrs	r5, r5, #16
 8011f9e:	d409      	bmi.n	8011fb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011fa0:	42bd      	cmp	r5, r7
 8011fa2:	da07      	bge.n	8011fb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011fa4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011fa6:	fb05 1202 	mla	r2, r5, r2, r1
 8011faa:	1412      	asrs	r2, r2, #16
 8011fac:	d402      	bmi.n	8011fb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011fae:	42b2      	cmp	r2, r6
 8011fb0:	f2c0 80be 	blt.w	8012130 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011fb4:	2600      	movs	r6, #0
 8011fb6:	199a      	adds	r2, r3, r6
 8011fb8:	2a00      	cmp	r2, #0
 8011fba:	dc3e      	bgt.n	801203a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011fbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011fc0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011fc4:	f1bb 0f00 	cmp.w	fp, #0
 8011fc8:	f340 811e 	ble.w	8012208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011fcc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011fd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011fd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011fd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fda:	f1bb 0b01 	subs.w	fp, fp, #1
 8011fde:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011fe2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fe6:	eeb0 6a62 	vmov.f32	s12, s5
 8011fea:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011fee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ff2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ff6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011ffa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011ffe:	eeb0 6a43 	vmov.f32	s12, s6
 8012002:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012006:	ee12 2a90 	vmov	r2, s5
 801200a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801200e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012012:	ee13 2a10 	vmov	r2, s6
 8012016:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801201a:	9313      	str	r3, [sp, #76]	; 0x4c
 801201c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801201e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012022:	9a05      	ldr	r2, [sp, #20]
 8012024:	9314      	str	r3, [sp, #80]	; 0x50
 8012026:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801202a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801202c:	eeb0 3a67 	vmov.f32	s6, s15
 8012030:	bf08      	it	eq
 8012032:	4613      	moveq	r3, r2
 8012034:	eef0 2a47 	vmov.f32	s5, s14
 8012038:	e789      	b.n	8011f4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801203a:	1405      	asrs	r5, r0, #16
 801203c:	d465      	bmi.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801203e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8012042:	42aa      	cmp	r2, r5
 8012044:	dd61      	ble.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8012046:	140f      	asrs	r7, r1, #16
 8012048:	d45f      	bmi.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801204a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801204e:	42ba      	cmp	r2, r7
 8012050:	dd5b      	ble.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8012052:	9a01      	ldr	r2, [sp, #4]
 8012054:	fb07 5502 	mla	r5, r7, r2, r5
 8012058:	086a      	lsrs	r2, r5, #1
 801205a:	9f02      	ldr	r7, [sp, #8]
 801205c:	5cba      	ldrb	r2, [r7, r2]
 801205e:	07ef      	lsls	r7, r5, #31
 8012060:	bf54      	ite	pl
 8012062:	f002 020f 	andpl.w	r2, r2, #15
 8012066:	1112      	asrmi	r2, r2, #4
 8012068:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801206c:	b2d2      	uxtb	r2, r2
 801206e:	2a00      	cmp	r2, #0
 8012070:	d04b      	beq.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8012072:	4d67      	ldr	r5, [pc, #412]	; (8012210 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8012074:	682f      	ldr	r7, [r5, #0]
 8012076:	08fd      	lsrs	r5, r7, #3
 8012078:	ea4f 2917 	mov.w	r9, r7, lsr #8
 801207c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012080:	00ff      	lsls	r7, r7, #3
 8012082:	2aff      	cmp	r2, #255	; 0xff
 8012084:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012088:	9503      	str	r5, [sp, #12]
 801208a:	b2ff      	uxtb	r7, r7
 801208c:	d043      	beq.n	8012116 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801208e:	f06f 0501 	mvn.w	r5, #1
 8012092:	4375      	muls	r5, r6
 8012094:	fa1f fa82 	uxth.w	sl, r2
 8012098:	f834 e005 	ldrh.w	lr, [r4, r5]
 801209c:	9504      	str	r5, [sp, #16]
 801209e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80120a2:	43d2      	mvns	r2, r2
 80120a4:	b2d2      	uxtb	r2, r2
 80120a6:	fb19 f90a 	smulbb	r9, r9, sl
 80120aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80120ae:	9d03      	ldr	r5, [sp, #12]
 80120b0:	fb0c 9c02 	mla	ip, ip, r2, r9
 80120b4:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80120b8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80120bc:	fb15 f50a 	smulbb	r5, r5, sl
 80120c0:	fb09 5502 	mla	r5, r9, r2, r5
 80120c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80120c8:	b2ad      	uxth	r5, r5
 80120ca:	fa5f fe8e 	uxtb.w	lr, lr
 80120ce:	fb17 f70a 	smulbb	r7, r7, sl
 80120d2:	fa1f fc8c 	uxth.w	ip, ip
 80120d6:	fb0e 7702 	mla	r7, lr, r2, r7
 80120da:	f105 0901 	add.w	r9, r5, #1
 80120de:	b2bf      	uxth	r7, r7
 80120e0:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80120e4:	f10c 0901 	add.w	r9, ip, #1
 80120e8:	1c7a      	adds	r2, r7, #1
 80120ea:	096d      	lsrs	r5, r5, #5
 80120ec:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80120f0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80120f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80120f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80120fc:	ea45 050c 	orr.w	r5, r5, ip
 8012100:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012104:	9a04      	ldr	r2, [sp, #16]
 8012106:	433d      	orrs	r5, r7
 8012108:	52a5      	strh	r5, [r4, r2]
 801210a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801210c:	4410      	add	r0, r2
 801210e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012110:	3e01      	subs	r6, #1
 8012112:	4411      	add	r1, r2
 8012114:	e74f      	b.n	8011fb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012116:	f06f 0201 	mvn.w	r2, #1
 801211a:	fb02 fe06 	mul.w	lr, r2, r6
 801211e:	9a03      	ldr	r2, [sp, #12]
 8012120:	00d5      	lsls	r5, r2, #3
 8012122:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8012126:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 801212a:	f824 500e 	strh.w	r5, [r4, lr]
 801212e:	e7ec      	b.n	801210a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8012130:	f04f 0e00 	mov.w	lr, #0
 8012134:	eba3 020e 	sub.w	r2, r3, lr
 8012138:	2a00      	cmp	r2, #0
 801213a:	f77f af3f 	ble.w	8011fbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801213e:	9e01      	ldr	r6, [sp, #4]
 8012140:	1402      	asrs	r2, r0, #16
 8012142:	140d      	asrs	r5, r1, #16
 8012144:	fb06 2505 	mla	r5, r6, r5, r2
 8012148:	086a      	lsrs	r2, r5, #1
 801214a:	9e02      	ldr	r6, [sp, #8]
 801214c:	5cb2      	ldrb	r2, [r6, r2]
 801214e:	07ed      	lsls	r5, r5, #31
 8012150:	bf54      	ite	pl
 8012152:	f002 020f 	andpl.w	r2, r2, #15
 8012156:	1112      	asrmi	r2, r2, #4
 8012158:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801215c:	b2d2      	uxtb	r2, r2
 801215e:	2a00      	cmp	r2, #0
 8012160:	d045      	beq.n	80121ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012162:	4d2b      	ldr	r5, [pc, #172]	; (8012210 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8012164:	682e      	ldr	r6, [r5, #0]
 8012166:	2aff      	cmp	r2, #255	; 0xff
 8012168:	ea4f 2916 	mov.w	r9, r6, lsr #8
 801216c:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8012170:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8012174:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012178:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801217c:	b2f6      	uxtb	r6, r6
 801217e:	d03d      	beq.n	80121fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8012180:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012184:	fa1f fa82 	uxth.w	sl, r2
 8012188:	ea4f 272c 	mov.w	r7, ip, asr #8
 801218c:	43d2      	mvns	r2, r2
 801218e:	b2d2      	uxtb	r2, r2
 8012190:	fb19 f90a 	smulbb	r9, r9, sl
 8012194:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012198:	fb07 9702 	mla	r7, r7, r2, r9
 801219c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80121a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80121a4:	fb15 f50a 	smulbb	r5, r5, sl
 80121a8:	fb09 5502 	mla	r5, r9, r2, r5
 80121ac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80121b0:	b2ad      	uxth	r5, r5
 80121b2:	fa5f fc8c 	uxtb.w	ip, ip
 80121b6:	fb16 f60a 	smulbb	r6, r6, sl
 80121ba:	b2bf      	uxth	r7, r7
 80121bc:	fb0c 6602 	mla	r6, ip, r2, r6
 80121c0:	f105 0901 	add.w	r9, r5, #1
 80121c4:	b2b6      	uxth	r6, r6
 80121c6:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80121ca:	f107 0901 	add.w	r9, r7, #1
 80121ce:	096d      	lsrs	r5, r5, #5
 80121d0:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80121d4:	1c72      	adds	r2, r6, #1
 80121d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80121da:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80121de:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80121e2:	433d      	orrs	r5, r7
 80121e4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80121e8:	4335      	orrs	r5, r6
 80121ea:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80121ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80121f0:	4410      	add	r0, r2
 80121f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80121f4:	f10e 0e01 	add.w	lr, lr, #1
 80121f8:	4411      	add	r1, r2
 80121fa:	e79b      	b.n	8012134 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 80121fc:	00ed      	lsls	r5, r5, #3
 80121fe:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8012202:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 8012206:	e7f0      	b.n	80121ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8012208:	b007      	add	sp, #28
 801220a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801220e:	bf00      	nop
 8012210:	20008998 	.word	0x20008998

08012214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012214:	4770      	bx	lr

08012216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012216:	4770      	bx	lr

08012218 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012218:	4770      	bx	lr

0801221a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801221a:	4770      	bx	lr

0801221c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801221c:	4770      	bx	lr

0801221e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801221e:	4770      	bx	lr

08012220 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012220:	4770      	bx	lr

08012222 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012222:	4770      	bx	lr

08012224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012224:	4770      	bx	lr

08012226 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012226:	4770      	bx	lr

08012228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012228:	4770      	bx	lr

0801222a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801222a:	4770      	bx	lr

0801222c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801222c:	4770      	bx	lr

0801222e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801222e:	4770      	bx	lr

08012230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012230:	4770      	bx	lr

08012232 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012232:	4770      	bx	lr

08012234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012234:	4770      	bx	lr

08012236 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012236:	4770      	bx	lr

08012238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012238:	4770      	bx	lr

0801223a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801223a:	4770      	bx	lr

0801223c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801223c:	4770      	bx	lr

0801223e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801223e:	4770      	bx	lr

08012240 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012240:	4770      	bx	lr

08012242 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012242:	4770      	bx	lr

08012244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012244:	4770      	bx	lr

08012246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012246:	4770      	bx	lr

08012248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012248:	4770      	bx	lr

0801224a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801224a:	4770      	bx	lr

0801224c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801224c:	b508      	push	{r3, lr}
 801224e:	4b06      	ldr	r3, [pc, #24]	; (8012268 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012250:	8818      	ldrh	r0, [r3, #0]
 8012252:	b928      	cbnz	r0, 8012260 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012254:	4b05      	ldr	r3, [pc, #20]	; (801226c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012256:	4a06      	ldr	r2, [pc, #24]	; (8012270 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012258:	4806      	ldr	r0, [pc, #24]	; (8012274 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801225a:	2154      	movs	r1, #84	; 0x54
 801225c:	f009 f9a4 	bl	801b5a8 <__assert_func>
 8012260:	0040      	lsls	r0, r0, #1
 8012262:	b280      	uxth	r0, r0
 8012264:	bd08      	pop	{r3, pc}
 8012266:	bf00      	nop
 8012268:	2000898a 	.word	0x2000898a
 801226c:	0801f561 	.word	0x0801f561
 8012270:	0801fae7 	.word	0x0801fae7
 8012274:	0801f5a3 	.word	0x0801f5a3

08012278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801227c:	b08b      	sub	sp, #44	; 0x2c
 801227e:	460f      	mov	r7, r1
 8012280:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012284:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012288:	4616      	mov	r6, r2
 801228a:	f1bb 0f00 	cmp.w	fp, #0
 801228e:	d046      	beq.n	801231e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012290:	6810      	ldr	r0, [r2, #0]
 8012292:	6851      	ldr	r1, [r2, #4]
 8012294:	ad06      	add	r5, sp, #24
 8012296:	c503      	stmia	r5!, {r0, r1}
 8012298:	6818      	ldr	r0, [r3, #0]
 801229a:	6859      	ldr	r1, [r3, #4]
 801229c:	ad08      	add	r5, sp, #32
 801229e:	c503      	stmia	r5!, {r0, r1}
 80122a0:	a806      	add	r0, sp, #24
 80122a2:	f7fa fd61 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122a6:	4631      	mov	r1, r6
 80122a8:	a808      	add	r0, sp, #32
 80122aa:	f7fa fd45 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80122ae:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80122b2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80122b6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80122ba:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80122be:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80122c2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80122c6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80122ca:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80122ce:	4f5d      	ldr	r7, [pc, #372]	; (8012444 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 80122d0:	440a      	add	r2, r1
 80122d2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80122d6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80122da:	6838      	ldr	r0, [r7, #0]
 80122dc:	4413      	add	r3, r2
 80122de:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80122e2:	6803      	ldr	r3, [r0, #0]
 80122e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80122e6:	4798      	blx	r3
 80122e8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80122ec:	46b9      	mov	r9, r7
 80122ee:	d019      	beq.n	8012324 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80122f0:	f010 0f04 	tst.w	r0, #4
 80122f4:	d01a      	beq.n	801232c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80122f6:	f8d9 0000 	ldr.w	r0, [r9]
 80122fa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80122fe:	6801      	ldr	r1, [r0, #0]
 8012300:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012304:	e9cd b403 	strd	fp, r4, [sp, #12]
 8012308:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801230c:	9402      	str	r4, [sp, #8]
 801230e:	b2ad      	uxth	r5, r5
 8012310:	fa1f f488 	uxth.w	r4, r8
 8012314:	9501      	str	r5, [sp, #4]
 8012316:	9400      	str	r4, [sp, #0]
 8012318:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801231a:	4631      	mov	r1, r6
 801231c:	47a0      	blx	r4
 801231e:	b00b      	add	sp, #44	; 0x2c
 8012320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012324:	b914      	cbnz	r4, 801232c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012326:	f010 0f01 	tst.w	r0, #1
 801232a:	e7e3      	b.n	80122f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801232c:	f8d9 0000 	ldr.w	r0, [r9]
 8012330:	6803      	ldr	r3, [r0, #0]
 8012332:	6a1b      	ldr	r3, [r3, #32]
 8012334:	4798      	blx	r3
 8012336:	4b44      	ldr	r3, [pc, #272]	; (8012448 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8012338:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801233c:	881a      	ldrh	r2, [r3, #0]
 801233e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012342:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012346:	fb02 1404 	mla	r4, r2, r4, r1
 801234a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801234e:	469a      	mov	sl, r3
 8012350:	fb05 f502 	mul.w	r5, r5, r2
 8012354:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012358:	d058      	beq.n	801240c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 801235a:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801235e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012362:	fa1f f28b 	uxth.w	r2, fp
 8012366:	fa1f f989 	uxth.w	r9, r9
 801236a:	469e      	mov	lr, r3
 801236c:	42ac      	cmp	r4, r5
 801236e:	d263      	bcs.n	8012438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8012370:	eb04 0a07 	add.w	sl, r4, r7
 8012374:	4554      	cmp	r4, sl
 8012376:	d23c      	bcs.n	80123f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8012378:	8821      	ldrh	r1, [r4, #0]
 801237a:	f836 3b02 	ldrh.w	r3, [r6], #2
 801237e:	1208      	asrs	r0, r1, #8
 8012380:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012384:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012388:	fb10 f009 	smulbb	r0, r0, r9
 801238c:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012390:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012394:	00c9      	lsls	r1, r1, #3
 8012396:	fb0c 0c02 	mla	ip, ip, r2, r0
 801239a:	b2c9      	uxtb	r1, r1
 801239c:	10d8      	asrs	r0, r3, #3
 801239e:	00db      	lsls	r3, r3, #3
 80123a0:	fb11 f109 	smulbb	r1, r1, r9
 80123a4:	b2db      	uxtb	r3, r3
 80123a6:	fa1f fc8c 	uxth.w	ip, ip
 80123aa:	fb03 1302 	mla	r3, r3, r2, r1
 80123ae:	b29b      	uxth	r3, r3
 80123b0:	f10c 0101 	add.w	r1, ip, #1
 80123b4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80123b8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80123bc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80123c0:	fb1b fb09 	smulbb	fp, fp, r9
 80123c4:	1c59      	adds	r1, r3, #1
 80123c6:	fb00 b002 	mla	r0, r0, r2, fp
 80123ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80123ce:	b280      	uxth	r0, r0
 80123d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80123d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80123d8:	ea4c 0c03 	orr.w	ip, ip, r3
 80123dc:	1c43      	adds	r3, r0, #1
 80123de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80123e2:	0940      	lsrs	r0, r0, #5
 80123e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80123e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80123ec:	f824 cb02 	strh.w	ip, [r4], #2
 80123f0:	e7c0      	b.n	8012374 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 80123f2:	f8be 3000 	ldrh.w	r3, [lr]
 80123f6:	eba3 0308 	sub.w	r3, r3, r8
 80123fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80123fe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012402:	eba3 0308 	sub.w	r3, r3, r8
 8012406:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801240a:	e7af      	b.n	801236c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 801240c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012410:	f8d9 0000 	ldr.w	r0, [r9]
 8012414:	42ac      	cmp	r4, r5
 8012416:	6803      	ldr	r3, [r0, #0]
 8012418:	d20e      	bcs.n	8012438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 801241a:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 801241e:	4632      	mov	r2, r6
 8012420:	463b      	mov	r3, r7
 8012422:	4621      	mov	r1, r4
 8012424:	47c0      	blx	r8
 8012426:	f8ba 3000 	ldrh.w	r3, [sl]
 801242a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801242e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012432:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012436:	e7eb      	b.n	8012410 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8012438:	4b02      	ldr	r3, [pc, #8]	; (8012444 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 801243a:	6818      	ldr	r0, [r3, #0]
 801243c:	6803      	ldr	r3, [r0, #0]
 801243e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012440:	4798      	blx	r3
 8012442:	e76c      	b.n	801231e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012444:	20008990 	.word	0x20008990
 8012448:	2000898a 	.word	0x2000898a

0801244c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801244c:	b510      	push	{r4, lr}
 801244e:	2104      	movs	r1, #4
 8012450:	4604      	mov	r4, r0
 8012452:	f009 f87d 	bl	801b550 <_ZdlPvj>
 8012456:	4620      	mov	r0, r4
 8012458:	bd10      	pop	{r4, pc}

0801245a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801245a:	b510      	push	{r4, lr}
 801245c:	2104      	movs	r1, #4
 801245e:	4604      	mov	r4, r0
 8012460:	f009 f876 	bl	801b550 <_ZdlPvj>
 8012464:	4620      	mov	r0, r4
 8012466:	bd10      	pop	{r4, pc}

08012468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012468:	b510      	push	{r4, lr}
 801246a:	2104      	movs	r1, #4
 801246c:	4604      	mov	r4, r0
 801246e:	f009 f86f 	bl	801b550 <_ZdlPvj>
 8012472:	4620      	mov	r0, r4
 8012474:	bd10      	pop	{r4, pc}

08012476 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012476:	b510      	push	{r4, lr}
 8012478:	2104      	movs	r1, #4
 801247a:	4604      	mov	r4, r0
 801247c:	f009 f868 	bl	801b550 <_ZdlPvj>
 8012480:	4620      	mov	r0, r4
 8012482:	bd10      	pop	{r4, pc}

08012484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012484:	b510      	push	{r4, lr}
 8012486:	2104      	movs	r1, #4
 8012488:	4604      	mov	r4, r0
 801248a:	f009 f861 	bl	801b550 <_ZdlPvj>
 801248e:	4620      	mov	r0, r4
 8012490:	bd10      	pop	{r4, pc}

08012492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012492:	b510      	push	{r4, lr}
 8012494:	2104      	movs	r1, #4
 8012496:	4604      	mov	r4, r0
 8012498:	f009 f85a 	bl	801b550 <_ZdlPvj>
 801249c:	4620      	mov	r0, r4
 801249e:	bd10      	pop	{r4, pc}

080124a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80124a0:	b510      	push	{r4, lr}
 80124a2:	2104      	movs	r1, #4
 80124a4:	4604      	mov	r4, r0
 80124a6:	f009 f853 	bl	801b550 <_ZdlPvj>
 80124aa:	4620      	mov	r0, r4
 80124ac:	bd10      	pop	{r4, pc}

080124ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80124ae:	b510      	push	{r4, lr}
 80124b0:	2104      	movs	r1, #4
 80124b2:	4604      	mov	r4, r0
 80124b4:	f009 f84c 	bl	801b550 <_ZdlPvj>
 80124b8:	4620      	mov	r0, r4
 80124ba:	bd10      	pop	{r4, pc}

080124bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80124bc:	b510      	push	{r4, lr}
 80124be:	2104      	movs	r1, #4
 80124c0:	4604      	mov	r4, r0
 80124c2:	f009 f845 	bl	801b550 <_ZdlPvj>
 80124c6:	4620      	mov	r0, r4
 80124c8:	bd10      	pop	{r4, pc}

080124ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80124ca:	b510      	push	{r4, lr}
 80124cc:	2104      	movs	r1, #4
 80124ce:	4604      	mov	r4, r0
 80124d0:	f009 f83e 	bl	801b550 <_ZdlPvj>
 80124d4:	4620      	mov	r0, r4
 80124d6:	bd10      	pop	{r4, pc}

080124d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80124d8:	b510      	push	{r4, lr}
 80124da:	2104      	movs	r1, #4
 80124dc:	4604      	mov	r4, r0
 80124de:	f009 f837 	bl	801b550 <_ZdlPvj>
 80124e2:	4620      	mov	r0, r4
 80124e4:	bd10      	pop	{r4, pc}

080124e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80124e6:	b510      	push	{r4, lr}
 80124e8:	2104      	movs	r1, #4
 80124ea:	4604      	mov	r4, r0
 80124ec:	f009 f830 	bl	801b550 <_ZdlPvj>
 80124f0:	4620      	mov	r0, r4
 80124f2:	bd10      	pop	{r4, pc}

080124f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80124f4:	b510      	push	{r4, lr}
 80124f6:	2104      	movs	r1, #4
 80124f8:	4604      	mov	r4, r0
 80124fa:	f009 f829 	bl	801b550 <_ZdlPvj>
 80124fe:	4620      	mov	r0, r4
 8012500:	bd10      	pop	{r4, pc}

08012502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012502:	b510      	push	{r4, lr}
 8012504:	2104      	movs	r1, #4
 8012506:	4604      	mov	r4, r0
 8012508:	f009 f822 	bl	801b550 <_ZdlPvj>
 801250c:	4620      	mov	r0, r4
 801250e:	bd10      	pop	{r4, pc}

08012510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012510:	b510      	push	{r4, lr}
 8012512:	2104      	movs	r1, #4
 8012514:	4604      	mov	r4, r0
 8012516:	f009 f81b 	bl	801b550 <_ZdlPvj>
 801251a:	4620      	mov	r0, r4
 801251c:	bd10      	pop	{r4, pc}

0801251e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801251e:	b510      	push	{r4, lr}
 8012520:	2104      	movs	r1, #4
 8012522:	4604      	mov	r4, r0
 8012524:	f009 f814 	bl	801b550 <_ZdlPvj>
 8012528:	4620      	mov	r0, r4
 801252a:	bd10      	pop	{r4, pc}

0801252c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801252c:	b510      	push	{r4, lr}
 801252e:	2104      	movs	r1, #4
 8012530:	4604      	mov	r4, r0
 8012532:	f009 f80d 	bl	801b550 <_ZdlPvj>
 8012536:	4620      	mov	r0, r4
 8012538:	bd10      	pop	{r4, pc}

0801253a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801253a:	b510      	push	{r4, lr}
 801253c:	2104      	movs	r1, #4
 801253e:	4604      	mov	r4, r0
 8012540:	f009 f806 	bl	801b550 <_ZdlPvj>
 8012544:	4620      	mov	r0, r4
 8012546:	bd10      	pop	{r4, pc}

08012548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012548:	b510      	push	{r4, lr}
 801254a:	2104      	movs	r1, #4
 801254c:	4604      	mov	r4, r0
 801254e:	f008 ffff 	bl	801b550 <_ZdlPvj>
 8012552:	4620      	mov	r0, r4
 8012554:	bd10      	pop	{r4, pc}

08012556 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012556:	b510      	push	{r4, lr}
 8012558:	2104      	movs	r1, #4
 801255a:	4604      	mov	r4, r0
 801255c:	f008 fff8 	bl	801b550 <_ZdlPvj>
 8012560:	4620      	mov	r0, r4
 8012562:	bd10      	pop	{r4, pc}

08012564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012564:	b510      	push	{r4, lr}
 8012566:	2104      	movs	r1, #4
 8012568:	4604      	mov	r4, r0
 801256a:	f008 fff1 	bl	801b550 <_ZdlPvj>
 801256e:	4620      	mov	r0, r4
 8012570:	bd10      	pop	{r4, pc}

08012572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012572:	b510      	push	{r4, lr}
 8012574:	2104      	movs	r1, #4
 8012576:	4604      	mov	r4, r0
 8012578:	f008 ffea 	bl	801b550 <_ZdlPvj>
 801257c:	4620      	mov	r0, r4
 801257e:	bd10      	pop	{r4, pc}

08012580 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012580:	b510      	push	{r4, lr}
 8012582:	2104      	movs	r1, #4
 8012584:	4604      	mov	r4, r0
 8012586:	f008 ffe3 	bl	801b550 <_ZdlPvj>
 801258a:	4620      	mov	r0, r4
 801258c:	bd10      	pop	{r4, pc}

0801258e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801258e:	b510      	push	{r4, lr}
 8012590:	2104      	movs	r1, #4
 8012592:	4604      	mov	r4, r0
 8012594:	f008 ffdc 	bl	801b550 <_ZdlPvj>
 8012598:	4620      	mov	r0, r4
 801259a:	bd10      	pop	{r4, pc}

0801259c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801259c:	b510      	push	{r4, lr}
 801259e:	2104      	movs	r1, #4
 80125a0:	4604      	mov	r4, r0
 80125a2:	f008 ffd5 	bl	801b550 <_ZdlPvj>
 80125a6:	4620      	mov	r0, r4
 80125a8:	bd10      	pop	{r4, pc}

080125aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80125aa:	b510      	push	{r4, lr}
 80125ac:	2104      	movs	r1, #4
 80125ae:	4604      	mov	r4, r0
 80125b0:	f008 ffce 	bl	801b550 <_ZdlPvj>
 80125b4:	4620      	mov	r0, r4
 80125b6:	bd10      	pop	{r4, pc}

080125b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80125b8:	b510      	push	{r4, lr}
 80125ba:	2104      	movs	r1, #4
 80125bc:	4604      	mov	r4, r0
 80125be:	f008 ffc7 	bl	801b550 <_ZdlPvj>
 80125c2:	4620      	mov	r0, r4
 80125c4:	bd10      	pop	{r4, pc}

080125c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80125c6:	b510      	push	{r4, lr}
 80125c8:	2104      	movs	r1, #4
 80125ca:	4604      	mov	r4, r0
 80125cc:	f008 ffc0 	bl	801b550 <_ZdlPvj>
 80125d0:	4620      	mov	r0, r4
 80125d2:	bd10      	pop	{r4, pc}

080125d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80125d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125d8:	460d      	mov	r5, r1
 80125da:	b087      	sub	sp, #28
 80125dc:	4614      	mov	r4, r2
 80125de:	4698      	mov	r8, r3
 80125e0:	b333      	cbz	r3, 8012630 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80125e2:	4608      	mov	r0, r1
 80125e4:	f7f7 ff4d 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 80125e8:	bb10      	cbnz	r0, 8012630 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80125ea:	6828      	ldr	r0, [r5, #0]
 80125ec:	6869      	ldr	r1, [r5, #4]
 80125ee:	4e73      	ldr	r6, [pc, #460]	; (80127bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 80125f0:	ab04      	add	r3, sp, #16
 80125f2:	c303      	stmia	r3!, {r0, r1}
 80125f4:	a804      	add	r0, sp, #16
 80125f6:	f7fa fbb7 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80125fa:	6830      	ldr	r0, [r6, #0]
 80125fc:	6803      	ldr	r3, [r0, #0]
 80125fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012600:	4798      	blx	r3
 8012602:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8012606:	d016      	beq.n	8012636 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8012608:	f010 0f08 	tst.w	r0, #8
 801260c:	d016      	beq.n	801263c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 801260e:	6830      	ldr	r0, [r6, #0]
 8012610:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8012614:	6801      	ldr	r1, [r0, #0]
 8012616:	9501      	str	r5, [sp, #4]
 8012618:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 801261c:	f8cd 8008 	str.w	r8, [sp, #8]
 8012620:	9500      	str	r5, [sp, #0]
 8012622:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8012624:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012628:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801262c:	4621      	mov	r1, r4
 801262e:	47a8      	blx	r5
 8012630:	b007      	add	sp, #28
 8012632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012636:	f010 0f02 	tst.w	r0, #2
 801263a:	e7e7      	b.n	801260c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 801263c:	6830      	ldr	r0, [r6, #0]
 801263e:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8012642:	6803      	ldr	r3, [r0, #0]
 8012644:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8012648:	6a1b      	ldr	r3, [r3, #32]
 801264a:	4798      	blx	r3
 801264c:	495c      	ldr	r1, [pc, #368]	; (80127c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 801264e:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8012652:	880b      	ldrh	r3, [r1, #0]
 8012654:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8012658:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801265c:	fb03 c202 	mla	r2, r3, r2, ip
 8012660:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012664:	468e      	mov	lr, r1
 8012666:	fb07 f203 	mul.w	r2, r7, r3
 801266a:	d053      	beq.n	8012714 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 801266c:	fa1f f388 	uxth.w	r3, r8
 8012670:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 8012674:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8012678:	ea4f 2814 	mov.w	r8, r4, lsr #8
 801267c:	00e4      	lsls	r4, r4, #3
 801267e:	b2e4      	uxtb	r4, r4
 8012680:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012684:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012688:	fb08 f803 	mul.w	r8, r8, r3
 801268c:	fb09 f903 	mul.w	r9, r9, r3
 8012690:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 8012694:	4363      	muls	r3, r4
 8012696:	006d      	lsls	r5, r5, #1
 8012698:	b2bc      	uxth	r4, r7
 801269a:	4288      	cmp	r0, r1
 801269c:	f080 8088 	bcs.w	80127b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80126a0:	eb00 0a05 	add.w	sl, r0, r5
 80126a4:	4550      	cmp	r0, sl
 80126a6:	d22f      	bcs.n	8012708 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 80126a8:	8802      	ldrh	r2, [r0, #0]
 80126aa:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80126ae:	10d7      	asrs	r7, r2, #3
 80126b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80126b4:	00d2      	lsls	r2, r2, #3
 80126b6:	fb1c fc04 	smulbb	ip, ip, r4
 80126ba:	b2d2      	uxtb	r2, r2
 80126bc:	44c4      	add	ip, r8
 80126be:	fb12 f204 	smulbb	r2, r2, r4
 80126c2:	fa1f fc8c 	uxth.w	ip, ip
 80126c6:	441a      	add	r2, r3
 80126c8:	b292      	uxth	r2, r2
 80126ca:	f10c 0b01 	add.w	fp, ip, #1
 80126ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80126d2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80126d6:	fb17 f704 	smulbb	r7, r7, r4
 80126da:	f102 0b01 	add.w	fp, r2, #1
 80126de:	444f      	add	r7, r9
 80126e0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80126e4:	b2bf      	uxth	r7, r7
 80126e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80126ea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80126ee:	ea4c 0202 	orr.w	r2, ip, r2
 80126f2:	f107 0c01 	add.w	ip, r7, #1
 80126f6:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80126fa:	097f      	lsrs	r7, r7, #5
 80126fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012700:	433a      	orrs	r2, r7
 8012702:	f820 2b02 	strh.w	r2, [r0], #2
 8012706:	e7cd      	b.n	80126a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8012708:	f8be 2000 	ldrh.w	r2, [lr]
 801270c:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8012710:	4410      	add	r0, r2
 8012712:	e7c2      	b.n	801269a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 8012714:	07db      	lsls	r3, r3, #31
 8012716:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801271a:	d50e      	bpl.n	801273a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 801271c:	006d      	lsls	r5, r5, #1
 801271e:	4290      	cmp	r0, r2
 8012720:	d246      	bcs.n	80127b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8012722:	1943      	adds	r3, r0, r5
 8012724:	4298      	cmp	r0, r3
 8012726:	d202      	bcs.n	801272e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8012728:	f820 4b02 	strh.w	r4, [r0], #2
 801272c:	e7fa      	b.n	8012724 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 801272e:	f8be 3000 	ldrh.w	r3, [lr]
 8012732:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 8012736:	4418      	add	r0, r3
 8012738:	e7f1      	b.n	801271e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 801273a:	0787      	lsls	r7, r0, #30
 801273c:	462b      	mov	r3, r5
 801273e:	d00a      	beq.n	8012756 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8012740:	4603      	mov	r3, r0
 8012742:	4293      	cmp	r3, r2
 8012744:	d205      	bcs.n	8012752 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 8012746:	801c      	strh	r4, [r3, #0]
 8012748:	f8be 1000 	ldrh.w	r1, [lr]
 801274c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012750:	e7f7      	b.n	8012742 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 8012752:	3002      	adds	r0, #2
 8012754:	1e6b      	subs	r3, r5, #1
 8012756:	07dd      	lsls	r5, r3, #31
 8012758:	d50d      	bpl.n	8012776 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 801275a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 801275e:	3901      	subs	r1, #1
 8012760:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012764:	4291      	cmp	r1, r2
 8012766:	d205      	bcs.n	8012774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8012768:	800c      	strh	r4, [r1, #0]
 801276a:	f8be 5000 	ldrh.w	r5, [lr]
 801276e:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 8012772:	e7f7      	b.n	8012764 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 8012774:	3b01      	subs	r3, #1
 8012776:	b1db      	cbz	r3, 80127b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8012778:	b2a1      	uxth	r1, r4
 801277a:	105b      	asrs	r3, r3, #1
 801277c:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8012780:	009b      	lsls	r3, r3, #2
 8012782:	4290      	cmp	r0, r2
 8012784:	d214      	bcs.n	80127b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8012786:	0781      	lsls	r1, r0, #30
 8012788:	d006      	beq.n	8012798 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 801278a:	4b0e      	ldr	r3, [pc, #56]	; (80127c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 801278c:	4a0e      	ldr	r2, [pc, #56]	; (80127c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 801278e:	480f      	ldr	r0, [pc, #60]	; (80127cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 8012790:	f44f 7162 	mov.w	r1, #904	; 0x388
 8012794:	f008 ff08 	bl	801b5a8 <__assert_func>
 8012798:	18c5      	adds	r5, r0, r3
 801279a:	4601      	mov	r1, r0
 801279c:	42a9      	cmp	r1, r5
 801279e:	d202      	bcs.n	80127a6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 80127a0:	f841 4b04 	str.w	r4, [r1], #4
 80127a4:	e7fa      	b.n	801279c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 80127a6:	f8be 1000 	ldrh.w	r1, [lr]
 80127aa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80127ae:	e7e8      	b.n	8012782 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 80127b0:	6830      	ldr	r0, [r6, #0]
 80127b2:	6803      	ldr	r3, [r0, #0]
 80127b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80127b6:	4798      	blx	r3
 80127b8:	e73a      	b.n	8012630 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80127ba:	bf00      	nop
 80127bc:	20008990 	.word	0x20008990
 80127c0:	2000898a 	.word	0x2000898a
 80127c4:	0801f500 	.word	0x0801f500
 80127c8:	0801fcb4 	.word	0x0801fcb4
 80127cc:	0801f52f 	.word	0x0801f52f

080127d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80127d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127d4:	4f97      	ldr	r7, [pc, #604]	; (8012a34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80127d6:	4616      	mov	r6, r2
 80127d8:	683a      	ldr	r2, [r7, #0]
 80127da:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80127de:	2a02      	cmp	r2, #2
 80127e0:	b08f      	sub	sp, #60	; 0x3c
 80127e2:	4604      	mov	r4, r0
 80127e4:	4689      	mov	r9, r1
 80127e6:	d106      	bne.n	80127f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80127e8:	4b93      	ldr	r3, [pc, #588]	; (8012a38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80127ea:	4a94      	ldr	r2, [pc, #592]	; (8012a3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80127ec:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 80127f0:	4893      	ldr	r0, [pc, #588]	; (8012a40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 80127f2:	f008 fed9 	bl	801b5a8 <__assert_func>
 80127f6:	ad0e      	add	r5, sp, #56	; 0x38
 80127f8:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80127fc:	4628      	mov	r0, r5
 80127fe:	f7fd fa4f 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012802:	6823      	ldr	r3, [r4, #0]
 8012804:	4680      	mov	r8, r0
 8012806:	6a1b      	ldr	r3, [r3, #32]
 8012808:	4620      	mov	r0, r4
 801280a:	4798      	blx	r3
 801280c:	4580      	cmp	r8, r0
 801280e:	d004      	beq.n	801281a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012810:	4b8c      	ldr	r3, [pc, #560]	; (8012a44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8012812:	4a8a      	ldr	r2, [pc, #552]	; (8012a3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012814:	f240 21ca 	movw	r1, #714	; 0x2ca
 8012818:	e7ea      	b.n	80127f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801281a:	4628      	mov	r0, r5
 801281c:	f7fd f9b6 	bl	800fb8c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012820:	4680      	mov	r8, r0
 8012822:	b920      	cbnz	r0, 801282e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8012824:	4b88      	ldr	r3, [pc, #544]	; (8012a48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012826:	4a85      	ldr	r2, [pc, #532]	; (8012a3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012828:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 801282c:	e7e0      	b.n	80127f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801282e:	6830      	ldr	r0, [r6, #0]
 8012830:	6871      	ldr	r1, [r6, #4]
 8012832:	f9b6 a000 	ldrsh.w	sl, [r6]
 8012836:	ab06      	add	r3, sp, #24
 8012838:	c303      	stmia	r3!, {r0, r1}
 801283a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801283e:	f8d9 0000 	ldr.w	r0, [r9]
 8012842:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8012846:	ab08      	add	r3, sp, #32
 8012848:	c303      	stmia	r3!, {r0, r1}
 801284a:	4628      	mov	r0, r5
 801284c:	f7fd f896 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012850:	4606      	mov	r6, r0
 8012852:	4628      	mov	r0, r5
 8012854:	f7fd f8cc 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012858:	f10d 0b20 	add.w	fp, sp, #32
 801285c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012860:	a806      	add	r0, sp, #24
 8012862:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8012866:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801286a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801286e:	f7fa fa7b 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012872:	4658      	mov	r0, fp
 8012874:	f7fa fa78 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012878:	a80a      	add	r0, sp, #40	; 0x28
 801287a:	f7fa fa75 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801287e:	4d73      	ldr	r5, [pc, #460]	; (8012a4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012880:	4b73      	ldr	r3, [pc, #460]	; (8012a50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012882:	f9b5 2000 	ldrsh.w	r2, [r5]
 8012886:	f9b3 3000 	ldrsh.w	r3, [r3]
 801288a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801288e:	2100      	movs	r1, #0
 8012890:	910c      	str	r1, [sp, #48]	; 0x30
 8012892:	4658      	mov	r0, fp
 8012894:	a90c      	add	r1, sp, #48	; 0x30
 8012896:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801289a:	f7f7 fdaf 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 801289e:	4658      	mov	r0, fp
 80128a0:	f7f7 fdef 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 80128a4:	2800      	cmp	r0, #0
 80128a6:	f040 8099 	bne.w	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80128aa:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80128ae:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80128b2:	4288      	cmp	r0, r1
 80128b4:	db37      	blt.n	8012926 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128b6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80128ba:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80128be:	429a      	cmp	r2, r3
 80128c0:	db31      	blt.n	8012926 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128c2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80128c6:	4430      	add	r0, r6
 80128c8:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80128cc:	4431      	add	r1, r6
 80128ce:	b200      	sxth	r0, r0
 80128d0:	b209      	sxth	r1, r1
 80128d2:	4288      	cmp	r0, r1
 80128d4:	dc27      	bgt.n	8012926 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128d6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80128da:	440a      	add	r2, r1
 80128dc:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80128e0:	440b      	add	r3, r1
 80128e2:	b212      	sxth	r2, r2
 80128e4:	b21b      	sxth	r3, r3
 80128e6:	429a      	cmp	r2, r3
 80128e8:	dc1d      	bgt.n	8012926 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128ea:	6823      	ldr	r3, [r4, #0]
 80128ec:	4620      	mov	r0, r4
 80128ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80128f0:	4798      	blx	r3
 80128f2:	4682      	mov	sl, r0
 80128f4:	6838      	ldr	r0, [r7, #0]
 80128f6:	6803      	ldr	r3, [r0, #0]
 80128f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128fa:	4798      	blx	r3
 80128fc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012900:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012904:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012908:	1a5b      	subs	r3, r3, r1
 801290a:	b29b      	uxth	r3, r3
 801290c:	b21c      	sxth	r4, r3
 801290e:	2c00      	cmp	r4, #0
 8012910:	dc0e      	bgt.n	8012930 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8012912:	bf1f      	itttt	ne
 8012914:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8012918:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 801291c:	185b      	addne	r3, r3, r1
 801291e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8012922:	4644      	mov	r4, r8
 8012924:	e009      	b.n	801293a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8012926:	4b4b      	ldr	r3, [pc, #300]	; (8012a54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012928:	4a44      	ldr	r2, [pc, #272]	; (8012a3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801292a:	f240 21da 	movw	r1, #730	; 0x2da
 801292e:	e75f      	b.n	80127f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012930:	1ad3      	subs	r3, r2, r3
 8012932:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012936:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801293a:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801293e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012942:	1b9b      	subs	r3, r3, r6
 8012944:	b29b      	uxth	r3, r3
 8012946:	b219      	sxth	r1, r3
 8012948:	2900      	cmp	r1, #0
 801294a:	dd4b      	ble.n	80129e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 801294c:	4351      	muls	r1, r2
 801294e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8012952:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8012956:	1acb      	subs	r3, r1, r3
 8012958:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801295c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012960:	2e00      	cmp	r6, #0
 8012962:	dd3b      	ble.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012964:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012968:	2b00      	cmp	r3, #0
 801296a:	dd37      	ble.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801296c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012970:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012974:	fb0a f90c 	mul.w	r9, sl, ip
 8012978:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801297c:	4481      	add	r9, r0
 801297e:	8828      	ldrh	r0, [r5, #0]
 8012980:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8012984:	42ae      	cmp	r6, r5
 8012986:	bfa8      	it	ge
 8012988:	462e      	movge	r6, r5
 801298a:	1a41      	subs	r1, r0, r1
 801298c:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012990:	428e      	cmp	r6, r1
 8012992:	bfa8      	it	ge
 8012994:	460e      	movge	r6, r1
 8012996:	429d      	cmp	r5, r3
 8012998:	bfa8      	it	ge
 801299a:	461d      	movge	r5, r3
 801299c:	4b2c      	ldr	r3, [pc, #176]	; (8012a50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801299e:	881b      	ldrh	r3, [r3, #0]
 80129a0:	eba3 030c 	sub.w	r3, r3, ip
 80129a4:	429d      	cmp	r5, r3
 80129a6:	bfa8      	it	ge
 80129a8:	461d      	movge	r5, r3
 80129aa:	42b0      	cmp	r0, r6
 80129ac:	d12c      	bne.n	8012a08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80129ae:	4290      	cmp	r0, r2
 80129b0:	d12a      	bne.n	8012a08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80129b2:	6838      	ldr	r0, [r7, #0]
 80129b4:	9203      	str	r2, [sp, #12]
 80129b6:	6803      	ldr	r3, [r0, #0]
 80129b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80129ba:	4798      	blx	r3
 80129bc:	07c3      	lsls	r3, r0, #31
 80129be:	d51a      	bpl.n	80129f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 80129c0:	9a03      	ldr	r2, [sp, #12]
 80129c2:	6838      	ldr	r0, [r7, #0]
 80129c4:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80129c8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80129cc:	6803      	ldr	r3, [r0, #0]
 80129ce:	9200      	str	r2, [sp, #0]
 80129d0:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80129d2:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80129d6:	4623      	mov	r3, r4
 80129d8:	47a8      	blx	r5
 80129da:	4680      	mov	r8, r0
 80129dc:	4640      	mov	r0, r8
 80129de:	b00f      	add	sp, #60	; 0x3c
 80129e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129e4:	bf1f      	itttt	ne
 80129e6:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 80129ea:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 80129ee:	185b      	addne	r3, r3, r1
 80129f0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80129f4:	e7b2      	b.n	801295c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 80129f6:	6838      	ldr	r0, [r7, #0]
 80129f8:	6803      	ldr	r3, [r0, #0]
 80129fa:	464a      	mov	r2, r9
 80129fc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80129fe:	4621      	mov	r1, r4
 8012a00:	fb05 f30a 	mul.w	r3, r5, sl
 8012a04:	47b0      	blx	r6
 8012a06:	e7e9      	b.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012a08:	4355      	muls	r5, r2
 8012a0a:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8012a0e:	9303      	str	r3, [sp, #12]
 8012a10:	0076      	lsls	r6, r6, #1
 8012a12:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8012a16:	9b03      	ldr	r3, [sp, #12]
 8012a18:	429c      	cmp	r4, r3
 8012a1a:	d2df      	bcs.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012a1c:	6838      	ldr	r0, [r7, #0]
 8012a1e:	6803      	ldr	r3, [r0, #0]
 8012a20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a22:	464a      	mov	r2, r9
 8012a24:	461d      	mov	r5, r3
 8012a26:	4621      	mov	r1, r4
 8012a28:	4633      	mov	r3, r6
 8012a2a:	47a8      	blx	r5
 8012a2c:	44d1      	add	r9, sl
 8012a2e:	445c      	add	r4, fp
 8012a30:	e7f1      	b.n	8012a16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8012a32:	bf00      	nop
 8012a34:	20008990 	.word	0x20008990
 8012a38:	0801f326 	.word	0x0801f326
 8012a3c:	0801fb97 	.word	0x0801fb97
 8012a40:	0801f52f 	.word	0x0801f52f
 8012a44:	0801f3d8 	.word	0x0801f3d8
 8012a48:	0801f42d 	.word	0x0801f42d
 8012a4c:	2000898a 	.word	0x2000898a
 8012a50:	2000898c 	.word	0x2000898c
 8012a54:	0801f46b 	.word	0x0801f46b

08012a58 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012a58:	2200      	movs	r2, #0
 8012a5a:	4910      	ldr	r1, [pc, #64]	; (8012a9c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012a5c:	6042      	str	r2, [r0, #4]
 8012a5e:	6001      	str	r1, [r0, #0]
 8012a60:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012a64:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012a68:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012a6c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012a70:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012a74:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012a78:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012a7c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012a80:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012a84:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012a88:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012a8c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012a90:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012a94:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012a98:	4770      	bx	lr
 8012a9a:	bf00      	nop
 8012a9c:	0801f810 	.word	0x0801f810

08012aa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012aa4:	460d      	mov	r5, r1
 8012aa6:	b08b      	sub	sp, #44	; 0x2c
 8012aa8:	4604      	mov	r4, r0
 8012aaa:	6808      	ldr	r0, [r1, #0]
 8012aac:	6849      	ldr	r1, [r1, #4]
 8012aae:	4699      	mov	r9, r3
 8012ab0:	ab06      	add	r3, sp, #24
 8012ab2:	c303      	stmia	r3!, {r0, r1}
 8012ab4:	6810      	ldr	r0, [r2, #0]
 8012ab6:	6851      	ldr	r1, [r2, #4]
 8012ab8:	ab08      	add	r3, sp, #32
 8012aba:	c303      	stmia	r3!, {r0, r1}
 8012abc:	a806      	add	r0, sp, #24
 8012abe:	f7fa f953 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ac2:	4629      	mov	r1, r5
 8012ac4:	a808      	add	r0, sp, #32
 8012ac6:	f7fa f937 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012aca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012ace:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012ad2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012ad6:	4d5f      	ldr	r5, [pc, #380]	; (8012c54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8012ad8:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012adc:	6828      	ldr	r0, [r5, #0]
 8012ade:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8012ae2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012ae6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012aea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012aee:	440a      	add	r2, r1
 8012af0:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012af4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012af8:	4413      	add	r3, r2
 8012afa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012afe:	6803      	ldr	r3, [r0, #0]
 8012b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012b02:	4798      	blx	r3
 8012b04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012b08:	d118      	bne.n	8012b3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8012b0a:	f010 0f20 	tst.w	r0, #32
 8012b0e:	6828      	ldr	r0, [r5, #0]
 8012b10:	d017      	beq.n	8012b42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8012b12:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8012b16:	6801      	ldr	r1, [r0, #0]
 8012b18:	9502      	str	r5, [sp, #8]
 8012b1a:	b2b6      	uxth	r6, r6
 8012b1c:	fa1f f588 	uxth.w	r5, r8
 8012b20:	f8cd 900c 	str.w	r9, [sp, #12]
 8012b24:	9601      	str	r6, [sp, #4]
 8012b26:	9500      	str	r5, [sp, #0]
 8012b28:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8012b2a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012b2e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012b32:	4621      	mov	r1, r4
 8012b34:	47a8      	blx	r5
 8012b36:	b00b      	add	sp, #44	; 0x2c
 8012b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b3c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012b40:	e7e5      	b.n	8012b0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012b42:	6803      	ldr	r3, [r0, #0]
 8012b44:	6a1b      	ldr	r3, [r3, #32]
 8012b46:	4798      	blx	r3
 8012b48:	4a43      	ldr	r2, [pc, #268]	; (8012c58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012b4a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012b4e:	f8b2 e000 	ldrh.w	lr, [r2]
 8012b52:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012b56:	fb0e 1303 	mla	r3, lr, r3, r1
 8012b5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012b5e:	fb0e fe06 	mul.w	lr, lr, r6
 8012b62:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012b66:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8012b6a:	9305      	str	r3, [sp, #20]
 8012b6c:	4692      	mov	sl, r2
 8012b6e:	4570      	cmp	r0, lr
 8012b70:	d26a      	bcs.n	8012c48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 8012b72:	9b05      	ldr	r3, [sp, #20]
 8012b74:	4621      	mov	r1, r4
 8012b76:	eb00 0b03 	add.w	fp, r0, r3
 8012b7a:	4558      	cmp	r0, fp
 8012b7c:	d257      	bcs.n	8012c2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 8012b7e:	f851 4b04 	ldr.w	r4, [r1], #4
 8012b82:	0e22      	lsrs	r2, r4, #24
 8012b84:	d012      	beq.n	8012bac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8012b86:	2aff      	cmp	r2, #255	; 0xff
 8012b88:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8012b8c:	d110      	bne.n	8012bb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8012b8e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012b92:	d10d      	bne.n	8012bb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8012b94:	0963      	lsrs	r3, r4, #5
 8012b96:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012b9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012b9e:	f027 0707 	bic.w	r7, r7, #7
 8012ba2:	431f      	orrs	r7, r3
 8012ba4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012ba8:	433c      	orrs	r4, r7
 8012baa:	8004      	strh	r4, [r0, #0]
 8012bac:	3002      	adds	r0, #2
 8012bae:	e7e4      	b.n	8012b7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8012bb0:	fb09 f302 	mul.w	r3, r9, r2
 8012bb4:	1c5a      	adds	r2, r3, #1
 8012bb6:	f8b0 c000 	ldrh.w	ip, [r0]
 8012bba:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012bbe:	1212      	asrs	r2, r2, #8
 8012bc0:	b293      	uxth	r3, r2
 8012bc2:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012bc6:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8012bca:	43d2      	mvns	r2, r2
 8012bcc:	b2d2      	uxtb	r2, r2
 8012bce:	fb15 f503 	smulbb	r5, r5, r3
 8012bd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012bd6:	fb06 5602 	mla	r6, r6, r2, r5
 8012bda:	b2ff      	uxtb	r7, r7
 8012bdc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012be0:	b2e4      	uxtb	r4, r4
 8012be2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012be6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012bea:	fb17 f703 	smulbb	r7, r7, r3
 8012bee:	fa5f fc8c 	uxtb.w	ip, ip
 8012bf2:	fb14 f403 	smulbb	r4, r4, r3
 8012bf6:	fb05 7702 	mla	r7, r5, r2, r7
 8012bfa:	fb0c 4202 	mla	r2, ip, r2, r4
 8012bfe:	b2b6      	uxth	r6, r6
 8012c00:	b2bf      	uxth	r7, r7
 8012c02:	b292      	uxth	r2, r2
 8012c04:	1c73      	adds	r3, r6, #1
 8012c06:	f102 0c01 	add.w	ip, r2, #1
 8012c0a:	1c7d      	adds	r5, r7, #1
 8012c0c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012c10:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012c14:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012c18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012c1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012c20:	097f      	lsrs	r7, r7, #5
 8012c22:	4316      	orrs	r6, r2
 8012c24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012c28:	433e      	orrs	r6, r7
 8012c2a:	8006      	strh	r6, [r0, #0]
 8012c2c:	e7be      	b.n	8012bac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8012c2e:	f8ba 3000 	ldrh.w	r3, [sl]
 8012c32:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8012c36:	eba3 0308 	sub.w	r3, r3, r8
 8012c3a:	eba4 0408 	sub.w	r4, r4, r8
 8012c3e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012c42:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012c46:	e792      	b.n	8012b6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012c48:	4b02      	ldr	r3, [pc, #8]	; (8012c54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8012c4a:	6818      	ldr	r0, [r3, #0]
 8012c4c:	6803      	ldr	r3, [r0, #0]
 8012c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012c50:	4798      	blx	r3
 8012c52:	e770      	b.n	8012b36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8012c54:	20008990 	.word	0x20008990
 8012c58:	2000898a 	.word	0x2000898a

08012c5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012c5c:	b570      	push	{r4, r5, r6, lr}
 8012c5e:	9d04      	ldr	r5, [sp, #16]
 8012c60:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012c64:	460c      	mov	r4, r1
 8012c66:	4619      	mov	r1, r3
 8012c68:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012c6c:	2a0d      	cmp	r2, #13
 8012c6e:	d820      	bhi.n	8012cb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012c70:	e8df f002 	tbb	[pc, r2]
 8012c74:	18121807 	.word	0x18121807
 8012c78:	18181818 	.word	0x18181818
 8012c7c:	18181818 	.word	0x18181818
 8012c80:	1818      	.short	0x1818
 8012c82:	6802      	ldr	r2, [r0, #0]
 8012c84:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012c88:	68d6      	ldr	r6, [r2, #12]
 8012c8a:	462b      	mov	r3, r5
 8012c8c:	460a      	mov	r2, r1
 8012c8e:	46b4      	mov	ip, r6
 8012c90:	4621      	mov	r1, r4
 8012c92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012c96:	4760      	bx	ip
 8012c98:	462a      	mov	r2, r5
 8012c9a:	4620      	mov	r0, r4
 8012c9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ca0:	f7ff befe 	b.w	8012aa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012ca4:	4b03      	ldr	r3, [pc, #12]	; (8012cb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012ca6:	4a04      	ldr	r2, [pc, #16]	; (8012cb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012ca8:	4804      	ldr	r0, [pc, #16]	; (8012cbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012caa:	f240 21c1 	movw	r1, #705	; 0x2c1
 8012cae:	f008 fc7b 	bl	801b5a8 <__assert_func>
 8012cb2:	bd70      	pop	{r4, r5, r6, pc}
 8012cb4:	0801f4cb 	.word	0x0801f4cb
 8012cb8:	0801fc1d 	.word	0x0801fc1d
 8012cbc:	0801f52f 	.word	0x0801f52f

08012cc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cc4:	b093      	sub	sp, #76	; 0x4c
 8012cc6:	880f      	ldrh	r7, [r1, #0]
 8012cc8:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012ccc:	4604      	mov	r4, r0
 8012cce:	4688      	mov	r8, r1
 8012cd0:	4616      	mov	r6, r2
 8012cd2:	b12f      	cbz	r7, 8012ce0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012cd4:	4b6f      	ldr	r3, [pc, #444]	; (8012e94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012cd6:	4a70      	ldr	r2, [pc, #448]	; (8012e98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012cd8:	4870      	ldr	r0, [pc, #448]	; (8012e9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012cda:	21e2      	movs	r1, #226	; 0xe2
 8012cdc:	f008 fc64 	bl	801b5a8 <__assert_func>
 8012ce0:	6810      	ldr	r0, [r2, #0]
 8012ce2:	6851      	ldr	r1, [r2, #4]
 8012ce4:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8012ea4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8012ce8:	ad0e      	add	r5, sp, #56	; 0x38
 8012cea:	c503      	stmia	r5!, {r0, r1}
 8012cec:	6818      	ldr	r0, [r3, #0]
 8012cee:	6859      	ldr	r1, [r3, #4]
 8012cf0:	ad10      	add	r5, sp, #64	; 0x40
 8012cf2:	c503      	stmia	r5!, {r0, r1}
 8012cf4:	a80e      	add	r0, sp, #56	; 0x38
 8012cf6:	f7fa f837 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012cfa:	4631      	mov	r1, r6
 8012cfc:	a810      	add	r0, sp, #64	; 0x40
 8012cfe:	f7fa f81b 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d02:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012d06:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012d0a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012d0e:	f8db 0000 	ldr.w	r0, [fp]
 8012d12:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8012d16:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8012d1a:	4e61      	ldr	r6, [pc, #388]	; (8012ea0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012d1c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d20:	440c      	add	r4, r1
 8012d22:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012d26:	440a      	add	r2, r1
 8012d28:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012d2c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012d30:	4413      	add	r3, r2
 8012d32:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012d36:	6803      	ldr	r3, [r0, #0]
 8012d38:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012d3c:	4798      	blx	r3
 8012d3e:	2801      	cmp	r0, #1
 8012d40:	d11d      	bne.n	8012d7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8012d42:	220b      	movs	r2, #11
 8012d44:	9708      	str	r7, [sp, #32]
 8012d46:	9207      	str	r2, [sp, #28]
 8012d48:	8832      	ldrh	r2, [r6, #0]
 8012d4a:	f8cd a010 	str.w	sl, [sp, #16]
 8012d4e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012d52:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012d56:	9203      	str	r2, [sp, #12]
 8012d58:	fa1f f289 	uxth.w	r2, r9
 8012d5c:	9201      	str	r2, [sp, #4]
 8012d5e:	b2ad      	uxth	r5, r5
 8012d60:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012d64:	9200      	str	r2, [sp, #0]
 8012d66:	9502      	str	r5, [sp, #8]
 8012d68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012d6c:	f8db 0000 	ldr.w	r0, [fp]
 8012d70:	4642      	mov	r2, r8
 8012d72:	4621      	mov	r1, r4
 8012d74:	f7f7 ffa4 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012d78:	b013      	add	sp, #76	; 0x4c
 8012d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d7e:	f8db 0000 	ldr.w	r0, [fp]
 8012d82:	6803      	ldr	r3, [r0, #0]
 8012d84:	6a1b      	ldr	r3, [r3, #32]
 8012d86:	4798      	blx	r3
 8012d88:	8832      	ldrh	r2, [r6, #0]
 8012d8a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012d8e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8012d92:	960d      	str	r6, [sp, #52]	; 0x34
 8012d94:	fb02 1303 	mla	r3, r2, r3, r1
 8012d98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012d9c:	4355      	muls	r5, r2
 8012d9e:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8012da2:	930c      	str	r3, [sp, #48]	; 0x30
 8012da4:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8012da8:	930b      	str	r3, [sp, #44]	; 0x2c
 8012daa:	f04f 0e04 	mov.w	lr, #4
 8012dae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012db0:	4298      	cmp	r0, r3
 8012db2:	d269      	bcs.n	8012e88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8012db4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012db6:	4621      	mov	r1, r4
 8012db8:	eb00 0b03 	add.w	fp, r0, r3
 8012dbc:	4558      	cmp	r0, fp
 8012dbe:	460b      	mov	r3, r1
 8012dc0:	d256      	bcs.n	8012e70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8012dc2:	781b      	ldrb	r3, [r3, #0]
 8012dc4:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012dc8:	3101      	adds	r1, #1
 8012dca:	f858 2003 	ldr.w	r2, [r8, r3]
 8012dce:	0e14      	lsrs	r4, r2, #24
 8012dd0:	d012      	beq.n	8012df8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8012dd2:	2cff      	cmp	r4, #255	; 0xff
 8012dd4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8012dd8:	d110      	bne.n	8012dfc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012dda:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012dde:	d10d      	bne.n	8012dfc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012de0:	0953      	lsrs	r3, r2, #5
 8012de2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012de6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012dea:	f026 0607 	bic.w	r6, r6, #7
 8012dee:	431e      	orrs	r6, r3
 8012df0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012df4:	4332      	orrs	r2, r6
 8012df6:	8002      	strh	r2, [r0, #0]
 8012df8:	3002      	adds	r0, #2
 8012dfa:	e7df      	b.n	8012dbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8012dfc:	fb0a f404 	mul.w	r4, sl, r4
 8012e00:	1c63      	adds	r3, r4, #1
 8012e02:	8807      	ldrh	r7, [r0, #0]
 8012e04:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8012e08:	121b      	asrs	r3, r3, #8
 8012e0a:	fa1f fc83 	uxth.w	ip, r3
 8012e0e:	123d      	asrs	r5, r7, #8
 8012e10:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8012e14:	43db      	mvns	r3, r3
 8012e16:	b2db      	uxtb	r3, r3
 8012e18:	fb14 f40c 	smulbb	r4, r4, ip
 8012e1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012e20:	fb05 4503 	mla	r5, r5, r3, r4
 8012e24:	b2d2      	uxtb	r2, r2
 8012e26:	10fc      	asrs	r4, r7, #3
 8012e28:	00ff      	lsls	r7, r7, #3
 8012e2a:	b2ff      	uxtb	r7, r7
 8012e2c:	fb12 f20c 	smulbb	r2, r2, ip
 8012e30:	fb07 2203 	mla	r2, r7, r3, r2
 8012e34:	b2f6      	uxtb	r6, r6
 8012e36:	b2ad      	uxth	r5, r5
 8012e38:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012e3c:	b292      	uxth	r2, r2
 8012e3e:	fb16 f60c 	smulbb	r6, r6, ip
 8012e42:	fb04 6603 	mla	r6, r4, r3, r6
 8012e46:	1c6b      	adds	r3, r5, #1
 8012e48:	1c54      	adds	r4, r2, #1
 8012e4a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8012e4e:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012e52:	b2b6      	uxth	r6, r6
 8012e54:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012e58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8012e5c:	4325      	orrs	r5, r4
 8012e5e:	1c74      	adds	r4, r6, #1
 8012e60:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012e64:	0976      	lsrs	r6, r6, #5
 8012e66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012e6a:	4335      	orrs	r5, r6
 8012e6c:	8005      	strh	r5, [r0, #0]
 8012e6e:	e7c3      	b.n	8012df8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8012e70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e72:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8012e76:	881b      	ldrh	r3, [r3, #0]
 8012e78:	eba4 0409 	sub.w	r4, r4, r9
 8012e7c:	eba3 0309 	sub.w	r3, r3, r9
 8012e80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e84:	440c      	add	r4, r1
 8012e86:	e792      	b.n	8012dae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8012e88:	4b06      	ldr	r3, [pc, #24]	; (8012ea4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012e8a:	6818      	ldr	r0, [r3, #0]
 8012e8c:	6803      	ldr	r3, [r0, #0]
 8012e8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012e90:	4798      	blx	r3
 8012e92:	e771      	b.n	8012d78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012e94:	0801f2d6 	.word	0x0801f2d6
 8012e98:	0801f9ee 	.word	0x0801f9ee
 8012e9c:	0801f52f 	.word	0x0801f52f
 8012ea0:	2000898a 	.word	0x2000898a
 8012ea4:	20008990 	.word	0x20008990

08012ea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012eac:	4614      	mov	r4, r2
 8012eae:	880a      	ldrh	r2, [r1, #0]
 8012eb0:	b091      	sub	sp, #68	; 0x44
 8012eb2:	2a02      	cmp	r2, #2
 8012eb4:	4607      	mov	r7, r0
 8012eb6:	4689      	mov	r9, r1
 8012eb8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8012ebc:	d006      	beq.n	8012ecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012ebe:	4b77      	ldr	r3, [pc, #476]	; (801309c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8012ec0:	4a77      	ldr	r2, [pc, #476]	; (80130a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 8012ec2:	4878      	ldr	r0, [pc, #480]	; (80130a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 8012ec4:	f240 113b 	movw	r1, #315	; 0x13b
 8012ec8:	f008 fb6e 	bl	801b5a8 <__assert_func>
 8012ecc:	2e00      	cmp	r6, #0
 8012ece:	d04b      	beq.n	8012f68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012ed0:	6820      	ldr	r0, [r4, #0]
 8012ed2:	6861      	ldr	r1, [r4, #4]
 8012ed4:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 80130ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8012ed8:	ad0c      	add	r5, sp, #48	; 0x30
 8012eda:	c503      	stmia	r5!, {r0, r1}
 8012edc:	6818      	ldr	r0, [r3, #0]
 8012ede:	6859      	ldr	r1, [r3, #4]
 8012ee0:	ad0e      	add	r5, sp, #56	; 0x38
 8012ee2:	c503      	stmia	r5!, {r0, r1}
 8012ee4:	a80c      	add	r0, sp, #48	; 0x30
 8012ee6:	f7f9 ff3f 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012eea:	4621      	mov	r1, r4
 8012eec:	a80e      	add	r0, sp, #56	; 0x38
 8012eee:	f7f9 ff23 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012ef2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8012ef6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012efa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8012efe:	f8da 0000 	ldr.w	r0, [sl]
 8012f02:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8012f06:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8012f0a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012f0e:	187c      	adds	r4, r7, r1
 8012f10:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8012f14:	4f64      	ldr	r7, [pc, #400]	; (80130a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012f16:	440a      	add	r2, r1
 8012f18:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8012f1c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8012f20:	4413      	add	r3, r2
 8012f22:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8012f26:	6803      	ldr	r3, [r0, #0]
 8012f28:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012f2c:	4798      	blx	r3
 8012f2e:	2801      	cmp	r0, #1
 8012f30:	d11d      	bne.n	8012f6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8012f32:	2200      	movs	r2, #0
 8012f34:	210b      	movs	r1, #11
 8012f36:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012f3a:	8839      	ldrh	r1, [r7, #0]
 8012f3c:	9604      	str	r6, [sp, #16]
 8012f3e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012f42:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8012f46:	9203      	str	r2, [sp, #12]
 8012f48:	fa1f f288 	uxth.w	r2, r8
 8012f4c:	9201      	str	r2, [sp, #4]
 8012f4e:	b2ad      	uxth	r5, r5
 8012f50:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012f54:	9200      	str	r2, [sp, #0]
 8012f56:	9502      	str	r5, [sp, #8]
 8012f58:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012f5c:	f8da 0000 	ldr.w	r0, [sl]
 8012f60:	464a      	mov	r2, r9
 8012f62:	4621      	mov	r1, r4
 8012f64:	f7f7 feac 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012f68:	b011      	add	sp, #68	; 0x44
 8012f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f6e:	f8da 0000 	ldr.w	r0, [sl]
 8012f72:	6803      	ldr	r3, [r0, #0]
 8012f74:	6a1b      	ldr	r3, [r3, #32]
 8012f76:	4798      	blx	r3
 8012f78:	8839      	ldrh	r1, [r7, #0]
 8012f7a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8012f7e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012f82:	2eff      	cmp	r6, #255	; 0xff
 8012f84:	fb01 2303 	mla	r3, r1, r3, r2
 8012f88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f8c:	f109 0204 	add.w	r2, r9, #4
 8012f90:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8012f94:	fb05 f501 	mul.w	r5, r5, r1
 8012f98:	d05f      	beq.n	801305a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8012f9a:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8012f9e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012fa2:	b2b6      	uxth	r6, r6
 8012fa4:	fa1f f989 	uxth.w	r9, r9
 8012fa8:	970b      	str	r7, [sp, #44]	; 0x2c
 8012faa:	42a8      	cmp	r0, r5
 8012fac:	d26f      	bcs.n	801308e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8012fae:	eb00 010b 	add.w	r1, r0, fp
 8012fb2:	4288      	cmp	r0, r1
 8012fb4:	4623      	mov	r3, r4
 8012fb6:	d244      	bcs.n	8013042 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8012fb8:	781b      	ldrb	r3, [r3, #0]
 8012fba:	8807      	ldrh	r7, [r0, #0]
 8012fbc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8012fc0:	ea4f 2c27 	mov.w	ip, r7, asr #8
 8012fc4:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8012fc8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012fcc:	fb1c fc09 	smulbb	ip, ip, r9
 8012fd0:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 8012fd4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012fd8:	00ff      	lsls	r7, r7, #3
 8012fda:	fb0e ce06 	mla	lr, lr, r6, ip
 8012fde:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012fe2:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 8012fe6:	b2ff      	uxtb	r7, r7
 8012fe8:	00db      	lsls	r3, r3, #3
 8012fea:	fa1f fe8e 	uxth.w	lr, lr
 8012fee:	fb1a fa09 	smulbb	sl, sl, r9
 8012ff2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012ff6:	b2db      	uxtb	r3, r3
 8012ff8:	fb17 f709 	smulbb	r7, r7, r9
 8012ffc:	fb0c ac06 	mla	ip, ip, r6, sl
 8013000:	fb03 7306 	mla	r3, r3, r6, r7
 8013004:	f10e 0a01 	add.w	sl, lr, #1
 8013008:	b29b      	uxth	r3, r3
 801300a:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 801300e:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8013012:	f103 0e01 	add.w	lr, r3, #1
 8013016:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801301a:	fa1f fc8c 	uxth.w	ip, ip
 801301e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8013022:	ea4a 0e03 	orr.w	lr, sl, r3
 8013026:	f10c 0a01 	add.w	sl, ip, #1
 801302a:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 801302e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8013032:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8013036:	ea4e 0e0c 	orr.w	lr, lr, ip
 801303a:	3401      	adds	r4, #1
 801303c:	f820 eb02 	strh.w	lr, [r0], #2
 8013040:	e7b7      	b.n	8012fb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8013042:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013044:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8013048:	881b      	ldrh	r3, [r3, #0]
 801304a:	eba1 0108 	sub.w	r1, r1, r8
 801304e:	eba3 0308 	sub.w	r3, r3, r8
 8013052:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013056:	440c      	add	r4, r1
 8013058:	e7a7      	b.n	8012faa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 801305a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801305e:	42a8      	cmp	r0, r5
 8013060:	d215      	bcs.n	801308e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8013062:	eb00 010b 	add.w	r1, r0, fp
 8013066:	4288      	cmp	r0, r1
 8013068:	d206      	bcs.n	8013078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 801306a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801306e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8013072:	f820 3b02 	strh.w	r3, [r0], #2
 8013076:	e7f6      	b.n	8013066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8013078:	883b      	ldrh	r3, [r7, #0]
 801307a:	eba3 0308 	sub.w	r3, r3, r8
 801307e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013082:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013086:	eba3 0308 	sub.w	r3, r3, r8
 801308a:	441c      	add	r4, r3
 801308c:	e7e7      	b.n	801305e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 801308e:	4b07      	ldr	r3, [pc, #28]	; (80130ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8013090:	6818      	ldr	r0, [r3, #0]
 8013092:	6803      	ldr	r3, [r0, #0]
 8013094:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013096:	4798      	blx	r3
 8013098:	e766      	b.n	8012f68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801309a:	bf00      	nop
 801309c:	0801f194 	.word	0x0801f194
 80130a0:	0801f858 	.word	0x0801f858
 80130a4:	0801f52f 	.word	0x0801f52f
 80130a8:	2000898a 	.word	0x2000898a
 80130ac:	20008990 	.word	0x20008990

080130b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80130b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130b4:	4614      	mov	r4, r2
 80130b6:	880a      	ldrh	r2, [r1, #0]
 80130b8:	b091      	sub	sp, #68	; 0x44
 80130ba:	2a01      	cmp	r2, #1
 80130bc:	4606      	mov	r6, r0
 80130be:	4688      	mov	r8, r1
 80130c0:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 80130c4:	d006      	beq.n	80130d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80130c6:	4b7c      	ldr	r3, [pc, #496]	; (80132b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 80130c8:	4a7c      	ldr	r2, [pc, #496]	; (80132bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 80130ca:	487d      	ldr	r0, [pc, #500]	; (80132c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 80130cc:	f240 1197 	movw	r1, #407	; 0x197
 80130d0:	f008 fa6a 	bl	801b5a8 <__assert_func>
 80130d4:	2f00      	cmp	r7, #0
 80130d6:	d04b      	beq.n	8013170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80130d8:	6820      	ldr	r0, [r4, #0]
 80130da:	6861      	ldr	r1, [r4, #4]
 80130dc:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80132cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80130e0:	ad0c      	add	r5, sp, #48	; 0x30
 80130e2:	c503      	stmia	r5!, {r0, r1}
 80130e4:	6818      	ldr	r0, [r3, #0]
 80130e6:	6859      	ldr	r1, [r3, #4]
 80130e8:	ad0e      	add	r5, sp, #56	; 0x38
 80130ea:	c503      	stmia	r5!, {r0, r1}
 80130ec:	a80c      	add	r0, sp, #48	; 0x30
 80130ee:	f7f9 fe3b 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80130f2:	4621      	mov	r1, r4
 80130f4:	a80e      	add	r0, sp, #56	; 0x38
 80130f6:	f7f9 fe1f 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80130fa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80130fe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013102:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013106:	f8da 0000 	ldr.w	r0, [sl]
 801310a:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 801310e:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8013112:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013116:	1874      	adds	r4, r6, r1
 8013118:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801311c:	4e69      	ldr	r6, [pc, #420]	; (80132c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 801311e:	440a      	add	r2, r1
 8013120:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013124:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013128:	4413      	add	r3, r2
 801312a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801312e:	6803      	ldr	r3, [r0, #0]
 8013130:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013134:	4798      	blx	r3
 8013136:	2801      	cmp	r0, #1
 8013138:	d11d      	bne.n	8013176 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 801313a:	220b      	movs	r2, #11
 801313c:	2100      	movs	r1, #0
 801313e:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8013142:	8832      	ldrh	r2, [r6, #0]
 8013144:	9704      	str	r7, [sp, #16]
 8013146:	e9cd 0205 	strd	r0, r2, [sp, #20]
 801314a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801314e:	9203      	str	r2, [sp, #12]
 8013150:	fa1f f289 	uxth.w	r2, r9
 8013154:	9202      	str	r2, [sp, #8]
 8013156:	b2ad      	uxth	r5, r5
 8013158:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801315c:	9200      	str	r2, [sp, #0]
 801315e:	9501      	str	r5, [sp, #4]
 8013160:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013164:	f8da 0000 	ldr.w	r0, [sl]
 8013168:	4642      	mov	r2, r8
 801316a:	4621      	mov	r1, r4
 801316c:	f7f7 fda8 	bl	800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013170:	b011      	add	sp, #68	; 0x44
 8013172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013176:	f8da 0000 	ldr.w	r0, [sl]
 801317a:	6803      	ldr	r3, [r0, #0]
 801317c:	6a1b      	ldr	r3, [r3, #32]
 801317e:	4798      	blx	r3
 8013180:	8832      	ldrh	r2, [r6, #0]
 8013182:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013186:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801318a:	2fff      	cmp	r7, #255	; 0xff
 801318c:	fb02 1303 	mla	r3, r2, r3, r1
 8013190:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013194:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8013198:	fb09 f902 	mul.w	r9, r9, r2
 801319c:	d056      	beq.n	801324c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801319e:	ea6f 0c07 	mvn.w	ip, r7
 80131a2:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 80131a6:	b2bb      	uxth	r3, r7
 80131a8:	fa5f fc8c 	uxtb.w	ip, ip
 80131ac:	960b      	str	r6, [sp, #44]	; 0x2c
 80131ae:	4548      	cmp	r0, r9
 80131b0:	d27b      	bcs.n	80132aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 80131b2:	eb00 0a0e 	add.w	sl, r0, lr
 80131b6:	4550      	cmp	r0, sl
 80131b8:	4622      	mov	r2, r4
 80131ba:	d23d      	bcs.n	8013238 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 80131bc:	7811      	ldrb	r1, [r2, #0]
 80131be:	2604      	movs	r6, #4
 80131c0:	2203      	movs	r2, #3
 80131c2:	fb12 6101 	smlabb	r1, r2, r1, r6
 80131c6:	eb08 0b01 	add.w	fp, r8, r1
 80131ca:	8802      	ldrh	r2, [r0, #0]
 80131cc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80131d0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80131d4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80131d8:	1217      	asrs	r7, r2, #8
 80131da:	fb16 f603 	smulbb	r6, r6, r3
 80131de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80131e2:	fb07 670c 	mla	r7, r7, ip, r6
 80131e6:	10d6      	asrs	r6, r2, #3
 80131e8:	00d2      	lsls	r2, r2, #3
 80131ea:	b2d2      	uxtb	r2, r2
 80131ec:	fb1b fb03 	smulbb	fp, fp, r3
 80131f0:	fb12 f20c 	smulbb	r2, r2, ip
 80131f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80131f8:	b2bf      	uxth	r7, r7
 80131fa:	fb06 b60c 	mla	r6, r6, ip, fp
 80131fe:	fb01 2103 	mla	r1, r1, r3, r2
 8013202:	b2b6      	uxth	r6, r6
 8013204:	b289      	uxth	r1, r1
 8013206:	1c7a      	adds	r2, r7, #1
 8013208:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801320c:	f106 0b01 	add.w	fp, r6, #1
 8013210:	1c4a      	adds	r2, r1, #1
 8013212:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8013216:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801321a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801321e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013222:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013226:	4317      	orrs	r7, r2
 8013228:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801322c:	ea47 070b 	orr.w	r7, r7, fp
 8013230:	3401      	adds	r4, #1
 8013232:	f820 7b02 	strh.w	r7, [r0], #2
 8013236:	e7be      	b.n	80131b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8013238:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801323a:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 801323e:	8812      	ldrh	r2, [r2, #0]
 8013240:	1b49      	subs	r1, r1, r5
 8013242:	1b52      	subs	r2, r2, r5
 8013244:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013248:	440c      	add	r4, r1
 801324a:	e7b0      	b.n	80131ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 801324c:	491e      	ldr	r1, [pc, #120]	; (80132c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801324e:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8013252:	2203      	movs	r2, #3
 8013254:	2704      	movs	r7, #4
 8013256:	4548      	cmp	r0, r9
 8013258:	d227      	bcs.n	80132aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 801325a:	eb00 0c0e 	add.w	ip, r0, lr
 801325e:	4560      	cmp	r0, ip
 8013260:	4623      	mov	r3, r4
 8013262:	d219      	bcs.n	8013298 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8013264:	f893 a000 	ldrb.w	sl, [r3]
 8013268:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 801326c:	eb08 0b0a 	add.w	fp, r8, sl
 8013270:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8013274:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8013278:	f89b b001 	ldrb.w	fp, [fp, #1]
 801327c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8013280:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8013284:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013288:	ea43 030b 	orr.w	r3, r3, fp
 801328c:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8013290:	3401      	adds	r4, #1
 8013292:	f820 3b02 	strh.w	r3, [r0], #2
 8013296:	e7e2      	b.n	801325e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8013298:	8833      	ldrh	r3, [r6, #0]
 801329a:	1b5b      	subs	r3, r3, r5
 801329c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80132a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80132a4:	1b5b      	subs	r3, r3, r5
 80132a6:	441c      	add	r4, r3
 80132a8:	e7d5      	b.n	8013256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 80132aa:	4b08      	ldr	r3, [pc, #32]	; (80132cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80132ac:	6818      	ldr	r0, [r3, #0]
 80132ae:	6803      	ldr	r3, [r0, #0]
 80132b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132b2:	4798      	blx	r3
 80132b4:	e75c      	b.n	8013170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80132b6:	bf00      	nop
 80132b8:	0801f1e2 	.word	0x0801f1e2
 80132bc:	0801f8e1 	.word	0x0801f8e1
 80132c0:	0801f52f 	.word	0x0801f52f
 80132c4:	2000898a 	.word	0x2000898a
 80132c8:	fffff800 	.word	0xfffff800
 80132cc:	20008990 	.word	0x20008990

080132d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80132d0:	b430      	push	{r4, r5}
 80132d2:	780d      	ldrb	r5, [r1, #0]
 80132d4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80132d8:	2d01      	cmp	r5, #1
 80132da:	d00a      	beq.n	80132f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80132dc:	d305      	bcc.n	80132ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80132de:	2d02      	cmp	r5, #2
 80132e0:	d10b      	bne.n	80132fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80132e2:	9402      	str	r4, [sp, #8]
 80132e4:	bc30      	pop	{r4, r5}
 80132e6:	f7ff bddf 	b.w	8012ea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80132ea:	9402      	str	r4, [sp, #8]
 80132ec:	bc30      	pop	{r4, r5}
 80132ee:	f7ff bce7 	b.w	8012cc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80132f2:	9402      	str	r4, [sp, #8]
 80132f4:	bc30      	pop	{r4, r5}
 80132f6:	f7ff bedb 	b.w	80130b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80132fa:	bc30      	pop	{r4, r5}
 80132fc:	4770      	bx	lr
	...

08013300 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013304:	4604      	mov	r4, r0
 8013306:	b087      	sub	sp, #28
 8013308:	6810      	ldr	r0, [r2, #0]
 801330a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801330e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013312:	460e      	mov	r6, r1
 8013314:	6851      	ldr	r1, [r2, #4]
 8013316:	ad02      	add	r5, sp, #8
 8013318:	c503      	stmia	r5!, {r0, r1}
 801331a:	6818      	ldr	r0, [r3, #0]
 801331c:	6859      	ldr	r1, [r3, #4]
 801331e:	ad04      	add	r5, sp, #16
 8013320:	4617      	mov	r7, r2
 8013322:	c503      	stmia	r5!, {r0, r1}
 8013324:	a802      	add	r0, sp, #8
 8013326:	f7f9 fd1f 	bl	800cd68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801332a:	4639      	mov	r1, r7
 801332c:	a804      	add	r0, sp, #16
 801332e:	f7f9 fd03 	bl	800cd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013332:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013336:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801333a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801333e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013342:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8013346:	fb11 2103 	smlabb	r1, r1, r3, r2
 801334a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801334e:	440e      	add	r6, r1
 8013350:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013354:	440a      	add	r2, r1
 8013356:	f8ad 2010 	strh.w	r2, [sp, #16]
 801335a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801335e:	4413      	add	r3, r2
 8013360:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013364:	4b77      	ldr	r3, [pc, #476]	; (8013544 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013366:	6818      	ldr	r0, [r3, #0]
 8013368:	6803      	ldr	r3, [r0, #0]
 801336a:	6a1b      	ldr	r3, [r3, #32]
 801336c:	4798      	blx	r3
 801336e:	f8b9 b000 	ldrh.w	fp, [r9]
 8013372:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013376:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801337a:	fb0b 2303 	mla	r3, fp, r3, r2
 801337e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013382:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013386:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801338a:	fb05 f50b 	mul.w	r5, r5, fp
 801338e:	9300      	str	r3, [sp, #0]
 8013390:	d068      	beq.n	8013464 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 8013392:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8013396:	4558      	cmp	r0, fp
 8013398:	f080 80cc 	bcs.w	8013534 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801339c:	9b00      	ldr	r3, [sp, #0]
 801339e:	18c3      	adds	r3, r0, r3
 80133a0:	9301      	str	r3, [sp, #4]
 80133a2:	4631      	mov	r1, r6
 80133a4:	9b01      	ldr	r3, [sp, #4]
 80133a6:	4298      	cmp	r0, r3
 80133a8:	d24e      	bcs.n	8013448 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 80133aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80133ae:	2a00      	cmp	r2, #0
 80133b0:	d047      	beq.n	8013442 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80133b2:	fb0a f202 	mul.w	r2, sl, r2
 80133b6:	1c53      	adds	r3, r2, #1
 80133b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80133bc:	121b      	asrs	r3, r3, #8
 80133be:	d040      	beq.n	8013442 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80133c0:	8802      	ldrh	r2, [r0, #0]
 80133c2:	f8b4 c000 	ldrh.w	ip, [r4]
 80133c6:	b29e      	uxth	r6, r3
 80133c8:	1215      	asrs	r5, r2, #8
 80133ca:	43db      	mvns	r3, r3
 80133cc:	b2db      	uxtb	r3, r3
 80133ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 80133d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80133d6:	fb15 f503 	smulbb	r5, r5, r3
 80133da:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80133de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80133e2:	00d2      	lsls	r2, r2, #3
 80133e4:	fb07 5706 	mla	r7, r7, r6, r5
 80133e8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80133ec:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80133f0:	b2d2      	uxtb	r2, r2
 80133f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80133f6:	fb1e fe03 	smulbb	lr, lr, r3
 80133fa:	fb12 f203 	smulbb	r2, r2, r3
 80133fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013402:	fa5f fc8c 	uxtb.w	ip, ip
 8013406:	fb05 e506 	mla	r5, r5, r6, lr
 801340a:	fb0c 2c06 	mla	ip, ip, r6, r2
 801340e:	b2bf      	uxth	r7, r7
 8013410:	b2ad      	uxth	r5, r5
 8013412:	fa1f fc8c 	uxth.w	ip, ip
 8013416:	1c7b      	adds	r3, r7, #1
 8013418:	f10c 0601 	add.w	r6, ip, #1
 801341c:	f105 0e01 	add.w	lr, r5, #1
 8013420:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8013424:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8013428:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801342c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013430:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013434:	096d      	lsrs	r5, r5, #5
 8013436:	ea47 070c 	orr.w	r7, r7, ip
 801343a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801343e:	432f      	orrs	r7, r5
 8013440:	8007      	strh	r7, [r0, #0]
 8013442:	3002      	adds	r0, #2
 8013444:	3402      	adds	r4, #2
 8013446:	e7ad      	b.n	80133a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013448:	f8b9 3000 	ldrh.w	r3, [r9]
 801344c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013450:	eba3 0308 	sub.w	r3, r3, r8
 8013454:	eba6 0608 	sub.w	r6, r6, r8
 8013458:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801345c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013460:	440e      	add	r6, r1
 8013462:	e798      	b.n	8013396 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013464:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013468:	42a8      	cmp	r0, r5
 801346a:	d263      	bcs.n	8013534 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801346c:	9b00      	ldr	r3, [sp, #0]
 801346e:	4631      	mov	r1, r6
 8013470:	eb00 0b03 	add.w	fp, r0, r3
 8013474:	4558      	cmp	r0, fp
 8013476:	d24f      	bcs.n	8013518 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8013478:	f811 3b01 	ldrb.w	r3, [r1], #1
 801347c:	b12b      	cbz	r3, 801348a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 801347e:	2bff      	cmp	r3, #255	; 0xff
 8013480:	f8b4 e000 	ldrh.w	lr, [r4]
 8013484:	d104      	bne.n	8013490 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 8013486:	f8a0 e000 	strh.w	lr, [r0]
 801348a:	3002      	adds	r0, #2
 801348c:	3402      	adds	r4, #2
 801348e:	e7f1      	b.n	8013474 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 8013490:	8802      	ldrh	r2, [r0, #0]
 8013492:	b29f      	uxth	r7, r3
 8013494:	1216      	asrs	r6, r2, #8
 8013496:	43db      	mvns	r3, r3
 8013498:	b2db      	uxtb	r3, r3
 801349a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801349e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80134a2:	fb16 f603 	smulbb	r6, r6, r3
 80134a6:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80134aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80134ae:	00d2      	lsls	r2, r2, #3
 80134b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80134b4:	b2d2      	uxtb	r2, r2
 80134b6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80134ba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80134be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80134c2:	fb1a fa03 	smulbb	sl, sl, r3
 80134c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80134ca:	fb12 f303 	smulbb	r3, r2, r3
 80134ce:	fa5f fe8e 	uxtb.w	lr, lr
 80134d2:	fb06 a607 	mla	r6, r6, r7, sl
 80134d6:	fb0e 3e07 	mla	lr, lr, r7, r3
 80134da:	fa1f fc8c 	uxth.w	ip, ip
 80134de:	b2b6      	uxth	r6, r6
 80134e0:	fa1f fe8e 	uxth.w	lr, lr
 80134e4:	f10c 0201 	add.w	r2, ip, #1
 80134e8:	f10e 0301 	add.w	r3, lr, #1
 80134ec:	f106 0a01 	add.w	sl, r6, #1
 80134f0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80134f4:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 80134f8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80134fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013500:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013504:	0976      	lsrs	r6, r6, #5
 8013506:	ea4c 0c0e 	orr.w	ip, ip, lr
 801350a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801350e:	ea4c 0c06 	orr.w	ip, ip, r6
 8013512:	f8a0 c000 	strh.w	ip, [r0]
 8013516:	e7b8      	b.n	801348a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8013518:	f8b9 3000 	ldrh.w	r3, [r9]
 801351c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013520:	eba3 0308 	sub.w	r3, r3, r8
 8013524:	eba6 0608 	sub.w	r6, r6, r8
 8013528:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801352c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013530:	440e      	add	r6, r1
 8013532:	e799      	b.n	8013468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8013534:	4b03      	ldr	r3, [pc, #12]	; (8013544 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013536:	6818      	ldr	r0, [r3, #0]
 8013538:	6803      	ldr	r3, [r0, #0]
 801353a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801353c:	4798      	blx	r3
 801353e:	b007      	add	sp, #28
 8013540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013544:	20008990 	.word	0x20008990
 8013548:	2000898a 	.word	0x2000898a

0801354c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801354c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013550:	b089      	sub	sp, #36	; 0x24
 8013552:	4682      	mov	sl, r0
 8013554:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013558:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801355a:	460d      	mov	r5, r1
 801355c:	4691      	mov	r9, r2
 801355e:	4698      	mov	r8, r3
 8013560:	b3ae      	cbz	r6, 80135ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013562:	4608      	mov	r0, r1
 8013564:	f7fc fa0a 	bl	800f97c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013568:	4607      	mov	r7, r0
 801356a:	4628      	mov	r0, r5
 801356c:	f7fc fa40 	bl	800f9f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013570:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013574:	4628      	mov	r0, r5
 8013576:	f8ad 9008 	strh.w	r9, [sp, #8]
 801357a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801357e:	f8ad 700c 	strh.w	r7, [sp, #12]
 8013582:	f7fc fb8d 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013586:	b178      	cbz	r0, 80135a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013588:	4628      	mov	r0, r5
 801358a:	f7fc fb89 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801358e:	2802      	cmp	r0, #2
 8013590:	d00a      	beq.n	80135a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013592:	4628      	mov	r0, r5
 8013594:	f7fc fb84 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013598:	280b      	cmp	r0, #11
 801359a:	d005      	beq.n	80135a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801359c:	4b69      	ldr	r3, [pc, #420]	; (8013744 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 801359e:	4a6a      	ldr	r2, [pc, #424]	; (8013748 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80135a0:	486a      	ldr	r0, [pc, #424]	; (801374c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80135a2:	214b      	movs	r1, #75	; 0x4b
 80135a4:	f008 f800 	bl	801b5a8 <__assert_func>
 80135a8:	4628      	mov	r0, r5
 80135aa:	f7fc faef 	bl	800fb8c <_ZNK8touchgfx6Bitmap7getDataEv>
 80135ae:	4607      	mov	r7, r0
 80135b0:	4628      	mov	r0, r5
 80135b2:	f7fc fb1d 	bl	800fbf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80135b6:	4681      	mov	r9, r0
 80135b8:	4628      	mov	r0, r5
 80135ba:	f7fc fb71 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80135be:	2802      	cmp	r0, #2
 80135c0:	d108      	bne.n	80135d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80135c2:	4633      	mov	r3, r6
 80135c4:	4622      	mov	r2, r4
 80135c6:	a902      	add	r1, sp, #8
 80135c8:	4638      	mov	r0, r7
 80135ca:	f7ff fa69 	bl	8012aa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80135ce:	b009      	add	sp, #36	; 0x24
 80135d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135d4:	4628      	mov	r0, r5
 80135d6:	f7fc fb63 	bl	800fca0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80135da:	280b      	cmp	r0, #11
 80135dc:	d107      	bne.n	80135ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 80135de:	9600      	str	r6, [sp, #0]
 80135e0:	4623      	mov	r3, r4
 80135e2:	aa02      	add	r2, sp, #8
 80135e4:	4649      	mov	r1, r9
 80135e6:	4638      	mov	r0, r7
 80135e8:	f7ff fe72 	bl	80132d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80135ec:	e7ef      	b.n	80135ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80135ee:	4628      	mov	r0, r5
 80135f0:	f7fc fa92 	bl	800fb18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80135f4:	b950      	cbnz	r0, 801360c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80135f6:	e9cd 6000 	strd	r6, r0, [sp]
 80135fa:	f8da 3000 	ldr.w	r3, [sl]
 80135fe:	aa02      	add	r2, sp, #8
 8013600:	68dd      	ldr	r5, [r3, #12]
 8013602:	4639      	mov	r1, r7
 8013604:	4623      	mov	r3, r4
 8013606:	4650      	mov	r0, sl
 8013608:	47a8      	blx	r5
 801360a:	e7e0      	b.n	80135ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801360c:	f10d 0818 	add.w	r8, sp, #24
 8013610:	4629      	mov	r1, r5
 8013612:	4640      	mov	r0, r8
 8013614:	f7fc fa26 	bl	800fa64 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013618:	e898 0003 	ldmia.w	r8, {r0, r1}
 801361c:	ad04      	add	r5, sp, #16
 801361e:	e885 0003 	stmia.w	r5, {r0, r1}
 8013622:	4628      	mov	r0, r5
 8013624:	4621      	mov	r1, r4
 8013626:	f7f6 fee9 	bl	800a3fc <_ZN8touchgfx4RectaNERKS0_>
 801362a:	4628      	mov	r0, r5
 801362c:	f7f6 ff29 	bl	800a482 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013630:	b138      	cbz	r0, 8013642 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8013632:	9600      	str	r6, [sp, #0]
 8013634:	4623      	mov	r3, r4
 8013636:	aa02      	add	r2, sp, #8
 8013638:	4649      	mov	r1, r9
 801363a:	4638      	mov	r0, r7
 801363c:	f7ff fe60 	bl	8013300 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013640:	e7c5      	b.n	80135ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013642:	e9cd 6000 	strd	r6, r0, [sp]
 8013646:	f8da 3000 	ldr.w	r3, [sl]
 801364a:	aa02      	add	r2, sp, #8
 801364c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013650:	4639      	mov	r1, r7
 8013652:	462b      	mov	r3, r5
 8013654:	4650      	mov	r0, sl
 8013656:	47d8      	blx	fp
 8013658:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801365c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013660:	4293      	cmp	r3, r2
 8013662:	dd13      	ble.n	801368c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8013664:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013668:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801366c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013670:	1a9b      	subs	r3, r3, r2
 8013672:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013676:	f8ad 101c 	strh.w	r1, [sp, #28]
 801367a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801367e:	9600      	str	r6, [sp, #0]
 8013680:	4643      	mov	r3, r8
 8013682:	aa02      	add	r2, sp, #8
 8013684:	4649      	mov	r1, r9
 8013686:	4638      	mov	r0, r7
 8013688:	f7ff fe3a 	bl	8013300 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801368c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013690:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013694:	4293      	cmp	r3, r2
 8013696:	dd13      	ble.n	80136c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8013698:	1a9b      	subs	r3, r3, r2
 801369a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801369e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80136a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80136a6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80136aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136ae:	f8ad 101e 	strh.w	r1, [sp, #30]
 80136b2:	9600      	str	r6, [sp, #0]
 80136b4:	4643      	mov	r3, r8
 80136b6:	aa02      	add	r2, sp, #8
 80136b8:	4649      	mov	r1, r9
 80136ba:	4638      	mov	r0, r7
 80136bc:	f7ff fe20 	bl	8013300 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80136c0:	88a2      	ldrh	r2, [r4, #4]
 80136c2:	8823      	ldrh	r3, [r4, #0]
 80136c4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80136c8:	4413      	add	r3, r2
 80136ca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80136ce:	440a      	add	r2, r1
 80136d0:	b29b      	uxth	r3, r3
 80136d2:	b292      	uxth	r2, r2
 80136d4:	b211      	sxth	r1, r2
 80136d6:	b218      	sxth	r0, r3
 80136d8:	4288      	cmp	r0, r1
 80136da:	dd13      	ble.n	8013704 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 80136dc:	1a9b      	subs	r3, r3, r2
 80136de:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80136e2:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 80136e6:	f8ad 1018 	strh.w	r1, [sp, #24]
 80136ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136ee:	f8ad 001e 	strh.w	r0, [sp, #30]
 80136f2:	9600      	str	r6, [sp, #0]
 80136f4:	4643      	mov	r3, r8
 80136f6:	aa02      	add	r2, sp, #8
 80136f8:	4649      	mov	r1, r9
 80136fa:	4638      	mov	r0, r7
 80136fc:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013700:	f7ff fdfe 	bl	8013300 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013704:	88e2      	ldrh	r2, [r4, #6]
 8013706:	8863      	ldrh	r3, [r4, #2]
 8013708:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801370c:	4413      	add	r3, r2
 801370e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013712:	440a      	add	r2, r1
 8013714:	b29b      	uxth	r3, r3
 8013716:	b292      	uxth	r2, r2
 8013718:	b211      	sxth	r1, r2
 801371a:	b218      	sxth	r0, r3
 801371c:	4288      	cmp	r0, r1
 801371e:	f77f af56 	ble.w	80135ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013722:	f9b4 5000 	ldrsh.w	r5, [r4]
 8013726:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801372a:	f8ad 5018 	strh.w	r5, [sp, #24]
 801372e:	1a9b      	subs	r3, r3, r2
 8013730:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013734:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013738:	f8ad 001c 	strh.w	r0, [sp, #28]
 801373c:	9600      	str	r6, [sp, #0]
 801373e:	4643      	mov	r3, r8
 8013740:	e779      	b.n	8013636 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8013742:	bf00      	nop
 8013744:	0801f230 	.word	0x0801f230
 8013748:	0801f96a 	.word	0x0801f96a
 801374c:	0801f52f 	.word	0x0801f52f

08013750 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013750:	b508      	push	{r3, lr}
 8013752:	b180      	cbz	r0, 8013776 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013754:	2902      	cmp	r1, #2
 8013756:	d014      	beq.n	8013782 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013758:	2903      	cmp	r1, #3
 801375a:	d01d      	beq.n	8013798 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801375c:	2901      	cmp	r1, #1
 801375e:	d101      	bne.n	8013764 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013760:	2001      	movs	r0, #1
 8013762:	bd08      	pop	{r3, pc}
 8013764:	4b0e      	ldr	r3, [pc, #56]	; (80137a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013766:	8818      	ldrh	r0, [r3, #0]
 8013768:	b990      	cbnz	r0, 8013790 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801376a:	4b0e      	ldr	r3, [pc, #56]	; (80137a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801376c:	4a0e      	ldr	r2, [pc, #56]	; (80137a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801376e:	480f      	ldr	r0, [pc, #60]	; (80137ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013770:	2154      	movs	r1, #84	; 0x54
 8013772:	f007 ff19 	bl	801b5a8 <__assert_func>
 8013776:	2902      	cmp	r1, #2
 8013778:	d00e      	beq.n	8013798 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801377a:	2903      	cmp	r1, #3
 801377c:	d0f2      	beq.n	8013764 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801377e:	2901      	cmp	r1, #1
 8013780:	d1ee      	bne.n	8013760 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013782:	4b07      	ldr	r3, [pc, #28]	; (80137a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013784:	8818      	ldrh	r0, [r3, #0]
 8013786:	2800      	cmp	r0, #0
 8013788:	d0ef      	beq.n	801376a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801378a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801378e:	e7e8      	b.n	8013762 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013790:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013794:	4240      	negs	r0, r0
 8013796:	e7e4      	b.n	8013762 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013798:	f04f 30ff 	mov.w	r0, #4294967295
 801379c:	e7e1      	b.n	8013762 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801379e:	bf00      	nop
 80137a0:	2000898a 	.word	0x2000898a
 80137a4:	0801f561 	.word	0x0801f561
 80137a8:	0801fae7 	.word	0x0801fae7
 80137ac:	0801f5a3 	.word	0x0801f5a3

080137b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80137b0:	b508      	push	{r3, lr}
 80137b2:	b180      	cbz	r0, 80137d6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80137b4:	2902      	cmp	r1, #2
 80137b6:	d014      	beq.n	80137e2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80137b8:	2903      	cmp	r1, #3
 80137ba:	d018      	beq.n	80137ee <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80137bc:	2901      	cmp	r1, #1
 80137be:	d001      	beq.n	80137c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80137c0:	2001      	movs	r0, #1
 80137c2:	e013      	b.n	80137ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80137c4:	4b0e      	ldr	r3, [pc, #56]	; (8013800 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80137c6:	8818      	ldrh	r0, [r3, #0]
 80137c8:	b970      	cbnz	r0, 80137e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80137ca:	4b0e      	ldr	r3, [pc, #56]	; (8013804 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80137cc:	4a0e      	ldr	r2, [pc, #56]	; (8013808 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80137ce:	480f      	ldr	r0, [pc, #60]	; (801380c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80137d0:	2154      	movs	r1, #84	; 0x54
 80137d2:	f007 fee9 	bl	801b5a8 <__assert_func>
 80137d6:	2902      	cmp	r1, #2
 80137d8:	d009      	beq.n	80137ee <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80137da:	2903      	cmp	r1, #3
 80137dc:	d0f0      	beq.n	80137c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80137de:	2901      	cmp	r1, #1
 80137e0:	d1f0      	bne.n	80137c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80137e2:	f04f 30ff 	mov.w	r0, #4294967295
 80137e6:	e001      	b.n	80137ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80137e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80137ec:	bd08      	pop	{r3, pc}
 80137ee:	4b04      	ldr	r3, [pc, #16]	; (8013800 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80137f0:	8818      	ldrh	r0, [r3, #0]
 80137f2:	2800      	cmp	r0, #0
 80137f4:	d0e9      	beq.n	80137ca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80137f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80137fa:	4240      	negs	r0, r0
 80137fc:	e7f6      	b.n	80137ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80137fe:	bf00      	nop
 8013800:	2000898a 	.word	0x2000898a
 8013804:	0801f561 	.word	0x0801f561
 8013808:	0801fae7 	.word	0x0801fae7
 801380c:	0801f5a3 	.word	0x0801f5a3

08013810 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013814:	b099      	sub	sp, #100	; 0x64
 8013816:	910b      	str	r1, [sp, #44]	; 0x2c
 8013818:	a914      	add	r1, sp, #80	; 0x50
 801381a:	e881 000c 	stmia.w	r1, {r2, r3}
 801381e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013822:	9308      	str	r3, [sp, #32]
 8013824:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 8013828:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 801382c:	f893 b00d 	ldrb.w	fp, [r3, #13]
 8013830:	910c      	str	r1, [sp, #48]	; 0x30
 8013832:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 8013836:	910d      	str	r1, [sp, #52]	; 0x34
 8013838:	7998      	ldrb	r0, [r3, #6]
 801383a:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801383e:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013842:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013846:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801384a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801384e:	ea4f 114b 	mov.w	r1, fp, lsl #5
 8013852:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013856:	4301      	orrs	r1, r0
 8013858:	9109      	str	r1, [sp, #36]	; 0x24
 801385a:	f000 81e2 	beq.w	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801385e:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 8013862:	79d9      	ldrb	r1, [r3, #7]
 8013864:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8013868:	ea51 0b0b 	orrs.w	fp, r1, fp
 801386c:	f000 81d9 	beq.w	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013870:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8013874:	b29b      	uxth	r3, r3
 8013876:	2e00      	cmp	r6, #0
 8013878:	f000 80fc 	beq.w	8013a74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 801387c:	1af6      	subs	r6, r6, r3
 801387e:	b2b6      	uxth	r6, r6
 8013880:	0433      	lsls	r3, r6, #16
 8013882:	d502      	bpl.n	801388a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8013884:	1bad      	subs	r5, r5, r6
 8013886:	b22d      	sxth	r5, r5
 8013888:	2600      	movs	r6, #0
 801388a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801388e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013892:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8013896:	428d      	cmp	r5, r1
 8013898:	b28b      	uxth	r3, r1
 801389a:	bfbf      	itttt	lt
 801389c:	18f6      	addlt	r6, r6, r3
 801389e:	1b75      	sublt	r5, r6, r5
 80138a0:	b2ae      	uxthlt	r6, r5
 80138a2:	460d      	movlt	r5, r1
 80138a4:	8891      	ldrh	r1, [r2, #4]
 80138a6:	440b      	add	r3, r1
 80138a8:	b21b      	sxth	r3, r3
 80138aa:	9311      	str	r3, [sp, #68]	; 0x44
 80138ac:	8853      	ldrh	r3, [r2, #2]
 80138ae:	88d2      	ldrh	r2, [r2, #6]
 80138b0:	4413      	add	r3, r2
 80138b2:	b21b      	sxth	r3, r3
 80138b4:	9310      	str	r3, [sp, #64]	; 0x40
 80138b6:	4bb2      	ldr	r3, [pc, #712]	; (8013b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 80138b8:	9a08      	ldr	r2, [sp, #32]
 80138ba:	f893 9000 	ldrb.w	r9, [r3]
 80138be:	f109 3cff 	add.w	ip, r9, #4294967295
 80138c2:	f1dc 0300 	rsbs	r3, ip, #0
 80138c6:	eb43 030c 	adc.w	r3, r3, ip
 80138ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80138cc:	4629      	mov	r1, r5
 80138ce:	4653      	mov	r3, sl
 80138d0:	a814      	add	r0, sp, #80	; 0x50
 80138d2:	f7f9 f8a2 	bl	800ca1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80138d6:	4629      	mov	r1, r5
 80138d8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80138dc:	4653      	mov	r3, sl
 80138de:	9a08      	ldr	r2, [sp, #32]
 80138e0:	a814      	add	r0, sp, #80	; 0x50
 80138e2:	f7f9 f8b2 	bl	800ca4a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80138e6:	a918      	add	r1, sp, #96	; 0x60
 80138e8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80138ec:	a817      	add	r0, sp, #92	; 0x5c
 80138ee:	f7f9 fa0d 	bl	800cd0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80138f2:	f1ba 0f00 	cmp.w	sl, #0
 80138f6:	f040 80c0 	bne.w	8013a7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80138fa:	f1b9 0f01 	cmp.w	r9, #1
 80138fe:	f040 80c4 	bne.w	8013a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 8013902:	2301      	movs	r3, #1
 8013904:	fa03 f308 	lsl.w	r3, r3, r8
 8013908:	3b01      	subs	r3, #1
 801390a:	b2db      	uxtb	r3, r3
 801390c:	f1b8 0f01 	cmp.w	r8, #1
 8013910:	930a      	str	r3, [sp, #40]	; 0x28
 8013912:	f000 80e5 	beq.w	8013ae0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8013916:	f1b8 0f02 	cmp.w	r8, #2
 801391a:	f000 80e4 	beq.w	8013ae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 801391e:	f1b8 0f04 	cmp.w	r8, #4
 8013922:	bf15      	itete	ne
 8013924:	46c1      	movne	r9, r8
 8013926:	f04f 0904 	moveq.w	r9, #4
 801392a:	2301      	movne	r3, #1
 801392c:	2311      	moveq	r3, #17
 801392e:	9307      	str	r3, [sp, #28]
 8013930:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013932:	b153      	cbz	r3, 801394a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 8013934:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013936:	2408      	movs	r4, #8
 8013938:	fb94 f3f9 	sdiv	r3, r4, r9
 801393c:	1e5c      	subs	r4, r3, #1
 801393e:	4414      	add	r4, r2
 8013940:	fb94 f4f3 	sdiv	r4, r4, r3
 8013944:	fb14 f403 	smulbb	r4, r4, r3
 8013948:	b2a4      	uxth	r4, r4
 801394a:	b906      	cbnz	r6, 801394e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 801394c:	b16f      	cbz	r7, 801396a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 801394e:	fb07 6304 	mla	r3, r7, r4, r6
 8013952:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013954:	fb08 f303 	mul.w	r3, r8, r3
 8013958:	4639      	mov	r1, r7
 801395a:	f003 0707 	and.w	r7, r3, #7
 801395e:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 8013962:	9328      	str	r3, [sp, #160]	; 0xa0
 8013964:	ebab 0301 	sub.w	r3, fp, r1
 8013968:	930e      	str	r3, [sp, #56]	; 0x38
 801396a:	4651      	mov	r1, sl
 801396c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801396e:	f7ff feef 	bl	8013750 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013972:	4651      	mov	r1, sl
 8013974:	4683      	mov	fp, r0
 8013976:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013978:	f7ff ff1a 	bl	80137b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801397c:	9a08      	ldr	r2, [sp, #32]
 801397e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013980:	1a9b      	subs	r3, r3, r2
 8013982:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013984:	429a      	cmp	r2, r3
 8013986:	bfa8      	it	ge
 8013988:	461a      	movge	r2, r3
 801398a:	2a00      	cmp	r2, #0
 801398c:	4682      	mov	sl, r0
 801398e:	9208      	str	r2, [sp, #32]
 8013990:	f340 8147 	ble.w	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013994:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013996:	1bad      	subs	r5, r5, r6
 8013998:	1b5d      	subs	r5, r3, r5
 801399a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801399c:	429d      	cmp	r5, r3
 801399e:	bfd4      	ite	le
 80139a0:	ebc6 0605 	rsble	r6, r6, r5
 80139a4:	ebc6 0603 	rsbgt	r6, r6, r3
 80139a8:	2e00      	cmp	r6, #0
 80139aa:	f340 813a 	ble.w	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80139ae:	1ba4      	subs	r4, r4, r6
 80139b0:	fb09 f304 	mul.w	r3, r9, r4
 80139b4:	930e      	str	r3, [sp, #56]	; 0x38
 80139b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139b8:	2b00      	cmp	r3, #0
 80139ba:	f040 809d 	bne.w	8013af8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 80139be:	4b71      	ldr	r3, [pc, #452]	; (8013b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 80139c0:	6818      	ldr	r0, [r3, #0]
 80139c2:	6803      	ldr	r3, [r0, #0]
 80139c4:	6a1b      	ldr	r3, [r3, #32]
 80139c6:	4798      	blx	r3
 80139c8:	496f      	ldr	r1, [pc, #444]	; (8013b88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 80139ca:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80139ce:	880c      	ldrh	r4, [r1, #0]
 80139d0:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 80139d4:	fb04 1303 	mla	r3, r4, r3, r1
 80139d8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80139dc:	9309      	str	r3, [sp, #36]	; 0x24
 80139de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139e0:	7819      	ldrb	r1, [r3, #0]
 80139e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80139e4:	0a1b      	lsrs	r3, r3, #8
 80139e6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80139ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80139ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80139ee:	08db      	lsrs	r3, r3, #3
 80139f0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80139f4:	9310      	str	r3, [sp, #64]	; 0x40
 80139f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80139f8:	00db      	lsls	r3, r3, #3
 80139fa:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80139fe:	9311      	str	r3, [sp, #68]	; 0x44
 8013a00:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8013a04:	fb0b ab16 	mls	fp, fp, r6, sl
 8013a08:	fb03 fa06 	mul.w	sl, r3, r6
 8013a0c:	930c      	str	r3, [sp, #48]	; 0x30
 8013a0e:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 8013a12:	9312      	str	r3, [sp, #72]	; 0x48
 8013a14:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013a16:	4139      	asrs	r1, r7
 8013a18:	b29b      	uxth	r3, r3
 8013a1a:	b2c9      	uxtb	r1, r1
 8013a1c:	9313      	str	r3, [sp, #76]	; 0x4c
 8013a1e:	9b08      	ldr	r3, [sp, #32]
 8013a20:	3b01      	subs	r3, #1
 8013a22:	9308      	str	r3, [sp, #32]
 8013a24:	3301      	adds	r3, #1
 8013a26:	f000 80c3 	beq.w	8013bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8013a2a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013a2e:	46b2      	mov	sl, r6
 8013a30:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013a34:	f0c0 80aa 	bcc.w	8013b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8013a38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a3a:	400b      	ands	r3, r1
 8013a3c:	d00a      	beq.n	8013a54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 8013a3e:	9807      	ldr	r0, [sp, #28]
 8013a40:	fb13 f300 	smulbb	r3, r3, r0
 8013a44:	2bfe      	cmp	r3, #254	; 0xfe
 8013a46:	dd59      	ble.n	8013afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8013a48:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013a4a:	28ff      	cmp	r0, #255	; 0xff
 8013a4c:	d156      	bne.n	8013afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8013a4e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013a50:	f8ae 4000 	strh.w	r4, [lr]
 8013a54:	4447      	add	r7, r8
 8013a56:	b2bf      	uxth	r7, r7
 8013a58:	2f07      	cmp	r7, #7
 8013a5a:	bf81      	itttt	hi
 8013a5c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8013a5e:	7859      	ldrbhi	r1, [r3, #1]
 8013a60:	3301      	addhi	r3, #1
 8013a62:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8013a64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a66:	bf9a      	itte	ls
 8013a68:	fa41 f109 	asrls.w	r1, r1, r9
 8013a6c:	b2c9      	uxtbls	r1, r1
 8013a6e:	2700      	movhi	r7, #0
 8013a70:	449e      	add	lr, r3
 8013a72:	e7dd      	b.n	8013a30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 8013a74:	441d      	add	r5, r3
 8013a76:	b22d      	sxth	r5, r5
 8013a78:	e707      	b.n	801388a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8013a7a:	f1ba 0f01 	cmp.w	sl, #1
 8013a7e:	f47f af40 	bne.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013a82:	f1b9 0f01 	cmp.w	r9, #1
 8013a86:	f47f af3c 	bne.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013a8a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8013b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8013a8e:	f8d9 0000 	ldr.w	r0, [r9]
 8013a92:	6803      	ldr	r3, [r0, #0]
 8013a94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013a96:	4798      	blx	r3
 8013a98:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8013a9c:	464a      	mov	r2, r9
 8013a9e:	d006      	beq.n	8013aae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8013aa0:	f1b8 0f04 	cmp.w	r8, #4
 8013aa4:	d11a      	bne.n	8013adc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8013aa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013aa8:	3300      	adds	r3, #0
 8013aaa:	bf18      	it	ne
 8013aac:	2301      	movne	r3, #1
 8013aae:	05c0      	lsls	r0, r0, #23
 8013ab0:	f140 8087 	bpl.w	8013bc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8013ab4:	f1b8 0f08 	cmp.w	r8, #8
 8013ab8:	f040 8083 	bne.w	8013bc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	bf14      	ite	ne
 8013ac0:	2180      	movne	r1, #128	; 0x80
 8013ac2:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8013ac6:	2e00      	cmp	r6, #0
 8013ac8:	f040 80ae 	bne.w	8013c28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 8013acc:	2f00      	cmp	r7, #0
 8013ace:	f000 8082 	beq.w	8013bd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8013ad2:	23ff      	movs	r3, #255	; 0xff
 8013ad4:	930a      	str	r3, [sp, #40]	; 0x28
 8013ad6:	46c1      	mov	r9, r8
 8013ad8:	2301      	movs	r3, #1
 8013ada:	e728      	b.n	801392e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8013adc:	2300      	movs	r3, #0
 8013ade:	e7e6      	b.n	8013aae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8013ae0:	46c1      	mov	r9, r8
 8013ae2:	23ff      	movs	r3, #255	; 0xff
 8013ae4:	e723      	b.n	801392e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8013ae6:	46c1      	mov	r9, r8
 8013ae8:	2355      	movs	r3, #85	; 0x55
 8013aea:	e720      	b.n	801392e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8013aec:	23ff      	movs	r3, #255	; 0xff
 8013aee:	930a      	str	r3, [sp, #40]	; 0x28
 8013af0:	2301      	movs	r3, #1
 8013af2:	46c1      	mov	r9, r8
 8013af4:	9307      	str	r3, [sp, #28]
 8013af6:	e71d      	b.n	8013934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 8013af8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013afa:	e765      	b.n	80139c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 8013afc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013afe:	f8be 5000 	ldrh.w	r5, [lr]
 8013b02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013b04:	fb10 f303 	smulbb	r3, r0, r3
 8013b08:	b29b      	uxth	r3, r3
 8013b0a:	1c58      	adds	r0, r3, #1
 8013b0c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8013b10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013b14:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013b16:	fa1f fc83 	uxth.w	ip, r3
 8013b1a:	122c      	asrs	r4, r5, #8
 8013b1c:	43db      	mvns	r3, r3
 8013b1e:	b2db      	uxtb	r3, r3
 8013b20:	fb1c fb02 	smulbb	fp, ip, r2
 8013b24:	fb10 f00c 	smulbb	r0, r0, ip
 8013b28:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013b2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013b2e:	fb04 0403 	mla	r4, r4, r3, r0
 8013b32:	10e8      	asrs	r0, r5, #3
 8013b34:	00ed      	lsls	r5, r5, #3
 8013b36:	b2ed      	uxtb	r5, r5
 8013b38:	fb1c fc02 	smulbb	ip, ip, r2
 8013b3c:	fb05 cc03 	mla	ip, r5, r3, ip
 8013b40:	b2a4      	uxth	r4, r4
 8013b42:	fa1f fc8c 	uxth.w	ip, ip
 8013b46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8013b4a:	fb00 b003 	mla	r0, r0, r3, fp
 8013b4e:	1c63      	adds	r3, r4, #1
 8013b50:	f10c 0b01 	add.w	fp, ip, #1
 8013b54:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8013b58:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8013b5c:	b280      	uxth	r0, r0
 8013b5e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8013b62:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8013b66:	ea44 040b 	orr.w	r4, r4, fp
 8013b6a:	f100 0b01 	add.w	fp, r0, #1
 8013b6e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8013b72:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013b76:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013b7a:	ea44 040b 	orr.w	r4, r4, fp
 8013b7e:	e767      	b.n	8013a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 8013b80:	20008988 	.word	0x20008988
 8013b84:	20008990 	.word	0x20008990
 8013b88:	2000898a 	.word	0x2000898a
 8013b8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b8e:	b153      	cbz	r3, 8013ba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8013b90:	441f      	add	r7, r3
 8013b92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013b94:	b2bf      	uxth	r7, r7
 8013b96:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8013b9a:	f007 0707 	and.w	r7, r7, #7
 8013b9e:	7819      	ldrb	r1, [r3, #0]
 8013ba0:	9328      	str	r3, [sp, #160]	; 0xa0
 8013ba2:	4139      	asrs	r1, r7
 8013ba4:	b2c9      	uxtb	r1, r1
 8013ba6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013ba8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013baa:	441a      	add	r2, r3
 8013bac:	9209      	str	r2, [sp, #36]	; 0x24
 8013bae:	e736      	b.n	8013a1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 8013bb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013bb2:	2b00      	cmp	r3, #0
 8013bb4:	d135      	bne.n	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013bb6:	4b21      	ldr	r3, [pc, #132]	; (8013c3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 8013bb8:	6818      	ldr	r0, [r3, #0]
 8013bba:	6803      	ldr	r3, [r0, #0]
 8013bbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013bbe:	4798      	blx	r3
 8013bc0:	e02f      	b.n	8013c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8013bc2:	2b00      	cmp	r3, #0
 8013bc4:	f43f ae9d 	beq.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013bc8:	2e00      	cmp	r6, #0
 8013bca:	f47f ae9a 	bne.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013bce:	2f00      	cmp	r7, #0
 8013bd0:	f47f ae97 	bne.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013bd4:	2180      	movs	r1, #128	; 0x80
 8013bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bd8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013bda:	18eb      	adds	r3, r5, r3
 8013bdc:	4283      	cmp	r3, r0
 8013bde:	f73f ae90 	bgt.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013be2:	9b08      	ldr	r3, [sp, #32]
 8013be4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013be6:	445b      	add	r3, fp
 8013be8:	4283      	cmp	r3, r0
 8013bea:	f73f ae8a 	bgt.w	8013902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8013bee:	6810      	ldr	r0, [r2, #0]
 8013bf0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8013bf4:	6805      	ldr	r5, [r0, #0]
 8013bf6:	9105      	str	r1, [sp, #20]
 8013bf8:	f1b8 0f08 	cmp.w	r8, #8
 8013bfc:	bf18      	it	ne
 8013bfe:	3401      	addne	r4, #1
 8013c00:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013c02:	9104      	str	r1, [sp, #16]
 8013c04:	bf18      	it	ne
 8013c06:	f024 0401 	bicne.w	r4, r4, #1
 8013c0a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013c0c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8013c10:	bf18      	it	ne
 8013c12:	b2a4      	uxthne	r4, r4
 8013c14:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8013c18:	e9cd 4b00 	strd	r4, fp, [sp]
 8013c1c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013c1e:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8013c20:	47a0      	blx	r4
 8013c22:	b019      	add	sp, #100	; 0x64
 8013c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c2a:	2b00      	cmp	r3, #0
 8013c2c:	f47f af5e 	bne.w	8013aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013c30:	23ff      	movs	r3, #255	; 0xff
 8013c32:	930a      	str	r3, [sp, #40]	; 0x28
 8013c34:	2301      	movs	r3, #1
 8013c36:	46c1      	mov	r9, r8
 8013c38:	9307      	str	r3, [sp, #28]
 8013c3a:	e688      	b.n	801394e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8013c3c:	20008990 	.word	0x20008990

08013c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013c40:	b538      	push	{r3, r4, r5, lr}
 8013c42:	4c15      	ldr	r4, [pc, #84]	; (8013c98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013c44:	7823      	ldrb	r3, [r4, #0]
 8013c46:	f3bf 8f5b 	dmb	ish
 8013c4a:	07da      	lsls	r2, r3, #31
 8013c4c:	4605      	mov	r5, r0
 8013c4e:	d40b      	bmi.n	8013c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013c50:	4620      	mov	r0, r4
 8013c52:	f007 fc7f 	bl	801b554 <__cxa_guard_acquire>
 8013c56:	b138      	cbz	r0, 8013c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013c58:	4620      	mov	r0, r4
 8013c5a:	f007 fc87 	bl	801b56c <__cxa_guard_release>
 8013c5e:	4a0f      	ldr	r2, [pc, #60]	; (8013c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013c60:	490f      	ldr	r1, [pc, #60]	; (8013ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013c62:	4810      	ldr	r0, [pc, #64]	; (8013ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013c64:	f007 fc6c 	bl	801b540 <__aeabi_atexit>
 8013c68:	4c0f      	ldr	r4, [pc, #60]	; (8013ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013c6a:	7823      	ldrb	r3, [r4, #0]
 8013c6c:	f3bf 8f5b 	dmb	ish
 8013c70:	07db      	lsls	r3, r3, #31
 8013c72:	d40b      	bmi.n	8013c8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013c74:	4620      	mov	r0, r4
 8013c76:	f007 fc6d 	bl	801b554 <__cxa_guard_acquire>
 8013c7a:	b138      	cbz	r0, 8013c8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013c7c:	4620      	mov	r0, r4
 8013c7e:	f007 fc75 	bl	801b56c <__cxa_guard_release>
 8013c82:	4a06      	ldr	r2, [pc, #24]	; (8013c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013c84:	4909      	ldr	r1, [pc, #36]	; (8013cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013c86:	480a      	ldr	r0, [pc, #40]	; (8013cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013c88:	f007 fc5a 	bl	801b540 <__aeabi_atexit>
 8013c8c:	4b05      	ldr	r3, [pc, #20]	; (8013ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013c8e:	612b      	str	r3, [r5, #16]
 8013c90:	4b07      	ldr	r3, [pc, #28]	; (8013cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013c92:	616b      	str	r3, [r5, #20]
 8013c94:	bd38      	pop	{r3, r4, r5, pc}
 8013c96:	bf00      	nop
 8013c98:	20008a5c 	.word	0x20008a5c
 8013c9c:	20000000 	.word	0x20000000
 8013ca0:	08012247 	.word	0x08012247
 8013ca4:	2000005c 	.word	0x2000005c
 8013ca8:	20008a60 	.word	0x20008a60
 8013cac:	08012245 	.word	0x08012245
 8013cb0:	20000060 	.word	0x20000060

08013cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013cb4:	b538      	push	{r3, r4, r5, lr}
 8013cb6:	4c15      	ldr	r4, [pc, #84]	; (8013d0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013cb8:	7823      	ldrb	r3, [r4, #0]
 8013cba:	f3bf 8f5b 	dmb	ish
 8013cbe:	07da      	lsls	r2, r3, #31
 8013cc0:	4605      	mov	r5, r0
 8013cc2:	d40b      	bmi.n	8013cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013cc4:	4620      	mov	r0, r4
 8013cc6:	f007 fc45 	bl	801b554 <__cxa_guard_acquire>
 8013cca:	b138      	cbz	r0, 8013cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013ccc:	4620      	mov	r0, r4
 8013cce:	f007 fc4d 	bl	801b56c <__cxa_guard_release>
 8013cd2:	4a0f      	ldr	r2, [pc, #60]	; (8013d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013cd4:	490f      	ldr	r1, [pc, #60]	; (8013d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013cd6:	4810      	ldr	r0, [pc, #64]	; (8013d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013cd8:	f007 fc32 	bl	801b540 <__aeabi_atexit>
 8013cdc:	4c0f      	ldr	r4, [pc, #60]	; (8013d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013cde:	7823      	ldrb	r3, [r4, #0]
 8013ce0:	f3bf 8f5b 	dmb	ish
 8013ce4:	07db      	lsls	r3, r3, #31
 8013ce6:	d40b      	bmi.n	8013d00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013ce8:	4620      	mov	r0, r4
 8013cea:	f007 fc33 	bl	801b554 <__cxa_guard_acquire>
 8013cee:	b138      	cbz	r0, 8013d00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013cf0:	4620      	mov	r0, r4
 8013cf2:	f007 fc3b 	bl	801b56c <__cxa_guard_release>
 8013cf6:	4a06      	ldr	r2, [pc, #24]	; (8013d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013cf8:	4909      	ldr	r1, [pc, #36]	; (8013d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013cfa:	480a      	ldr	r0, [pc, #40]	; (8013d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013cfc:	f007 fc20 	bl	801b540 <__aeabi_atexit>
 8013d00:	4b05      	ldr	r3, [pc, #20]	; (8013d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013d02:	60ab      	str	r3, [r5, #8]
 8013d04:	4b07      	ldr	r3, [pc, #28]	; (8013d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013d06:	60eb      	str	r3, [r5, #12]
 8013d08:	bd38      	pop	{r3, r4, r5, pc}
 8013d0a:	bf00      	nop
 8013d0c:	20008a34 	.word	0x20008a34
 8013d10:	20000000 	.word	0x20000000
 8013d14:	0801224b 	.word	0x0801224b
 8013d18:	20000034 	.word	0x20000034
 8013d1c:	20008a38 	.word	0x20008a38
 8013d20:	08012249 	.word	0x08012249
 8013d24:	20000038 	.word	0x20000038

08013d28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013d28:	b510      	push	{r4, lr}
 8013d2a:	4604      	mov	r4, r0
 8013d2c:	f7ff ff88 	bl	8013c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013d30:	4620      	mov	r0, r4
 8013d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d36:	f7ff bfbd 	b.w	8013cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013d3c:	b538      	push	{r3, r4, r5, lr}
 8013d3e:	4c15      	ldr	r4, [pc, #84]	; (8013d94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013d40:	7823      	ldrb	r3, [r4, #0]
 8013d42:	f3bf 8f5b 	dmb	ish
 8013d46:	07da      	lsls	r2, r3, #31
 8013d48:	4605      	mov	r5, r0
 8013d4a:	d40b      	bmi.n	8013d64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013d4c:	4620      	mov	r0, r4
 8013d4e:	f007 fc01 	bl	801b554 <__cxa_guard_acquire>
 8013d52:	b138      	cbz	r0, 8013d64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013d54:	4620      	mov	r0, r4
 8013d56:	f007 fc09 	bl	801b56c <__cxa_guard_release>
 8013d5a:	4a0f      	ldr	r2, [pc, #60]	; (8013d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013d5c:	490f      	ldr	r1, [pc, #60]	; (8013d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013d5e:	4810      	ldr	r0, [pc, #64]	; (8013da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013d60:	f007 fbee 	bl	801b540 <__aeabi_atexit>
 8013d64:	4c0f      	ldr	r4, [pc, #60]	; (8013da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013d66:	7823      	ldrb	r3, [r4, #0]
 8013d68:	f3bf 8f5b 	dmb	ish
 8013d6c:	07db      	lsls	r3, r3, #31
 8013d6e:	d40b      	bmi.n	8013d88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013d70:	4620      	mov	r0, r4
 8013d72:	f007 fbef 	bl	801b554 <__cxa_guard_acquire>
 8013d76:	b138      	cbz	r0, 8013d88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013d78:	4620      	mov	r0, r4
 8013d7a:	f007 fbf7 	bl	801b56c <__cxa_guard_release>
 8013d7e:	4a06      	ldr	r2, [pc, #24]	; (8013d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013d80:	4909      	ldr	r1, [pc, #36]	; (8013da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013d82:	480a      	ldr	r0, [pc, #40]	; (8013dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013d84:	f007 fbdc 	bl	801b540 <__aeabi_atexit>
 8013d88:	4b05      	ldr	r3, [pc, #20]	; (8013da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013d8a:	622b      	str	r3, [r5, #32]
 8013d8c:	4b07      	ldr	r3, [pc, #28]	; (8013dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013d8e:	626b      	str	r3, [r5, #36]	; 0x24
 8013d90:	bd38      	pop	{r3, r4, r5, pc}
 8013d92:	bf00      	nop
 8013d94:	20008a64 	.word	0x20008a64
 8013d98:	20000000 	.word	0x20000000
 8013d9c:	0801223f 	.word	0x0801223f
 8013da0:	20000064 	.word	0x20000064
 8013da4:	20008a68 	.word	0x20008a68
 8013da8:	0801223d 	.word	0x0801223d
 8013dac:	20000068 	.word	0x20000068

08013db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013db0:	b538      	push	{r3, r4, r5, lr}
 8013db2:	4c15      	ldr	r4, [pc, #84]	; (8013e08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013db4:	7823      	ldrb	r3, [r4, #0]
 8013db6:	f3bf 8f5b 	dmb	ish
 8013dba:	07da      	lsls	r2, r3, #31
 8013dbc:	4605      	mov	r5, r0
 8013dbe:	d40b      	bmi.n	8013dd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013dc0:	4620      	mov	r0, r4
 8013dc2:	f007 fbc7 	bl	801b554 <__cxa_guard_acquire>
 8013dc6:	b138      	cbz	r0, 8013dd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013dc8:	4620      	mov	r0, r4
 8013dca:	f007 fbcf 	bl	801b56c <__cxa_guard_release>
 8013dce:	4a0f      	ldr	r2, [pc, #60]	; (8013e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013dd0:	490f      	ldr	r1, [pc, #60]	; (8013e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013dd2:	4810      	ldr	r0, [pc, #64]	; (8013e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013dd4:	f007 fbb4 	bl	801b540 <__aeabi_atexit>
 8013dd8:	4c0f      	ldr	r4, [pc, #60]	; (8013e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013dda:	7823      	ldrb	r3, [r4, #0]
 8013ddc:	f3bf 8f5b 	dmb	ish
 8013de0:	07db      	lsls	r3, r3, #31
 8013de2:	d40b      	bmi.n	8013dfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013de4:	4620      	mov	r0, r4
 8013de6:	f007 fbb5 	bl	801b554 <__cxa_guard_acquire>
 8013dea:	b138      	cbz	r0, 8013dfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013dec:	4620      	mov	r0, r4
 8013dee:	f007 fbbd 	bl	801b56c <__cxa_guard_release>
 8013df2:	4a06      	ldr	r2, [pc, #24]	; (8013e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013df4:	4909      	ldr	r1, [pc, #36]	; (8013e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013df6:	480a      	ldr	r0, [pc, #40]	; (8013e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013df8:	f007 fba2 	bl	801b540 <__aeabi_atexit>
 8013dfc:	4b05      	ldr	r3, [pc, #20]	; (8013e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013dfe:	61ab      	str	r3, [r5, #24]
 8013e00:	4b07      	ldr	r3, [pc, #28]	; (8013e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013e02:	61eb      	str	r3, [r5, #28]
 8013e04:	bd38      	pop	{r3, r4, r5, pc}
 8013e06:	bf00      	nop
 8013e08:	20008a3c 	.word	0x20008a3c
 8013e0c:	20000000 	.word	0x20000000
 8013e10:	08012243 	.word	0x08012243
 8013e14:	2000003c 	.word	0x2000003c
 8013e18:	20008a40 	.word	0x20008a40
 8013e1c:	08012241 	.word	0x08012241
 8013e20:	20000040 	.word	0x20000040

08013e24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013e24:	b510      	push	{r4, lr}
 8013e26:	4604      	mov	r4, r0
 8013e28:	f7ff ff88 	bl	8013d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e32:	f7ff bfbd 	b.w	8013db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013e38:	b538      	push	{r3, r4, r5, lr}
 8013e3a:	4c15      	ldr	r4, [pc, #84]	; (8013e90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013e3c:	7823      	ldrb	r3, [r4, #0]
 8013e3e:	f3bf 8f5b 	dmb	ish
 8013e42:	07da      	lsls	r2, r3, #31
 8013e44:	4605      	mov	r5, r0
 8013e46:	d40b      	bmi.n	8013e60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013e48:	4620      	mov	r0, r4
 8013e4a:	f007 fb83 	bl	801b554 <__cxa_guard_acquire>
 8013e4e:	b138      	cbz	r0, 8013e60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013e50:	4620      	mov	r0, r4
 8013e52:	f007 fb8b 	bl	801b56c <__cxa_guard_release>
 8013e56:	4a0f      	ldr	r2, [pc, #60]	; (8013e94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013e58:	490f      	ldr	r1, [pc, #60]	; (8013e98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013e5a:	4810      	ldr	r0, [pc, #64]	; (8013e9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013e5c:	f007 fb70 	bl	801b540 <__aeabi_atexit>
 8013e60:	4c0f      	ldr	r4, [pc, #60]	; (8013ea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013e62:	7823      	ldrb	r3, [r4, #0]
 8013e64:	f3bf 8f5b 	dmb	ish
 8013e68:	07db      	lsls	r3, r3, #31
 8013e6a:	d40b      	bmi.n	8013e84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013e6c:	4620      	mov	r0, r4
 8013e6e:	f007 fb71 	bl	801b554 <__cxa_guard_acquire>
 8013e72:	b138      	cbz	r0, 8013e84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013e74:	4620      	mov	r0, r4
 8013e76:	f007 fb79 	bl	801b56c <__cxa_guard_release>
 8013e7a:	4a06      	ldr	r2, [pc, #24]	; (8013e94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013e7c:	4909      	ldr	r1, [pc, #36]	; (8013ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013e7e:	480a      	ldr	r0, [pc, #40]	; (8013ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013e80:	f007 fb5e 	bl	801b540 <__aeabi_atexit>
 8013e84:	4b05      	ldr	r3, [pc, #20]	; (8013e9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013e86:	632b      	str	r3, [r5, #48]	; 0x30
 8013e88:	4b07      	ldr	r3, [pc, #28]	; (8013ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013e8a:	636b      	str	r3, [r5, #52]	; 0x34
 8013e8c:	bd38      	pop	{r3, r4, r5, pc}
 8013e8e:	bf00      	nop
 8013e90:	20008a74 	.word	0x20008a74
 8013e94:	20000000 	.word	0x20000000
 8013e98:	08012237 	.word	0x08012237
 8013e9c:	20000074 	.word	0x20000074
 8013ea0:	20008a78 	.word	0x20008a78
 8013ea4:	08012235 	.word	0x08012235
 8013ea8:	20000078 	.word	0x20000078

08013eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013eac:	b538      	push	{r3, r4, r5, lr}
 8013eae:	4c15      	ldr	r4, [pc, #84]	; (8013f04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013eb0:	7823      	ldrb	r3, [r4, #0]
 8013eb2:	f3bf 8f5b 	dmb	ish
 8013eb6:	07da      	lsls	r2, r3, #31
 8013eb8:	4605      	mov	r5, r0
 8013eba:	d40b      	bmi.n	8013ed4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013ebc:	4620      	mov	r0, r4
 8013ebe:	f007 fb49 	bl	801b554 <__cxa_guard_acquire>
 8013ec2:	b138      	cbz	r0, 8013ed4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013ec4:	4620      	mov	r0, r4
 8013ec6:	f007 fb51 	bl	801b56c <__cxa_guard_release>
 8013eca:	4a0f      	ldr	r2, [pc, #60]	; (8013f08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013ecc:	490f      	ldr	r1, [pc, #60]	; (8013f0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013ece:	4810      	ldr	r0, [pc, #64]	; (8013f10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013ed0:	f007 fb36 	bl	801b540 <__aeabi_atexit>
 8013ed4:	4c0f      	ldr	r4, [pc, #60]	; (8013f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013ed6:	7823      	ldrb	r3, [r4, #0]
 8013ed8:	f3bf 8f5b 	dmb	ish
 8013edc:	07db      	lsls	r3, r3, #31
 8013ede:	d40b      	bmi.n	8013ef8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013ee0:	4620      	mov	r0, r4
 8013ee2:	f007 fb37 	bl	801b554 <__cxa_guard_acquire>
 8013ee6:	b138      	cbz	r0, 8013ef8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013ee8:	4620      	mov	r0, r4
 8013eea:	f007 fb3f 	bl	801b56c <__cxa_guard_release>
 8013eee:	4a06      	ldr	r2, [pc, #24]	; (8013f08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013ef0:	4909      	ldr	r1, [pc, #36]	; (8013f18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013ef2:	480a      	ldr	r0, [pc, #40]	; (8013f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013ef4:	f007 fb24 	bl	801b540 <__aeabi_atexit>
 8013ef8:	4b05      	ldr	r3, [pc, #20]	; (8013f10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013efa:	62ab      	str	r3, [r5, #40]	; 0x28
 8013efc:	4b07      	ldr	r3, [pc, #28]	; (8013f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013efe:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013f00:	bd38      	pop	{r3, r4, r5, pc}
 8013f02:	bf00      	nop
 8013f04:	20008a44 	.word	0x20008a44
 8013f08:	20000000 	.word	0x20000000
 8013f0c:	0801223b 	.word	0x0801223b
 8013f10:	20000044 	.word	0x20000044
 8013f14:	20008a48 	.word	0x20008a48
 8013f18:	08012239 	.word	0x08012239
 8013f1c:	20000048 	.word	0x20000048

08013f20 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013f20:	b510      	push	{r4, lr}
 8013f22:	4604      	mov	r4, r0
 8013f24:	f7ff ff88 	bl	8013e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013f28:	4620      	mov	r0, r4
 8013f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f2e:	f7ff bfbd 	b.w	8013eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013f34:	b538      	push	{r3, r4, r5, lr}
 8013f36:	4c15      	ldr	r4, [pc, #84]	; (8013f8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013f38:	7823      	ldrb	r3, [r4, #0]
 8013f3a:	f3bf 8f5b 	dmb	ish
 8013f3e:	07da      	lsls	r2, r3, #31
 8013f40:	4605      	mov	r5, r0
 8013f42:	d40b      	bmi.n	8013f5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013f44:	4620      	mov	r0, r4
 8013f46:	f007 fb05 	bl	801b554 <__cxa_guard_acquire>
 8013f4a:	b138      	cbz	r0, 8013f5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	f007 fb0d 	bl	801b56c <__cxa_guard_release>
 8013f52:	4a0f      	ldr	r2, [pc, #60]	; (8013f90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013f54:	490f      	ldr	r1, [pc, #60]	; (8013f94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013f56:	4810      	ldr	r0, [pc, #64]	; (8013f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013f58:	f007 faf2 	bl	801b540 <__aeabi_atexit>
 8013f5c:	4c0f      	ldr	r4, [pc, #60]	; (8013f9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013f5e:	7823      	ldrb	r3, [r4, #0]
 8013f60:	f3bf 8f5b 	dmb	ish
 8013f64:	07db      	lsls	r3, r3, #31
 8013f66:	d40b      	bmi.n	8013f80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013f68:	4620      	mov	r0, r4
 8013f6a:	f007 faf3 	bl	801b554 <__cxa_guard_acquire>
 8013f6e:	b138      	cbz	r0, 8013f80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013f70:	4620      	mov	r0, r4
 8013f72:	f007 fafb 	bl	801b56c <__cxa_guard_release>
 8013f76:	4a06      	ldr	r2, [pc, #24]	; (8013f90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013f78:	4909      	ldr	r1, [pc, #36]	; (8013fa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013f7a:	480a      	ldr	r0, [pc, #40]	; (8013fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013f7c:	f007 fae0 	bl	801b540 <__aeabi_atexit>
 8013f80:	4b05      	ldr	r3, [pc, #20]	; (8013f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013f82:	652b      	str	r3, [r5, #80]	; 0x50
 8013f84:	4b07      	ldr	r3, [pc, #28]	; (8013fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013f86:	656b      	str	r3, [r5, #84]	; 0x54
 8013f88:	bd38      	pop	{r3, r4, r5, pc}
 8013f8a:	bf00      	nop
 8013f8c:	20008a7c 	.word	0x20008a7c
 8013f90:	20000000 	.word	0x20000000
 8013f94:	08012227 	.word	0x08012227
 8013f98:	2000007c 	.word	0x2000007c
 8013f9c:	20008a80 	.word	0x20008a80
 8013fa0:	08012225 	.word	0x08012225
 8013fa4:	20000080 	.word	0x20000080

08013fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013fa8:	b538      	push	{r3, r4, r5, lr}
 8013faa:	4c15      	ldr	r4, [pc, #84]	; (8014000 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013fac:	7823      	ldrb	r3, [r4, #0]
 8013fae:	f3bf 8f5b 	dmb	ish
 8013fb2:	07da      	lsls	r2, r3, #31
 8013fb4:	4605      	mov	r5, r0
 8013fb6:	d40b      	bmi.n	8013fd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013fb8:	4620      	mov	r0, r4
 8013fba:	f007 facb 	bl	801b554 <__cxa_guard_acquire>
 8013fbe:	b138      	cbz	r0, 8013fd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013fc0:	4620      	mov	r0, r4
 8013fc2:	f007 fad3 	bl	801b56c <__cxa_guard_release>
 8013fc6:	4a0f      	ldr	r2, [pc, #60]	; (8014004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013fc8:	490f      	ldr	r1, [pc, #60]	; (8014008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013fca:	4810      	ldr	r0, [pc, #64]	; (801400c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013fcc:	f007 fab8 	bl	801b540 <__aeabi_atexit>
 8013fd0:	4c0f      	ldr	r4, [pc, #60]	; (8014010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013fd2:	7823      	ldrb	r3, [r4, #0]
 8013fd4:	f3bf 8f5b 	dmb	ish
 8013fd8:	07db      	lsls	r3, r3, #31
 8013fda:	d40b      	bmi.n	8013ff4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013fdc:	4620      	mov	r0, r4
 8013fde:	f007 fab9 	bl	801b554 <__cxa_guard_acquire>
 8013fe2:	b138      	cbz	r0, 8013ff4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	f007 fac1 	bl	801b56c <__cxa_guard_release>
 8013fea:	4a06      	ldr	r2, [pc, #24]	; (8014004 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013fec:	4909      	ldr	r1, [pc, #36]	; (8014014 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013fee:	480a      	ldr	r0, [pc, #40]	; (8014018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013ff0:	f007 faa6 	bl	801b540 <__aeabi_atexit>
 8013ff4:	4b05      	ldr	r3, [pc, #20]	; (801400c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013ff6:	64ab      	str	r3, [r5, #72]	; 0x48
 8013ff8:	4b07      	ldr	r3, [pc, #28]	; (8014018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013ffa:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013ffc:	bd38      	pop	{r3, r4, r5, pc}
 8013ffe:	bf00      	nop
 8014000:	20008a84 	.word	0x20008a84
 8014004:	20000000 	.word	0x20000000
 8014008:	0801222b 	.word	0x0801222b
 801400c:	20000084 	.word	0x20000084
 8014010:	20008a88 	.word	0x20008a88
 8014014:	08012229 	.word	0x08012229
 8014018:	20000088 	.word	0x20000088

0801401c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801401c:	b538      	push	{r3, r4, r5, lr}
 801401e:	4c15      	ldr	r4, [pc, #84]	; (8014074 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014020:	7823      	ldrb	r3, [r4, #0]
 8014022:	f3bf 8f5b 	dmb	ish
 8014026:	07da      	lsls	r2, r3, #31
 8014028:	4605      	mov	r5, r0
 801402a:	d40b      	bmi.n	8014044 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801402c:	4620      	mov	r0, r4
 801402e:	f007 fa91 	bl	801b554 <__cxa_guard_acquire>
 8014032:	b138      	cbz	r0, 8014044 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014034:	4620      	mov	r0, r4
 8014036:	f007 fa99 	bl	801b56c <__cxa_guard_release>
 801403a:	4a0f      	ldr	r2, [pc, #60]	; (8014078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801403c:	490f      	ldr	r1, [pc, #60]	; (801407c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801403e:	4810      	ldr	r0, [pc, #64]	; (8014080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014040:	f007 fa7e 	bl	801b540 <__aeabi_atexit>
 8014044:	4c0f      	ldr	r4, [pc, #60]	; (8014084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014046:	7823      	ldrb	r3, [r4, #0]
 8014048:	f3bf 8f5b 	dmb	ish
 801404c:	07db      	lsls	r3, r3, #31
 801404e:	d40b      	bmi.n	8014068 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014050:	4620      	mov	r0, r4
 8014052:	f007 fa7f 	bl	801b554 <__cxa_guard_acquire>
 8014056:	b138      	cbz	r0, 8014068 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014058:	4620      	mov	r0, r4
 801405a:	f007 fa87 	bl	801b56c <__cxa_guard_release>
 801405e:	4a06      	ldr	r2, [pc, #24]	; (8014078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014060:	4909      	ldr	r1, [pc, #36]	; (8014088 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8014062:	480a      	ldr	r0, [pc, #40]	; (801408c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014064:	f007 fa6c 	bl	801b540 <__aeabi_atexit>
 8014068:	4b05      	ldr	r3, [pc, #20]	; (8014080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801406a:	642b      	str	r3, [r5, #64]	; 0x40
 801406c:	4b07      	ldr	r3, [pc, #28]	; (801408c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801406e:	646b      	str	r3, [r5, #68]	; 0x44
 8014070:	bd38      	pop	{r3, r4, r5, pc}
 8014072:	bf00      	nop
 8014074:	20008a4c 	.word	0x20008a4c
 8014078:	20000000 	.word	0x20000000
 801407c:	0801222f 	.word	0x0801222f
 8014080:	2000004c 	.word	0x2000004c
 8014084:	20008a50 	.word	0x20008a50
 8014088:	0801222d 	.word	0x0801222d
 801408c:	20000050 	.word	0x20000050

08014090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8014090:	b538      	push	{r3, r4, r5, lr}
 8014092:	4c15      	ldr	r4, [pc, #84]	; (80140e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8014094:	7823      	ldrb	r3, [r4, #0]
 8014096:	f3bf 8f5b 	dmb	ish
 801409a:	07da      	lsls	r2, r3, #31
 801409c:	4605      	mov	r5, r0
 801409e:	d40b      	bmi.n	80140b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80140a0:	4620      	mov	r0, r4
 80140a2:	f007 fa57 	bl	801b554 <__cxa_guard_acquire>
 80140a6:	b138      	cbz	r0, 80140b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80140a8:	4620      	mov	r0, r4
 80140aa:	f007 fa5f 	bl	801b56c <__cxa_guard_release>
 80140ae:	4a0f      	ldr	r2, [pc, #60]	; (80140ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80140b0:	490f      	ldr	r1, [pc, #60]	; (80140f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80140b2:	4810      	ldr	r0, [pc, #64]	; (80140f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80140b4:	f007 fa44 	bl	801b540 <__aeabi_atexit>
 80140b8:	4c0f      	ldr	r4, [pc, #60]	; (80140f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80140ba:	7823      	ldrb	r3, [r4, #0]
 80140bc:	f3bf 8f5b 	dmb	ish
 80140c0:	07db      	lsls	r3, r3, #31
 80140c2:	d40b      	bmi.n	80140dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80140c4:	4620      	mov	r0, r4
 80140c6:	f007 fa45 	bl	801b554 <__cxa_guard_acquire>
 80140ca:	b138      	cbz	r0, 80140dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80140cc:	4620      	mov	r0, r4
 80140ce:	f007 fa4d 	bl	801b56c <__cxa_guard_release>
 80140d2:	4a06      	ldr	r2, [pc, #24]	; (80140ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80140d4:	4909      	ldr	r1, [pc, #36]	; (80140fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80140d6:	480a      	ldr	r0, [pc, #40]	; (8014100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80140d8:	f007 fa32 	bl	801b540 <__aeabi_atexit>
 80140dc:	4b05      	ldr	r3, [pc, #20]	; (80140f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80140de:	63ab      	str	r3, [r5, #56]	; 0x38
 80140e0:	4b07      	ldr	r3, [pc, #28]	; (8014100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80140e2:	63eb      	str	r3, [r5, #60]	; 0x3c
 80140e4:	bd38      	pop	{r3, r4, r5, pc}
 80140e6:	bf00      	nop
 80140e8:	20008a6c 	.word	0x20008a6c
 80140ec:	20000000 	.word	0x20000000
 80140f0:	08012233 	.word	0x08012233
 80140f4:	2000006c 	.word	0x2000006c
 80140f8:	20008a70 	.word	0x20008a70
 80140fc:	08012231 	.word	0x08012231
 8014100:	20000070 	.word	0x20000070

08014104 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014104:	b510      	push	{r4, lr}
 8014106:	4604      	mov	r4, r0
 8014108:	f7ff ff14 	bl	8013f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801410c:	4620      	mov	r0, r4
 801410e:	f7ff ff85 	bl	801401c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8014112:	4620      	mov	r0, r4
 8014114:	f7ff ff48 	bl	8013fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014118:	4620      	mov	r0, r4
 801411a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801411e:	f7ff bfb7 	b.w	8014090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014124:	b538      	push	{r3, r4, r5, lr}
 8014126:	4c15      	ldr	r4, [pc, #84]	; (801417c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014128:	7823      	ldrb	r3, [r4, #0]
 801412a:	f3bf 8f5b 	dmb	ish
 801412e:	07da      	lsls	r2, r3, #31
 8014130:	4605      	mov	r5, r0
 8014132:	d40b      	bmi.n	801414c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014134:	4620      	mov	r0, r4
 8014136:	f007 fa0d 	bl	801b554 <__cxa_guard_acquire>
 801413a:	b138      	cbz	r0, 801414c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801413c:	4620      	mov	r0, r4
 801413e:	f007 fa15 	bl	801b56c <__cxa_guard_release>
 8014142:	4a0f      	ldr	r2, [pc, #60]	; (8014180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014144:	490f      	ldr	r1, [pc, #60]	; (8014184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014146:	4810      	ldr	r0, [pc, #64]	; (8014188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014148:	f007 f9fa 	bl	801b540 <__aeabi_atexit>
 801414c:	4c0f      	ldr	r4, [pc, #60]	; (801418c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801414e:	7823      	ldrb	r3, [r4, #0]
 8014150:	f3bf 8f5b 	dmb	ish
 8014154:	07db      	lsls	r3, r3, #31
 8014156:	d40b      	bmi.n	8014170 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014158:	4620      	mov	r0, r4
 801415a:	f007 f9fb 	bl	801b554 <__cxa_guard_acquire>
 801415e:	b138      	cbz	r0, 8014170 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014160:	4620      	mov	r0, r4
 8014162:	f007 fa03 	bl	801b56c <__cxa_guard_release>
 8014166:	4a06      	ldr	r2, [pc, #24]	; (8014180 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014168:	4909      	ldr	r1, [pc, #36]	; (8014190 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801416a:	480a      	ldr	r0, [pc, #40]	; (8014194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801416c:	f007 f9e8 	bl	801b540 <__aeabi_atexit>
 8014170:	4b05      	ldr	r3, [pc, #20]	; (8014188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014172:	662b      	str	r3, [r5, #96]	; 0x60
 8014174:	4b07      	ldr	r3, [pc, #28]	; (8014194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014176:	666b      	str	r3, [r5, #100]	; 0x64
 8014178:	bd38      	pop	{r3, r4, r5, pc}
 801417a:	bf00      	nop
 801417c:	20008a54 	.word	0x20008a54
 8014180:	20000000 	.word	0x20000000
 8014184:	0801221f 	.word	0x0801221f
 8014188:	20000054 	.word	0x20000054
 801418c:	20008a58 	.word	0x20008a58
 8014190:	0801221d 	.word	0x0801221d
 8014194:	20000058 	.word	0x20000058

08014198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014198:	b538      	push	{r3, r4, r5, lr}
 801419a:	4c15      	ldr	r4, [pc, #84]	; (80141f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801419c:	7823      	ldrb	r3, [r4, #0]
 801419e:	f3bf 8f5b 	dmb	ish
 80141a2:	07da      	lsls	r2, r3, #31
 80141a4:	4605      	mov	r5, r0
 80141a6:	d40b      	bmi.n	80141c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80141a8:	4620      	mov	r0, r4
 80141aa:	f007 f9d3 	bl	801b554 <__cxa_guard_acquire>
 80141ae:	b138      	cbz	r0, 80141c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80141b0:	4620      	mov	r0, r4
 80141b2:	f007 f9db 	bl	801b56c <__cxa_guard_release>
 80141b6:	4a0f      	ldr	r2, [pc, #60]	; (80141f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80141b8:	490f      	ldr	r1, [pc, #60]	; (80141f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80141ba:	4810      	ldr	r0, [pc, #64]	; (80141fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80141bc:	f007 f9c0 	bl	801b540 <__aeabi_atexit>
 80141c0:	4c0f      	ldr	r4, [pc, #60]	; (8014200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80141c2:	7823      	ldrb	r3, [r4, #0]
 80141c4:	f3bf 8f5b 	dmb	ish
 80141c8:	07db      	lsls	r3, r3, #31
 80141ca:	d40b      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80141cc:	4620      	mov	r0, r4
 80141ce:	f007 f9c1 	bl	801b554 <__cxa_guard_acquire>
 80141d2:	b138      	cbz	r0, 80141e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80141d4:	4620      	mov	r0, r4
 80141d6:	f007 f9c9 	bl	801b56c <__cxa_guard_release>
 80141da:	4a06      	ldr	r2, [pc, #24]	; (80141f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80141dc:	4909      	ldr	r1, [pc, #36]	; (8014204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80141de:	480a      	ldr	r0, [pc, #40]	; (8014208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80141e0:	f007 f9ae 	bl	801b540 <__aeabi_atexit>
 80141e4:	4b05      	ldr	r3, [pc, #20]	; (80141fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80141e6:	65ab      	str	r3, [r5, #88]	; 0x58
 80141e8:	4b07      	ldr	r3, [pc, #28]	; (8014208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80141ea:	65eb      	str	r3, [r5, #92]	; 0x5c
 80141ec:	bd38      	pop	{r3, r4, r5, pc}
 80141ee:	bf00      	nop
 80141f0:	20008a2c 	.word	0x20008a2c
 80141f4:	20000000 	.word	0x20000000
 80141f8:	08012223 	.word	0x08012223
 80141fc:	2000002c 	.word	0x2000002c
 8014200:	20008a30 	.word	0x20008a30
 8014204:	08012221 	.word	0x08012221
 8014208:	20000030 	.word	0x20000030

0801420c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801420c:	b510      	push	{r4, lr}
 801420e:	4604      	mov	r4, r0
 8014210:	f7ff ff88 	bl	8014124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014214:	4620      	mov	r0, r4
 8014216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801421a:	f7ff bfbd 	b.w	8014198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014220:	b538      	push	{r3, r4, r5, lr}
 8014222:	4c15      	ldr	r4, [pc, #84]	; (8014278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014224:	7823      	ldrb	r3, [r4, #0]
 8014226:	f3bf 8f5b 	dmb	ish
 801422a:	07da      	lsls	r2, r3, #31
 801422c:	4605      	mov	r5, r0
 801422e:	d40b      	bmi.n	8014248 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014230:	4620      	mov	r0, r4
 8014232:	f007 f98f 	bl	801b554 <__cxa_guard_acquire>
 8014236:	b138      	cbz	r0, 8014248 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014238:	4620      	mov	r0, r4
 801423a:	f007 f997 	bl	801b56c <__cxa_guard_release>
 801423e:	4a0f      	ldr	r2, [pc, #60]	; (801427c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014240:	490f      	ldr	r1, [pc, #60]	; (8014280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014242:	4810      	ldr	r0, [pc, #64]	; (8014284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014244:	f007 f97c 	bl	801b540 <__aeabi_atexit>
 8014248:	4c0f      	ldr	r4, [pc, #60]	; (8014288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801424a:	7823      	ldrb	r3, [r4, #0]
 801424c:	f3bf 8f5b 	dmb	ish
 8014250:	07db      	lsls	r3, r3, #31
 8014252:	d40b      	bmi.n	801426c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014254:	4620      	mov	r0, r4
 8014256:	f007 f97d 	bl	801b554 <__cxa_guard_acquire>
 801425a:	b138      	cbz	r0, 801426c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801425c:	4620      	mov	r0, r4
 801425e:	f007 f985 	bl	801b56c <__cxa_guard_release>
 8014262:	4a06      	ldr	r2, [pc, #24]	; (801427c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014264:	4909      	ldr	r1, [pc, #36]	; (801428c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8014266:	480a      	ldr	r0, [pc, #40]	; (8014290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014268:	f007 f96a 	bl	801b540 <__aeabi_atexit>
 801426c:	4b05      	ldr	r3, [pc, #20]	; (8014284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801426e:	672b      	str	r3, [r5, #112]	; 0x70
 8014270:	4b07      	ldr	r3, [pc, #28]	; (8014290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014272:	676b      	str	r3, [r5, #116]	; 0x74
 8014274:	bd38      	pop	{r3, r4, r5, pc}
 8014276:	bf00      	nop
 8014278:	20008a24 	.word	0x20008a24
 801427c:	20000000 	.word	0x20000000
 8014280:	08012217 	.word	0x08012217
 8014284:	20000024 	.word	0x20000024
 8014288:	20008a28 	.word	0x20008a28
 801428c:	08012215 	.word	0x08012215
 8014290:	20000028 	.word	0x20000028

08014294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014294:	b538      	push	{r3, r4, r5, lr}
 8014296:	4c15      	ldr	r4, [pc, #84]	; (80142ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014298:	7823      	ldrb	r3, [r4, #0]
 801429a:	f3bf 8f5b 	dmb	ish
 801429e:	07da      	lsls	r2, r3, #31
 80142a0:	4605      	mov	r5, r0
 80142a2:	d40b      	bmi.n	80142bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80142a4:	4620      	mov	r0, r4
 80142a6:	f007 f955 	bl	801b554 <__cxa_guard_acquire>
 80142aa:	b138      	cbz	r0, 80142bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80142ac:	4620      	mov	r0, r4
 80142ae:	f007 f95d 	bl	801b56c <__cxa_guard_release>
 80142b2:	4a0f      	ldr	r2, [pc, #60]	; (80142f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80142b4:	490f      	ldr	r1, [pc, #60]	; (80142f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80142b6:	4810      	ldr	r0, [pc, #64]	; (80142f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80142b8:	f007 f942 	bl	801b540 <__aeabi_atexit>
 80142bc:	4c0f      	ldr	r4, [pc, #60]	; (80142fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80142be:	7823      	ldrb	r3, [r4, #0]
 80142c0:	f3bf 8f5b 	dmb	ish
 80142c4:	07db      	lsls	r3, r3, #31
 80142c6:	d40b      	bmi.n	80142e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80142c8:	4620      	mov	r0, r4
 80142ca:	f007 f943 	bl	801b554 <__cxa_guard_acquire>
 80142ce:	b138      	cbz	r0, 80142e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80142d0:	4620      	mov	r0, r4
 80142d2:	f007 f94b 	bl	801b56c <__cxa_guard_release>
 80142d6:	4a06      	ldr	r2, [pc, #24]	; (80142f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80142d8:	4909      	ldr	r1, [pc, #36]	; (8014300 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80142da:	480a      	ldr	r0, [pc, #40]	; (8014304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80142dc:	f007 f930 	bl	801b540 <__aeabi_atexit>
 80142e0:	4b05      	ldr	r3, [pc, #20]	; (80142f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80142e2:	66ab      	str	r3, [r5, #104]	; 0x68
 80142e4:	4b07      	ldr	r3, [pc, #28]	; (8014304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80142e6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80142e8:	bd38      	pop	{r3, r4, r5, pc}
 80142ea:	bf00      	nop
 80142ec:	20008a1c 	.word	0x20008a1c
 80142f0:	20000000 	.word	0x20000000
 80142f4:	0801221b 	.word	0x0801221b
 80142f8:	2000001c 	.word	0x2000001c
 80142fc:	20008a20 	.word	0x20008a20
 8014300:	08012219 	.word	0x08012219
 8014304:	20000020 	.word	0x20000020

08014308 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014308:	b510      	push	{r4, lr}
 801430a:	4604      	mov	r4, r0
 801430c:	f7ff ff88 	bl	8014220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014310:	4620      	mov	r0, r4
 8014312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014316:	f7ff bfbd 	b.w	8014294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801431a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801431a:	b510      	push	{r4, lr}
 801431c:	4604      	mov	r4, r0
 801431e:	f7ff fff3 	bl	8014308 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8014322:	4620      	mov	r0, r4
 8014324:	f7ff ff72 	bl	801420c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014328:	4620      	mov	r0, r4
 801432a:	f7ff fdf9 	bl	8013f20 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801432e:	4620      	mov	r0, r4
 8014330:	f7ff fcfa 	bl	8013d28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014334:	4620      	mov	r0, r4
 8014336:	f7ff fd75 	bl	8013e24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801433a:	4620      	mov	r0, r4
 801433c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014340:	f7ff bee0 	b.w	8014104 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014344:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014348:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801434c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014350:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8014354:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014358:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801435c:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014360:	8808      	ldrh	r0, [r1, #0]
 8014362:	fb0e 4708 	mla	r7, lr, r8, r4
 8014366:	f1be 0f00 	cmp.w	lr, #0
 801436a:	eb02 0a07 	add.w	sl, r2, r7
 801436e:	db37      	blt.n	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014370:	45f3      	cmp	fp, lr
 8014372:	dd35      	ble.n	80143e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014374:	2c00      	cmp	r4, #0
 8014376:	db31      	blt.n	80143dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014378:	45a0      	cmp	r8, r4
 801437a:	dd2f      	ble.n	80143dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801437c:	5dd2      	ldrb	r2, [r2, r7]
 801437e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8014382:	1c62      	adds	r2, r4, #1
 8014384:	d42f      	bmi.n	80143e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014386:	4590      	cmp	r8, r2
 8014388:	dd2d      	ble.n	80143e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801438a:	b366      	cbz	r6, 80143e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801438c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014390:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014394:	f11e 0e01 	adds.w	lr, lr, #1
 8014398:	d429      	bmi.n	80143ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801439a:	45f3      	cmp	fp, lr
 801439c:	dd27      	ble.n	80143ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801439e:	f1bc 0f00 	cmp.w	ip, #0
 80143a2:	f000 80a0 	beq.w	80144e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80143a6:	2c00      	cmp	r4, #0
 80143a8:	db1f      	blt.n	80143ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80143aa:	45a0      	cmp	r8, r4
 80143ac:	dd1d      	ble.n	80143ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80143ae:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80143b2:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80143b6:	3401      	adds	r4, #1
 80143b8:	d41c      	bmi.n	80143f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80143ba:	45a0      	cmp	r8, r4
 80143bc:	dd1a      	ble.n	80143f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80143be:	b1de      	cbz	r6, 80143f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80143c0:	44d0      	add	r8, sl
 80143c2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80143c6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80143ca:	2e0f      	cmp	r6, #15
 80143cc:	d915      	bls.n	80143fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80143ce:	4b49      	ldr	r3, [pc, #292]	; (80144f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80143d0:	4a49      	ldr	r2, [pc, #292]	; (80144f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80143d2:	484a      	ldr	r0, [pc, #296]	; (80144fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80143d4:	f240 11ef 	movw	r1, #495	; 0x1ef
 80143d8:	f007 f8e6 	bl	801b5a8 <__assert_func>
 80143dc:	4681      	mov	r9, r0
 80143de:	e7d0      	b.n	8014382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80143e0:	4607      	mov	r7, r0
 80143e2:	4681      	mov	r9, r0
 80143e4:	e7d6      	b.n	8014394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80143e6:	4607      	mov	r7, r0
 80143e8:	e7d4      	b.n	8014394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80143ea:	4686      	mov	lr, r0
 80143ec:	e7e3      	b.n	80143b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80143ee:	4603      	mov	r3, r0
 80143f0:	4686      	mov	lr, r0
 80143f2:	e7ea      	b.n	80143ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80143f4:	4603      	mov	r3, r0
 80143f6:	e7e8      	b.n	80143ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80143f8:	4603      	mov	r3, r0
 80143fa:	f1bc 0f0f 	cmp.w	ip, #15
 80143fe:	d8e6      	bhi.n	80143ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014400:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8014404:	fb16 f80c 	smulbb	r8, r6, ip
 8014408:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801440c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014410:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014414:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014418:	ea44 0909 	orr.w	r9, r4, r9
 801441c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014420:	f1cc 0410 	rsb	r4, ip, #16
 8014424:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014428:	1ba4      	subs	r4, r4, r6
 801442a:	041a      	lsls	r2, r3, #16
 801442c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014430:	ea4a 0707 	orr.w	r7, sl, r7
 8014434:	4377      	muls	r7, r6
 8014436:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801443a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801443e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014442:	fb04 7409 	mla	r4, r4, r9, r7
 8014446:	4313      	orrs	r3, r2
 8014448:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801444c:	fb08 4303 	mla	r3, r8, r3, r4
 8014450:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014454:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014458:	4322      	orrs	r2, r4
 801445a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801445e:	fb0c 3202 	mla	r2, ip, r2, r3
 8014462:	0d53      	lsrs	r3, r2, #21
 8014464:	0952      	lsrs	r2, r2, #5
 8014466:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801446a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801446e:	431a      	orrs	r2, r3
 8014470:	b293      	uxth	r3, r2
 8014472:	b2af      	uxth	r7, r5
 8014474:	1202      	asrs	r2, r0, #8
 8014476:	43ed      	mvns	r5, r5
 8014478:	b2ed      	uxtb	r5, r5
 801447a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801447e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014482:	fb12 f205 	smulbb	r2, r2, r5
 8014486:	10c6      	asrs	r6, r0, #3
 8014488:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801448c:	fb0c 2c07 	mla	ip, ip, r7, r2
 8014490:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014494:	10da      	asrs	r2, r3, #3
 8014496:	fb16 f605 	smulbb	r6, r6, r5
 801449a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801449e:	fb02 6207 	mla	r2, r2, r7, r6
 80144a2:	b296      	uxth	r6, r2
 80144a4:	00c2      	lsls	r2, r0, #3
 80144a6:	00dc      	lsls	r4, r3, #3
 80144a8:	b2d2      	uxtb	r2, r2
 80144aa:	b2e4      	uxtb	r4, r4
 80144ac:	fb12 f205 	smulbb	r2, r2, r5
 80144b0:	fb04 2207 	mla	r2, r4, r7, r2
 80144b4:	fa1f fc8c 	uxth.w	ip, ip
 80144b8:	b292      	uxth	r2, r2
 80144ba:	f10c 0301 	add.w	r3, ip, #1
 80144be:	1c50      	adds	r0, r2, #1
 80144c0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80144c4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80144c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80144cc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80144d0:	4313      	orrs	r3, r2
 80144d2:	1c72      	adds	r2, r6, #1
 80144d4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80144d8:	0952      	lsrs	r2, r2, #5
 80144da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80144de:	4313      	orrs	r3, r2
 80144e0:	800b      	strh	r3, [r1, #0]
 80144e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144e6:	2e0f      	cmp	r6, #15
 80144e8:	f63f af71 	bhi.w	80143ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80144ec:	4603      	mov	r3, r0
 80144ee:	4686      	mov	lr, r0
 80144f0:	e786      	b.n	8014400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80144f2:	bf00      	nop
 80144f4:	0801f4ba 	.word	0x0801f4ba
 80144f8:	0801fb22 	.word	0x0801fb22
 80144fc:	0801f5a3 	.word	0x0801f5a3

08014500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014504:	ed2d 8b08 	vpush	{d8-d11}
 8014508:	b099      	sub	sp, #100	; 0x64
 801450a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801450e:	9215      	str	r2, [sp, #84]	; 0x54
 8014510:	9309      	str	r3, [sp, #36]	; 0x24
 8014512:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014514:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014518:	930d      	str	r3, [sp, #52]	; 0x34
 801451a:	910c      	str	r1, [sp, #48]	; 0x30
 801451c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014520:	9016      	str	r0, [sp, #88]	; 0x58
 8014522:	6850      	ldr	r0, [r2, #4]
 8014524:	6812      	ldr	r2, [r2, #0]
 8014526:	fb00 1303 	mla	r3, r0, r3, r1
 801452a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801452e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014530:	681b      	ldr	r3, [r3, #0]
 8014532:	930b      	str	r3, [sp, #44]	; 0x2c
 8014534:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014536:	685e      	ldr	r6, [r3, #4]
 8014538:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801453a:	43db      	mvns	r3, r3
 801453c:	b2db      	uxtb	r3, r3
 801453e:	eeb0 aa40 	vmov.f32	s20, s0
 8014542:	eef0 9a60 	vmov.f32	s19, s1
 8014546:	eeb0 9a41 	vmov.f32	s18, s2
 801454a:	eeb0 8a62 	vmov.f32	s16, s5
 801454e:	eef0 8a43 	vmov.f32	s17, s6
 8014552:	eef0 ba44 	vmov.f32	s23, s8
 8014556:	eeb0 ba64 	vmov.f32	s22, s9
 801455a:	eef0 aa45 	vmov.f32	s21, s10
 801455e:	3604      	adds	r6, #4
 8014560:	930a      	str	r3, [sp, #40]	; 0x28
 8014562:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014564:	2b00      	cmp	r3, #0
 8014566:	dc03      	bgt.n	8014570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014568:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801456a:	2b00      	cmp	r3, #0
 801456c:	f340 8226 	ble.w	80149bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8014570:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014572:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014576:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801457a:	1e48      	subs	r0, r1, #1
 801457c:	1e57      	subs	r7, r2, #1
 801457e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014580:	2b00      	cmp	r3, #0
 8014582:	f340 80e4 	ble.w	801474e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8014586:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801458a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801458e:	d406      	bmi.n	801459e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014590:	4584      	cmp	ip, r0
 8014592:	da04      	bge.n	801459e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014594:	2b00      	cmp	r3, #0
 8014596:	db02      	blt.n	801459e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014598:	42bb      	cmp	r3, r7
 801459a:	f2c0 80d9 	blt.w	8014750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801459e:	f11c 0c01 	adds.w	ip, ip, #1
 80145a2:	f100 80ca 	bmi.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80145a6:	4561      	cmp	r1, ip
 80145a8:	f2c0 80c7 	blt.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80145ac:	3301      	adds	r3, #1
 80145ae:	f100 80c4 	bmi.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80145b2:	429a      	cmp	r2, r3
 80145b4:	f2c0 80c1 	blt.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80145b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80145bc:	4647      	mov	r7, r8
 80145be:	f1bb 0f00 	cmp.w	fp, #0
 80145c2:	f340 80e4 	ble.w	801478e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80145c6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80145c8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80145ca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80145ce:	689b      	ldr	r3, [r3, #8]
 80145d0:	ea5f 422a 	movs.w	r2, sl, asr #16
 80145d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80145d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80145dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80145e0:	f100 8122 	bmi.w	8014828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80145e4:	f103 39ff 	add.w	r9, r3, #4294967295
 80145e8:	454a      	cmp	r2, r9
 80145ea:	f280 811d 	bge.w	8014828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80145ee:	f1bc 0f00 	cmp.w	ip, #0
 80145f2:	f2c0 8119 	blt.w	8014828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80145f6:	f10e 39ff 	add.w	r9, lr, #4294967295
 80145fa:	45cc      	cmp	ip, r9
 80145fc:	f280 8114 	bge.w	8014828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8014600:	b21b      	sxth	r3, r3
 8014602:	fb0c 2203 	mla	r2, ip, r3, r2
 8014606:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014608:	eb04 0902 	add.w	r9, r4, r2
 801460c:	5ca2      	ldrb	r2, [r4, r2]
 801460e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014612:	2800      	cmp	r0, #0
 8014614:	f000 80ff 	beq.w	8014816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8014618:	f899 2001 	ldrb.w	r2, [r9, #1]
 801461c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014620:	9211      	str	r2, [sp, #68]	; 0x44
 8014622:	b151      	cbz	r1, 801463a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014624:	eb09 0203 	add.w	r2, r9, r3
 8014628:	f819 3003 	ldrb.w	r3, [r9, r3]
 801462c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014630:	930f      	str	r3, [sp, #60]	; 0x3c
 8014632:	7853      	ldrb	r3, [r2, #1]
 8014634:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014638:	9312      	str	r3, [sp, #72]	; 0x48
 801463a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801463c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801463e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014642:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014646:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801464a:	ea4c 0c03 	orr.w	ip, ip, r3
 801464e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014650:	041b      	lsls	r3, r3, #16
 8014652:	fb10 f201 	smulbb	r2, r0, r1
 8014656:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801465a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801465e:	10d2      	asrs	r2, r2, #3
 8014660:	4323      	orrs	r3, r4
 8014662:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014666:	4353      	muls	r3, r2
 8014668:	fb09 330c 	mla	r3, r9, ip, r3
 801466c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014670:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014674:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014678:	ea4c 0e0e 	orr.w	lr, ip, lr
 801467c:	f1c1 0c10 	rsb	ip, r1, #16
 8014680:	ebac 0c00 	sub.w	ip, ip, r0
 8014684:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014688:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801468c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801468e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014690:	0418      	lsls	r0, r3, #16
 8014692:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014696:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801469a:	4318      	orrs	r0, r3
 801469c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80146a0:	fb02 c200 	mla	r2, r2, r0, ip
 80146a4:	0d53      	lsrs	r3, r2, #21
 80146a6:	0952      	lsrs	r2, r2, #5
 80146a8:	f8b7 c000 	ldrh.w	ip, [r7]
 80146ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80146b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80146b4:	431a      	orrs	r2, r3
 80146b6:	b292      	uxth	r2, r2
 80146b8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80146bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80146c0:	1210      	asrs	r0, r2, #8
 80146c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80146c6:	fb11 f104 	smulbb	r1, r1, r4
 80146ca:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80146ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80146d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80146d6:	fb00 1003 	mla	r0, r0, r3, r1
 80146da:	fa5f fc8c 	uxtb.w	ip, ip
 80146de:	10d1      	asrs	r1, r2, #3
 80146e0:	00d2      	lsls	r2, r2, #3
 80146e2:	fb1c fc04 	smulbb	ip, ip, r4
 80146e6:	b2d2      	uxtb	r2, r2
 80146e8:	fb02 c203 	mla	r2, r2, r3, ip
 80146ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80146f0:	b280      	uxth	r0, r0
 80146f2:	b292      	uxth	r2, r2
 80146f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80146f8:	fb1e fe04 	smulbb	lr, lr, r4
 80146fc:	fb01 e103 	mla	r1, r1, r3, lr
 8014700:	f102 0c01 	add.w	ip, r2, #1
 8014704:	1c43      	adds	r3, r0, #1
 8014706:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801470a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801470e:	b289      	uxth	r1, r1
 8014710:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014714:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014718:	4313      	orrs	r3, r2
 801471a:	1c4a      	adds	r2, r1, #1
 801471c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014720:	0949      	lsrs	r1, r1, #5
 8014722:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014726:	430b      	orrs	r3, r1
 8014728:	803b      	strh	r3, [r7, #0]
 801472a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801472c:	449a      	add	sl, r3
 801472e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014730:	3702      	adds	r7, #2
 8014732:	441d      	add	r5, r3
 8014734:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014738:	e741      	b.n	80145be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801473a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801473c:	449a      	add	sl, r3
 801473e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014740:	441d      	add	r5, r3
 8014742:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014744:	3b01      	subs	r3, #1
 8014746:	9309      	str	r3, [sp, #36]	; 0x24
 8014748:	f108 0802 	add.w	r8, r8, #2
 801474c:	e717      	b.n	801457e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801474e:	d023      	beq.n	8014798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8014750:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014752:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014754:	3b01      	subs	r3, #1
 8014756:	fb00 a003 	mla	r0, r0, r3, sl
 801475a:	1400      	asrs	r0, r0, #16
 801475c:	f53f af2c 	bmi.w	80145b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014760:	3901      	subs	r1, #1
 8014762:	4288      	cmp	r0, r1
 8014764:	f6bf af28 	bge.w	80145b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014768:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801476a:	fb01 5303 	mla	r3, r1, r3, r5
 801476e:	141b      	asrs	r3, r3, #16
 8014770:	f53f af22 	bmi.w	80145b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014774:	3a01      	subs	r2, #1
 8014776:	4293      	cmp	r3, r2
 8014778:	f6bf af1e 	bge.w	80145b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801477c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014780:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014784:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014788:	f1be 0f00 	cmp.w	lr, #0
 801478c:	dc6c      	bgt.n	8014868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801478e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014790:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014794:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801479a:	2b00      	cmp	r3, #0
 801479c:	f340 810e 	ble.w	80149bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80147a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80147a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80147a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80147ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80147b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80147b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80147ba:	eef0 6a48 	vmov.f32	s13, s16
 80147be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80147c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80147ca:	ee16 aa90 	vmov	sl, s13
 80147ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80147d2:	eef0 6a68 	vmov.f32	s13, s17
 80147d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80147da:	ee18 2a10 	vmov	r2, s16
 80147de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80147e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80147e6:	ee18 2a90 	vmov	r2, s17
 80147ea:	932d      	str	r3, [sp, #180]	; 0xb4
 80147ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80147f2:	932e      	str	r3, [sp, #184]	; 0xb8
 80147f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147f6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80147f8:	3b01      	subs	r3, #1
 80147fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147fe:	930c      	str	r3, [sp, #48]	; 0x30
 8014800:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014802:	bf08      	it	eq
 8014804:	4613      	moveq	r3, r2
 8014806:	ee16 5a90 	vmov	r5, s13
 801480a:	9309      	str	r3, [sp, #36]	; 0x24
 801480c:	eef0 8a67 	vmov.f32	s17, s15
 8014810:	eeb0 8a47 	vmov.f32	s16, s14
 8014814:	e6a5      	b.n	8014562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014816:	2900      	cmp	r1, #0
 8014818:	f43f af0f 	beq.w	801463a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801481c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014820:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014824:	930f      	str	r3, [sp, #60]	; 0x3c
 8014826:	e708      	b.n	801463a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014828:	f112 0901 	adds.w	r9, r2, #1
 801482c:	f53f af7d 	bmi.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014830:	454b      	cmp	r3, r9
 8014832:	f6ff af7a 	blt.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014836:	f11c 0901 	adds.w	r9, ip, #1
 801483a:	f53f af76 	bmi.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801483e:	45ce      	cmp	lr, r9
 8014840:	f6ff af73 	blt.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014844:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014846:	9202      	str	r2, [sp, #8]
 8014848:	b21b      	sxth	r3, r3
 801484a:	fa0f f28e 	sxth.w	r2, lr
 801484e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014852:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014856:	9201      	str	r2, [sp, #4]
 8014858:	9300      	str	r3, [sp, #0]
 801485a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801485c:	9816      	ldr	r0, [sp, #88]	; 0x58
 801485e:	4633      	mov	r3, r6
 8014860:	4639      	mov	r1, r7
 8014862:	f7ff fd6f 	bl	8014344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014866:	e760      	b.n	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014868:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801486a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801486c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014870:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014874:	1429      	asrs	r1, r5, #16
 8014876:	fb03 2101 	mla	r1, r3, r1, r2
 801487a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801487c:	440a      	add	r2, r1
 801487e:	5c61      	ldrb	r1, [r4, r1]
 8014880:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014884:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014888:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801488c:	f1bc 0f00 	cmp.w	ip, #0
 8014890:	f000 808c 	beq.w	80149ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8014894:	7857      	ldrb	r7, [r2, #1]
 8014896:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801489a:	9413      	str	r4, [sp, #76]	; 0x4c
 801489c:	b140      	cbz	r0, 80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801489e:	18d7      	adds	r7, r2, r3
 80148a0:	5cd3      	ldrb	r3, [r2, r3]
 80148a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80148a6:	9310      	str	r3, [sp, #64]	; 0x40
 80148a8:	787b      	ldrb	r3, [r7, #1]
 80148aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80148ae:	9314      	str	r3, [sp, #80]	; 0x50
 80148b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80148b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80148b4:	fb1c f200 	smulbb	r2, ip, r0
 80148b8:	041f      	lsls	r7, r3, #16
 80148ba:	10d2      	asrs	r2, r2, #3
 80148bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80148c0:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80148c4:	431f      	orrs	r7, r3
 80148c6:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80148ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80148cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80148ce:	041b      	lsls	r3, r3, #16
 80148d0:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80148d4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80148d8:	ea43 030b 	orr.w	r3, r3, fp
 80148dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80148de:	4353      	muls	r3, r2
 80148e0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80148e4:	fb04 3707 	mla	r7, r4, r7, r3
 80148e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80148ec:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80148f0:	ea43 0b01 	orr.w	fp, r3, r1
 80148f4:	f1c0 0110 	rsb	r1, r0, #16
 80148f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80148fc:	eba1 0c0c 	sub.w	ip, r1, ip
 8014900:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014904:	fb0c 770b 	mla	r7, ip, fp, r7
 8014908:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801490c:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014910:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014914:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014918:	ea4c 0c0b 	orr.w	ip, ip, fp
 801491c:	fb02 770c 	mla	r7, r2, ip, r7
 8014920:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014922:	0d79      	lsrs	r1, r7, #21
 8014924:	097f      	lsrs	r7, r7, #5
 8014926:	8812      	ldrh	r2, [r2, #0]
 8014928:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801492c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014930:	430f      	orrs	r7, r1
 8014932:	b2bb      	uxth	r3, r7
 8014934:	1211      	asrs	r1, r2, #8
 8014936:	1218      	asrs	r0, r3, #8
 8014938:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801493c:	fb11 f104 	smulbb	r1, r1, r4
 8014940:	10d7      	asrs	r7, r2, #3
 8014942:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014946:	00d2      	lsls	r2, r2, #3
 8014948:	fb00 1009 	mla	r0, r0, r9, r1
 801494c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014950:	10d9      	asrs	r1, r3, #3
 8014952:	b2d2      	uxtb	r2, r2
 8014954:	00db      	lsls	r3, r3, #3
 8014956:	fb17 f704 	smulbb	r7, r7, r4
 801495a:	fb12 f204 	smulbb	r2, r2, r4
 801495e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014962:	b2db      	uxtb	r3, r3
 8014964:	b280      	uxth	r0, r0
 8014966:	fb01 7109 	mla	r1, r1, r9, r7
 801496a:	fb03 2309 	mla	r3, r3, r9, r2
 801496e:	b29b      	uxth	r3, r3
 8014970:	b289      	uxth	r1, r1
 8014972:	1c42      	adds	r2, r0, #1
 8014974:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014978:	1c4f      	adds	r7, r1, #1
 801497a:	1c5a      	adds	r2, r3, #1
 801497c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014980:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014984:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014988:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801498c:	0949      	lsrs	r1, r1, #5
 801498e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014990:	4310      	orrs	r0, r2
 8014992:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014996:	4308      	orrs	r0, r1
 8014998:	f823 0b02 	strh.w	r0, [r3], #2
 801499c:	930e      	str	r3, [sp, #56]	; 0x38
 801499e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80149a0:	449a      	add	sl, r3
 80149a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80149a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80149a8:	441d      	add	r5, r3
 80149aa:	e6ed      	b.n	8014788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80149ac:	2800      	cmp	r0, #0
 80149ae:	f43f af7f 	beq.w	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80149b2:	5cd3      	ldrb	r3, [r2, r3]
 80149b4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80149b8:	9310      	str	r3, [sp, #64]	; 0x40
 80149ba:	e779      	b.n	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80149bc:	b019      	add	sp, #100	; 0x64
 80149be:	ecbd 8b08 	vpop	{d8-d11}
 80149c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080149c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80149c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80149cc:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80149d0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80149d4:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80149d8:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80149dc:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80149e0:	8808      	ldrh	r0, [r1, #0]
 80149e2:	fb06 570e 	mla	r7, r6, lr, r5
 80149e6:	2e00      	cmp	r6, #0
 80149e8:	eb02 0807 	add.w	r8, r2, r7
 80149ec:	db38      	blt.n	8014a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80149ee:	45b1      	cmp	r9, r6
 80149f0:	dd36      	ble.n	8014a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80149f2:	2d00      	cmp	r5, #0
 80149f4:	db32      	blt.n	8014a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80149f6:	45ae      	cmp	lr, r5
 80149f8:	dd30      	ble.n	8014a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80149fa:	5dd2      	ldrb	r2, [r2, r7]
 80149fc:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014a00:	1c6a      	adds	r2, r5, #1
 8014a02:	d430      	bmi.n	8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a04:	4596      	cmp	lr, r2
 8014a06:	dd2e      	ble.n	8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a08:	b36c      	cbz	r4, 8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a0a:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014a0e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014a12:	3601      	adds	r6, #1
 8014a14:	d42b      	bmi.n	8014a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014a16:	45b1      	cmp	r9, r6
 8014a18:	dd29      	ble.n	8014a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014a1a:	f1bc 0f00 	cmp.w	ip, #0
 8014a1e:	d028      	beq.n	8014a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014a20:	2d00      	cmp	r5, #0
 8014a22:	db22      	blt.n	8014a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014a24:	45ae      	cmp	lr, r5
 8014a26:	dd20      	ble.n	8014a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014a28:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014a2c:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014a30:	3501      	adds	r5, #1
 8014a32:	d407      	bmi.n	8014a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a34:	45ae      	cmp	lr, r5
 8014a36:	dd05      	ble.n	8014a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a38:	b134      	cbz	r4, 8014a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014a3a:	44c6      	add	lr, r8
 8014a3c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014a40:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014a44:	2c0f      	cmp	r4, #15
 8014a46:	d802      	bhi.n	8014a4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014a48:	f1bc 0f0f 	cmp.w	ip, #15
 8014a4c:	d914      	bls.n	8014a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014a4e:	4b26      	ldr	r3, [pc, #152]	; (8014ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014a50:	4a26      	ldr	r2, [pc, #152]	; (8014aec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014a52:	4827      	ldr	r0, [pc, #156]	; (8014af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014a54:	f240 11ef 	movw	r1, #495	; 0x1ef
 8014a58:	f006 fda6 	bl	801b5a8 <__assert_func>
 8014a5c:	4607      	mov	r7, r0
 8014a5e:	e7cf      	b.n	8014a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014a60:	4602      	mov	r2, r0
 8014a62:	4607      	mov	r7, r0
 8014a64:	e7d5      	b.n	8014a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014a66:	4602      	mov	r2, r0
 8014a68:	e7d3      	b.n	8014a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014a6a:	4606      	mov	r6, r0
 8014a6c:	e7e0      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014a6e:	4606      	mov	r6, r0
 8014a70:	e7e8      	b.n	8014a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a72:	2c0f      	cmp	r4, #15
 8014a74:	d8eb      	bhi.n	8014a4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014a76:	4606      	mov	r6, r0
 8014a78:	043d      	lsls	r5, r7, #16
 8014a7a:	fb14 f30c 	smulbb	r3, r4, ip
 8014a7e:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014a82:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014a86:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014a8a:	10db      	asrs	r3, r3, #3
 8014a8c:	432f      	orrs	r7, r5
 8014a8e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014a92:	f1cc 0510 	rsb	r5, ip, #16
 8014a96:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014a9a:	1b2d      	subs	r5, r5, r4
 8014a9c:	ea4e 0202 	orr.w	r2, lr, r2
 8014aa0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014aa4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014aa8:	4354      	muls	r4, r2
 8014aaa:	fb05 4507 	mla	r5, r5, r7, r4
 8014aae:	0404      	lsls	r4, r0, #16
 8014ab0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014ab4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014ab8:	4320      	orrs	r0, r4
 8014aba:	fb03 5400 	mla	r4, r3, r0, r5
 8014abe:	0430      	lsls	r0, r6, #16
 8014ac0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ac4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014ac8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014acc:	4330      	orrs	r0, r6
 8014ace:	fb03 4000 	mla	r0, r3, r0, r4
 8014ad2:	0d43      	lsrs	r3, r0, #21
 8014ad4:	0940      	lsrs	r0, r0, #5
 8014ad6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014ada:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014ade:	4318      	orrs	r0, r3
 8014ae0:	8008      	strh	r0, [r1, #0]
 8014ae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014ae6:	bf00      	nop
 8014ae8:	0801f4ba 	.word	0x0801f4ba
 8014aec:	0801fb22 	.word	0x0801fb22
 8014af0:	0801f5a3 	.word	0x0801f5a3

08014af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014af8:	ed2d 8b0a 	vpush	{d8-d12}
 8014afc:	b093      	sub	sp, #76	; 0x4c
 8014afe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8014b02:	920f      	str	r2, [sp, #60]	; 0x3c
 8014b04:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014b06:	9108      	str	r1, [sp, #32]
 8014b08:	9306      	str	r3, [sp, #24]
 8014b0a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014b0e:	9010      	str	r0, [sp, #64]	; 0x40
 8014b10:	6850      	ldr	r0, [r2, #4]
 8014b12:	6812      	ldr	r2, [r2, #0]
 8014b14:	fb00 1303 	mla	r3, r0, r3, r1
 8014b18:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014b1c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b1e:	681b      	ldr	r3, [r3, #0]
 8014b20:	9307      	str	r3, [sp, #28]
 8014b22:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b24:	685f      	ldr	r7, [r3, #4]
 8014b26:	eeb0 aa40 	vmov.f32	s20, s0
 8014b2a:	eef0 9a60 	vmov.f32	s19, s1
 8014b2e:	eeb0 9a41 	vmov.f32	s18, s2
 8014b32:	eeb0 8a62 	vmov.f32	s16, s5
 8014b36:	eef0 8a43 	vmov.f32	s17, s6
 8014b3a:	eeb0 ca44 	vmov.f32	s24, s8
 8014b3e:	eef0 ba64 	vmov.f32	s23, s9
 8014b42:	eeb0 ba45 	vmov.f32	s22, s10
 8014b46:	3704      	adds	r7, #4
 8014b48:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014b4c:	9b08      	ldr	r3, [sp, #32]
 8014b4e:	2b00      	cmp	r3, #0
 8014b50:	dc03      	bgt.n	8014b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014b52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014b54:	2b00      	cmp	r3, #0
 8014b56:	f340 81b2 	ble.w	8014ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014b5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014b60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014b64:	1e48      	subs	r0, r1, #1
 8014b66:	f102 3cff 	add.w	ip, r2, #4294967295
 8014b6a:	9b06      	ldr	r3, [sp, #24]
 8014b6c:	2b00      	cmp	r3, #0
 8014b6e:	f340 80a9 	ble.w	8014cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8014b72:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8014b76:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014b7a:	d406      	bmi.n	8014b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b7c:	4586      	cmp	lr, r0
 8014b7e:	da04      	bge.n	8014b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b80:	2b00      	cmp	r3, #0
 8014b82:	db02      	blt.n	8014b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b84:	4563      	cmp	r3, ip
 8014b86:	f2c0 809e 	blt.w	8014cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014b8a:	f11e 0e01 	adds.w	lr, lr, #1
 8014b8e:	f100 808f 	bmi.w	8014cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014b92:	4571      	cmp	r1, lr
 8014b94:	f2c0 808c 	blt.w	8014cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014b98:	3301      	adds	r3, #1
 8014b9a:	f100 8089 	bmi.w	8014cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014b9e:	429a      	cmp	r2, r3
 8014ba0:	f2c0 8086 	blt.w	8014cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ba4:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014ba8:	46c8      	mov	r8, r9
 8014baa:	f1bb 0f00 	cmp.w	fp, #0
 8014bae:	f340 80a6 	ble.w	8014cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8014bb2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014bb4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014bb6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014bba:	689b      	ldr	r3, [r3, #8]
 8014bbc:	1422      	asrs	r2, r4, #16
 8014bbe:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8014bc2:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8014bc6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014bca:	f100 80e3 	bmi.w	8014d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bce:	f103 3aff 	add.w	sl, r3, #4294967295
 8014bd2:	4552      	cmp	r2, sl
 8014bd4:	f280 80de 	bge.w	8014d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bd8:	f1bc 0f00 	cmp.w	ip, #0
 8014bdc:	f2c0 80da 	blt.w	8014d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014be0:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014be4:	45d4      	cmp	ip, sl
 8014be6:	f280 80d5 	bge.w	8014d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bea:	b21b      	sxth	r3, r3
 8014bec:	fb0c 2203 	mla	r2, ip, r3, r2
 8014bf0:	9d07      	ldr	r5, [sp, #28]
 8014bf2:	eb05 0a02 	add.w	sl, r5, r2
 8014bf6:	5caa      	ldrb	r2, [r5, r2]
 8014bf8:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014bfc:	2800      	cmp	r0, #0
 8014bfe:	f000 80c0 	beq.w	8014d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8014c02:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014c06:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014c0a:	920b      	str	r2, [sp, #44]	; 0x2c
 8014c0c:	b151      	cbz	r1, 8014c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014c0e:	eb0a 0203 	add.w	r2, sl, r3
 8014c12:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014c16:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c1a:	9309      	str	r3, [sp, #36]	; 0x24
 8014c1c:	7853      	ldrb	r3, [r2, #1]
 8014c1e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c22:	930c      	str	r3, [sp, #48]	; 0x30
 8014c24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c26:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014c28:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014c2c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c34:	ea4c 0c03 	orr.w	ip, ip, r3
 8014c38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c3a:	041b      	lsls	r3, r3, #16
 8014c3c:	fb10 f201 	smulbb	r2, r0, r1
 8014c40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014c44:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014c48:	10d2      	asrs	r2, r2, #3
 8014c4a:	432b      	orrs	r3, r5
 8014c4c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8014c50:	4353      	muls	r3, r2
 8014c52:	fb0a 330c 	mla	r3, sl, ip, r3
 8014c56:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014c5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c5e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014c62:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014c66:	f1c1 0c10 	rsb	ip, r1, #16
 8014c6a:	ebac 0c00 	sub.w	ip, ip, r0
 8014c6e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014c72:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014c76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c78:	0418      	lsls	r0, r3, #16
 8014c7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014c7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c82:	4318      	orrs	r0, r3
 8014c84:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014c88:	fb02 c200 	mla	r2, r2, r0, ip
 8014c8c:	0d53      	lsrs	r3, r2, #21
 8014c8e:	0952      	lsrs	r2, r2, #5
 8014c90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014c94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014c98:	431a      	orrs	r2, r3
 8014c9a:	f8a8 2000 	strh.w	r2, [r8]
 8014c9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ca0:	441c      	add	r4, r3
 8014ca2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ca4:	f108 0802 	add.w	r8, r8, #2
 8014ca8:	441e      	add	r6, r3
 8014caa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014cae:	e77c      	b.n	8014baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014cb0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014cb2:	441c      	add	r4, r3
 8014cb4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cb6:	441e      	add	r6, r3
 8014cb8:	9b06      	ldr	r3, [sp, #24]
 8014cba:	3b01      	subs	r3, #1
 8014cbc:	9306      	str	r3, [sp, #24]
 8014cbe:	f109 0902 	add.w	r9, r9, #2
 8014cc2:	e752      	b.n	8014b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014cc4:	d020      	beq.n	8014d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014cc6:	9b06      	ldr	r3, [sp, #24]
 8014cc8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014cca:	3b01      	subs	r3, #1
 8014ccc:	fb00 4003 	mla	r0, r0, r3, r4
 8014cd0:	1400      	asrs	r0, r0, #16
 8014cd2:	f53f af67 	bmi.w	8014ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cd6:	3901      	subs	r1, #1
 8014cd8:	4288      	cmp	r0, r1
 8014cda:	f6bf af63 	bge.w	8014ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014ce0:	fb01 6303 	mla	r3, r1, r3, r6
 8014ce4:	141b      	asrs	r3, r3, #16
 8014ce6:	f53f af5d 	bmi.w	8014ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cea:	3a01      	subs	r2, #1
 8014cec:	4293      	cmp	r3, r2
 8014cee:	f6bf af59 	bge.w	8014ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cf2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014cf6:	46ca      	mov	sl, r9
 8014cf8:	f1b8 0f00 	cmp.w	r8, #0
 8014cfc:	dc67      	bgt.n	8014dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8014cfe:	9b06      	ldr	r3, [sp, #24]
 8014d00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014d04:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014d08:	9b08      	ldr	r3, [sp, #32]
 8014d0a:	2b00      	cmp	r3, #0
 8014d0c:	f340 80d7 	ble.w	8014ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014d10:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014d14:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014d18:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014d1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d1e:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014d22:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014d26:	eef0 6a48 	vmov.f32	s13, s16
 8014d2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d32:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014d36:	ee16 4a90 	vmov	r4, s13
 8014d3a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014d3e:	eef0 6a68 	vmov.f32	s13, s17
 8014d42:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014d46:	ee18 2a10 	vmov	r2, s16
 8014d4a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014d4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d52:	ee18 2a90 	vmov	r2, s17
 8014d56:	9329      	str	r3, [sp, #164]	; 0xa4
 8014d58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d5e:	932a      	str	r3, [sp, #168]	; 0xa8
 8014d60:	9b08      	ldr	r3, [sp, #32]
 8014d62:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014d64:	3b01      	subs	r3, #1
 8014d66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d6a:	9308      	str	r3, [sp, #32]
 8014d6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d6e:	bf08      	it	eq
 8014d70:	4613      	moveq	r3, r2
 8014d72:	ee16 6a90 	vmov	r6, s13
 8014d76:	9306      	str	r3, [sp, #24]
 8014d78:	eef0 8a67 	vmov.f32	s17, s15
 8014d7c:	eeb0 8a47 	vmov.f32	s16, s14
 8014d80:	e6e4      	b.n	8014b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014d82:	2900      	cmp	r1, #0
 8014d84:	f43f af4e 	beq.w	8014c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014d88:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014d8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014d90:	9309      	str	r3, [sp, #36]	; 0x24
 8014d92:	e747      	b.n	8014c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014d94:	f112 0a01 	adds.w	sl, r2, #1
 8014d98:	d481      	bmi.n	8014c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014d9a:	4553      	cmp	r3, sl
 8014d9c:	f6ff af7f 	blt.w	8014c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014da0:	f11c 0a01 	adds.w	sl, ip, #1
 8014da4:	f53f af7b 	bmi.w	8014c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014da8:	45d6      	cmp	lr, sl
 8014daa:	f6ff af78 	blt.w	8014c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014dae:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8014db2:	b21b      	sxth	r3, r3
 8014db4:	fa0f f28e 	sxth.w	r2, lr
 8014db8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014dbc:	9201      	str	r2, [sp, #4]
 8014dbe:	9300      	str	r3, [sp, #0]
 8014dc0:	9a07      	ldr	r2, [sp, #28]
 8014dc2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014dc4:	463b      	mov	r3, r7
 8014dc6:	4641      	mov	r1, r8
 8014dc8:	f7ff fdfe 	bl	80149c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014dcc:	e767      	b.n	8014c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014dce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014dd0:	9d07      	ldr	r5, [sp, #28]
 8014dd2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014dd6:	1422      	asrs	r2, r4, #16
 8014dd8:	1431      	asrs	r1, r6, #16
 8014dda:	fb03 2101 	mla	r1, r3, r1, r2
 8014dde:	9a07      	ldr	r2, [sp, #28]
 8014de0:	440a      	add	r2, r1
 8014de2:	5c69      	ldrb	r1, [r5, r1]
 8014de4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014de8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014dec:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8014df0:	f1be 0f00 	cmp.w	lr, #0
 8014df4:	d05c      	beq.n	8014eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8014df6:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014dfa:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8014dfe:	950d      	str	r5, [sp, #52]	; 0x34
 8014e00:	b150      	cbz	r0, 8014e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014e02:	eb02 0c03 	add.w	ip, r2, r3
 8014e06:	5cd3      	ldrb	r3, [r2, r3]
 8014e08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014e0c:	930a      	str	r3, [sp, #40]	; 0x28
 8014e0e:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014e12:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014e16:	930e      	str	r3, [sp, #56]	; 0x38
 8014e18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014e1c:	fb1e f200 	smulbb	r2, lr, r0
 8014e20:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014e24:	10d2      	asrs	r2, r2, #3
 8014e26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014e2a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014e2e:	ea4c 0c03 	orr.w	ip, ip, r3
 8014e32:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014e36:	9311      	str	r3, [sp, #68]	; 0x44
 8014e38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e3a:	041b      	lsls	r3, r3, #16
 8014e3c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014e40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014e44:	ea43 030b 	orr.w	r3, r3, fp
 8014e48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014e4a:	4353      	muls	r3, r2
 8014e4c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014e50:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014e54:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014e58:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014e5c:	ea43 0b01 	orr.w	fp, r3, r1
 8014e60:	f1c0 0110 	rsb	r1, r0, #16
 8014e64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014e66:	eba1 0e0e 	sub.w	lr, r1, lr
 8014e6a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014e6e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014e72:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014e76:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014e7a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014e7e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014e82:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014e86:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014e8a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014e8e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014e92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014e96:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014e9a:	ea43 0c0c 	orr.w	ip, r3, ip
 8014e9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ea0:	f82a cb02 	strh.w	ip, [sl], #2
 8014ea4:	441c      	add	r4, r3
 8014ea6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ea8:	f108 38ff 	add.w	r8, r8, #4294967295
 8014eac:	441e      	add	r6, r3
 8014eae:	e723      	b.n	8014cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014eb0:	2800      	cmp	r0, #0
 8014eb2:	d0b1      	beq.n	8014e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014eb4:	5cd3      	ldrb	r3, [r2, r3]
 8014eb6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014eba:	930a      	str	r3, [sp, #40]	; 0x28
 8014ebc:	e7ac      	b.n	8014e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014ebe:	b013      	add	sp, #76	; 0x4c
 8014ec0:	ecbd 8b0a 	vpop	{d8-d12}
 8014ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ecc:	468b      	mov	fp, r1
 8014ece:	8809      	ldrh	r1, [r1, #0]
 8014ed0:	b089      	sub	sp, #36	; 0x24
 8014ed2:	10cd      	asrs	r5, r1, #3
 8014ed4:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014ed8:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014edc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014ee0:	00c9      	lsls	r1, r1, #3
 8014ee2:	9500      	str	r5, [sp, #0]
 8014ee4:	b2c9      	uxtb	r1, r1
 8014ee6:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014eea:	9101      	str	r1, [sp, #4]
 8014eec:	9900      	ldr	r1, [sp, #0]
 8014eee:	9202      	str	r2, [sp, #8]
 8014ef0:	fb04 650e 	mla	r5, r4, lr, r6
 8014ef4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014ef8:	eb02 0805 	add.w	r8, r2, r5
 8014efc:	0209      	lsls	r1, r1, #8
 8014efe:	9a01      	ldr	r2, [sp, #4]
 8014f00:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014f04:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014f08:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014f0c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014f10:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014f14:	4311      	orrs	r1, r2
 8014f16:	2c00      	cmp	r4, #0
 8014f18:	9107      	str	r1, [sp, #28]
 8014f1a:	db43      	blt.n	8014fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014f1c:	45a2      	cmp	sl, r4
 8014f1e:	dd41      	ble.n	8014fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014f20:	2e00      	cmp	r6, #0
 8014f22:	db3d      	blt.n	8014fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014f24:	45b6      	cmp	lr, r6
 8014f26:	dd3b      	ble.n	8014fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014f28:	9a02      	ldr	r2, [sp, #8]
 8014f2a:	5d55      	ldrb	r5, [r2, r5]
 8014f2c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014f30:	441d      	add	r5, r3
 8014f32:	1c72      	adds	r2, r6, #1
 8014f34:	d439      	bmi.n	8014faa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f36:	4596      	cmp	lr, r2
 8014f38:	dd37      	ble.n	8014faa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f3a:	2f00      	cmp	r7, #0
 8014f3c:	d035      	beq.n	8014faa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f3e:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014f42:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014f46:	4419      	add	r1, r3
 8014f48:	3401      	adds	r4, #1
 8014f4a:	d432      	bmi.n	8014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f4c:	45a2      	cmp	sl, r4
 8014f4e:	dd30      	ble.n	8014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f50:	b378      	cbz	r0, 8014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f52:	2e00      	cmp	r6, #0
 8014f54:	db2b      	blt.n	8014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014f56:	45b6      	cmp	lr, r6
 8014f58:	dd29      	ble.n	8014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014f5a:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014f5e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014f62:	441c      	add	r4, r3
 8014f64:	3601      	adds	r6, #1
 8014f66:	d427      	bmi.n	8014fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f68:	45b6      	cmp	lr, r6
 8014f6a:	dd25      	ble.n	8014fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f6c:	b327      	cbz	r7, 8014fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f6e:	44c6      	add	lr, r8
 8014f70:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014f74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f78:	4413      	add	r3, r2
 8014f7a:	782a      	ldrb	r2, [r5, #0]
 8014f7c:	9202      	str	r2, [sp, #8]
 8014f7e:	780a      	ldrb	r2, [r1, #0]
 8014f80:	9203      	str	r2, [sp, #12]
 8014f82:	7822      	ldrb	r2, [r4, #0]
 8014f84:	9204      	str	r2, [sp, #16]
 8014f86:	2f0f      	cmp	r7, #15
 8014f88:	781a      	ldrb	r2, [r3, #0]
 8014f8a:	9205      	str	r2, [sp, #20]
 8014f8c:	d801      	bhi.n	8014f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014f8e:	280f      	cmp	r0, #15
 8014f90:	d914      	bls.n	8014fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014f92:	4b3f      	ldr	r3, [pc, #252]	; (8015090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014f94:	4a3f      	ldr	r2, [pc, #252]	; (8015094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014f96:	4840      	ldr	r0, [pc, #256]	; (8015098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014f98:	f240 210d 	movw	r1, #525	; 0x20d
 8014f9c:	f006 fb04 	bl	801b5a8 <__assert_func>
 8014fa0:	ad07      	add	r5, sp, #28
 8014fa2:	e7c6      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014fa4:	a907      	add	r1, sp, #28
 8014fa6:	460d      	mov	r5, r1
 8014fa8:	e7ce      	b.n	8014f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014faa:	a907      	add	r1, sp, #28
 8014fac:	e7cc      	b.n	8014f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014fae:	ac07      	add	r4, sp, #28
 8014fb0:	e7d8      	b.n	8014f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014fb2:	ab07      	add	r3, sp, #28
 8014fb4:	461c      	mov	r4, r3
 8014fb6:	e7e0      	b.n	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014fb8:	ab07      	add	r3, sp, #28
 8014fba:	e7de      	b.n	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014fbc:	b2ba      	uxth	r2, r7
 8014fbe:	b280      	uxth	r0, r0
 8014fc0:	fb02 fa00 	mul.w	sl, r2, r0
 8014fc4:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014fc8:	0112      	lsls	r2, r2, #4
 8014fca:	b280      	uxth	r0, r0
 8014fcc:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014fd0:	7849      	ldrb	r1, [r1, #1]
 8014fd2:	78ae      	ldrb	r6, [r5, #2]
 8014fd4:	786d      	ldrb	r5, [r5, #1]
 8014fd6:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014fda:	eba2 020a 	sub.w	r2, r2, sl
 8014fde:	b292      	uxth	r2, r2
 8014fe0:	ebae 0e00 	sub.w	lr, lr, r0
 8014fe4:	fa1f fe8e 	uxth.w	lr, lr
 8014fe8:	4351      	muls	r1, r2
 8014fea:	fb02 f808 	mul.w	r8, r2, r8
 8014fee:	fb0e 8806 	mla	r8, lr, r6, r8
 8014ff2:	fb0e 1505 	mla	r5, lr, r5, r1
 8014ff6:	78a6      	ldrb	r6, [r4, #2]
 8014ff8:	7861      	ldrb	r1, [r4, #1]
 8014ffa:	fa1f f78c 	uxth.w	r7, ip
 8014ffe:	fb00 8806 	mla	r8, r0, r6, r8
 8015002:	fb00 5501 	mla	r5, r0, r1, r5
 8015006:	789e      	ldrb	r6, [r3, #2]
 8015008:	7859      	ldrb	r1, [r3, #1]
 801500a:	9b00      	ldr	r3, [sp, #0]
 801500c:	ea6f 0c0c 	mvn.w	ip, ip
 8015010:	fa5f fc8c 	uxtb.w	ip, ip
 8015014:	fb0a 5101 	mla	r1, sl, r1, r5
 8015018:	fb13 f50c 	smulbb	r5, r3, ip
 801501c:	9b03      	ldr	r3, [sp, #12]
 801501e:	435a      	muls	r2, r3
 8015020:	9b02      	ldr	r3, [sp, #8]
 8015022:	fb0e 2203 	mla	r2, lr, r3, r2
 8015026:	9b04      	ldr	r3, [sp, #16]
 8015028:	fb00 2003 	mla	r0, r0, r3, r2
 801502c:	9b05      	ldr	r3, [sp, #20]
 801502e:	fb0a 8606 	mla	r6, sl, r6, r8
 8015032:	fb0a 0a03 	mla	sl, sl, r3, r0
 8015036:	9b01      	ldr	r3, [sp, #4]
 8015038:	fb19 f90c 	smulbb	r9, r9, ip
 801503c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8015040:	fb13 fc0c 	smulbb	ip, r3, ip
 8015044:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015048:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801504c:	fb06 9607 	mla	r6, r6, r7, r9
 8015050:	fb01 5107 	mla	r1, r1, r7, r5
 8015054:	fb0a c707 	mla	r7, sl, r7, ip
 8015058:	b2b6      	uxth	r6, r6
 801505a:	b289      	uxth	r1, r1
 801505c:	b2bf      	uxth	r7, r7
 801505e:	f106 0901 	add.w	r9, r6, #1
 8015062:	f107 0c01 	add.w	ip, r7, #1
 8015066:	1c4d      	adds	r5, r1, #1
 8015068:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801506c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8015070:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8015074:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015078:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801507c:	0949      	lsrs	r1, r1, #5
 801507e:	433e      	orrs	r6, r7
 8015080:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015084:	430e      	orrs	r6, r1
 8015086:	f8ab 6000 	strh.w	r6, [fp]
 801508a:	b009      	add	sp, #36	; 0x24
 801508c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015090:	0801f4ba 	.word	0x0801f4ba
 8015094:	0801fa79 	.word	0x0801fa79
 8015098:	0801f5a3 	.word	0x0801f5a3

0801509c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801509c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150a0:	ed2d 8b08 	vpush	{d8-d11}
 80150a4:	b095      	sub	sp, #84	; 0x54
 80150a6:	eeb0 aa40 	vmov.f32	s20, s0
 80150aa:	9212      	str	r2, [sp, #72]	; 0x48
 80150ac:	9309      	str	r3, [sp, #36]	; 0x24
 80150ae:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80150b0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80150b4:	930f      	str	r3, [sp, #60]	; 0x3c
 80150b6:	910e      	str	r1, [sp, #56]	; 0x38
 80150b8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80150bc:	9013      	str	r0, [sp, #76]	; 0x4c
 80150be:	6850      	ldr	r0, [r2, #4]
 80150c0:	6812      	ldr	r2, [r2, #0]
 80150c2:	fb00 1303 	mla	r3, r0, r3, r1
 80150c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80150ca:	930a      	str	r3, [sp, #40]	; 0x28
 80150cc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80150ce:	681b      	ldr	r3, [r3, #0]
 80150d0:	930d      	str	r3, [sp, #52]	; 0x34
 80150d2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80150d4:	685c      	ldr	r4, [r3, #4]
 80150d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80150d8:	43db      	mvns	r3, r3
 80150da:	b2db      	uxtb	r3, r3
 80150dc:	eef0 9a60 	vmov.f32	s19, s1
 80150e0:	eeb0 9a41 	vmov.f32	s18, s2
 80150e4:	eeb0 8a62 	vmov.f32	s16, s5
 80150e8:	eef0 8a43 	vmov.f32	s17, s6
 80150ec:	eef0 ba44 	vmov.f32	s23, s8
 80150f0:	eeb0 ba64 	vmov.f32	s22, s9
 80150f4:	eef0 aa45 	vmov.f32	s21, s10
 80150f8:	3404      	adds	r4, #4
 80150fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80150fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150fe:	2b00      	cmp	r3, #0
 8015100:	dc03      	bgt.n	801510a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015102:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015104:	2b00      	cmp	r3, #0
 8015106:	f340 8258 	ble.w	80155ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 801510a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801510c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015110:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015114:	1e48      	subs	r0, r1, #1
 8015116:	1e55      	subs	r5, r2, #1
 8015118:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801511a:	2b00      	cmp	r3, #0
 801511c:	f340 80fc 	ble.w	8015318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015120:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8015122:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015124:	1436      	asrs	r6, r6, #16
 8015126:	ea4f 4323 	mov.w	r3, r3, asr #16
 801512a:	d406      	bmi.n	801513a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801512c:	4286      	cmp	r6, r0
 801512e:	da04      	bge.n	801513a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015130:	2b00      	cmp	r3, #0
 8015132:	db02      	blt.n	801513a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015134:	42ab      	cmp	r3, r5
 8015136:	f2c0 80f0 	blt.w	801531a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801513a:	3601      	adds	r6, #1
 801513c:	f100 80dd 	bmi.w	80152fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8015140:	42b1      	cmp	r1, r6
 8015142:	f2c0 80da 	blt.w	80152fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8015146:	3301      	adds	r3, #1
 8015148:	f100 80d7 	bmi.w	80152fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801514c:	429a      	cmp	r2, r3
 801514e:	f2c0 80d4 	blt.w	80152fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8015152:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015154:	9311      	str	r3, [sp, #68]	; 0x44
 8015156:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015158:	930c      	str	r3, [sp, #48]	; 0x30
 801515a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801515c:	2b00      	cmp	r3, #0
 801515e:	f340 80fd 	ble.w	801535c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015162:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015164:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015166:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015168:	68c6      	ldr	r6, [r0, #12]
 801516a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801516c:	141d      	asrs	r5, r3, #16
 801516e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015172:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015174:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015176:	1400      	asrs	r0, r0, #16
 8015178:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801517c:	6892      	ldr	r2, [r2, #8]
 801517e:	f100 8141 	bmi.w	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015182:	1e57      	subs	r7, r2, #1
 8015184:	42b8      	cmp	r0, r7
 8015186:	f280 813d 	bge.w	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801518a:	2d00      	cmp	r5, #0
 801518c:	f2c0 813a 	blt.w	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015190:	1e77      	subs	r7, r6, #1
 8015192:	42bd      	cmp	r5, r7
 8015194:	f280 8136 	bge.w	8015404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015198:	b212      	sxth	r2, r2
 801519a:	fb05 0002 	mla	r0, r5, r2, r0
 801519e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80151a0:	f815 a000 	ldrb.w	sl, [r5, r0]
 80151a4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80151a8:	182e      	adds	r6, r5, r0
 80151aa:	eb04 050a 	add.w	r5, r4, sl
 80151ae:	2b00      	cmp	r3, #0
 80151b0:	f000 811a 	beq.w	80153e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 80151b4:	f896 c001 	ldrb.w	ip, [r6, #1]
 80151b8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80151bc:	44a4      	add	ip, r4
 80151be:	2900      	cmp	r1, #0
 80151c0:	f000 811a 	beq.w	80153f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80151c4:	18b0      	adds	r0, r6, r2
 80151c6:	5cb2      	ldrb	r2, [r6, r2]
 80151c8:	7840      	ldrb	r0, [r0, #1]
 80151ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80151d2:	4422      	add	r2, r4
 80151d4:	4420      	add	r0, r4
 80151d6:	b29b      	uxth	r3, r3
 80151d8:	b289      	uxth	r1, r1
 80151da:	fb03 f901 	mul.w	r9, r3, r1
 80151de:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80151e2:	011b      	lsls	r3, r3, #4
 80151e4:	b289      	uxth	r1, r1
 80151e6:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80151ea:	f895 b002 	ldrb.w	fp, [r5, #2]
 80151ee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80151f0:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80151f4:	f8b6 e000 	ldrh.w	lr, [r6]
 80151f8:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80151fc:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015200:	eba3 0309 	sub.w	r3, r3, r9
 8015204:	b29b      	uxth	r3, r3
 8015206:	eba8 0801 	sub.w	r8, r8, r1
 801520a:	fa1f f888 	uxth.w	r8, r8
 801520e:	435f      	muls	r7, r3
 8015210:	fb08 770b 	mla	r7, r8, fp, r7
 8015214:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015218:	9310      	str	r3, [sp, #64]	; 0x40
 801521a:	fb01 770b 	mla	r7, r1, fp, r7
 801521e:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015222:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015224:	fb09 770b 	mla	r7, r9, fp, r7
 8015228:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801522c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015230:	fb1b fb03 	smulbb	fp, fp, r3
 8015234:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015238:	fb07 b706 	mla	r7, r7, r6, fp
 801523c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801523e:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015242:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015246:	f89c c000 	ldrb.w	ip, [ip]
 801524a:	435d      	muls	r5, r3
 801524c:	fb08 550b 	mla	r5, r8, fp, r5
 8015250:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015254:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015256:	fb01 550b 	mla	r5, r1, fp, r5
 801525a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801525e:	fb09 550b 	mla	r5, r9, fp, r5
 8015262:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015266:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801526a:	fb1b fb03 	smulbb	fp, fp, r3
 801526e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015270:	fb03 f30c 	mul.w	r3, r3, ip
 8015274:	f892 c000 	ldrb.w	ip, [r2]
 8015278:	fb08 330a 	mla	r3, r8, sl, r3
 801527c:	fb01 330c 	mla	r3, r1, ip, r3
 8015280:	f890 c000 	ldrb.w	ip, [r0]
 8015284:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015288:	fb09 3c0c 	mla	ip, r9, ip, r3
 801528c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801528e:	fa5f fe8e 	uxtb.w	lr, lr
 8015292:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015296:	fb1e fe03 	smulbb	lr, lr, r3
 801529a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801529e:	fb05 b506 	mla	r5, r5, r6, fp
 80152a2:	fb0c ee06 	mla	lr, ip, r6, lr
 80152a6:	b2bf      	uxth	r7, r7
 80152a8:	b2ad      	uxth	r5, r5
 80152aa:	fa1f fe8e 	uxth.w	lr, lr
 80152ae:	1c7a      	adds	r2, r7, #1
 80152b0:	f10e 0c01 	add.w	ip, lr, #1
 80152b4:	f105 0b01 	add.w	fp, r5, #1
 80152b8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80152bc:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 80152c0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80152c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80152c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80152cc:	096d      	lsrs	r5, r5, #5
 80152ce:	ea47 070e 	orr.w	r7, r7, lr
 80152d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80152d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152d8:	433d      	orrs	r5, r7
 80152da:	801d      	strh	r5, [r3, #0]
 80152dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152de:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80152e0:	3302      	adds	r3, #2
 80152e2:	930c      	str	r3, [sp, #48]	; 0x30
 80152e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80152e6:	4413      	add	r3, r2
 80152e8:	9327      	str	r3, [sp, #156]	; 0x9c
 80152ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80152ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80152ee:	4413      	add	r3, r2
 80152f0:	9328      	str	r3, [sp, #160]	; 0xa0
 80152f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80152f4:	3b01      	subs	r3, #1
 80152f6:	9311      	str	r3, [sp, #68]	; 0x44
 80152f8:	e72f      	b.n	801515a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80152fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80152fc:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80152fe:	4433      	add	r3, r6
 8015300:	9327      	str	r3, [sp, #156]	; 0x9c
 8015302:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015304:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015306:	4433      	add	r3, r6
 8015308:	9328      	str	r3, [sp, #160]	; 0xa0
 801530a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801530c:	3b01      	subs	r3, #1
 801530e:	9309      	str	r3, [sp, #36]	; 0x24
 8015310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015312:	3302      	adds	r3, #2
 8015314:	930a      	str	r3, [sp, #40]	; 0x28
 8015316:	e6ff      	b.n	8015118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015318:	d027      	beq.n	801536a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 801531a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801531c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801531e:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015320:	3b01      	subs	r3, #1
 8015322:	fb00 5003 	mla	r0, r0, r3, r5
 8015326:	1400      	asrs	r0, r0, #16
 8015328:	f53f af13 	bmi.w	8015152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801532c:	3901      	subs	r1, #1
 801532e:	4288      	cmp	r0, r1
 8015330:	f6bf af0f 	bge.w	8015152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015334:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015336:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015338:	fb01 0303 	mla	r3, r1, r3, r0
 801533c:	141b      	asrs	r3, r3, #16
 801533e:	f53f af08 	bmi.w	8015152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015342:	3a01      	subs	r2, #1
 8015344:	4293      	cmp	r3, r2
 8015346:	f6bf af04 	bge.w	8015152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801534a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801534c:	9311      	str	r3, [sp, #68]	; 0x44
 801534e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015354:	930c      	str	r3, [sp, #48]	; 0x30
 8015356:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015358:	2b00      	cmp	r3, #0
 801535a:	dc70      	bgt.n	801543e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 801535c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801535e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015360:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015364:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015368:	930a      	str	r3, [sp, #40]	; 0x28
 801536a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801536c:	2b00      	cmp	r3, #0
 801536e:	f340 8124 	ble.w	80155ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8015372:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015376:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801537a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801537e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015380:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015384:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015388:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801538c:	eef0 6a48 	vmov.f32	s13, s16
 8015390:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015394:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015398:	ee37 8a48 	vsub.f32	s16, s14, s16
 801539c:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80153a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80153a4:	eef0 6a68 	vmov.f32	s13, s17
 80153a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80153ac:	ee18 2a10 	vmov	r2, s16
 80153b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80153b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80153b8:	ee18 2a90 	vmov	r2, s17
 80153bc:	9329      	str	r3, [sp, #164]	; 0xa4
 80153be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80153c4:	932a      	str	r3, [sp, #168]	; 0xa8
 80153c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80153ca:	3b01      	subs	r3, #1
 80153cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80153d0:	930e      	str	r3, [sp, #56]	; 0x38
 80153d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153d4:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80153d8:	bf08      	it	eq
 80153da:	4613      	moveq	r3, r2
 80153dc:	9309      	str	r3, [sp, #36]	; 0x24
 80153de:	eef0 8a67 	vmov.f32	s17, s15
 80153e2:	eeb0 8a47 	vmov.f32	s16, s14
 80153e6:	e689      	b.n	80150fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153e8:	b149      	cbz	r1, 80153fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80153ea:	5cb2      	ldrb	r2, [r6, r2]
 80153ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153f0:	4422      	add	r2, r4
 80153f2:	4628      	mov	r0, r5
 80153f4:	46ac      	mov	ip, r5
 80153f6:	e6ee      	b.n	80151d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80153f8:	4628      	mov	r0, r5
 80153fa:	462a      	mov	r2, r5
 80153fc:	e6eb      	b.n	80151d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80153fe:	4628      	mov	r0, r5
 8015400:	462a      	mov	r2, r5
 8015402:	e7f7      	b.n	80153f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8015404:	1c47      	adds	r7, r0, #1
 8015406:	f53f af69 	bmi.w	80152dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801540a:	42ba      	cmp	r2, r7
 801540c:	f6ff af66 	blt.w	80152dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015410:	1c6f      	adds	r7, r5, #1
 8015412:	f53f af63 	bmi.w	80152dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8015416:	42be      	cmp	r6, r7
 8015418:	f6ff af60 	blt.w	80152dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801541c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801541e:	9002      	str	r0, [sp, #8]
 8015420:	b236      	sxth	r6, r6
 8015422:	b212      	sxth	r2, r2
 8015424:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015428:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801542c:	9200      	str	r2, [sp, #0]
 801542e:	9601      	str	r6, [sp, #4]
 8015430:	4623      	mov	r3, r4
 8015432:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015436:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015438:	f7ff fd46 	bl	8014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801543c:	e74e      	b.n	80152dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801543e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015440:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015442:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015444:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015446:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801544a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801544c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015450:	142d      	asrs	r5, r5, #16
 8015452:	1400      	asrs	r0, r0, #16
 8015454:	fb02 5000 	mla	r0, r2, r0, r5
 8015458:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801545a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801545e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015462:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015466:	182e      	adds	r6, r5, r0
 8015468:	eb04 0509 	add.w	r5, r4, r9
 801546c:	2b00      	cmp	r3, #0
 801546e:	f000 8096 	beq.w	801559e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8015472:	7877      	ldrb	r7, [r6, #1]
 8015474:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015478:	4427      	add	r7, r4
 801547a:	2900      	cmp	r1, #0
 801547c:	f000 8097 	beq.w	80155ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015480:	18b0      	adds	r0, r6, r2
 8015482:	5cb2      	ldrb	r2, [r6, r2]
 8015484:	7840      	ldrb	r0, [r0, #1]
 8015486:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801548a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801548e:	4422      	add	r2, r4
 8015490:	4420      	add	r0, r4
 8015492:	b29b      	uxth	r3, r3
 8015494:	b289      	uxth	r1, r1
 8015496:	fb03 f801 	mul.w	r8, r3, r1
 801549a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801549c:	f895 b002 	ldrb.w	fp, [r5, #2]
 80154a0:	f8b6 c000 	ldrh.w	ip, [r6]
 80154a4:	78be      	ldrb	r6, [r7, #2]
 80154a6:	f814 9009 	ldrb.w	r9, [r4, r9]
 80154aa:	011b      	lsls	r3, r3, #4
 80154ac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80154b0:	b289      	uxth	r1, r1
 80154b2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80154b6:	eba3 0308 	sub.w	r3, r3, r8
 80154ba:	b29b      	uxth	r3, r3
 80154bc:	ebae 0e01 	sub.w	lr, lr, r1
 80154c0:	fa1f fe8e 	uxth.w	lr, lr
 80154c4:	435e      	muls	r6, r3
 80154c6:	fb0e 660b 	mla	r6, lr, fp, r6
 80154ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 80154ce:	9310      	str	r3, [sp, #64]	; 0x40
 80154d0:	fb01 660b 	mla	r6, r1, fp, r6
 80154d4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80154d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80154da:	fb08 660b 	mla	r6, r8, fp, r6
 80154de:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80154e2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80154e6:	fb1b fb03 	smulbb	fp, fp, r3
 80154ea:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80154ee:	fb06 b60a 	mla	r6, r6, sl, fp
 80154f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80154f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80154f8:	787d      	ldrb	r5, [r7, #1]
 80154fa:	783f      	ldrb	r7, [r7, #0]
 80154fc:	435d      	muls	r5, r3
 80154fe:	fb0e 550b 	mla	r5, lr, fp, r5
 8015502:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015506:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015508:	fb01 550b 	mla	r5, r1, fp, r5
 801550c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015510:	fb08 550b 	mla	r5, r8, fp, r5
 8015514:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015518:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801551c:	fb1b fb03 	smulbb	fp, fp, r3
 8015520:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015522:	437b      	muls	r3, r7
 8015524:	7817      	ldrb	r7, [r2, #0]
 8015526:	fb0e 3309 	mla	r3, lr, r9, r3
 801552a:	fb01 3307 	mla	r3, r1, r7, r3
 801552e:	7807      	ldrb	r7, [r0, #0]
 8015530:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015534:	fb08 3707 	mla	r7, r8, r7, r3
 8015538:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801553a:	fa5f fc8c 	uxtb.w	ip, ip
 801553e:	fb1c fc03 	smulbb	ip, ip, r3
 8015542:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015546:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801554a:	fb05 b50a 	mla	r5, r5, sl, fp
 801554e:	fb07 c70a 	mla	r7, r7, sl, ip
 8015552:	b2b6      	uxth	r6, r6
 8015554:	b2ad      	uxth	r5, r5
 8015556:	b2bf      	uxth	r7, r7
 8015558:	1c73      	adds	r3, r6, #1
 801555a:	1c7a      	adds	r2, r7, #1
 801555c:	f105 0b01 	add.w	fp, r5, #1
 8015560:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015564:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015568:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801556c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015570:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015574:	096d      	lsrs	r5, r5, #5
 8015576:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015578:	4316      	orrs	r6, r2
 801557a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801557e:	432e      	orrs	r6, r5
 8015580:	f823 6b02 	strh.w	r6, [r3], #2
 8015584:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015586:	930c      	str	r3, [sp, #48]	; 0x30
 8015588:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801558a:	4413      	add	r3, r2
 801558c:	9327      	str	r3, [sp, #156]	; 0x9c
 801558e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015590:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015592:	4413      	add	r3, r2
 8015594:	9328      	str	r3, [sp, #160]	; 0xa0
 8015596:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015598:	3b01      	subs	r3, #1
 801559a:	9311      	str	r3, [sp, #68]	; 0x44
 801559c:	e6db      	b.n	8015356 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801559e:	b149      	cbz	r1, 80155b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80155a0:	5cb2      	ldrb	r2, [r6, r2]
 80155a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80155a6:	4422      	add	r2, r4
 80155a8:	4628      	mov	r0, r5
 80155aa:	462f      	mov	r7, r5
 80155ac:	e771      	b.n	8015492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80155ae:	4628      	mov	r0, r5
 80155b0:	462a      	mov	r2, r5
 80155b2:	e76e      	b.n	8015492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80155b4:	4628      	mov	r0, r5
 80155b6:	462a      	mov	r2, r5
 80155b8:	e7f7      	b.n	80155aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 80155ba:	b015      	add	sp, #84	; 0x54
 80155bc:	ecbd 8b08 	vpop	{d8-d11}
 80155c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80155c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c8:	880e      	ldrh	r6, [r1, #0]
 80155ca:	b085      	sub	sp, #20
 80155cc:	0230      	lsls	r0, r6, #8
 80155ce:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80155d2:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80155d6:	0170      	lsls	r0, r6, #5
 80155d8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80155dc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80155e0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80155e4:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80155e8:	00f6      	lsls	r6, r6, #3
 80155ea:	ea4b 0000 	orr.w	r0, fp, r0
 80155ee:	b2f6      	uxtb	r6, r6
 80155f0:	4691      	mov	r9, r2
 80155f2:	fb05 7a0c 	mla	sl, r5, ip, r7
 80155f6:	4306      	orrs	r6, r0
 80155f8:	2d00      	cmp	r5, #0
 80155fa:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80155fe:	9603      	str	r6, [sp, #12]
 8015600:	eb09 0e0a 	add.w	lr, r9, sl
 8015604:	db42      	blt.n	801568c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015606:	45a8      	cmp	r8, r5
 8015608:	dd40      	ble.n	801568c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801560a:	2f00      	cmp	r7, #0
 801560c:	db3c      	blt.n	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 801560e:	45bc      	cmp	ip, r7
 8015610:	dd3a      	ble.n	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015612:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015616:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801561a:	441e      	add	r6, r3
 801561c:	1c78      	adds	r0, r7, #1
 801561e:	d438      	bmi.n	8015692 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015620:	4584      	cmp	ip, r0
 8015622:	dd36      	ble.n	8015692 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015624:	b3aa      	cbz	r2, 8015692 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015626:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801562a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801562e:	4418      	add	r0, r3
 8015630:	3501      	adds	r5, #1
 8015632:	d432      	bmi.n	801569a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015634:	45a8      	cmp	r8, r5
 8015636:	dd30      	ble.n	801569a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015638:	b37c      	cbz	r4, 801569a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801563a:	2f00      	cmp	r7, #0
 801563c:	db2b      	blt.n	8015696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801563e:	45bc      	cmp	ip, r7
 8015640:	dd29      	ble.n	8015696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015642:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015646:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801564a:	441d      	add	r5, r3
 801564c:	3701      	adds	r7, #1
 801564e:	d427      	bmi.n	80156a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015650:	45bc      	cmp	ip, r7
 8015652:	dd25      	ble.n	80156a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015654:	b322      	cbz	r2, 80156a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015656:	44f4      	add	ip, lr
 8015658:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801565c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015660:	443b      	add	r3, r7
 8015662:	781f      	ldrb	r7, [r3, #0]
 8015664:	f896 a000 	ldrb.w	sl, [r6]
 8015668:	f890 b000 	ldrb.w	fp, [r0]
 801566c:	f895 9000 	ldrb.w	r9, [r5]
 8015670:	9700      	str	r7, [sp, #0]
 8015672:	2a0f      	cmp	r2, #15
 8015674:	d801      	bhi.n	801567a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8015676:	2c0f      	cmp	r4, #15
 8015678:	d914      	bls.n	80156a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801567a:	4b2c      	ldr	r3, [pc, #176]	; (801572c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 801567c:	4a2c      	ldr	r2, [pc, #176]	; (8015730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801567e:	482d      	ldr	r0, [pc, #180]	; (8015734 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015680:	f240 210d 	movw	r1, #525	; 0x20d
 8015684:	f005 ff90 	bl	801b5a8 <__assert_func>
 8015688:	ae03      	add	r6, sp, #12
 801568a:	e7c7      	b.n	801561c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 801568c:	a803      	add	r0, sp, #12
 801568e:	4606      	mov	r6, r0
 8015690:	e7ce      	b.n	8015630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015692:	a803      	add	r0, sp, #12
 8015694:	e7cc      	b.n	8015630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015696:	ad03      	add	r5, sp, #12
 8015698:	e7d8      	b.n	801564c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801569a:	ab03      	add	r3, sp, #12
 801569c:	461d      	mov	r5, r3
 801569e:	e7e0      	b.n	8015662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80156a0:	ab03      	add	r3, sp, #12
 80156a2:	e7de      	b.n	8015662 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80156a4:	b292      	uxth	r2, r2
 80156a6:	b2a4      	uxth	r4, r4
 80156a8:	fb02 f804 	mul.w	r8, r2, r4
 80156ac:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80156b0:	0112      	lsls	r2, r2, #4
 80156b2:	b2a4      	uxth	r4, r4
 80156b4:	f890 e002 	ldrb.w	lr, [r0, #2]
 80156b8:	78b7      	ldrb	r7, [r6, #2]
 80156ba:	7840      	ldrb	r0, [r0, #1]
 80156bc:	7876      	ldrb	r6, [r6, #1]
 80156be:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80156c2:	eba2 0208 	sub.w	r2, r2, r8
 80156c6:	b292      	uxth	r2, r2
 80156c8:	ebac 0c04 	sub.w	ip, ip, r4
 80156cc:	fa1f fc8c 	uxth.w	ip, ip
 80156d0:	fb02 fe0e 	mul.w	lr, r2, lr
 80156d4:	fb0c ee07 	mla	lr, ip, r7, lr
 80156d8:	78af      	ldrb	r7, [r5, #2]
 80156da:	fb04 ee07 	mla	lr, r4, r7, lr
 80156de:	789f      	ldrb	r7, [r3, #2]
 80156e0:	785b      	ldrb	r3, [r3, #1]
 80156e2:	fb08 e707 	mla	r7, r8, r7, lr
 80156e6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80156ea:	fb02 fe0b 	mul.w	lr, r2, fp
 80156ee:	4342      	muls	r2, r0
 80156f0:	7868      	ldrb	r0, [r5, #1]
 80156f2:	9701      	str	r7, [sp, #4]
 80156f4:	fb0c ee0a 	mla	lr, ip, sl, lr
 80156f8:	9f00      	ldr	r7, [sp, #0]
 80156fa:	fb0c 2206 	mla	r2, ip, r6, r2
 80156fe:	fb04 ee09 	mla	lr, r4, r9, lr
 8015702:	fb04 2400 	mla	r4, r4, r0, r2
 8015706:	fb08 ee07 	mla	lr, r8, r7, lr
 801570a:	9f01      	ldr	r7, [sp, #4]
 801570c:	fb08 4803 	mla	r8, r8, r3, r4
 8015710:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015714:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015718:	ea47 070e 	orr.w	r7, r7, lr
 801571c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015720:	ea47 0708 	orr.w	r7, r7, r8
 8015724:	800f      	strh	r7, [r1, #0]
 8015726:	b005      	add	sp, #20
 8015728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801572c:	0801f4ba 	.word	0x0801f4ba
 8015730:	0801fa79 	.word	0x0801fa79
 8015734:	0801f5a3 	.word	0x0801f5a3

08015738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801573c:	ed2d 8b08 	vpush	{d8-d11}
 8015740:	b08f      	sub	sp, #60	; 0x3c
 8015742:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015746:	920c      	str	r2, [sp, #48]	; 0x30
 8015748:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801574a:	910a      	str	r1, [sp, #40]	; 0x28
 801574c:	9306      	str	r3, [sp, #24]
 801574e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015752:	900d      	str	r0, [sp, #52]	; 0x34
 8015754:	6850      	ldr	r0, [r2, #4]
 8015756:	6812      	ldr	r2, [r2, #0]
 8015758:	fb00 1303 	mla	r3, r0, r3, r1
 801575c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015760:	9307      	str	r3, [sp, #28]
 8015762:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015764:	681b      	ldr	r3, [r3, #0]
 8015766:	9308      	str	r3, [sp, #32]
 8015768:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801576a:	685c      	ldr	r4, [r3, #4]
 801576c:	eeb0 aa40 	vmov.f32	s20, s0
 8015770:	eef0 9a60 	vmov.f32	s19, s1
 8015774:	eeb0 9a41 	vmov.f32	s18, s2
 8015778:	eeb0 8a62 	vmov.f32	s16, s5
 801577c:	eef0 8a43 	vmov.f32	s17, s6
 8015780:	eef0 ba44 	vmov.f32	s23, s8
 8015784:	eeb0 ba64 	vmov.f32	s22, s9
 8015788:	eef0 aa45 	vmov.f32	s21, s10
 801578c:	3404      	adds	r4, #4
 801578e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015790:	2b00      	cmp	r3, #0
 8015792:	dc03      	bgt.n	801579c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015794:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015796:	2b00      	cmp	r3, #0
 8015798:	f340 81d6 	ble.w	8015b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801579c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801579e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80157a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80157a6:	1e48      	subs	r0, r1, #1
 80157a8:	1e56      	subs	r6, r2, #1
 80157aa:	9b06      	ldr	r3, [sp, #24]
 80157ac:	2b00      	cmp	r3, #0
 80157ae:	f340 80b7 	ble.w	8015920 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157b2:	ea5f 472b 	movs.w	r7, fp, asr #16
 80157b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80157ba:	d406      	bmi.n	80157ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157bc:	4287      	cmp	r7, r0
 80157be:	da04      	bge.n	80157ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157c0:	2b00      	cmp	r3, #0
 80157c2:	db02      	blt.n	80157ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157c4:	42b3      	cmp	r3, r6
 80157c6:	f2c0 80ac 	blt.w	8015922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80157ca:	3701      	adds	r7, #1
 80157cc:	f100 809d 	bmi.w	801590a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157d0:	42b9      	cmp	r1, r7
 80157d2:	f2c0 809a 	blt.w	801590a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157d6:	3301      	adds	r3, #1
 80157d8:	f100 8097 	bmi.w	801590a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157dc:	429a      	cmp	r2, r3
 80157de:	f2c0 8094 	blt.w	801590a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157e2:	9b06      	ldr	r3, [sp, #24]
 80157e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80157e6:	9b07      	ldr	r3, [sp, #28]
 80157e8:	9309      	str	r3, [sp, #36]	; 0x24
 80157ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80157ec:	2b00      	cmp	r3, #0
 80157ee:	f340 80b5 	ble.w	801595c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80157f2:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80157f4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80157f6:	68c7      	ldr	r7, [r0, #12]
 80157f8:	6892      	ldr	r2, [r2, #8]
 80157fa:	ea5f 402b 	movs.w	r0, fp, asr #16
 80157fe:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015802:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015806:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801580a:	f100 80fb 	bmi.w	8015a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801580e:	f102 3cff 	add.w	ip, r2, #4294967295
 8015812:	4560      	cmp	r0, ip
 8015814:	f280 80f6 	bge.w	8015a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015818:	2e00      	cmp	r6, #0
 801581a:	f2c0 80f3 	blt.w	8015a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801581e:	f107 3cff 	add.w	ip, r7, #4294967295
 8015822:	4566      	cmp	r6, ip
 8015824:	f280 80ee 	bge.w	8015a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015828:	b212      	sxth	r2, r2
 801582a:	fb06 0002 	mla	r0, r6, r2, r0
 801582e:	9e08      	ldr	r6, [sp, #32]
 8015830:	1837      	adds	r7, r6, r0
 8015832:	5c30      	ldrb	r0, [r6, r0]
 8015834:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015838:	eb04 0c08 	add.w	ip, r4, r8
 801583c:	2b00      	cmp	r3, #0
 801583e:	f000 80d3 	beq.w	80159e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015842:	787e      	ldrb	r6, [r7, #1]
 8015844:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015848:	4426      	add	r6, r4
 801584a:	2900      	cmp	r1, #0
 801584c:	f000 80d4 	beq.w	80159f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015850:	18b8      	adds	r0, r7, r2
 8015852:	5cba      	ldrb	r2, [r7, r2]
 8015854:	7840      	ldrb	r0, [r0, #1]
 8015856:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801585a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801585e:	4422      	add	r2, r4
 8015860:	4420      	add	r0, r4
 8015862:	b29b      	uxth	r3, r3
 8015864:	b289      	uxth	r1, r1
 8015866:	fb03 f901 	mul.w	r9, r3, r1
 801586a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801586e:	011b      	lsls	r3, r3, #4
 8015870:	b289      	uxth	r1, r1
 8015872:	78b7      	ldrb	r7, [r6, #2]
 8015874:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015878:	f89c c001 	ldrb.w	ip, [ip, #1]
 801587c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015880:	eba3 0309 	sub.w	r3, r3, r9
 8015884:	b29b      	uxth	r3, r3
 8015886:	ebae 0e01 	sub.w	lr, lr, r1
 801588a:	fa1f fe8e 	uxth.w	lr, lr
 801588e:	435f      	muls	r7, r3
 8015890:	fb0e 770a 	mla	r7, lr, sl, r7
 8015894:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015898:	fb01 770a 	mla	r7, r1, sl, r7
 801589c:	f890 a002 	ldrb.w	sl, [r0, #2]
 80158a0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80158a4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80158a8:	f896 8000 	ldrb.w	r8, [r6]
 80158ac:	7876      	ldrb	r6, [r6, #1]
 80158ae:	fb03 f808 	mul.w	r8, r3, r8
 80158b2:	fb0e 8807 	mla	r8, lr, r7, r8
 80158b6:	7817      	ldrb	r7, [r2, #0]
 80158b8:	fb01 8807 	mla	r8, r1, r7, r8
 80158bc:	7807      	ldrb	r7, [r0, #0]
 80158be:	fb09 8707 	mla	r7, r9, r7, r8
 80158c2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80158c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80158ca:	ea4a 0707 	orr.w	r7, sl, r7
 80158ce:	4373      	muls	r3, r6
 80158d0:	f892 a001 	ldrb.w	sl, [r2, #1]
 80158d4:	fb0e 330c 	mla	r3, lr, ip, r3
 80158d8:	fb01 310a 	mla	r1, r1, sl, r3
 80158dc:	f890 a001 	ldrb.w	sl, [r0, #1]
 80158e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158e2:	fb09 1a0a 	mla	sl, r9, sl, r1
 80158e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80158ee:	ea47 070a 	orr.w	r7, r7, sl
 80158f2:	801f      	strh	r7, [r3, #0]
 80158f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158f6:	3302      	adds	r3, #2
 80158f8:	9309      	str	r3, [sp, #36]	; 0x24
 80158fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80158fc:	449b      	add	fp, r3
 80158fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015900:	441d      	add	r5, r3
 8015902:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015904:	3b01      	subs	r3, #1
 8015906:	930b      	str	r3, [sp, #44]	; 0x2c
 8015908:	e76f      	b.n	80157ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801590a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801590c:	449b      	add	fp, r3
 801590e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015910:	441d      	add	r5, r3
 8015912:	9b06      	ldr	r3, [sp, #24]
 8015914:	3b01      	subs	r3, #1
 8015916:	9306      	str	r3, [sp, #24]
 8015918:	9b07      	ldr	r3, [sp, #28]
 801591a:	3302      	adds	r3, #2
 801591c:	9307      	str	r3, [sp, #28]
 801591e:	e744      	b.n	80157aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015920:	d023      	beq.n	801596a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015922:	9b06      	ldr	r3, [sp, #24]
 8015924:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015926:	3b01      	subs	r3, #1
 8015928:	fb00 b003 	mla	r0, r0, r3, fp
 801592c:	1400      	asrs	r0, r0, #16
 801592e:	f53f af58 	bmi.w	80157e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015932:	3901      	subs	r1, #1
 8015934:	4288      	cmp	r0, r1
 8015936:	f6bf af54 	bge.w	80157e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801593a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801593c:	fb01 5303 	mla	r3, r1, r3, r5
 8015940:	141b      	asrs	r3, r3, #16
 8015942:	f53f af4e 	bmi.w	80157e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015946:	3a01      	subs	r2, #1
 8015948:	4293      	cmp	r3, r2
 801594a:	f6bf af4a 	bge.w	80157e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801594e:	9b06      	ldr	r3, [sp, #24]
 8015950:	9309      	str	r3, [sp, #36]	; 0x24
 8015952:	9b07      	ldr	r3, [sp, #28]
 8015954:	930b      	str	r3, [sp, #44]	; 0x2c
 8015956:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015958:	2b00      	cmp	r3, #0
 801595a:	dc70      	bgt.n	8015a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801595c:	9b06      	ldr	r3, [sp, #24]
 801595e:	9a07      	ldr	r2, [sp, #28]
 8015960:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015964:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015968:	9307      	str	r3, [sp, #28]
 801596a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801596c:	2b00      	cmp	r3, #0
 801596e:	f340 80eb 	ble.w	8015b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015972:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015976:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801597a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801597e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015980:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015984:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015988:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801598c:	eef0 6a48 	vmov.f32	s13, s16
 8015990:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015994:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015998:	ee37 8a48 	vsub.f32	s16, s14, s16
 801599c:	ee16 ba90 	vmov	fp, s13
 80159a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80159a4:	eef0 6a68 	vmov.f32	s13, s17
 80159a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80159ac:	ee18 2a10 	vmov	r2, s16
 80159b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80159b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80159b8:	ee18 2a90 	vmov	r2, s17
 80159bc:	9323      	str	r3, [sp, #140]	; 0x8c
 80159be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80159c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80159c4:	9324      	str	r3, [sp, #144]	; 0x90
 80159c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80159ca:	3b01      	subs	r3, #1
 80159cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159d0:	930a      	str	r3, [sp, #40]	; 0x28
 80159d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80159d4:	bf08      	it	eq
 80159d6:	4613      	moveq	r3, r2
 80159d8:	ee16 5a90 	vmov	r5, s13
 80159dc:	9306      	str	r3, [sp, #24]
 80159de:	eef0 8a67 	vmov.f32	s17, s15
 80159e2:	eeb0 8a47 	vmov.f32	s16, s14
 80159e6:	e6d2      	b.n	801578e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80159e8:	b149      	cbz	r1, 80159fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80159ea:	5cba      	ldrb	r2, [r7, r2]
 80159ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159f0:	4422      	add	r2, r4
 80159f2:	4660      	mov	r0, ip
 80159f4:	4666      	mov	r6, ip
 80159f6:	e734      	b.n	8015862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80159f8:	4660      	mov	r0, ip
 80159fa:	4662      	mov	r2, ip
 80159fc:	e731      	b.n	8015862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80159fe:	4660      	mov	r0, ip
 8015a00:	4662      	mov	r2, ip
 8015a02:	e7f7      	b.n	80159f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015a04:	f110 0c01 	adds.w	ip, r0, #1
 8015a08:	f53f af74 	bmi.w	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a0c:	4562      	cmp	r2, ip
 8015a0e:	f6ff af71 	blt.w	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a12:	f116 0c01 	adds.w	ip, r6, #1
 8015a16:	f53f af6d 	bmi.w	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a1a:	4567      	cmp	r7, ip
 8015a1c:	f6ff af6a 	blt.w	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a20:	b23f      	sxth	r7, r7
 8015a22:	b212      	sxth	r2, r2
 8015a24:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015a28:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015a2c:	9200      	str	r2, [sp, #0]
 8015a2e:	9701      	str	r7, [sp, #4]
 8015a30:	4623      	mov	r3, r4
 8015a32:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015a36:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015a38:	f7ff fdc4 	bl	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015a3c:	e75a      	b.n	80158f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a3e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015a40:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015a44:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015a48:	1428      	asrs	r0, r5, #16
 8015a4a:	fb02 6000 	mla	r0, r2, r0, r6
 8015a4e:	9e08      	ldr	r6, [sp, #32]
 8015a50:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015a54:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015a58:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015a5c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015a60:	1837      	adds	r7, r6, r0
 8015a62:	eb04 0c08 	add.w	ip, r4, r8
 8015a66:	2b00      	cmp	r3, #0
 8015a68:	d060      	beq.n	8015b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015a6a:	787e      	ldrb	r6, [r7, #1]
 8015a6c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015a70:	4426      	add	r6, r4
 8015a72:	2900      	cmp	r1, #0
 8015a74:	d062      	beq.n	8015b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015a76:	18b8      	adds	r0, r7, r2
 8015a78:	5cba      	ldrb	r2, [r7, r2]
 8015a7a:	7840      	ldrb	r0, [r0, #1]
 8015a7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a80:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015a84:	4422      	add	r2, r4
 8015a86:	4420      	add	r0, r4
 8015a88:	b29b      	uxth	r3, r3
 8015a8a:	b289      	uxth	r1, r1
 8015a8c:	fb03 f901 	mul.w	r9, r3, r1
 8015a90:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015a94:	011b      	lsls	r3, r3, #4
 8015a96:	b289      	uxth	r1, r1
 8015a98:	78b7      	ldrb	r7, [r6, #2]
 8015a9a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015a9e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015aa2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015aa6:	eba3 0309 	sub.w	r3, r3, r9
 8015aaa:	b29b      	uxth	r3, r3
 8015aac:	ebae 0e01 	sub.w	lr, lr, r1
 8015ab0:	fa1f fe8e 	uxth.w	lr, lr
 8015ab4:	435f      	muls	r7, r3
 8015ab6:	fb0e 770a 	mla	r7, lr, sl, r7
 8015aba:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015abe:	fb01 770a 	mla	r7, r1, sl, r7
 8015ac2:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015ac6:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015aca:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015ace:	f896 8000 	ldrb.w	r8, [r6]
 8015ad2:	7876      	ldrb	r6, [r6, #1]
 8015ad4:	fb03 f808 	mul.w	r8, r3, r8
 8015ad8:	fb0e 8807 	mla	r8, lr, r7, r8
 8015adc:	7817      	ldrb	r7, [r2, #0]
 8015ade:	fb01 8807 	mla	r8, r1, r7, r8
 8015ae2:	7807      	ldrb	r7, [r0, #0]
 8015ae4:	fb09 8707 	mla	r7, r9, r7, r8
 8015ae8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015aec:	4373      	muls	r3, r6
 8015aee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015af2:	7856      	ldrb	r6, [r2, #1]
 8015af4:	ea4a 0707 	orr.w	r7, sl, r7
 8015af8:	fb0e 330c 	mla	r3, lr, ip, r3
 8015afc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015b00:	fb01 3306 	mla	r3, r1, r6, r3
 8015b04:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015b08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b0e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b12:	ea47 070a 	orr.w	r7, r7, sl
 8015b16:	f823 7b02 	strh.w	r7, [r3], #2
 8015b1a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015b1c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015b1e:	449b      	add	fp, r3
 8015b20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015b22:	441d      	add	r5, r3
 8015b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b26:	3b01      	subs	r3, #1
 8015b28:	9309      	str	r3, [sp, #36]	; 0x24
 8015b2a:	e714      	b.n	8015956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015b2c:	b149      	cbz	r1, 8015b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015b2e:	5cba      	ldrb	r2, [r7, r2]
 8015b30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b34:	4422      	add	r2, r4
 8015b36:	4660      	mov	r0, ip
 8015b38:	4666      	mov	r6, ip
 8015b3a:	e7a5      	b.n	8015a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015b3c:	4660      	mov	r0, ip
 8015b3e:	4662      	mov	r2, ip
 8015b40:	e7a2      	b.n	8015a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015b42:	4660      	mov	r0, ip
 8015b44:	4662      	mov	r2, ip
 8015b46:	e7f7      	b.n	8015b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015b48:	b00f      	add	sp, #60	; 0x3c
 8015b4a:	ecbd 8b08 	vpop	{d8-d11}
 8015b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b58:	880e      	ldrh	r6, [r1, #0]
 8015b5a:	b085      	sub	sp, #20
 8015b5c:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8015b60:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015b64:	4691      	mov	r9, r2
 8015b66:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015b6a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015b6e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8015b72:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015b76:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8015b7a:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8015b7e:	9200      	str	r2, [sp, #0]
 8015b80:	00f6      	lsls	r6, r6, #3
 8015b82:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8015b86:	9201      	str	r2, [sp, #4]
 8015b88:	2c00      	cmp	r4, #0
 8015b8a:	b2f2      	uxtb	r2, r6
 8015b8c:	fb04 560c 	mla	r6, r4, ip, r5
 8015b90:	9202      	str	r2, [sp, #8]
 8015b92:	eb09 0e06 	add.w	lr, r9, r6
 8015b96:	db3e      	blt.n	8015c16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015b98:	45a0      	cmp	r8, r4
 8015b9a:	dd3c      	ble.n	8015c16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015b9c:	2d00      	cmp	r5, #0
 8015b9e:	db38      	blt.n	8015c12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ba0:	45ac      	cmp	ip, r5
 8015ba2:	dd36      	ble.n	8015c12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ba4:	f819 2006 	ldrb.w	r2, [r9, r6]
 8015ba8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015bac:	1c6e      	adds	r6, r5, #1
 8015bae:	d435      	bmi.n	8015c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015bb0:	45b4      	cmp	ip, r6
 8015bb2:	dd33      	ble.n	8015c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015bb4:	b3a0      	cbz	r0, 8015c20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8015bb6:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015bba:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015bbe:	3401      	adds	r4, #1
 8015bc0:	d432      	bmi.n	8015c28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015bc2:	45a0      	cmp	r8, r4
 8015bc4:	dd30      	ble.n	8015c28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015bc6:	b397      	cbz	r7, 8015c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015bc8:	2d00      	cmp	r5, #0
 8015bca:	db2b      	blt.n	8015c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015bcc:	45ac      	cmp	ip, r5
 8015bce:	dd29      	ble.n	8015c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015bd0:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015bd4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015bd8:	3501      	adds	r5, #1
 8015bda:	d42b      	bmi.n	8015c34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015bdc:	45ac      	cmp	ip, r5
 8015bde:	dd29      	ble.n	8015c34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015be0:	b350      	cbz	r0, 8015c38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8015be2:	44f4      	add	ip, lr
 8015be4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015be8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015bec:	280f      	cmp	r0, #15
 8015bee:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015bf2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015bf6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015bfa:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015bfe:	d801      	bhi.n	8015c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8015c00:	2f0f      	cmp	r7, #15
 8015c02:	d91b      	bls.n	8015c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8015c04:	4b84      	ldr	r3, [pc, #528]	; (8015e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015c06:	4a85      	ldr	r2, [pc, #532]	; (8015e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8015c08:	4885      	ldr	r0, [pc, #532]	; (8015e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8015c0a:	f240 210d 	movw	r1, #525	; 0x20d
 8015c0e:	f005 fccb 	bl	801b5a8 <__assert_func>
 8015c12:	2200      	movs	r2, #0
 8015c14:	e7ca      	b.n	8015bac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8015c16:	2600      	movs	r6, #0
 8015c18:	4632      	mov	r2, r6
 8015c1a:	e7d0      	b.n	8015bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c1c:	2600      	movs	r6, #0
 8015c1e:	e7ce      	b.n	8015bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c20:	4606      	mov	r6, r0
 8015c22:	e7cc      	b.n	8015bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c24:	2400      	movs	r4, #0
 8015c26:	e7d7      	b.n	8015bd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8015c28:	2300      	movs	r3, #0
 8015c2a:	461c      	mov	r4, r3
 8015c2c:	e7de      	b.n	8015bec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c2e:	463b      	mov	r3, r7
 8015c30:	463c      	mov	r4, r7
 8015c32:	e7db      	b.n	8015bec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c34:	2300      	movs	r3, #0
 8015c36:	e7d9      	b.n	8015bec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c38:	4603      	mov	r3, r0
 8015c3a:	e7d7      	b.n	8015bec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c3c:	b280      	uxth	r0, r0
 8015c3e:	b2bf      	uxth	r7, r7
 8015c40:	fb00 fe07 	mul.w	lr, r0, r7
 8015c44:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015c48:	0100      	lsls	r0, r0, #4
 8015c4a:	eba0 0c0e 	sub.w	ip, r0, lr
 8015c4e:	b2bf      	uxth	r7, r7
 8015c50:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015c54:	fa1f fc8c 	uxth.w	ip, ip
 8015c58:	1bed      	subs	r5, r5, r7
 8015c5a:	b2ad      	uxth	r5, r5
 8015c5c:	fb0c f00a 	mul.w	r0, ip, sl
 8015c60:	fb05 000b 	mla	r0, r5, fp, r0
 8015c64:	fb07 0009 	mla	r0, r7, r9, r0
 8015c68:	fb0e 0008 	mla	r0, lr, r8, r0
 8015c6c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015c70:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015c74:	9003      	str	r0, [sp, #12]
 8015c76:	d018      	beq.n	8015caa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8015c78:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015c7c:	fb0b f000 	mul.w	r0, fp, r0
 8015c80:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015c84:	fb0b fb02 	mul.w	fp, fp, r2
 8015c88:	0a02      	lsrs	r2, r0, #8
 8015c8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015c8e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015c92:	4402      	add	r2, r0
 8015c94:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015c98:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015c9c:	0a12      	lsrs	r2, r2, #8
 8015c9e:	0a00      	lsrs	r0, r0, #8
 8015ca0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015ca4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015ca8:	4302      	orrs	r2, r0
 8015caa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015cae:	d019      	beq.n	8015ce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8015cb0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015cb4:	fb0a fb0b 	mul.w	fp, sl, fp
 8015cb8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015cbc:	fb0a fa06 	mul.w	sl, sl, r6
 8015cc0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015cc4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015cc8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015ccc:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015cd0:	445e      	add	r6, fp
 8015cd2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015cd6:	0a36      	lsrs	r6, r6, #8
 8015cd8:	0a00      	lsrs	r0, r0, #8
 8015cda:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015cde:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015ce2:	4306      	orrs	r6, r0
 8015ce4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015ce8:	d019      	beq.n	8015d1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8015cea:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015cee:	fb09 fa0a 	mul.w	sl, r9, sl
 8015cf2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015cf6:	fb09 f904 	mul.w	r9, r9, r4
 8015cfa:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015cfe:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015d02:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015d06:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015d0a:	4454      	add	r4, sl
 8015d0c:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8015d10:	0a24      	lsrs	r4, r4, #8
 8015d12:	0a00      	lsrs	r0, r0, #8
 8015d14:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015d18:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015d1c:	4304      	orrs	r4, r0
 8015d1e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015d22:	d019      	beq.n	8015d58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8015d24:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015d28:	fb08 f909 	mul.w	r9, r8, r9
 8015d2c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d30:	fb08 f803 	mul.w	r8, r8, r3
 8015d34:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015d38:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d3c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015d40:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015d44:	444b      	add	r3, r9
 8015d46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015d4a:	0a1b      	lsrs	r3, r3, #8
 8015d4c:	0a00      	lsrs	r0, r0, #8
 8015d4e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d52:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015d56:	4303      	orrs	r3, r0
 8015d58:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015d5c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015d60:	fb0c f808 	mul.w	r8, ip, r8
 8015d64:	fb05 8800 	mla	r8, r5, r0, r8
 8015d68:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015d6c:	fb07 8800 	mla	r8, r7, r0, r8
 8015d70:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015d74:	fb0e 8000 	mla	r0, lr, r0, r8
 8015d78:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015d7c:	fb0c f606 	mul.w	r6, ip, r6
 8015d80:	0a00      	lsrs	r0, r0, #8
 8015d82:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015d86:	fb05 6202 	mla	r2, r5, r2, r6
 8015d8a:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8015d8e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015d92:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015d96:	fb07 2700 	mla	r7, r7, r0, r2
 8015d9a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015d9e:	9b03      	ldr	r3, [sp, #12]
 8015da0:	9c00      	ldr	r4, [sp, #0]
 8015da2:	b2ad      	uxth	r5, r5
 8015da4:	436b      	muls	r3, r5
 8015da6:	fb0e 7000 	mla	r0, lr, r0, r7
 8015daa:	1c5a      	adds	r2, r3, #1
 8015dac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015db0:	0a00      	lsrs	r0, r0, #8
 8015db2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015db6:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8015dba:	ea48 0000 	orr.w	r0, r8, r0
 8015dbe:	b2d2      	uxtb	r2, r2
 8015dc0:	fb14 f602 	smulbb	r6, r4, r2
 8015dc4:	0c03      	lsrs	r3, r0, #16
 8015dc6:	fb03 6305 	mla	r3, r3, r5, r6
 8015dca:	b29e      	uxth	r6, r3
 8015dcc:	9b01      	ldr	r3, [sp, #4]
 8015dce:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8015dd2:	fb13 f302 	smulbb	r3, r3, r2
 8015dd6:	fb04 3405 	mla	r4, r4, r5, r3
 8015dda:	9b02      	ldr	r3, [sp, #8]
 8015ddc:	b2c0      	uxtb	r0, r0
 8015dde:	fb13 f202 	smulbb	r2, r3, r2
 8015de2:	fb00 2005 	mla	r0, r0, r5, r2
 8015de6:	b280      	uxth	r0, r0
 8015de8:	b2a4      	uxth	r4, r4
 8015dea:	1c42      	adds	r2, r0, #1
 8015dec:	1c73      	adds	r3, r6, #1
 8015dee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015df2:	1c62      	adds	r2, r4, #1
 8015df4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015df8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015dfc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8015e00:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015e04:	0952      	lsrs	r2, r2, #5
 8015e06:	4303      	orrs	r3, r0
 8015e08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e0c:	4313      	orrs	r3, r2
 8015e0e:	800b      	strh	r3, [r1, #0]
 8015e10:	b005      	add	sp, #20
 8015e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e16:	bf00      	nop
 8015e18:	0801f4ba 	.word	0x0801f4ba
 8015e1c:	0801fa79 	.word	0x0801fa79
 8015e20:	0801f5a3 	.word	0x0801f5a3

08015e24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e28:	ed2d 8b08 	vpush	{d8-d11}
 8015e2c:	b09f      	sub	sp, #124	; 0x7c
 8015e2e:	eeb0 aa40 	vmov.f32	s20, s0
 8015e32:	921b      	str	r2, [sp, #108]	; 0x6c
 8015e34:	9309      	str	r3, [sp, #36]	; 0x24
 8015e36:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8015e38:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8015e3c:	931c      	str	r3, [sp, #112]	; 0x70
 8015e3e:	9119      	str	r1, [sp, #100]	; 0x64
 8015e40:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8015e44:	901d      	str	r0, [sp, #116]	; 0x74
 8015e46:	6850      	ldr	r0, [r2, #4]
 8015e48:	6812      	ldr	r2, [r2, #0]
 8015e4a:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8015e4c:	fb00 1303 	mla	r3, r0, r3, r1
 8015e50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e54:	930c      	str	r3, [sp, #48]	; 0x30
 8015e56:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e58:	681b      	ldr	r3, [r3, #0]
 8015e5a:	9312      	str	r3, [sp, #72]	; 0x48
 8015e5c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e5e:	685e      	ldr	r6, [r3, #4]
 8015e60:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8015e64:	930d      	str	r3, [sp, #52]	; 0x34
 8015e66:	eef0 9a60 	vmov.f32	s19, s1
 8015e6a:	eeb0 9a41 	vmov.f32	s18, s2
 8015e6e:	eeb0 8a62 	vmov.f32	s16, s5
 8015e72:	eef0 8a43 	vmov.f32	s17, s6
 8015e76:	eef0 ba44 	vmov.f32	s23, s8
 8015e7a:	eeb0 ba64 	vmov.f32	s22, s9
 8015e7e:	eef0 aa45 	vmov.f32	s21, s10
 8015e82:	3604      	adds	r6, #4
 8015e84:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015e86:	2b00      	cmp	r3, #0
 8015e88:	dc03      	bgt.n	8015e92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015e8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015e8c:	2b00      	cmp	r3, #0
 8015e8e:	f340 838e 	ble.w	80165ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8015e92:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015e98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015e9c:	1e48      	subs	r0, r1, #1
 8015e9e:	1e57      	subs	r7, r2, #1
 8015ea0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ea2:	2b00      	cmp	r3, #0
 8015ea4:	f340 819b 	ble.w	80161de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8015ea8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015eaa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015eae:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015eb2:	d406      	bmi.n	8015ec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015eb4:	4584      	cmp	ip, r0
 8015eb6:	da04      	bge.n	8015ec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015eb8:	2b00      	cmp	r3, #0
 8015eba:	db02      	blt.n	8015ec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ebc:	42bb      	cmp	r3, r7
 8015ebe:	f2c0 818f 	blt.w	80161e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8015ec2:	f11c 0c01 	adds.w	ip, ip, #1
 8015ec6:	f100 817d 	bmi.w	80161c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015eca:	4561      	cmp	r1, ip
 8015ecc:	f2c0 817a 	blt.w	80161c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015ed0:	3301      	adds	r3, #1
 8015ed2:	f100 8177 	bmi.w	80161c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015ed6:	429a      	cmp	r2, r3
 8015ed8:	f2c0 8174 	blt.w	80161c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8015edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ede:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015ee0:	931a      	str	r3, [sp, #104]	; 0x68
 8015ee2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015ee4:	2b00      	cmp	r3, #0
 8015ee6:	f340 8199 	ble.w	801621c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8015eea:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015eec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015ef0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015ef2:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015ef6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015ef8:	141b      	asrs	r3, r3, #16
 8015efa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015efe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015f02:	f100 81dc 	bmi.w	80162be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015f06:	f100 38ff 	add.w	r8, r0, #4294967295
 8015f0a:	4543      	cmp	r3, r8
 8015f0c:	f280 81d7 	bge.w	80162be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015f10:	f1bc 0f00 	cmp.w	ip, #0
 8015f14:	f2c0 81d3 	blt.w	80162be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015f18:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015f1c:	45c4      	cmp	ip, r8
 8015f1e:	f280 81ce 	bge.w	80162be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015f22:	b200      	sxth	r0, r0
 8015f24:	fb0c 3300 	mla	r3, ip, r0, r3
 8015f28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015f2a:	eb04 0803 	add.w	r8, r4, r3
 8015f2e:	5ce3      	ldrb	r3, [r4, r3]
 8015f30:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015f34:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015f38:	2a00      	cmp	r2, #0
 8015f3a:	f000 81b5 	beq.w	80162a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8015f3e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015f42:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015f46:	940e      	str	r4, [sp, #56]	; 0x38
 8015f48:	0e24      	lsrs	r4, r4, #24
 8015f4a:	9415      	str	r4, [sp, #84]	; 0x54
 8015f4c:	b179      	cbz	r1, 8015f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015f4e:	eb08 0c00 	add.w	ip, r8, r0
 8015f52:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015f56:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015f5a:	900a      	str	r0, [sp, #40]	; 0x28
 8015f5c:	0e00      	lsrs	r0, r0, #24
 8015f5e:	9013      	str	r0, [sp, #76]	; 0x4c
 8015f60:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015f64:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015f68:	900f      	str	r0, [sp, #60]	; 0x3c
 8015f6a:	0e00      	lsrs	r0, r0, #24
 8015f6c:	9016      	str	r0, [sp, #88]	; 0x58
 8015f6e:	b292      	uxth	r2, r2
 8015f70:	b289      	uxth	r1, r1
 8015f72:	fb02 f901 	mul.w	r9, r2, r1
 8015f76:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015f7a:	0112      	lsls	r2, r2, #4
 8015f7c:	eba2 0809 	sub.w	r8, r2, r9
 8015f80:	b289      	uxth	r1, r1
 8015f82:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015f86:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f8a:	fa1f f888 	uxth.w	r8, r8
 8015f8e:	1a52      	subs	r2, r2, r1
 8015f90:	b292      	uxth	r2, r2
 8015f92:	fb08 f000 	mul.w	r0, r8, r0
 8015f96:	fb02 000e 	mla	r0, r2, lr, r0
 8015f9a:	fb01 0004 	mla	r0, r1, r4, r0
 8015f9e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015fa0:	fb09 0004 	mla	r0, r9, r4, r0
 8015fa4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015fa8:	2800      	cmp	r0, #0
 8015faa:	f000 8100 	beq.w	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015fae:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015fb2:	d01b      	beq.n	8015fec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015fb4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015fb8:	fb0e fa0a 	mul.w	sl, lr, sl
 8015fbc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015fc0:	fb0e fe03 	mul.w	lr, lr, r3
 8015fc4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015fc8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015fcc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015fd0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015fd4:	4453      	add	r3, sl
 8015fd6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015fda:	0a1b      	lsrs	r3, r3, #8
 8015fdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015fe0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015fe4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015fe8:	ea43 030c 	orr.w	r3, r3, ip
 8015fec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015fee:	2cff      	cmp	r4, #255	; 0xff
 8015ff0:	d021      	beq.n	8016036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8015ff2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015ff4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015ff8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015ffa:	fb04 fb0b 	mul.w	fp, r4, fp
 8015ffe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016000:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016004:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016006:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801600a:	fb04 fa0a 	mul.w	sl, r4, sl
 801600e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016012:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016016:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801601a:	44de      	add	lr, fp
 801601c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016020:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016024:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016028:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801602c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016030:	ea4e 040a 	orr.w	r4, lr, sl
 8016034:	940e      	str	r4, [sp, #56]	; 0x38
 8016036:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016038:	2cff      	cmp	r4, #255	; 0xff
 801603a:	d021      	beq.n	8016080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801603c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801603e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016042:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016044:	fb04 fb0b 	mul.w	fp, r4, fp
 8016048:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801604a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801604e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016050:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016054:	fb04 fa0a 	mul.w	sl, r4, sl
 8016058:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801605c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016060:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016064:	44de      	add	lr, fp
 8016066:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801606a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801606e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016072:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016076:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801607a:	ea4e 040a 	orr.w	r4, lr, sl
 801607e:	940a      	str	r4, [sp, #40]	; 0x28
 8016080:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016082:	2cff      	cmp	r4, #255	; 0xff
 8016084:	d021      	beq.n	80160ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8016086:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016088:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801608c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801608e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016092:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016094:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016098:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801609a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801609e:	fb04 fa0a 	mul.w	sl, r4, sl
 80160a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80160aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80160ae:	44de      	add	lr, fp
 80160b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80160b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80160b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80160bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80160c4:	ea4e 040a 	orr.w	r4, lr, sl
 80160c8:	940f      	str	r4, [sp, #60]	; 0x3c
 80160ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80160cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80160d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80160d2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80160d6:	fb08 fc0c 	mul.w	ip, r8, ip
 80160da:	fb02 cc0e 	mla	ip, r2, lr, ip
 80160de:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80160e2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80160e4:	fb01 cc0e 	mla	ip, r1, lr, ip
 80160e8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80160ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80160ee:	fb09 cc0e 	mla	ip, r9, lr, ip
 80160f2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80160f6:	fb08 f80e 	mul.w	r8, r8, lr
 80160fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80160fe:	fb02 8303 	mla	r3, r2, r3, r8
 8016102:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016104:	f8b7 e000 	ldrh.w	lr, [r7]
 8016108:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801610a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801610e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016110:	fb01 330a 	mla	r3, r1, sl, r3
 8016114:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016118:	fb09 3901 	mla	r9, r9, r1, r3
 801611c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801611e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016120:	4343      	muls	r3, r0
 8016122:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016126:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801612a:	1c58      	adds	r0, r3, #1
 801612c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016130:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016134:	ea4c 0c09 	orr.w	ip, ip, r9
 8016138:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801613c:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8016140:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016144:	ea4f 232e 	mov.w	r3, lr, asr #8
 8016148:	b2c0      	uxtb	r0, r0
 801614a:	fb11 f102 	smulbb	r1, r1, r2
 801614e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016152:	fb03 1300 	mla	r3, r3, r0, r1
 8016156:	b299      	uxth	r1, r3
 8016158:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801615c:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8016160:	fb13 f304 	smulbb	r3, r3, r4
 8016164:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016168:	fb02 3200 	mla	r2, r2, r0, r3
 801616c:	fa5f fc8c 	uxtb.w	ip, ip
 8016170:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8016174:	b2db      	uxtb	r3, r3
 8016176:	fb1c fc04 	smulbb	ip, ip, r4
 801617a:	fb03 cc00 	mla	ip, r3, r0, ip
 801617e:	b292      	uxth	r2, r2
 8016180:	fa1f fc8c 	uxth.w	ip, ip
 8016184:	1c4b      	adds	r3, r1, #1
 8016186:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801618a:	f10c 0001 	add.w	r0, ip, #1
 801618e:	1c51      	adds	r1, r2, #1
 8016190:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8016194:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016198:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801619c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80161a0:	0952      	lsrs	r2, r2, #5
 80161a2:	ea43 030c 	orr.w	r3, r3, ip
 80161a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161aa:	4313      	orrs	r3, r2
 80161ac:	803b      	strh	r3, [r7, #0]
 80161ae:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80161b0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80161b2:	441a      	add	r2, r3
 80161b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80161b6:	9231      	str	r2, [sp, #196]	; 0xc4
 80161b8:	441d      	add	r5, r3
 80161ba:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80161bc:	3b01      	subs	r3, #1
 80161be:	3702      	adds	r7, #2
 80161c0:	931a      	str	r3, [sp, #104]	; 0x68
 80161c2:	e68e      	b.n	8015ee2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80161c4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80161c6:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80161c8:	441c      	add	r4, r3
 80161ca:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80161cc:	9431      	str	r4, [sp, #196]	; 0xc4
 80161ce:	441d      	add	r5, r3
 80161d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161d2:	3b01      	subs	r3, #1
 80161d4:	9309      	str	r3, [sp, #36]	; 0x24
 80161d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80161d8:	3302      	adds	r3, #2
 80161da:	930c      	str	r3, [sp, #48]	; 0x30
 80161dc:	e660      	b.n	8015ea0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80161de:	d024      	beq.n	801622a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 80161e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161e2:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80161e4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80161e6:	3b01      	subs	r3, #1
 80161e8:	fb00 4003 	mla	r0, r0, r3, r4
 80161ec:	1400      	asrs	r0, r0, #16
 80161ee:	f53f ae75 	bmi.w	8015edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80161f2:	3901      	subs	r1, #1
 80161f4:	4288      	cmp	r0, r1
 80161f6:	f6bf ae71 	bge.w	8015edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80161fa:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80161fc:	fb01 5303 	mla	r3, r1, r3, r5
 8016200:	141b      	asrs	r3, r3, #16
 8016202:	f53f ae6b 	bmi.w	8015edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016206:	3a01      	subs	r2, #1
 8016208:	4293      	cmp	r3, r2
 801620a:	f6bf ae67 	bge.w	8015edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801620e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8016212:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8016216:	f1bb 0f00 	cmp.w	fp, #0
 801621a:	dc70      	bgt.n	80162fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 801621c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801621e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016222:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016224:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016228:	930c      	str	r3, [sp, #48]	; 0x30
 801622a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801622c:	2b00      	cmp	r3, #0
 801622e:	f340 81be 	ble.w	80165ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8016232:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016236:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801623a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801623e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016240:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016244:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016248:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801624c:	eef0 6a48 	vmov.f32	s13, s16
 8016250:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016254:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016258:	ee37 8a48 	vsub.f32	s16, s14, s16
 801625c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016260:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016264:	eef0 6a68 	vmov.f32	s13, s17
 8016268:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801626c:	ee18 2a10 	vmov	r2, s16
 8016270:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016274:	fb92 f3f3 	sdiv	r3, r2, r3
 8016278:	ee18 2a90 	vmov	r2, s17
 801627c:	9333      	str	r3, [sp, #204]	; 0xcc
 801627e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016280:	fb92 f3f3 	sdiv	r3, r2, r3
 8016284:	9334      	str	r3, [sp, #208]	; 0xd0
 8016286:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016288:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801628a:	3b01      	subs	r3, #1
 801628c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016290:	9319      	str	r3, [sp, #100]	; 0x64
 8016292:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016294:	bf08      	it	eq
 8016296:	4613      	moveq	r3, r2
 8016298:	ee16 5a90 	vmov	r5, s13
 801629c:	9309      	str	r3, [sp, #36]	; 0x24
 801629e:	eef0 8a67 	vmov.f32	s17, s15
 80162a2:	eeb0 8a47 	vmov.f32	s16, s14
 80162a6:	e5ed      	b.n	8015e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80162a8:	2900      	cmp	r1, #0
 80162aa:	f43f ae60 	beq.w	8015f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80162ae:	f818 0000 	ldrb.w	r0, [r8, r0]
 80162b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80162b6:	900a      	str	r0, [sp, #40]	; 0x28
 80162b8:	0e00      	lsrs	r0, r0, #24
 80162ba:	9013      	str	r0, [sp, #76]	; 0x4c
 80162bc:	e657      	b.n	8015f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80162be:	f113 0801 	adds.w	r8, r3, #1
 80162c2:	f53f af74 	bmi.w	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80162c6:	4540      	cmp	r0, r8
 80162c8:	f6ff af71 	blt.w	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80162cc:	f11c 0801 	adds.w	r8, ip, #1
 80162d0:	f53f af6d 	bmi.w	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80162d4:	45c6      	cmp	lr, r8
 80162d6:	f6ff af6a 	blt.w	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80162da:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80162dc:	9302      	str	r3, [sp, #8]
 80162de:	b200      	sxth	r0, r0
 80162e0:	fa0f f38e 	sxth.w	r3, lr
 80162e4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80162e8:	e9cd c203 	strd	ip, r2, [sp, #12]
 80162ec:	9301      	str	r3, [sp, #4]
 80162ee:	9000      	str	r0, [sp, #0]
 80162f0:	4633      	mov	r3, r6
 80162f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162f4:	981d      	ldr	r0, [sp, #116]	; 0x74
 80162f6:	4639      	mov	r1, r7
 80162f8:	f7ff fc2c 	bl	8015b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80162fc:	e757      	b.n	80161ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80162fe:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016300:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016302:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016306:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016308:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801630c:	1427      	asrs	r7, r4, #16
 801630e:	142b      	asrs	r3, r5, #16
 8016310:	fb01 7303 	mla	r3, r1, r3, r7
 8016314:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016316:	18e7      	adds	r7, r4, r3
 8016318:	5ce3      	ldrb	r3, [r4, r3]
 801631a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801631e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016322:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016326:	2a00      	cmp	r2, #0
 8016328:	f000 8137 	beq.w	801659a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 801632c:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016330:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016334:	9410      	str	r4, [sp, #64]	; 0x40
 8016336:	0e24      	lsrs	r4, r4, #24
 8016338:	9417      	str	r4, [sp, #92]	; 0x5c
 801633a:	b170      	cbz	r0, 801635a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 801633c:	eb07 0e01 	add.w	lr, r7, r1
 8016340:	5c79      	ldrb	r1, [r7, r1]
 8016342:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016346:	910b      	str	r1, [sp, #44]	; 0x2c
 8016348:	0e09      	lsrs	r1, r1, #24
 801634a:	9114      	str	r1, [sp, #80]	; 0x50
 801634c:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016350:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016354:	9111      	str	r1, [sp, #68]	; 0x44
 8016356:	0e09      	lsrs	r1, r1, #24
 8016358:	9118      	str	r1, [sp, #96]	; 0x60
 801635a:	b292      	uxth	r2, r2
 801635c:	b280      	uxth	r0, r0
 801635e:	fb02 f800 	mul.w	r8, r2, r0
 8016362:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016366:	0112      	lsls	r2, r2, #4
 8016368:	eba2 0e08 	sub.w	lr, r2, r8
 801636c:	b280      	uxth	r0, r0
 801636e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016372:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8016374:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016376:	fa1f fe8e 	uxth.w	lr, lr
 801637a:	1a12      	subs	r2, r2, r0
 801637c:	b292      	uxth	r2, r2
 801637e:	fb0e f101 	mul.w	r1, lr, r1
 8016382:	fb02 110c 	mla	r1, r2, ip, r1
 8016386:	fb00 1104 	mla	r1, r0, r4, r1
 801638a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801638c:	fb08 1104 	mla	r1, r8, r4, r1
 8016390:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016394:	2900      	cmp	r1, #0
 8016396:	f000 80f5 	beq.w	8016584 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801639a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801639e:	d019      	beq.n	80163d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 80163a0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80163a4:	fb0c fa0a 	mul.w	sl, ip, sl
 80163a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163ac:	fb0c fc03 	mul.w	ip, ip, r3
 80163b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80163b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80163bc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80163c0:	4453      	add	r3, sl
 80163c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80163c6:	0a1b      	lsrs	r3, r3, #8
 80163c8:	0a3f      	lsrs	r7, r7, #8
 80163ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80163d2:	433b      	orrs	r3, r7
 80163d4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163d6:	2cff      	cmp	r4, #255	; 0xff
 80163d8:	d020      	beq.n	801641c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 80163da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163dc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80163e0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163e2:	4367      	muls	r7, r4
 80163e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80163ea:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80163f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80163f4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80163f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80163fc:	44bc      	add	ip, r7
 80163fe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016402:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016406:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801640a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801640e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016412:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016416:	ea4c 040a 	orr.w	r4, ip, sl
 801641a:	9410      	str	r4, [sp, #64]	; 0x40
 801641c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801641e:	2cff      	cmp	r4, #255	; 0xff
 8016420:	d020      	beq.n	8016464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 8016422:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016424:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016428:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801642a:	4367      	muls	r7, r4
 801642c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801642e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016432:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016434:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016438:	fb04 fa0a 	mul.w	sl, r4, sl
 801643c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016440:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016444:	44bc      	add	ip, r7
 8016446:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801644a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801644e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016452:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016456:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801645a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801645e:	ea4c 040a 	orr.w	r4, ip, sl
 8016462:	940b      	str	r4, [sp, #44]	; 0x2c
 8016464:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016466:	2cff      	cmp	r4, #255	; 0xff
 8016468:	d020      	beq.n	80164ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801646a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801646c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016470:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016472:	4367      	muls	r7, r4
 8016474:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016476:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801647a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801647c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016480:	fb04 fa0a 	mul.w	sl, r4, sl
 8016484:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016488:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801648c:	44bc      	add	ip, r7
 801648e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016492:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016496:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801649a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801649e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164a6:	ea4c 040a 	orr.w	r4, ip, sl
 80164aa:	9411      	str	r4, [sp, #68]	; 0x44
 80164ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80164ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80164b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80164b4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80164b8:	fb0e f707 	mul.w	r7, lr, r7
 80164bc:	fb02 770c 	mla	r7, r2, ip, r7
 80164c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80164c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80164c6:	fb00 770c 	mla	r7, r0, ip, r7
 80164ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80164ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80164d0:	fb08 770c 	mla	r7, r8, ip, r7
 80164d4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80164d8:	fb0e fe0c 	mul.w	lr, lr, ip
 80164dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164e0:	fb02 e303 	mla	r3, r2, r3, lr
 80164e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80164e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80164e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80164ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80164ee:	fb00 330a 	mla	r3, r0, sl, r3
 80164f2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80164f6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80164fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80164fc:	f8b9 0000 	ldrh.w	r0, [r9]
 8016500:	434b      	muls	r3, r1
 8016502:	0a3f      	lsrs	r7, r7, #8
 8016504:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016508:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801650c:	1c59      	adds	r1, r3, #1
 801650e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016512:	ea47 070c 	orr.w	r7, r7, ip
 8016516:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801651a:	1202      	asrs	r2, r0, #8
 801651c:	0c3b      	lsrs	r3, r7, #16
 801651e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016522:	b2c9      	uxtb	r1, r1
 8016524:	fb13 f304 	smulbb	r3, r3, r4
 8016528:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801652c:	fb02 3201 	mla	r2, r2, r1, r3
 8016530:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016534:	10c3      	asrs	r3, r0, #3
 8016536:	b2ff      	uxtb	r7, r7
 8016538:	00c0      	lsls	r0, r0, #3
 801653a:	b292      	uxth	r2, r2
 801653c:	fb1c fc04 	smulbb	ip, ip, r4
 8016540:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016544:	b2c0      	uxtb	r0, r0
 8016546:	fb17 f704 	smulbb	r7, r7, r4
 801654a:	fb03 c301 	mla	r3, r3, r1, ip
 801654e:	fb00 7001 	mla	r0, r0, r1, r7
 8016552:	f102 0c01 	add.w	ip, r2, #1
 8016556:	b280      	uxth	r0, r0
 8016558:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801655c:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016560:	1c42      	adds	r2, r0, #1
 8016562:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016566:	b29b      	uxth	r3, r3
 8016568:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801656c:	ea4c 0200 	orr.w	r2, ip, r0
 8016570:	f103 0c01 	add.w	ip, r3, #1
 8016574:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016578:	095b      	lsrs	r3, r3, #5
 801657a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801657e:	431a      	orrs	r2, r3
 8016580:	f8a9 2000 	strh.w	r2, [r9]
 8016584:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016586:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016588:	441a      	add	r2, r3
 801658a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801658c:	9231      	str	r2, [sp, #196]	; 0xc4
 801658e:	f109 0902 	add.w	r9, r9, #2
 8016592:	441d      	add	r5, r3
 8016594:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016598:	e63d      	b.n	8016216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801659a:	2800      	cmp	r0, #0
 801659c:	f43f aedd 	beq.w	801635a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 80165a0:	5c79      	ldrb	r1, [r7, r1]
 80165a2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80165a6:	910b      	str	r1, [sp, #44]	; 0x2c
 80165a8:	0e09      	lsrs	r1, r1, #24
 80165aa:	9114      	str	r1, [sp, #80]	; 0x50
 80165ac:	e6d5      	b.n	801635a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 80165ae:	b01f      	add	sp, #124	; 0x7c
 80165b0:	ecbd 8b08 	vpop	{d8-d11}
 80165b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80165b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165bc:	880e      	ldrh	r6, [r1, #0]
 80165be:	b085      	sub	sp, #20
 80165c0:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80165c4:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80165c8:	4691      	mov	r9, r2
 80165ca:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80165ce:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80165d2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80165d6:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80165da:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80165de:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80165e2:	9200      	str	r2, [sp, #0]
 80165e4:	00f6      	lsls	r6, r6, #3
 80165e6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80165ea:	9201      	str	r2, [sp, #4]
 80165ec:	2c00      	cmp	r4, #0
 80165ee:	b2f2      	uxtb	r2, r6
 80165f0:	fb04 560c 	mla	r6, r4, ip, r5
 80165f4:	9202      	str	r2, [sp, #8]
 80165f6:	eb09 0e06 	add.w	lr, r9, r6
 80165fa:	db3e      	blt.n	801667a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 80165fc:	45a0      	cmp	r8, r4
 80165fe:	dd3c      	ble.n	801667a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8016600:	2d00      	cmp	r5, #0
 8016602:	db38      	blt.n	8016676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016604:	45ac      	cmp	ip, r5
 8016606:	dd36      	ble.n	8016676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016608:	f819 2006 	ldrb.w	r2, [r9, r6]
 801660c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016610:	1c6e      	adds	r6, r5, #1
 8016612:	d435      	bmi.n	8016680 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8016614:	45b4      	cmp	ip, r6
 8016616:	dd33      	ble.n	8016680 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8016618:	b3a0      	cbz	r0, 8016684 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801661a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801661e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016622:	3401      	adds	r4, #1
 8016624:	d432      	bmi.n	801668c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8016626:	45a0      	cmp	r8, r4
 8016628:	dd30      	ble.n	801668c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801662a:	b397      	cbz	r7, 8016692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801662c:	2d00      	cmp	r5, #0
 801662e:	db2b      	blt.n	8016688 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016630:	45ac      	cmp	ip, r5
 8016632:	dd29      	ble.n	8016688 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016634:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016638:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801663c:	3501      	adds	r5, #1
 801663e:	d42b      	bmi.n	8016698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8016640:	45ac      	cmp	ip, r5
 8016642:	dd29      	ble.n	8016698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8016644:	b350      	cbz	r0, 801669c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 8016646:	44f4      	add	ip, lr
 8016648:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801664c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016650:	280f      	cmp	r0, #15
 8016652:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016656:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801665a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801665e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016662:	d801      	bhi.n	8016668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 8016664:	2f0f      	cmp	r7, #15
 8016666:	d91b      	bls.n	80166a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 8016668:	4b7d      	ldr	r3, [pc, #500]	; (8016860 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801666a:	4a7e      	ldr	r2, [pc, #504]	; (8016864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801666c:	487e      	ldr	r0, [pc, #504]	; (8016868 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801666e:	f240 210d 	movw	r1, #525	; 0x20d
 8016672:	f004 ff99 	bl	801b5a8 <__assert_func>
 8016676:	2200      	movs	r2, #0
 8016678:	e7ca      	b.n	8016610 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801667a:	2600      	movs	r6, #0
 801667c:	4632      	mov	r2, r6
 801667e:	e7d0      	b.n	8016622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016680:	2600      	movs	r6, #0
 8016682:	e7ce      	b.n	8016622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016684:	4606      	mov	r6, r0
 8016686:	e7cc      	b.n	8016622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016688:	2400      	movs	r4, #0
 801668a:	e7d7      	b.n	801663c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 801668c:	2300      	movs	r3, #0
 801668e:	461c      	mov	r4, r3
 8016690:	e7de      	b.n	8016650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8016692:	463b      	mov	r3, r7
 8016694:	463c      	mov	r4, r7
 8016696:	e7db      	b.n	8016650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8016698:	2300      	movs	r3, #0
 801669a:	e7d9      	b.n	8016650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801669c:	4603      	mov	r3, r0
 801669e:	e7d7      	b.n	8016650 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80166a0:	b280      	uxth	r0, r0
 80166a2:	b2bf      	uxth	r7, r7
 80166a4:	fb00 fe07 	mul.w	lr, r0, r7
 80166a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80166ac:	0100      	lsls	r0, r0, #4
 80166ae:	eba0 0c0e 	sub.w	ip, r0, lr
 80166b2:	b2bf      	uxth	r7, r7
 80166b4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80166b8:	fa1f fc8c 	uxth.w	ip, ip
 80166bc:	1bed      	subs	r5, r5, r7
 80166be:	b2ad      	uxth	r5, r5
 80166c0:	fb0c f00a 	mul.w	r0, ip, sl
 80166c4:	fb05 000b 	mla	r0, r5, fp, r0
 80166c8:	fb07 0009 	mla	r0, r7, r9, r0
 80166cc:	fb0e 0008 	mla	r0, lr, r8, r0
 80166d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80166d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80166d8:	9003      	str	r0, [sp, #12]
 80166da:	d018      	beq.n	801670e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 80166dc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80166e0:	fb0b f000 	mul.w	r0, fp, r0
 80166e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80166e8:	fb0b fb02 	mul.w	fp, fp, r2
 80166ec:	0a02      	lsrs	r2, r0, #8
 80166ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80166f2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80166f6:	4402      	add	r2, r0
 80166f8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80166fc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016700:	0a12      	lsrs	r2, r2, #8
 8016702:	0a00      	lsrs	r0, r0, #8
 8016704:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016708:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801670c:	4302      	orrs	r2, r0
 801670e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016712:	d019      	beq.n	8016748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 8016714:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016718:	fb0a fb0b 	mul.w	fp, sl, fp
 801671c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016720:	fb0a fa06 	mul.w	sl, sl, r6
 8016724:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016728:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801672c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016730:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016734:	445e      	add	r6, fp
 8016736:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801673a:	0a36      	lsrs	r6, r6, #8
 801673c:	0a00      	lsrs	r0, r0, #8
 801673e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016742:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016746:	4306      	orrs	r6, r0
 8016748:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801674c:	d019      	beq.n	8016782 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 801674e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016752:	fb09 fa0a 	mul.w	sl, r9, sl
 8016756:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801675a:	fb09 f904 	mul.w	r9, r9, r4
 801675e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016762:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016766:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801676a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801676e:	4454      	add	r4, sl
 8016770:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016774:	0a24      	lsrs	r4, r4, #8
 8016776:	0a00      	lsrs	r0, r0, #8
 8016778:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801677c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016780:	4304      	orrs	r4, r0
 8016782:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016786:	d019      	beq.n	80167bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 8016788:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801678c:	fb08 f909 	mul.w	r9, r8, r9
 8016790:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016794:	fb08 f803 	mul.w	r8, r8, r3
 8016798:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801679c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167a0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80167a4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80167a8:	444b      	add	r3, r9
 80167aa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80167ae:	0a1b      	lsrs	r3, r3, #8
 80167b0:	0a00      	lsrs	r0, r0, #8
 80167b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167b6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80167ba:	4303      	orrs	r3, r0
 80167bc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80167c0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80167c4:	fb0c f808 	mul.w	r8, ip, r8
 80167c8:	fb05 8800 	mla	r8, r5, r0, r8
 80167cc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80167d0:	fb07 8800 	mla	r8, r7, r0, r8
 80167d4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80167d8:	fb0e 8000 	mla	r0, lr, r0, r8
 80167dc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80167e0:	0a00      	lsrs	r0, r0, #8
 80167e2:	fb0c f606 	mul.w	r6, ip, r6
 80167e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80167ea:	fb05 6202 	mla	r2, r5, r2, r6
 80167ee:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80167f2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80167f6:	fb07 2700 	mla	r7, r7, r0, r2
 80167fa:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80167fe:	9b03      	ldr	r3, [sp, #12]
 8016800:	9c02      	ldr	r4, [sp, #8]
 8016802:	9d01      	ldr	r5, [sp, #4]
 8016804:	fb0e 7000 	mla	r0, lr, r0, r7
 8016808:	43da      	mvns	r2, r3
 801680a:	9b00      	ldr	r3, [sp, #0]
 801680c:	b2d2      	uxtb	r2, r2
 801680e:	0a00      	lsrs	r0, r0, #8
 8016810:	4353      	muls	r3, r2
 8016812:	4354      	muls	r4, r2
 8016814:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016818:	ea48 0000 	orr.w	r0, r8, r0
 801681c:	4355      	muls	r5, r2
 801681e:	4622      	mov	r2, r4
 8016820:	1c5c      	adds	r4, r3, #1
 8016822:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8016826:	0c03      	lsrs	r3, r0, #16
 8016828:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801682c:	4b0f      	ldr	r3, [pc, #60]	; (801686c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 801682e:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8016832:	1c54      	adds	r4, r2, #1
 8016834:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016838:	b2c2      	uxtb	r2, r0
 801683a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801683e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8016842:	1c6a      	adds	r2, r5, #1
 8016844:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016848:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801684c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016850:	00c0      	lsls	r0, r0, #3
 8016852:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016856:	4318      	orrs	r0, r3
 8016858:	8008      	strh	r0, [r1, #0]
 801685a:	b005      	add	sp, #20
 801685c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016860:	0801f4ba 	.word	0x0801f4ba
 8016864:	0801fa79 	.word	0x0801fa79
 8016868:	0801f5a3 	.word	0x0801f5a3
 801686c:	fffff800 	.word	0xfffff800

08016870 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016874:	ed2d 8b08 	vpush	{d8-d11}
 8016878:	b09b      	sub	sp, #108	; 0x6c
 801687a:	eeb0 aa40 	vmov.f32	s20, s0
 801687e:	9218      	str	r2, [sp, #96]	; 0x60
 8016880:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016882:	9116      	str	r1, [sp, #88]	; 0x58
 8016884:	9307      	str	r3, [sp, #28]
 8016886:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801688a:	9019      	str	r0, [sp, #100]	; 0x64
 801688c:	6850      	ldr	r0, [r2, #4]
 801688e:	6812      	ldr	r2, [r2, #0]
 8016890:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016892:	fb00 1303 	mla	r3, r0, r3, r1
 8016896:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801689a:	930a      	str	r3, [sp, #40]	; 0x28
 801689c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801689e:	681b      	ldr	r3, [r3, #0]
 80168a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80168a2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80168a4:	685e      	ldr	r6, [r3, #4]
 80168a6:	eef0 9a60 	vmov.f32	s19, s1
 80168aa:	eeb0 9a41 	vmov.f32	s18, s2
 80168ae:	eeb0 8a62 	vmov.f32	s16, s5
 80168b2:	eef0 8a43 	vmov.f32	s17, s6
 80168b6:	eef0 ba44 	vmov.f32	s23, s8
 80168ba:	eeb0 ba64 	vmov.f32	s22, s9
 80168be:	eef0 aa45 	vmov.f32	s21, s10
 80168c2:	3604      	adds	r6, #4
 80168c4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80168c6:	2b00      	cmp	r3, #0
 80168c8:	dc03      	bgt.n	80168d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80168ca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80168cc:	2b00      	cmp	r3, #0
 80168ce:	f340 8371 	ble.w	8016fb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80168d2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80168d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80168d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80168dc:	1e48      	subs	r0, r1, #1
 80168de:	1e57      	subs	r7, r2, #1
 80168e0:	9b07      	ldr	r3, [sp, #28]
 80168e2:	2b00      	cmp	r3, #0
 80168e4:	f340 8189 	ble.w	8016bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80168e8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80168ea:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80168ee:	ea4f 4325 	mov.w	r3, r5, asr #16
 80168f2:	d406      	bmi.n	8016902 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168f4:	4584      	cmp	ip, r0
 80168f6:	da04      	bge.n	8016902 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168f8:	2b00      	cmp	r3, #0
 80168fa:	db02      	blt.n	8016902 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168fc:	42bb      	cmp	r3, r7
 80168fe:	f2c0 817d 	blt.w	8016bfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016902:	f11c 0c01 	adds.w	ip, ip, #1
 8016906:	f100 816b 	bmi.w	8016be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801690a:	4561      	cmp	r1, ip
 801690c:	f2c0 8168 	blt.w	8016be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016910:	3301      	adds	r3, #1
 8016912:	f100 8165 	bmi.w	8016be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016916:	429a      	cmp	r2, r3
 8016918:	f2c0 8162 	blt.w	8016be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801691c:	9b07      	ldr	r3, [sp, #28]
 801691e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016920:	9317      	str	r3, [sp, #92]	; 0x5c
 8016922:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016924:	2b00      	cmp	r3, #0
 8016926:	f340 8187 	ble.w	8016c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801692a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801692c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016930:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016932:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016936:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016938:	141b      	asrs	r3, r3, #16
 801693a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801693e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016942:	f100 81ca 	bmi.w	8016cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016946:	f101 38ff 	add.w	r8, r1, #4294967295
 801694a:	4543      	cmp	r3, r8
 801694c:	f280 81c5 	bge.w	8016cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016950:	f1bc 0f00 	cmp.w	ip, #0
 8016954:	f2c0 81c1 	blt.w	8016cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016958:	f10e 38ff 	add.w	r8, lr, #4294967295
 801695c:	45c4      	cmp	ip, r8
 801695e:	f280 81bc 	bge.w	8016cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8016962:	b209      	sxth	r1, r1
 8016964:	fb0c 3301 	mla	r3, ip, r1, r3
 8016968:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801696a:	eb04 0803 	add.w	r8, r4, r3
 801696e:	5ce3      	ldrb	r3, [r4, r3]
 8016970:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016974:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016978:	2a00      	cmp	r2, #0
 801697a:	f000 81a3 	beq.w	8016cc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801697e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016982:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016986:	940b      	str	r4, [sp, #44]	; 0x2c
 8016988:	0e24      	lsrs	r4, r4, #24
 801698a:	9412      	str	r4, [sp, #72]	; 0x48
 801698c:	b178      	cbz	r0, 80169ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801698e:	eb08 0c01 	add.w	ip, r8, r1
 8016992:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016996:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801699a:	9108      	str	r1, [sp, #32]
 801699c:	0e09      	lsrs	r1, r1, #24
 801699e:	9110      	str	r1, [sp, #64]	; 0x40
 80169a0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80169a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80169a8:	910c      	str	r1, [sp, #48]	; 0x30
 80169aa:	0e09      	lsrs	r1, r1, #24
 80169ac:	9113      	str	r1, [sp, #76]	; 0x4c
 80169ae:	b292      	uxth	r2, r2
 80169b0:	b280      	uxth	r0, r0
 80169b2:	fb02 f900 	mul.w	r9, r2, r0
 80169b6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80169ba:	0112      	lsls	r2, r2, #4
 80169bc:	eba2 0809 	sub.w	r8, r2, r9
 80169c0:	b280      	uxth	r0, r0
 80169c2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80169c6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80169c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169ca:	fa1f f888 	uxth.w	r8, r8
 80169ce:	1a12      	subs	r2, r2, r0
 80169d0:	b292      	uxth	r2, r2
 80169d2:	fb08 f101 	mul.w	r1, r8, r1
 80169d6:	fb02 110e 	mla	r1, r2, lr, r1
 80169da:	fb00 1104 	mla	r1, r0, r4, r1
 80169de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80169e0:	fb09 1104 	mla	r1, r9, r4, r1
 80169e4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80169e8:	2900      	cmp	r1, #0
 80169ea:	f000 80ee 	beq.w	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80169ee:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80169f2:	d01b      	beq.n	8016a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80169f4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80169f8:	fb0e fa0a 	mul.w	sl, lr, sl
 80169fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a00:	fb0e fe03 	mul.w	lr, lr, r3
 8016a04:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016a08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a0c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016a10:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016a14:	4453      	add	r3, sl
 8016a16:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016a1a:	0a1b      	lsrs	r3, r3, #8
 8016a1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a24:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016a28:	ea43 030c 	orr.w	r3, r3, ip
 8016a2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a2e:	2cff      	cmp	r4, #255	; 0xff
 8016a30:	d021      	beq.n	8016a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016a32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a34:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016a38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a3a:	fb04 fb0b 	mul.w	fp, r4, fp
 8016a3e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016a4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a52:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016a56:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016a5a:	44de      	add	lr, fp
 8016a5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016a60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016a64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a70:	ea4e 040a 	orr.w	r4, lr, sl
 8016a74:	940b      	str	r4, [sp, #44]	; 0x2c
 8016a76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a78:	2cff      	cmp	r4, #255	; 0xff
 8016a7a:	d021      	beq.n	8016ac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016a7c:	9c08      	ldr	r4, [sp, #32]
 8016a7e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016a82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a84:	fb04 fb0b 	mul.w	fp, r4, fp
 8016a88:	9c08      	ldr	r4, [sp, #32]
 8016a8a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a8e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a90:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016a94:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a9c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016aa0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016aa4:	44de      	add	lr, fp
 8016aa6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016aaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016aae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ab2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ab6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016aba:	ea4e 040a 	orr.w	r4, lr, sl
 8016abe:	9408      	str	r4, [sp, #32]
 8016ac0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ac2:	2cff      	cmp	r4, #255	; 0xff
 8016ac4:	d021      	beq.n	8016b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016ac6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016ac8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016acc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ace:	fb04 fb0b 	mul.w	fp, r4, fp
 8016ad2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016ad4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016ad8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ada:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016ade:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ae2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ae6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016aea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016aee:	44de      	add	lr, fp
 8016af0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016af4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016af8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016afc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016b00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016b04:	ea4e 040a 	orr.w	r4, lr, sl
 8016b08:	940c      	str	r4, [sp, #48]	; 0x30
 8016b0a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b0c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b10:	9c08      	ldr	r4, [sp, #32]
 8016b12:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016b16:	fb08 fc0c 	mul.w	ip, r8, ip
 8016b1a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016b1e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016b22:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016b24:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016b28:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016b2c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b2e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016b32:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016b36:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b3a:	fb08 f80e 	mul.w	r8, r8, lr
 8016b3e:	fb02 8303 	mla	r3, r2, r3, r8
 8016b42:	9a08      	ldr	r2, [sp, #32]
 8016b44:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016b48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016b4a:	fb00 330a 	mla	r3, r0, sl, r3
 8016b4e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016b52:	fb09 3900 	mla	r9, r9, r0, r3
 8016b56:	883b      	ldrh	r3, [r7, #0]
 8016b58:	43c9      	mvns	r1, r1
 8016b5a:	1218      	asrs	r0, r3, #8
 8016b5c:	b2c9      	uxtb	r1, r1
 8016b5e:	10da      	asrs	r2, r3, #3
 8016b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016b68:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016b6c:	00db      	lsls	r3, r3, #3
 8016b6e:	4348      	muls	r0, r1
 8016b70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b74:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016b78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016b7c:	b2db      	uxtb	r3, r3
 8016b7e:	434b      	muls	r3, r1
 8016b80:	ea4c 0c09 	orr.w	ip, ip, r9
 8016b84:	434a      	muls	r2, r1
 8016b86:	1c41      	adds	r1, r0, #1
 8016b88:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016b8c:	ea4f 401c 	mov.w	r0, ip, lsr #16
 8016b90:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016b94:	4960      	ldr	r1, [pc, #384]	; (8016d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8016b96:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8016b9a:	1c59      	adds	r1, r3, #1
 8016b9c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016ba0:	fa5f f38c 	uxtb.w	r3, ip
 8016ba4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8016ba8:	1c51      	adds	r1, r2, #1
 8016baa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016bae:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016bb2:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8016bb6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016bba:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8016bbe:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016bc2:	ea43 0c0c 	orr.w	ip, r3, ip
 8016bc6:	f8a7 c000 	strh.w	ip, [r7]
 8016bca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016bcc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016bce:	441a      	add	r2, r3
 8016bd0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016bd2:	922d      	str	r2, [sp, #180]	; 0xb4
 8016bd4:	441d      	add	r5, r3
 8016bd6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016bd8:	3b01      	subs	r3, #1
 8016bda:	3702      	adds	r7, #2
 8016bdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8016bde:	e6a0      	b.n	8016922 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016be0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016be2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016be4:	441c      	add	r4, r3
 8016be6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016be8:	942d      	str	r4, [sp, #180]	; 0xb4
 8016bea:	441d      	add	r5, r3
 8016bec:	9b07      	ldr	r3, [sp, #28]
 8016bee:	3b01      	subs	r3, #1
 8016bf0:	9307      	str	r3, [sp, #28]
 8016bf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016bf4:	3302      	adds	r3, #2
 8016bf6:	930a      	str	r3, [sp, #40]	; 0x28
 8016bf8:	e672      	b.n	80168e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bfa:	d024      	beq.n	8016c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016bfc:	9b07      	ldr	r3, [sp, #28]
 8016bfe:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8016c00:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016c02:	3b01      	subs	r3, #1
 8016c04:	fb00 4003 	mla	r0, r0, r3, r4
 8016c08:	1400      	asrs	r0, r0, #16
 8016c0a:	f53f ae87 	bmi.w	801691c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c0e:	3901      	subs	r1, #1
 8016c10:	4288      	cmp	r0, r1
 8016c12:	f6bf ae83 	bge.w	801691c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c16:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016c18:	fb01 5303 	mla	r3, r1, r3, r5
 8016c1c:	141b      	asrs	r3, r3, #16
 8016c1e:	f53f ae7d 	bmi.w	801691c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c22:	3a01      	subs	r2, #1
 8016c24:	4293      	cmp	r3, r2
 8016c26:	f6bf ae79 	bge.w	801691c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c2a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016c2e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8016c32:	f1bb 0f00 	cmp.w	fp, #0
 8016c36:	dc71      	bgt.n	8016d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8016c38:	9b07      	ldr	r3, [sp, #28]
 8016c3a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016c3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c40:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016c44:	930a      	str	r3, [sp, #40]	; 0x28
 8016c46:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016c48:	2b00      	cmp	r3, #0
 8016c4a:	f340 81b3 	ble.w	8016fb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8016c4e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016c52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016c56:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016c5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016c5c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016c60:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016c64:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016c68:	eef0 6a48 	vmov.f32	s13, s16
 8016c6c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016c70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c74:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016c78:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8016c7c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016c80:	eef0 6a68 	vmov.f32	s13, s17
 8016c84:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016c88:	ee18 2a10 	vmov	r2, s16
 8016c8c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016c90:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c94:	ee18 2a90 	vmov	r2, s17
 8016c98:	932f      	str	r3, [sp, #188]	; 0xbc
 8016c9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016c9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ca0:	9330      	str	r3, [sp, #192]	; 0xc0
 8016ca2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016ca4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016ca6:	3b01      	subs	r3, #1
 8016ca8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016cac:	9316      	str	r3, [sp, #88]	; 0x58
 8016cae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016cb0:	bf08      	it	eq
 8016cb2:	4613      	moveq	r3, r2
 8016cb4:	ee16 5a90 	vmov	r5, s13
 8016cb8:	9307      	str	r3, [sp, #28]
 8016cba:	eef0 8a67 	vmov.f32	s17, s15
 8016cbe:	eeb0 8a47 	vmov.f32	s16, s14
 8016cc2:	e5ff      	b.n	80168c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016cc4:	2800      	cmp	r0, #0
 8016cc6:	f43f ae72 	beq.w	80169ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016cca:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016cce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016cd2:	9108      	str	r1, [sp, #32]
 8016cd4:	0e09      	lsrs	r1, r1, #24
 8016cd6:	9110      	str	r1, [sp, #64]	; 0x40
 8016cd8:	e669      	b.n	80169ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016cda:	f113 0801 	adds.w	r8, r3, #1
 8016cde:	f53f af74 	bmi.w	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016ce2:	4541      	cmp	r1, r8
 8016ce4:	f6ff af71 	blt.w	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016ce8:	f11c 0801 	adds.w	r8, ip, #1
 8016cec:	f53f af6d 	bmi.w	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016cf0:	45c6      	cmp	lr, r8
 8016cf2:	f6ff af6a 	blt.w	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016cf6:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016cfa:	b209      	sxth	r1, r1
 8016cfc:	fa0f f38e 	sxth.w	r3, lr
 8016d00:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8016d04:	9301      	str	r3, [sp, #4]
 8016d06:	9100      	str	r1, [sp, #0]
 8016d08:	4633      	mov	r3, r6
 8016d0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016d0c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016d0e:	4639      	mov	r1, r7
 8016d10:	f7ff fc52 	bl	80165b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016d14:	e759      	b.n	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016d16:	bf00      	nop
 8016d18:	fffff800 	.word	0xfffff800
 8016d1c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d1e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016d20:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016d24:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016d2a:	1427      	asrs	r7, r4, #16
 8016d2c:	142b      	asrs	r3, r5, #16
 8016d2e:	fb01 7303 	mla	r3, r1, r3, r7
 8016d32:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016d34:	18e7      	adds	r7, r4, r3
 8016d36:	5ce3      	ldrb	r3, [r4, r3]
 8016d38:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016d3c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016d40:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016d44:	2a00      	cmp	r2, #0
 8016d46:	f000 812b 	beq.w	8016fa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8016d4a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016d4e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016d52:	940d      	str	r4, [sp, #52]	; 0x34
 8016d54:	0e24      	lsrs	r4, r4, #24
 8016d56:	9414      	str	r4, [sp, #80]	; 0x50
 8016d58:	b170      	cbz	r0, 8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016d5a:	eb07 0e01 	add.w	lr, r7, r1
 8016d5e:	5c79      	ldrb	r1, [r7, r1]
 8016d60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016d64:	9109      	str	r1, [sp, #36]	; 0x24
 8016d66:	0e09      	lsrs	r1, r1, #24
 8016d68:	9111      	str	r1, [sp, #68]	; 0x44
 8016d6a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016d6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016d72:	910e      	str	r1, [sp, #56]	; 0x38
 8016d74:	0e09      	lsrs	r1, r1, #24
 8016d76:	9115      	str	r1, [sp, #84]	; 0x54
 8016d78:	b292      	uxth	r2, r2
 8016d7a:	b280      	uxth	r0, r0
 8016d7c:	fb02 f800 	mul.w	r8, r2, r0
 8016d80:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016d84:	0112      	lsls	r2, r2, #4
 8016d86:	eba2 0e08 	sub.w	lr, r2, r8
 8016d8a:	b280      	uxth	r0, r0
 8016d8c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016d90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016d94:	fa1f fe8e 	uxth.w	lr, lr
 8016d98:	1a09      	subs	r1, r1, r0
 8016d9a:	b289      	uxth	r1, r1
 8016d9c:	fb0e f202 	mul.w	r2, lr, r2
 8016da0:	fb01 220c 	mla	r2, r1, ip, r2
 8016da4:	fb00 2204 	mla	r2, r0, r4, r2
 8016da8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016daa:	fb08 2204 	mla	r2, r8, r4, r2
 8016dae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016db2:	2a00      	cmp	r2, #0
 8016db4:	f000 80e9 	beq.w	8016f8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 8016db8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016dbc:	d019      	beq.n	8016df2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8016dbe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016dc2:	fb0c fa0a 	mul.w	sl, ip, sl
 8016dc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016dca:	fb0c fc03 	mul.w	ip, ip, r3
 8016dce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016dd2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016dd6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016dda:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016dde:	4453      	add	r3, sl
 8016de0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016de4:	0a1b      	lsrs	r3, r3, #8
 8016de6:	0a3f      	lsrs	r7, r7, #8
 8016de8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016dec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016df0:	433b      	orrs	r3, r7
 8016df2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016df4:	2cff      	cmp	r4, #255	; 0xff
 8016df6:	d020      	beq.n	8016e3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8016df8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016dfa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016dfe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016e00:	4367      	muls	r7, r4
 8016e02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016e04:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e08:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016e0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e0e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016e12:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016e16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e1a:	44bc      	add	ip, r7
 8016e1c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016e20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016e24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016e2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016e34:	ea4c 040a 	orr.w	r4, ip, sl
 8016e38:	940d      	str	r4, [sp, #52]	; 0x34
 8016e3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e3c:	2cff      	cmp	r4, #255	; 0xff
 8016e3e:	d020      	beq.n	8016e82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8016e40:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e42:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016e46:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e48:	4367      	muls	r7, r4
 8016e4a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e52:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e56:	fb04 fa0a 	mul.w	sl, r4, sl
 8016e5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016e5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e62:	44bc      	add	ip, r7
 8016e64:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016e68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016e6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016e74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016e7c:	ea4c 040a 	orr.w	r4, ip, sl
 8016e80:	9409      	str	r4, [sp, #36]	; 0x24
 8016e82:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e84:	2cff      	cmp	r4, #255	; 0xff
 8016e86:	d020      	beq.n	8016eca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8016e88:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016e8a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016e8e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e90:	4367      	muls	r7, r4
 8016e92:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016e94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e98:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e9e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ea2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ea6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016eaa:	44bc      	add	ip, r7
 8016eac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016eb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016eb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016eb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ebc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ec0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016ec4:	ea4c 040a 	orr.w	r4, ip, sl
 8016ec8:	940e      	str	r4, [sp, #56]	; 0x38
 8016eca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016ecc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016ed0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016ed2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016ed6:	fb0e f707 	mul.w	r7, lr, r7
 8016eda:	fb01 770c 	mla	r7, r1, ip, r7
 8016ede:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016ee2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016ee4:	fb00 770c 	mla	r7, r0, ip, r7
 8016ee8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016eec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016eee:	fb08 770c 	mla	r7, r8, ip, r7
 8016ef2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016ef6:	fb0e fe0c 	mul.w	lr, lr, ip
 8016efa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016efe:	fb01 e303 	mla	r3, r1, r3, lr
 8016f02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016f04:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8016f08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016f0a:	fb00 330a 	mla	r3, r0, sl, r3
 8016f0e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8016f12:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016f16:	f8b9 3000 	ldrh.w	r3, [r9]
 8016f1a:	43d2      	mvns	r2, r2
 8016f1c:	1218      	asrs	r0, r3, #8
 8016f1e:	b2d2      	uxtb	r2, r2
 8016f20:	0a3f      	lsrs	r7, r7, #8
 8016f22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f2a:	4350      	muls	r0, r2
 8016f2c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016f30:	10d9      	asrs	r1, r3, #3
 8016f32:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016f36:	00db      	lsls	r3, r3, #3
 8016f38:	ea47 070c 	orr.w	r7, r7, ip
 8016f3c:	b2db      	uxtb	r3, r3
 8016f3e:	f100 0c01 	add.w	ip, r0, #1
 8016f42:	4353      	muls	r3, r2
 8016f44:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8016f48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016f4c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8016f50:	4351      	muls	r1, r2
 8016f52:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8016f56:	4a1a      	ldr	r2, [pc, #104]	; (8016fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8016f58:	f103 0c01 	add.w	ip, r3, #1
 8016f5c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016f60:	fa5f fc87 	uxtb.w	ip, r7
 8016f64:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016f68:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016f6c:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016f70:	1c4b      	adds	r3, r1, #1
 8016f72:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016f76:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016f7a:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8016f7e:	00ff      	lsls	r7, r7, #3
 8016f80:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f84:	4338      	orrs	r0, r7
 8016f86:	f8a9 0000 	strh.w	r0, [r9]
 8016f8a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016f8c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016f8e:	441a      	add	r2, r3
 8016f90:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016f92:	922d      	str	r2, [sp, #180]	; 0xb4
 8016f94:	f109 0902 	add.w	r9, r9, #2
 8016f98:	441d      	add	r5, r3
 8016f9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016f9e:	e648      	b.n	8016c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8016fa0:	2800      	cmp	r0, #0
 8016fa2:	f43f aee9 	beq.w	8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016fa6:	5c79      	ldrb	r1, [r7, r1]
 8016fa8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016fac:	9109      	str	r1, [sp, #36]	; 0x24
 8016fae:	0e09      	lsrs	r1, r1, #24
 8016fb0:	9111      	str	r1, [sp, #68]	; 0x44
 8016fb2:	e6e1      	b.n	8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016fb4:	b01b      	add	sp, #108	; 0x6c
 8016fb6:	ecbd 8b08 	vpop	{d8-d11}
 8016fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fbe:	bf00      	nop
 8016fc0:	fffff800 	.word	0xfffff800

08016fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fc8:	b085      	sub	sp, #20
 8016fca:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016fce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016fd2:	9103      	str	r1, [sp, #12]
 8016fd4:	fb05 7106 	mla	r1, r5, r6, r7
 8016fd8:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8016fdc:	2d00      	cmp	r5, #0
 8016fde:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016fe2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016fe6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8016fea:	9401      	str	r4, [sp, #4]
 8016fec:	eb03 0901 	add.w	r9, r3, r1
 8016ff0:	f2c0 80c0 	blt.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016ff4:	45a8      	cmp	r8, r5
 8016ff6:	f340 80bd 	ble.w	8017174 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016ffa:	2f00      	cmp	r7, #0
 8016ffc:	f2c0 80b6 	blt.w	801716c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8017000:	42be      	cmp	r6, r7
 8017002:	f340 80b3 	ble.w	801716c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8017006:	f813 c001 	ldrb.w	ip, [r3, r1]
 801700a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801700e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017012:	d019      	beq.n	8017048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8017014:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017018:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801701c:	435a      	muls	r2, r3
 801701e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8017022:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017026:	fb0c f403 	mul.w	r4, ip, r3
 801702a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801702e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017032:	441a      	add	r2, r3
 8017034:	f104 0320 	add.w	r3, r4, #32
 8017038:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801703c:	0a1b      	lsrs	r3, r3, #8
 801703e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8017042:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017046:	4319      	orrs	r1, r3
 8017048:	b289      	uxth	r1, r1
 801704a:	1c7b      	adds	r3, r7, #1
 801704c:	f100 8097 	bmi.w	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017050:	429e      	cmp	r6, r3
 8017052:	f340 8094 	ble.w	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017056:	2800      	cmp	r0, #0
 8017058:	f000 8094 	beq.w	8017184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801705c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017060:	9b01      	ldr	r3, [sp, #4]
 8017062:	2cff      	cmp	r4, #255	; 0xff
 8017064:	885b      	ldrh	r3, [r3, #2]
 8017066:	d01b      	beq.n	80170a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017068:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801706c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017070:	fb0a f202 	mul.w	r2, sl, r2
 8017074:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017078:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801707c:	fb04 fa03 	mul.w	sl, r4, r3
 8017080:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017084:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017088:	441a      	add	r2, r3
 801708a:	f10a 0320 	add.w	r3, sl, #32
 801708e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017092:	0a1b      	lsrs	r3, r3, #8
 8017094:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017098:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801709c:	ea4b 0303 	orr.w	r3, fp, r3
 80170a0:	b29b      	uxth	r3, r3
 80170a2:	3501      	adds	r5, #1
 80170a4:	d474      	bmi.n	8017190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80170a6:	45a8      	cmp	r8, r5
 80170a8:	dd72      	ble.n	8017190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80170aa:	f1be 0f00 	cmp.w	lr, #0
 80170ae:	f000 8120 	beq.w	80172f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80170b2:	2f00      	cmp	r7, #0
 80170b4:	db69      	blt.n	801718a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80170b6:	42be      	cmp	r6, r7
 80170b8:	dd67      	ble.n	801718a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80170ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 80170be:	9a01      	ldr	r2, [sp, #4]
 80170c0:	2dff      	cmp	r5, #255	; 0xff
 80170c2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80170c6:	d01c      	beq.n	8017102 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80170c8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80170cc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80170d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80170d4:	fb05 fa0b 	mul.w	sl, r5, fp
 80170d8:	fb08 f802 	mul.w	r8, r8, r2
 80170dc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80170e0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80170e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80170e8:	4490      	add	r8, r2
 80170ea:	f10a 0220 	add.w	r2, sl, #32
 80170ee:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80170f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80170f6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80170fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170fe:	ea4b 0b0a 	orr.w	fp, fp, sl
 8017102:	fa1f fb8b 	uxth.w	fp, fp
 8017106:	3701      	adds	r7, #1
 8017108:	d447      	bmi.n	801719a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801710a:	42be      	cmp	r6, r7
 801710c:	dd45      	ble.n	801719a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801710e:	2800      	cmp	r0, #0
 8017110:	d046      	beq.n	80171a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8017112:	3601      	adds	r6, #1
 8017114:	9a01      	ldr	r2, [sp, #4]
 8017116:	f819 7006 	ldrb.w	r7, [r9, r6]
 801711a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801711e:	2fff      	cmp	r7, #255	; 0xff
 8017120:	d01a      	beq.n	8017158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8017122:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017126:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801712a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801712e:	fb07 f902 	mul.w	r9, r7, r2
 8017132:	fb08 f806 	mul.w	r8, r8, r6
 8017136:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801713a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801713e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017142:	44b0      	add	r8, r6
 8017144:	f109 0620 	add.w	r6, r9, #32
 8017148:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801714c:	0a36      	lsrs	r6, r6, #8
 801714e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017152:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017156:	4332      	orrs	r2, r6
 8017158:	b292      	uxth	r2, r2
 801715a:	280f      	cmp	r0, #15
 801715c:	d922      	bls.n	80171a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801715e:	4b69      	ldr	r3, [pc, #420]	; (8017304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017160:	4a69      	ldr	r2, [pc, #420]	; (8017308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8017162:	486a      	ldr	r0, [pc, #424]	; (801730c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8017164:	f240 210d 	movw	r1, #525	; 0x20d
 8017168:	f004 fa1e 	bl	801b5a8 <__assert_func>
 801716c:	f04f 0c00 	mov.w	ip, #0
 8017170:	4661      	mov	r1, ip
 8017172:	e76a      	b.n	801704a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8017174:	2400      	movs	r4, #0
 8017176:	46a4      	mov	ip, r4
 8017178:	4623      	mov	r3, r4
 801717a:	4621      	mov	r1, r4
 801717c:	e791      	b.n	80170a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801717e:	2400      	movs	r4, #0
 8017180:	4623      	mov	r3, r4
 8017182:	e78e      	b.n	80170a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017184:	4604      	mov	r4, r0
 8017186:	4603      	mov	r3, r0
 8017188:	e78b      	b.n	80170a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801718a:	2500      	movs	r5, #0
 801718c:	46ab      	mov	fp, r5
 801718e:	e7ba      	b.n	8017106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8017190:	2700      	movs	r7, #0
 8017192:	463d      	mov	r5, r7
 8017194:	463a      	mov	r2, r7
 8017196:	46bb      	mov	fp, r7
 8017198:	e7df      	b.n	801715a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801719a:	2700      	movs	r7, #0
 801719c:	463a      	mov	r2, r7
 801719e:	e7dc      	b.n	801715a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80171a0:	4607      	mov	r7, r0
 80171a2:	4602      	mov	r2, r0
 80171a4:	f1be 0f0f 	cmp.w	lr, #15
 80171a8:	d8d9      	bhi.n	801715e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80171aa:	b286      	uxth	r6, r0
 80171ac:	fa1f f98e 	uxth.w	r9, lr
 80171b0:	fb06 f809 	mul.w	r8, r6, r9
 80171b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80171b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80171bc:	0136      	lsls	r6, r6, #4
 80171be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80171c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80171c6:	9601      	str	r6, [sp, #4]
 80171c8:	ea4a 0101 	orr.w	r1, sl, r1
 80171cc:	fa1f f689 	uxth.w	r6, r9
 80171d0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80171d4:	fb10 f90e 	smulbb	r9, r0, lr
 80171d8:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80171dc:	9602      	str	r6, [sp, #8]
 80171de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80171e2:	460e      	mov	r6, r1
 80171e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80171e8:	f1ce 0110 	rsb	r1, lr, #16
 80171ec:	1a09      	subs	r1, r1, r0
 80171ee:	ea4a 0303 	orr.w	r3, sl, r3
 80171f2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80171f6:	4343      	muls	r3, r0
 80171f8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80171fc:	9801      	ldr	r0, [sp, #4]
 80171fe:	fb01 3106 	mla	r1, r1, r6, r3
 8017202:	9e02      	ldr	r6, [sp, #8]
 8017204:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017208:	1b80      	subs	r0, r0, r6
 801720a:	9e01      	ldr	r6, [sp, #4]
 801720c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017210:	eba6 0608 	sub.w	r6, r6, r8
 8017214:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017218:	b2b6      	uxth	r6, r6
 801721a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801721e:	ea4a 0202 	orr.w	r2, sl, r2
 8017222:	b280      	uxth	r0, r0
 8017224:	4374      	muls	r4, r6
 8017226:	fb09 1302 	mla	r3, r9, r2, r1
 801722a:	fb0c 4400 	mla	r4, ip, r0, r4
 801722e:	9a03      	ldr	r2, [sp, #12]
 8017230:	9802      	ldr	r0, [sp, #8]
 8017232:	8811      	ldrh	r1, [r2, #0]
 8017234:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017238:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801723c:	fb00 4505 	mla	r5, r0, r5, r4
 8017240:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017244:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017248:	fb08 5707 	mla	r7, r8, r7, r5
 801724c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017250:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017254:	b292      	uxth	r2, r2
 8017256:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801725a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801725e:	4357      	muls	r7, r2
 8017260:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017264:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017268:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801726c:	f107 0801 	add.w	r8, r7, #1
 8017270:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017274:	ea43 0e0e 	orr.w	lr, r3, lr
 8017278:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801727c:	fa1f f38e 	uxth.w	r3, lr
 8017280:	1208      	asrs	r0, r1, #8
 8017282:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8017286:	b2ff      	uxtb	r7, r7
 8017288:	121c      	asrs	r4, r3, #8
 801728a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801728e:	fb10 f007 	smulbb	r0, r0, r7
 8017292:	10cd      	asrs	r5, r1, #3
 8017294:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017298:	00c9      	lsls	r1, r1, #3
 801729a:	fb04 0402 	mla	r4, r4, r2, r0
 801729e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80172a2:	10d8      	asrs	r0, r3, #3
 80172a4:	b2c9      	uxtb	r1, r1
 80172a6:	00db      	lsls	r3, r3, #3
 80172a8:	fb11 f107 	smulbb	r1, r1, r7
 80172ac:	fb15 f507 	smulbb	r5, r5, r7
 80172b0:	b2db      	uxtb	r3, r3
 80172b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80172b6:	fb00 5002 	mla	r0, r0, r2, r5
 80172ba:	fb03 1202 	mla	r2, r3, r2, r1
 80172be:	b2a4      	uxth	r4, r4
 80172c0:	b292      	uxth	r2, r2
 80172c2:	1c63      	adds	r3, r4, #1
 80172c4:	1c51      	adds	r1, r2, #1
 80172c6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80172ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80172ce:	b280      	uxth	r0, r0
 80172d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80172d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80172d8:	4313      	orrs	r3, r2
 80172da:	1c42      	adds	r2, r0, #1
 80172dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80172e0:	0940      	lsrs	r0, r0, #5
 80172e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80172e6:	9a03      	ldr	r2, [sp, #12]
 80172e8:	4303      	orrs	r3, r0
 80172ea:	8013      	strh	r3, [r2, #0]
 80172ec:	b005      	add	sp, #20
 80172ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172f2:	280f      	cmp	r0, #15
 80172f4:	f63f af33 	bhi.w	801715e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80172f8:	4677      	mov	r7, lr
 80172fa:	4675      	mov	r5, lr
 80172fc:	4672      	mov	r2, lr
 80172fe:	46f3      	mov	fp, lr
 8017300:	e753      	b.n	80171aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8017302:	bf00      	nop
 8017304:	0801f4ba 	.word	0x0801f4ba
 8017308:	0801fa79 	.word	0x0801fa79
 801730c:	0801f5a3 	.word	0x0801f5a3

08017310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017314:	ed2d 8b08 	vpush	{d8-d11}
 8017318:	b097      	sub	sp, #92	; 0x5c
 801731a:	eeb0 aa40 	vmov.f32	s20, s0
 801731e:	9214      	str	r2, [sp, #80]	; 0x50
 8017320:	9308      	str	r3, [sp, #32]
 8017322:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017324:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017328:	9312      	str	r3, [sp, #72]	; 0x48
 801732a:	9111      	str	r1, [sp, #68]	; 0x44
 801732c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017330:	9015      	str	r0, [sp, #84]	; 0x54
 8017332:	6850      	ldr	r0, [r2, #4]
 8017334:	6812      	ldr	r2, [r2, #0]
 8017336:	fb00 1303 	mla	r3, r0, r3, r1
 801733a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801733e:	9309      	str	r3, [sp, #36]	; 0x24
 8017340:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017342:	681b      	ldr	r3, [r3, #0]
 8017344:	930b      	str	r3, [sp, #44]	; 0x2c
 8017346:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017348:	685b      	ldr	r3, [r3, #4]
 801734a:	930c      	str	r3, [sp, #48]	; 0x30
 801734c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017350:	930a      	str	r3, [sp, #40]	; 0x28
 8017352:	eef0 9a60 	vmov.f32	s19, s1
 8017356:	eeb0 9a41 	vmov.f32	s18, s2
 801735a:	eeb0 8a62 	vmov.f32	s16, s5
 801735e:	eef0 8a43 	vmov.f32	s17, s6
 8017362:	eef0 ba44 	vmov.f32	s23, s8
 8017366:	eeb0 ba64 	vmov.f32	s22, s9
 801736a:	eef0 aa45 	vmov.f32	s21, s10
 801736e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017370:	2b00      	cmp	r3, #0
 8017372:	dc03      	bgt.n	801737c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017374:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017376:	2b00      	cmp	r3, #0
 8017378:	f340 83cb 	ble.w	8017b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801737c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801737e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017382:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017386:	1e48      	subs	r0, r1, #1
 8017388:	1e55      	subs	r5, r2, #1
 801738a:	9b08      	ldr	r3, [sp, #32]
 801738c:	2b00      	cmp	r3, #0
 801738e:	f340 81a3 	ble.w	80176d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017392:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8017394:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017396:	1436      	asrs	r6, r6, #16
 8017398:	ea4f 4323 	mov.w	r3, r3, asr #16
 801739c:	d406      	bmi.n	80173ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801739e:	4286      	cmp	r6, r0
 80173a0:	da04      	bge.n	80173ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80173a2:	2b00      	cmp	r3, #0
 80173a4:	db02      	blt.n	80173ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80173a6:	42ab      	cmp	r3, r5
 80173a8:	f2c0 8197 	blt.w	80176da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80173ac:	3601      	adds	r6, #1
 80173ae:	f100 8184 	bmi.w	80176ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173b2:	42b1      	cmp	r1, r6
 80173b4:	f2c0 8181 	blt.w	80176ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173b8:	3301      	adds	r3, #1
 80173ba:	f100 817e 	bmi.w	80176ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173be:	429a      	cmp	r2, r3
 80173c0:	f2c0 817b 	blt.w	80176ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173c4:	9b08      	ldr	r3, [sp, #32]
 80173c6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80173c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80173ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80173ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80173d0:	2b00      	cmp	r3, #0
 80173d2:	f340 81a4 	ble.w	801771e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80173d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173d8:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80173da:	1418      	asrs	r0, r3, #16
 80173dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80173de:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80173e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173e4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80173e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80173ea:	142d      	asrs	r5, r5, #16
 80173ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80173f0:	f100 81f8 	bmi.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80173f4:	f102 3eff 	add.w	lr, r2, #4294967295
 80173f8:	4575      	cmp	r5, lr
 80173fa:	f280 81f3 	bge.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80173fe:	2800      	cmp	r0, #0
 8017400:	f2c0 81f0 	blt.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017404:	f103 3eff 	add.w	lr, r3, #4294967295
 8017408:	4570      	cmp	r0, lr
 801740a:	f280 81eb 	bge.w	80177e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801740e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017410:	b212      	sxth	r2, r2
 8017412:	fb00 5002 	mla	r0, r0, r2, r5
 8017416:	fa1f fe81 	uxth.w	lr, r1
 801741a:	eb03 0a00 	add.w	sl, r3, r0
 801741e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017422:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017426:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801742a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801742e:	b29b      	uxth	r3, r3
 8017430:	f1bc 0f00 	cmp.w	ip, #0
 8017434:	f000 81b9 	beq.w	80177aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017438:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801743c:	940d      	str	r4, [sp, #52]	; 0x34
 801743e:	eb0a 0b02 	add.w	fp, sl, r2
 8017442:	fa1f fa8c 	uxth.w	sl, ip
 8017446:	fb0a fe0e 	mul.w	lr, sl, lr
 801744a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801744e:	fa1f fa8a 	uxth.w	sl, sl
 8017452:	eba5 050e 	sub.w	r5, r5, lr
 8017456:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801745a:	940e      	str	r4, [sp, #56]	; 0x38
 801745c:	eba3 030a 	sub.w	r3, r3, sl
 8017460:	b2ad      	uxth	r5, r5
 8017462:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017464:	b29b      	uxth	r3, r3
 8017466:	fb08 f505 	mul.w	r5, r8, r5
 801746a:	fb09 5303 	mla	r3, r9, r3, r5
 801746e:	fb0a 3304 	mla	r3, sl, r4, r3
 8017472:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017474:	fb0e 3304 	mla	r3, lr, r4, r3
 8017478:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801747c:	2b00      	cmp	r3, #0
 801747e:	f000 810f 	beq.w	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017482:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017484:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017488:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801748c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017490:	f000 8190 	beq.w	80177b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8017494:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017498:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801749c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80174a0:	fb09 f000 	mul.w	r0, r9, r0
 80174a4:	fb0a fe0e 	mul.w	lr, sl, lr
 80174a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80174ac:	f100 0b20 	add.w	fp, r0, #32
 80174b0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80174b4:	44ce      	add	lr, r9
 80174b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80174ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80174be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80174c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80174c6:	ea4e 0909 	orr.w	r9, lr, r9
 80174ca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80174ce:	8868      	ldrh	r0, [r5, #2]
 80174d0:	d019      	beq.n	8017506 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80174d2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80174d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80174da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80174de:	fb08 f800 	mul.w	r8, r8, r0
 80174e2:	fb0a fe0e 	mul.w	lr, sl, lr
 80174e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80174ea:	f108 0b20 	add.w	fp, r8, #32
 80174ee:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80174f2:	4486      	add	lr, r0
 80174f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80174f8:	0a00      	lsrs	r0, r0, #8
 80174fa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80174fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017502:	ea4e 0000 	orr.w	r0, lr, r0
 8017506:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801750a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801750e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017512:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017516:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801751a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801751e:	ea4e 0909 	orr.w	r9, lr, r9
 8017522:	ea4a 0000 	orr.w	r0, sl, r0
 8017526:	f1bc 0f00 	cmp.w	ip, #0
 801752a:	f000 8145 	beq.w	80177b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801752e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017532:	3a01      	subs	r2, #1
 8017534:	0052      	lsls	r2, r2, #1
 8017536:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017538:	3202      	adds	r2, #2
 801753a:	2cff      	cmp	r4, #255	; 0xff
 801753c:	eb05 0e02 	add.w	lr, r5, r2
 8017540:	5aaa      	ldrh	r2, [r5, r2]
 8017542:	d018      	beq.n	8017576 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017544:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017548:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801754c:	fb04 fa02 	mul.w	sl, r4, r2
 8017550:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017554:	fb08 f805 	mul.w	r8, r8, r5
 8017558:	f10a 0520 	add.w	r5, sl, #32
 801755c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017560:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017564:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017568:	4442      	add	r2, r8
 801756a:	0a2d      	lsrs	r5, r5, #8
 801756c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017570:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017574:	432a      	orrs	r2, r5
 8017576:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017578:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801757c:	2cff      	cmp	r4, #255	; 0xff
 801757e:	d01a      	beq.n	80175b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017580:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017584:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017588:	fb04 fa05 	mul.w	sl, r4, r5
 801758c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017590:	fb08 f80e 	mul.w	r8, r8, lr
 8017594:	f10a 0e20 	add.w	lr, sl, #32
 8017598:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801759c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80175a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80175a4:	4445      	add	r5, r8
 80175a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175aa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80175ae:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80175b2:	ea45 050e 	orr.w	r5, r5, lr
 80175b6:	fb1c fe01 	smulbb	lr, ip, r1
 80175ba:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80175be:	f1cc 0810 	rsb	r8, ip, #16
 80175c2:	eba8 0801 	sub.w	r8, r8, r1
 80175c6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80175ca:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80175ce:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80175d2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80175d6:	4341      	muls	r1, r0
 80175d8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80175dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80175e0:	ea4a 0202 	orr.w	r2, sl, r2
 80175e4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80175e8:	fb09 1108 	mla	r1, r9, r8, r1
 80175ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80175f0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80175f4:	fb0c 1102 	mla	r1, ip, r2, r1
 80175f8:	ea4b 0505 	orr.w	r5, fp, r5
 80175fc:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017600:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017604:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017608:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801760c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017610:	ea42 0e0e 	orr.w	lr, r2, lr
 8017614:	fa1f f28e 	uxth.w	r2, lr
 8017618:	2bff      	cmp	r3, #255	; 0xff
 801761a:	d103      	bne.n	8017624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801761c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801761e:	29ff      	cmp	r1, #255	; 0xff
 8017620:	f000 80de 	beq.w	80177e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017624:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017626:	8838      	ldrh	r0, [r7, #0]
 8017628:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801762a:	434b      	muls	r3, r1
 801762c:	f103 0c01 	add.w	ip, r3, #1
 8017630:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017634:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 8017638:	1205      	asrs	r5, r0, #8
 801763a:	fa5f fc8c 	uxtb.w	ip, ip
 801763e:	1213      	asrs	r3, r2, #8
 8017640:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017644:	fb15 f50c 	smulbb	r5, r5, ip
 8017648:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801764c:	fb03 5301 	mla	r3, r3, r1, r5
 8017650:	b29d      	uxth	r5, r3
 8017652:	10c3      	asrs	r3, r0, #3
 8017654:	00c0      	lsls	r0, r0, #3
 8017656:	10d1      	asrs	r1, r2, #3
 8017658:	b2c0      	uxtb	r0, r0
 801765a:	00d2      	lsls	r2, r2, #3
 801765c:	fb10 f00c 	smulbb	r0, r0, ip
 8017660:	b2d2      	uxtb	r2, r2
 8017662:	fb02 0204 	mla	r2, r2, r4, r0
 8017666:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801766a:	fb13 f30c 	smulbb	r3, r3, ip
 801766e:	b292      	uxth	r2, r2
 8017670:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017674:	fb01 3104 	mla	r1, r1, r4, r3
 8017678:	1c50      	adds	r0, r2, #1
 801767a:	1c6b      	adds	r3, r5, #1
 801767c:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017680:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017684:	b289      	uxth	r1, r1
 8017686:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801768a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801768e:	4313      	orrs	r3, r2
 8017690:	1c4a      	adds	r2, r1, #1
 8017692:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017696:	0949      	lsrs	r1, r1, #5
 8017698:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801769c:	430b      	orrs	r3, r1
 801769e:	803b      	strh	r3, [r7, #0]
 80176a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80176a2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80176a4:	4413      	add	r3, r2
 80176a6:	9329      	str	r3, [sp, #164]	; 0xa4
 80176a8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80176aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80176ac:	441a      	add	r2, r3
 80176ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80176b0:	922a      	str	r2, [sp, #168]	; 0xa8
 80176b2:	3b01      	subs	r3, #1
 80176b4:	3702      	adds	r7, #2
 80176b6:	9313      	str	r3, [sp, #76]	; 0x4c
 80176b8:	e689      	b.n	80173ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80176ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80176bc:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80176be:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80176c0:	4433      	add	r3, r6
 80176c2:	9329      	str	r3, [sp, #164]	; 0xa4
 80176c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80176c6:	441c      	add	r4, r3
 80176c8:	9b08      	ldr	r3, [sp, #32]
 80176ca:	942a      	str	r4, [sp, #168]	; 0xa8
 80176cc:	3b01      	subs	r3, #1
 80176ce:	9308      	str	r3, [sp, #32]
 80176d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80176d2:	3302      	adds	r3, #2
 80176d4:	9309      	str	r3, [sp, #36]	; 0x24
 80176d6:	e658      	b.n	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80176d8:	d028      	beq.n	801772c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80176da:	9b08      	ldr	r3, [sp, #32]
 80176dc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80176de:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80176e0:	3b01      	subs	r3, #1
 80176e2:	fb00 5003 	mla	r0, r0, r3, r5
 80176e6:	1400      	asrs	r0, r0, #16
 80176e8:	f53f ae6c 	bmi.w	80173c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80176ec:	3901      	subs	r1, #1
 80176ee:	4288      	cmp	r0, r1
 80176f0:	f6bf ae68 	bge.w	80173c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80176f4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80176f6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80176f8:	fb01 0303 	mla	r3, r1, r3, r0
 80176fc:	141b      	asrs	r3, r3, #16
 80176fe:	f53f ae61 	bmi.w	80173c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017702:	3a01      	subs	r2, #1
 8017704:	4293      	cmp	r3, r2
 8017706:	f6bf ae5d 	bge.w	80173c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801770a:	9b08      	ldr	r3, [sp, #32]
 801770c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017710:	9313      	str	r3, [sp, #76]	; 0x4c
 8017712:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017716:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017718:	2b00      	cmp	r3, #0
 801771a:	f300 8082 	bgt.w	8017822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801771e:	9b08      	ldr	r3, [sp, #32]
 8017720:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017724:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017726:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801772a:	9309      	str	r3, [sp, #36]	; 0x24
 801772c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801772e:	2b00      	cmp	r3, #0
 8017730:	f340 81ef 	ble.w	8017b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017734:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017738:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801773c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017740:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017742:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017746:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801774a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801774e:	eef0 6a48 	vmov.f32	s13, s16
 8017752:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017756:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801775a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801775e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017762:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017766:	eef0 6a68 	vmov.f32	s13, s17
 801776a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801776e:	ee18 2a10 	vmov	r2, s16
 8017772:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017776:	fb92 f3f3 	sdiv	r3, r2, r3
 801777a:	ee18 2a90 	vmov	r2, s17
 801777e:	932b      	str	r3, [sp, #172]	; 0xac
 8017780:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017782:	fb92 f3f3 	sdiv	r3, r2, r3
 8017786:	932c      	str	r3, [sp, #176]	; 0xb0
 8017788:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801778a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801778c:	3b01      	subs	r3, #1
 801778e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017792:	9311      	str	r3, [sp, #68]	; 0x44
 8017794:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017796:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801779a:	bf08      	it	eq
 801779c:	4613      	moveq	r3, r2
 801779e:	9308      	str	r3, [sp, #32]
 80177a0:	eef0 8a67 	vmov.f32	s17, s15
 80177a4:	eeb0 8a47 	vmov.f32	s16, s14
 80177a8:	e5e1      	b.n	801736e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80177aa:	fb08 f505 	mul.w	r5, r8, r5
 80177ae:	fb09 5303 	mla	r3, r9, r3, r5
 80177b2:	e661      	b.n	8017478 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80177b4:	4681      	mov	r9, r0
 80177b6:	e688      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80177b8:	f1c1 0210 	rsb	r2, r1, #16
 80177bc:	4341      	muls	r1, r0
 80177be:	fb09 1902 	mla	r9, r9, r2, r1
 80177c2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80177c6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80177ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80177ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80177d6:	ea42 0909 	orr.w	r9, r2, r9
 80177da:	fa1f f289 	uxth.w	r2, r9
 80177de:	e71b      	b.n	8017618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 80177e0:	803a      	strh	r2, [r7, #0]
 80177e2:	e75d      	b.n	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177e4:	f115 0e01 	adds.w	lr, r5, #1
 80177e8:	f53f af5a 	bmi.w	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177ec:	4572      	cmp	r2, lr
 80177ee:	f6ff af57 	blt.w	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177f2:	f110 0e01 	adds.w	lr, r0, #1
 80177f6:	f53f af53 	bmi.w	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177fa:	4573      	cmp	r3, lr
 80177fc:	f6ff af50 	blt.w	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017800:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017802:	9502      	str	r5, [sp, #8]
 8017804:	b21b      	sxth	r3, r3
 8017806:	b212      	sxth	r2, r2
 8017808:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801780c:	9301      	str	r3, [sp, #4]
 801780e:	9200      	str	r2, [sp, #0]
 8017810:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017814:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017818:	4639      	mov	r1, r7
 801781a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801781c:	f7ff fbd2 	bl	8016fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017820:	e73e      	b.n	80176a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017822:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017824:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017828:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801782a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801782e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017830:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017834:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017836:	141f      	asrs	r7, r3, #16
 8017838:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801783a:	141b      	asrs	r3, r3, #16
 801783c:	fb01 3707 	mla	r7, r1, r7, r3
 8017840:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017842:	fa1f fc82 	uxth.w	ip, r2
 8017846:	eb03 0a07 	add.w	sl, r3, r7
 801784a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801784e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017852:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017856:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801785a:	b29b      	uxth	r3, r3
 801785c:	2d00      	cmp	r5, #0
 801785e:	f000 813d 	beq.w	8017adc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017862:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017866:	940f      	str	r4, [sp, #60]	; 0x3c
 8017868:	eb0a 0b01 	add.w	fp, sl, r1
 801786c:	fa1f fa85 	uxth.w	sl, r5
 8017870:	fb0a fc0c 	mul.w	ip, sl, ip
 8017874:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017878:	fa1f fa8a 	uxth.w	sl, sl
 801787c:	eba0 000c 	sub.w	r0, r0, ip
 8017880:	eba3 030a 	sub.w	r3, r3, sl
 8017884:	b280      	uxth	r0, r0
 8017886:	fb08 f000 	mul.w	r0, r8, r0
 801788a:	b29b      	uxth	r3, r3
 801788c:	fb09 0303 	mla	r3, r9, r3, r0
 8017890:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017892:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017896:	9410      	str	r4, [sp, #64]	; 0x40
 8017898:	fb0a 3300 	mla	r3, sl, r0, r3
 801789c:	fb0c 3304 	mla	r3, ip, r4, r3
 80178a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80178a4:	2b00      	cmp	r3, #0
 80178a6:	f000 810b 	beq.w	8017ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80178aa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80178ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178ae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80178b2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80178b6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80178ba:	f000 8114 	beq.w	8017ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80178be:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80178c2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80178c6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80178ca:	fb09 f707 	mul.w	r7, r9, r7
 80178ce:	fb0a fc0c 	mul.w	ip, sl, ip
 80178d2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80178d6:	f107 0b20 	add.w	fp, r7, #32
 80178da:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80178de:	44cc      	add	ip, r9
 80178e0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80178e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80178e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80178ec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178f0:	ea4c 0909 	orr.w	r9, ip, r9
 80178f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80178f8:	8847      	ldrh	r7, [r0, #2]
 80178fa:	d019      	beq.n	8017930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 80178fc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017900:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017904:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017908:	fb08 f807 	mul.w	r8, r8, r7
 801790c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017910:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017914:	f108 0b20 	add.w	fp, r8, #32
 8017918:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801791c:	44bc      	add	ip, r7
 801791e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017922:	0a3f      	lsrs	r7, r7, #8
 8017924:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017928:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801792c:	ea4c 0707 	orr.w	r7, ip, r7
 8017930:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017934:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017938:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801793c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017940:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017944:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017948:	ea4c 0909 	orr.w	r9, ip, r9
 801794c:	ea4a 0707 	orr.w	r7, sl, r7
 8017950:	2d00      	cmp	r5, #0
 8017952:	f000 80ca 	beq.w	8017aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8017956:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801795a:	3901      	subs	r1, #1
 801795c:	0049      	lsls	r1, r1, #1
 801795e:	3102      	adds	r1, #2
 8017960:	eb00 0c01 	add.w	ip, r0, r1
 8017964:	5a41      	ldrh	r1, [r0, r1]
 8017966:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017968:	28ff      	cmp	r0, #255	; 0xff
 801796a:	d019      	beq.n	80179a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 801796c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801796e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017972:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017976:	fb04 fa01 	mul.w	sl, r4, r1
 801797a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801797e:	fb08 f800 	mul.w	r8, r8, r0
 8017982:	f10a 0020 	add.w	r0, sl, #32
 8017986:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801798a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801798e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017992:	4441      	add	r1, r8
 8017994:	0a00      	lsrs	r0, r0, #8
 8017996:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801799a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801799e:	4301      	orrs	r1, r0
 80179a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80179a2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80179a6:	2cff      	cmp	r4, #255	; 0xff
 80179a8:	d01a      	beq.n	80179e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80179aa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80179ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179b2:	fb04 fa00 	mul.w	sl, r4, r0
 80179b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80179ba:	fb08 f80c 	mul.w	r8, r8, ip
 80179be:	f10a 0c20 	add.w	ip, sl, #32
 80179c2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80179c6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80179ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80179ce:	4440      	add	r0, r8
 80179d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179d4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80179d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80179dc:	ea40 000c 	orr.w	r0, r0, ip
 80179e0:	fb15 fc02 	smulbb	ip, r5, r2
 80179e4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80179e8:	f1c5 0810 	rsb	r8, r5, #16
 80179ec:	eba8 0802 	sub.w	r8, r8, r2
 80179f0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80179f4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80179f8:	437a      	muls	r2, r7
 80179fa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80179fe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017a02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017a0a:	fb09 2208 	mla	r2, r9, r8, r2
 8017a0e:	ea4a 0101 	orr.w	r1, sl, r1
 8017a12:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017a16:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a1e:	fb05 2201 	mla	r2, r5, r1, r2
 8017a22:	ea4b 0000 	orr.w	r0, fp, r0
 8017a26:	fb0c 2200 	mla	r2, ip, r0, r2
 8017a2a:	0d57      	lsrs	r7, r2, #21
 8017a2c:	0952      	lsrs	r2, r2, #5
 8017a2e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a36:	433a      	orrs	r2, r7
 8017a38:	2bff      	cmp	r3, #255	; 0xff
 8017a3a:	b292      	uxth	r2, r2
 8017a3c:	d102      	bne.n	8017a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017a3e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017a40:	29ff      	cmp	r1, #255	; 0xff
 8017a42:	d063      	beq.n	8017b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8017a44:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017a46:	f8be 1000 	ldrh.w	r1, [lr]
 8017a4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017a4c:	4343      	muls	r3, r0
 8017a4e:	1c58      	adds	r0, r3, #1
 8017a50:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017a54:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017a58:	1208      	asrs	r0, r1, #8
 8017a5a:	b2db      	uxtb	r3, r3
 8017a5c:	1215      	asrs	r5, r2, #8
 8017a5e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a62:	fb10 f003 	smulbb	r0, r0, r3
 8017a66:	10cf      	asrs	r7, r1, #3
 8017a68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017a6c:	00c9      	lsls	r1, r1, #3
 8017a6e:	fb05 0504 	mla	r5, r5, r4, r0
 8017a72:	b2c9      	uxtb	r1, r1
 8017a74:	10d0      	asrs	r0, r2, #3
 8017a76:	00d2      	lsls	r2, r2, #3
 8017a78:	fb11 f103 	smulbb	r1, r1, r3
 8017a7c:	b2d2      	uxtb	r2, r2
 8017a7e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017a82:	fb02 1204 	mla	r2, r2, r4, r1
 8017a86:	fb17 f703 	smulbb	r7, r7, r3
 8017a8a:	b2ad      	uxth	r5, r5
 8017a8c:	b292      	uxth	r2, r2
 8017a8e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017a92:	fb00 7004 	mla	r0, r0, r4, r7
 8017a96:	1c6b      	adds	r3, r5, #1
 8017a98:	1c57      	adds	r7, r2, #1
 8017a9a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017a9e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017aa2:	b280      	uxth	r0, r0
 8017aa4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017aa8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017aac:	433d      	orrs	r5, r7
 8017aae:	1c47      	adds	r7, r0, #1
 8017ab0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017ab4:	097f      	lsrs	r7, r7, #5
 8017ab6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017aba:	433d      	orrs	r5, r7
 8017abc:	f8ae 5000 	strh.w	r5, [lr]
 8017ac0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ac2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017ac4:	4413      	add	r3, r2
 8017ac6:	9329      	str	r3, [sp, #164]	; 0xa4
 8017ac8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017aca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017acc:	441a      	add	r2, r3
 8017ace:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ad0:	922a      	str	r2, [sp, #168]	; 0xa8
 8017ad2:	3b01      	subs	r3, #1
 8017ad4:	f10e 0e02 	add.w	lr, lr, #2
 8017ad8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ada:	e61c      	b.n	8017716 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017adc:	fb08 f000 	mul.w	r0, r8, r0
 8017ae0:	fb09 0303 	mla	r3, r9, r3, r0
 8017ae4:	e6dc      	b.n	80178a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017ae6:	46b9      	mov	r9, r7
 8017ae8:	e704      	b.n	80178f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017aea:	f1c2 0110 	rsb	r1, r2, #16
 8017aee:	437a      	muls	r2, r7
 8017af0:	fb09 2901 	mla	r9, r9, r1, r2
 8017af4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017af8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017afc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017b00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b08:	4302      	orrs	r2, r0
 8017b0a:	e795      	b.n	8017a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017b0c:	f8ae 2000 	strh.w	r2, [lr]
 8017b10:	e7d6      	b.n	8017ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017b12:	b017      	add	sp, #92	; 0x5c
 8017b14:	ecbd 8b08 	vpop	{d8-d11}
 8017b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b20:	b085      	sub	sp, #20
 8017b22:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017b26:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017b2a:	9103      	str	r1, [sp, #12]
 8017b2c:	fb05 7106 	mla	r1, r5, r6, r7
 8017b30:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8017b34:	2d00      	cmp	r5, #0
 8017b36:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017b3a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017b3e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017b42:	9401      	str	r4, [sp, #4]
 8017b44:	eb02 0901 	add.w	r9, r2, r1
 8017b48:	f2c0 80c0 	blt.w	8017ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017b4c:	45a8      	cmp	r8, r5
 8017b4e:	f340 80bd 	ble.w	8017ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017b52:	2f00      	cmp	r7, #0
 8017b54:	f2c0 80b6 	blt.w	8017cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017b58:	42be      	cmp	r6, r7
 8017b5a:	f340 80b3 	ble.w	8017cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017b5e:	f812 c001 	ldrb.w	ip, [r2, r1]
 8017b62:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8017b66:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017b6a:	d019      	beq.n	8017ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8017b6c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017b70:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017b74:	435a      	muls	r2, r3
 8017b76:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8017b7a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017b7e:	fb0c f403 	mul.w	r4, ip, r3
 8017b82:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017b86:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017b8a:	441a      	add	r2, r3
 8017b8c:	f104 0320 	add.w	r3, r4, #32
 8017b90:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017b94:	0a1b      	lsrs	r3, r3, #8
 8017b96:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8017b9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b9e:	4319      	orrs	r1, r3
 8017ba0:	b289      	uxth	r1, r1
 8017ba2:	1c7b      	adds	r3, r7, #1
 8017ba4:	f100 8097 	bmi.w	8017cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017ba8:	429e      	cmp	r6, r3
 8017baa:	f340 8094 	ble.w	8017cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017bae:	2800      	cmp	r0, #0
 8017bb0:	f000 8094 	beq.w	8017cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8017bb4:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017bb8:	9b01      	ldr	r3, [sp, #4]
 8017bba:	2cff      	cmp	r4, #255	; 0xff
 8017bbc:	885b      	ldrh	r3, [r3, #2]
 8017bbe:	d01b      	beq.n	8017bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8017bc0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017bc4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017bc8:	fb0a f202 	mul.w	r2, sl, r2
 8017bcc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017bd0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017bd4:	fb04 fa03 	mul.w	sl, r4, r3
 8017bd8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017bdc:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017be0:	441a      	add	r2, r3
 8017be2:	f10a 0320 	add.w	r3, sl, #32
 8017be6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017bea:	0a1b      	lsrs	r3, r3, #8
 8017bec:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017bf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017bf4:	ea4b 0303 	orr.w	r3, fp, r3
 8017bf8:	b29b      	uxth	r3, r3
 8017bfa:	3501      	adds	r5, #1
 8017bfc:	d474      	bmi.n	8017ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017bfe:	45a8      	cmp	r8, r5
 8017c00:	dd72      	ble.n	8017ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017c02:	f1be 0f00 	cmp.w	lr, #0
 8017c06:	f000 8111 	beq.w	8017e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 8017c0a:	2f00      	cmp	r7, #0
 8017c0c:	db69      	blt.n	8017ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017c0e:	42be      	cmp	r6, r7
 8017c10:	dd67      	ble.n	8017ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017c12:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017c16:	9a01      	ldr	r2, [sp, #4]
 8017c18:	2dff      	cmp	r5, #255	; 0xff
 8017c1a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017c1e:	d01c      	beq.n	8017c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8017c20:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017c24:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017c28:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017c2c:	fb05 fa0b 	mul.w	sl, r5, fp
 8017c30:	fb08 f802 	mul.w	r8, r8, r2
 8017c34:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017c38:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017c3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c40:	4490      	add	r8, r2
 8017c42:	f10a 0220 	add.w	r2, sl, #32
 8017c46:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8017c4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c4e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017c52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017c56:	ea4b 0b0a 	orr.w	fp, fp, sl
 8017c5a:	fa1f fb8b 	uxth.w	fp, fp
 8017c5e:	3701      	adds	r7, #1
 8017c60:	d447      	bmi.n	8017cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017c62:	42be      	cmp	r6, r7
 8017c64:	dd45      	ble.n	8017cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017c66:	2800      	cmp	r0, #0
 8017c68:	d046      	beq.n	8017cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8017c6a:	3601      	adds	r6, #1
 8017c6c:	9a01      	ldr	r2, [sp, #4]
 8017c6e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017c72:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017c76:	2fff      	cmp	r7, #255	; 0xff
 8017c78:	d01a      	beq.n	8017cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8017c7a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017c7e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017c82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c86:	fb07 f902 	mul.w	r9, r7, r2
 8017c8a:	fb08 f806 	mul.w	r8, r8, r6
 8017c8e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017c92:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017c96:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c9a:	44b0      	add	r8, r6
 8017c9c:	f109 0620 	add.w	r6, r9, #32
 8017ca0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017ca4:	0a36      	lsrs	r6, r6, #8
 8017ca6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017caa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017cae:	4332      	orrs	r2, r6
 8017cb0:	b292      	uxth	r2, r2
 8017cb2:	280f      	cmp	r0, #15
 8017cb4:	d922      	bls.n	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017cb6:	4b61      	ldr	r3, [pc, #388]	; (8017e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8017cb8:	4a61      	ldr	r2, [pc, #388]	; (8017e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8017cba:	4862      	ldr	r0, [pc, #392]	; (8017e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8017cbc:	f240 210d 	movw	r1, #525	; 0x20d
 8017cc0:	f003 fc72 	bl	801b5a8 <__assert_func>
 8017cc4:	f04f 0c00 	mov.w	ip, #0
 8017cc8:	4661      	mov	r1, ip
 8017cca:	e76a      	b.n	8017ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017ccc:	2400      	movs	r4, #0
 8017cce:	46a4      	mov	ip, r4
 8017cd0:	4623      	mov	r3, r4
 8017cd2:	4621      	mov	r1, r4
 8017cd4:	e791      	b.n	8017bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017cd6:	2400      	movs	r4, #0
 8017cd8:	4623      	mov	r3, r4
 8017cda:	e78e      	b.n	8017bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017cdc:	4604      	mov	r4, r0
 8017cde:	4603      	mov	r3, r0
 8017ce0:	e78b      	b.n	8017bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017ce2:	2500      	movs	r5, #0
 8017ce4:	46ab      	mov	fp, r5
 8017ce6:	e7ba      	b.n	8017c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8017ce8:	2700      	movs	r7, #0
 8017cea:	463d      	mov	r5, r7
 8017cec:	463a      	mov	r2, r7
 8017cee:	46bb      	mov	fp, r7
 8017cf0:	e7df      	b.n	8017cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017cf2:	2700      	movs	r7, #0
 8017cf4:	463a      	mov	r2, r7
 8017cf6:	e7dc      	b.n	8017cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017cf8:	4607      	mov	r7, r0
 8017cfa:	4602      	mov	r2, r0
 8017cfc:	f1be 0f0f 	cmp.w	lr, #15
 8017d00:	d8d9      	bhi.n	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017d02:	b286      	uxth	r6, r0
 8017d04:	fa1f f98e 	uxth.w	r9, lr
 8017d08:	fb06 f809 	mul.w	r8, r6, r9
 8017d0c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017d10:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017d14:	0136      	lsls	r6, r6, #4
 8017d16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017d1e:	9601      	str	r6, [sp, #4]
 8017d20:	ea4a 0101 	orr.w	r1, sl, r1
 8017d24:	fa1f f689 	uxth.w	r6, r9
 8017d28:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017d2c:	fb10 f90e 	smulbb	r9, r0, lr
 8017d30:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017d34:	9602      	str	r6, [sp, #8]
 8017d36:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d3a:	460e      	mov	r6, r1
 8017d3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d40:	f1ce 0110 	rsb	r1, lr, #16
 8017d44:	1a09      	subs	r1, r1, r0
 8017d46:	ea4a 0303 	orr.w	r3, sl, r3
 8017d4a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8017d4e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017d52:	4343      	muls	r3, r0
 8017d54:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017d58:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017d60:	fb01 3106 	mla	r1, r1, r6, r3
 8017d64:	ea4a 0202 	orr.w	r2, sl, r2
 8017d68:	fb09 1302 	mla	r3, r9, r2, r1
 8017d6c:	9901      	ldr	r1, [sp, #4]
 8017d6e:	9802      	ldr	r0, [sp, #8]
 8017d70:	9a03      	ldr	r2, [sp, #12]
 8017d72:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8017d76:	1a09      	subs	r1, r1, r0
 8017d78:	9801      	ldr	r0, [sp, #4]
 8017d7a:	8812      	ldrh	r2, [r2, #0]
 8017d7c:	eba0 0608 	sub.w	r6, r0, r8
 8017d80:	b2b6      	uxth	r6, r6
 8017d82:	b289      	uxth	r1, r1
 8017d84:	4374      	muls	r4, r6
 8017d86:	fb0c 4401 	mla	r4, ip, r1, r4
 8017d8a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017d8e:	9902      	ldr	r1, [sp, #8]
 8017d90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d94:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017d98:	fb01 4505 	mla	r5, r1, r5, r4
 8017d9c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017da0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017da4:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017da8:	fb08 5707 	mla	r7, r8, r7, r5
 8017dac:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017db0:	1211      	asrs	r1, r2, #8
 8017db2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017db6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8017dba:	b2ff      	uxtb	r7, r7
 8017dbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017dc0:	10d0      	asrs	r0, r2, #3
 8017dc2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017dc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017dca:	00d2      	lsls	r2, r2, #3
 8017dcc:	4379      	muls	r1, r7
 8017dce:	ea43 0e0e 	orr.w	lr, r3, lr
 8017dd2:	b2d2      	uxtb	r2, r2
 8017dd4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017dd8:	fa1f f38e 	uxth.w	r3, lr
 8017ddc:	4378      	muls	r0, r7
 8017dde:	4357      	muls	r7, r2
 8017de0:	1c4a      	adds	r2, r1, #1
 8017de2:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017de6:	1219      	asrs	r1, r3, #8
 8017de8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017dec:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017df0:	4a15      	ldr	r2, [pc, #84]	; (8017e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 8017df2:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017df6:	1c42      	adds	r2, r0, #1
 8017df8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017dfc:	10da      	asrs	r2, r3, #3
 8017dfe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e02:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017e06:	00d2      	lsls	r2, r2, #3
 8017e08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e0c:	430a      	orrs	r2, r1
 8017e0e:	00db      	lsls	r3, r3, #3
 8017e10:	1c79      	adds	r1, r7, #1
 8017e12:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017e16:	b2db      	uxtb	r3, r3
 8017e18:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017e1c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8017e20:	4313      	orrs	r3, r2
 8017e22:	9a03      	ldr	r2, [sp, #12]
 8017e24:	8013      	strh	r3, [r2, #0]
 8017e26:	b005      	add	sp, #20
 8017e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e2c:	280f      	cmp	r0, #15
 8017e2e:	f63f af42 	bhi.w	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017e32:	4677      	mov	r7, lr
 8017e34:	4675      	mov	r5, lr
 8017e36:	4672      	mov	r2, lr
 8017e38:	46f3      	mov	fp, lr
 8017e3a:	e762      	b.n	8017d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8017e3c:	0801f4ba 	.word	0x0801f4ba
 8017e40:	0801fa79 	.word	0x0801fa79
 8017e44:	0801f5a3 	.word	0x0801f5a3
 8017e48:	fffff800 	.word	0xfffff800

08017e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e50:	ed2d 8b08 	vpush	{d8-d11}
 8017e54:	b093      	sub	sp, #76	; 0x4c
 8017e56:	eeb0 aa40 	vmov.f32	s20, s0
 8017e5a:	9210      	str	r2, [sp, #64]	; 0x40
 8017e5c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017e5e:	910e      	str	r1, [sp, #56]	; 0x38
 8017e60:	9306      	str	r3, [sp, #24]
 8017e62:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017e66:	9011      	str	r0, [sp, #68]	; 0x44
 8017e68:	6850      	ldr	r0, [r2, #4]
 8017e6a:	6812      	ldr	r2, [r2, #0]
 8017e6c:	fb00 1303 	mla	r3, r0, r3, r1
 8017e70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017e74:	9307      	str	r3, [sp, #28]
 8017e76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e78:	681b      	ldr	r3, [r3, #0]
 8017e7a:	9308      	str	r3, [sp, #32]
 8017e7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e7e:	685b      	ldr	r3, [r3, #4]
 8017e80:	9309      	str	r3, [sp, #36]	; 0x24
 8017e82:	eef0 9a60 	vmov.f32	s19, s1
 8017e86:	eeb0 9a41 	vmov.f32	s18, s2
 8017e8a:	eeb0 8a62 	vmov.f32	s16, s5
 8017e8e:	eef0 8a43 	vmov.f32	s17, s6
 8017e92:	eef0 ba44 	vmov.f32	s23, s8
 8017e96:	eeb0 ba64 	vmov.f32	s22, s9
 8017e9a:	eef0 aa45 	vmov.f32	s21, s10
 8017e9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	dc03      	bgt.n	8017eac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017ea4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ea6:	2b00      	cmp	r3, #0
 8017ea8:	f340 83b6 	ble.w	8018618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017eac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017eae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017eb2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017eb6:	1e48      	subs	r0, r1, #1
 8017eb8:	1e55      	subs	r5, r2, #1
 8017eba:	9b06      	ldr	r3, [sp, #24]
 8017ebc:	2b00      	cmp	r3, #0
 8017ebe:	f340 8199 	ble.w	80181f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8017ec2:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8017ec4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017ec6:	1436      	asrs	r6, r6, #16
 8017ec8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017ecc:	d406      	bmi.n	8017edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017ece:	4286      	cmp	r6, r0
 8017ed0:	da04      	bge.n	8017edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017ed2:	2b00      	cmp	r3, #0
 8017ed4:	db02      	blt.n	8017edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017ed6:	42ab      	cmp	r3, r5
 8017ed8:	f2c0 818d 	blt.w	80181f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017edc:	3601      	adds	r6, #1
 8017ede:	f100 817a 	bmi.w	80181d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017ee2:	42b1      	cmp	r1, r6
 8017ee4:	f2c0 8177 	blt.w	80181d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017ee8:	3301      	adds	r3, #1
 8017eea:	f100 8174 	bmi.w	80181d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017eee:	429a      	cmp	r2, r3
 8017ef0:	f2c0 8171 	blt.w	80181d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017ef4:	9b06      	ldr	r3, [sp, #24]
 8017ef6:	9f07      	ldr	r7, [sp, #28]
 8017ef8:	930f      	str	r3, [sp, #60]	; 0x3c
 8017efa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017efe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017f00:	2b00      	cmp	r3, #0
 8017f02:	f340 819a 	ble.w	801823a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8017f06:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f08:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017f0a:	1418      	asrs	r0, r3, #16
 8017f0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017f0e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017f12:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f14:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017f18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017f1a:	142d      	asrs	r5, r5, #16
 8017f1c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017f20:	f100 81ee 	bmi.w	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017f24:	f102 3eff 	add.w	lr, r2, #4294967295
 8017f28:	4575      	cmp	r5, lr
 8017f2a:	f280 81e9 	bge.w	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017f2e:	2800      	cmp	r0, #0
 8017f30:	f2c0 81e6 	blt.w	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017f34:	f103 3eff 	add.w	lr, r3, #4294967295
 8017f38:	4570      	cmp	r0, lr
 8017f3a:	f280 81e1 	bge.w	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017f3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f40:	b212      	sxth	r2, r2
 8017f42:	fb00 5002 	mla	r0, r0, r2, r5
 8017f46:	fa1f fe81 	uxth.w	lr, r1
 8017f4a:	eb03 0a00 	add.w	sl, r3, r0
 8017f4e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017f52:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017f56:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017f5a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017f5e:	b29b      	uxth	r3, r3
 8017f60:	f1bc 0f00 	cmp.w	ip, #0
 8017f64:	f000 81af 	beq.w	80182c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8017f68:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017f6c:	940a      	str	r4, [sp, #40]	; 0x28
 8017f6e:	eb0a 0b02 	add.w	fp, sl, r2
 8017f72:	fa1f fa8c 	uxth.w	sl, ip
 8017f76:	fb0a fe0e 	mul.w	lr, sl, lr
 8017f7a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017f7e:	fa1f fa8a 	uxth.w	sl, sl
 8017f82:	eba5 050e 	sub.w	r5, r5, lr
 8017f86:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017f8a:	940b      	str	r4, [sp, #44]	; 0x2c
 8017f8c:	eba3 030a 	sub.w	r3, r3, sl
 8017f90:	b2ad      	uxth	r5, r5
 8017f92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017f94:	b29b      	uxth	r3, r3
 8017f96:	fb08 f505 	mul.w	r5, r8, r5
 8017f9a:	fb09 5303 	mla	r3, r9, r3, r5
 8017f9e:	fb0a 3304 	mla	r3, sl, r4, r3
 8017fa2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017fa4:	fb0e 3304 	mla	r3, lr, r4, r3
 8017fa8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017fac:	2b00      	cmp	r3, #0
 8017fae:	f000 8105 	beq.w	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017fb2:	9c08      	ldr	r4, [sp, #32]
 8017fb4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017fb8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017fbc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017fc0:	f000 8186 	beq.w	80182d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8017fc4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017fc8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017fcc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017fd0:	fb09 f000 	mul.w	r0, r9, r0
 8017fd4:	fb0a fe0e 	mul.w	lr, sl, lr
 8017fd8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017fdc:	f100 0b20 	add.w	fp, r0, #32
 8017fe0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017fe4:	44ce      	add	lr, r9
 8017fe6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017fea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017fee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017ff2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017ff6:	ea4e 0909 	orr.w	r9, lr, r9
 8017ffa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017ffe:	8868      	ldrh	r0, [r5, #2]
 8018000:	d019      	beq.n	8018036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8018002:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018006:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801800a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801800e:	fb08 f800 	mul.w	r8, r8, r0
 8018012:	fb0a fe0e 	mul.w	lr, sl, lr
 8018016:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801801a:	f108 0b20 	add.w	fp, r8, #32
 801801e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018022:	4486      	add	lr, r0
 8018024:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8018028:	0a00      	lsrs	r0, r0, #8
 801802a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801802e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018032:	ea4e 0000 	orr.w	r0, lr, r0
 8018036:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801803a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801803e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018042:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018046:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801804a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801804e:	ea4e 0909 	orr.w	r9, lr, r9
 8018052:	ea4a 0000 	orr.w	r0, sl, r0
 8018056:	f1bc 0f00 	cmp.w	ip, #0
 801805a:	f000 813b 	beq.w	80182d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801805e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018062:	3a01      	subs	r2, #1
 8018064:	0052      	lsls	r2, r2, #1
 8018066:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018068:	3202      	adds	r2, #2
 801806a:	2cff      	cmp	r4, #255	; 0xff
 801806c:	eb05 0e02 	add.w	lr, r5, r2
 8018070:	5aaa      	ldrh	r2, [r5, r2]
 8018072:	d018      	beq.n	80180a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018074:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018078:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801807c:	fb04 fa02 	mul.w	sl, r4, r2
 8018080:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018084:	fb08 f805 	mul.w	r8, r8, r5
 8018088:	f10a 0520 	add.w	r5, sl, #32
 801808c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018090:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018094:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018098:	4442      	add	r2, r8
 801809a:	0a2d      	lsrs	r5, r5, #8
 801809c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80180a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180a4:	432a      	orrs	r2, r5
 80180a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80180a8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80180ac:	2cff      	cmp	r4, #255	; 0xff
 80180ae:	d01a      	beq.n	80180e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80180b0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80180b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180b8:	fb04 fa05 	mul.w	sl, r4, r5
 80180bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80180c0:	fb08 f80e 	mul.w	r8, r8, lr
 80180c4:	f10a 0e20 	add.w	lr, sl, #32
 80180c8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80180cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80180d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180d4:	4445      	add	r5, r8
 80180d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80180da:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80180de:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80180e2:	ea45 050e 	orr.w	r5, r5, lr
 80180e6:	fb1c fe01 	smulbb	lr, ip, r1
 80180ea:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80180ee:	f1cc 0810 	rsb	r8, ip, #16
 80180f2:	eba8 0801 	sub.w	r8, r8, r1
 80180f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80180fa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80180fe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018102:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8018106:	4341      	muls	r1, r0
 8018108:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801810c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018110:	ea4a 0202 	orr.w	r2, sl, r2
 8018114:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018118:	fb09 1108 	mla	r1, r9, r8, r1
 801811c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018120:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018124:	fb0c 1102 	mla	r1, ip, r2, r1
 8018128:	ea4b 0505 	orr.w	r5, fp, r5
 801812c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018130:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018134:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801813c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018140:	ea42 0e0e 	orr.w	lr, r2, lr
 8018144:	fa1f f28e 	uxth.w	r2, lr
 8018148:	2bff      	cmp	r3, #255	; 0xff
 801814a:	f000 80d7 	beq.w	80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801814e:	f8b7 c000 	ldrh.w	ip, [r7]
 8018152:	43db      	mvns	r3, r3
 8018154:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018158:	fa5f fe83 	uxtb.w	lr, r3
 801815c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018160:	fb00 f00e 	mul.w	r0, r0, lr
 8018164:	1c41      	adds	r1, r0, #1
 8018166:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801816a:	1210      	asrs	r0, r2, #8
 801816c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018170:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018174:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8018178:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801817c:	496f      	ldr	r1, [pc, #444]	; (801833c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 801817e:	fb05 f50e 	mul.w	r5, r5, lr
 8018182:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8018186:	1c69      	adds	r1, r5, #1
 8018188:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801818c:	10d1      	asrs	r1, r2, #3
 801818e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018192:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018196:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801819a:	b2db      	uxtb	r3, r3
 801819c:	00c9      	lsls	r1, r1, #3
 801819e:	fb03 f30e 	mul.w	r3, r3, lr
 80181a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80181a6:	4301      	orrs	r1, r0
 80181a8:	1c58      	adds	r0, r3, #1
 80181aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80181ae:	00d3      	lsls	r3, r2, #3
 80181b0:	b2db      	uxtb	r3, r3
 80181b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80181b6:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80181ba:	803b      	strh	r3, [r7, #0]
 80181bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80181be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80181c0:	4413      	add	r3, r2
 80181c2:	9325      	str	r3, [sp, #148]	; 0x94
 80181c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80181c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80181c8:	441a      	add	r2, r3
 80181ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80181cc:	9226      	str	r2, [sp, #152]	; 0x98
 80181ce:	3b01      	subs	r3, #1
 80181d0:	3702      	adds	r7, #2
 80181d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80181d4:	e693      	b.n	8017efe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80181d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80181d8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80181da:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80181dc:	4433      	add	r3, r6
 80181de:	9325      	str	r3, [sp, #148]	; 0x94
 80181e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80181e2:	441c      	add	r4, r3
 80181e4:	9b06      	ldr	r3, [sp, #24]
 80181e6:	9426      	str	r4, [sp, #152]	; 0x98
 80181e8:	3b01      	subs	r3, #1
 80181ea:	9306      	str	r3, [sp, #24]
 80181ec:	9b07      	ldr	r3, [sp, #28]
 80181ee:	3302      	adds	r3, #2
 80181f0:	9307      	str	r3, [sp, #28]
 80181f2:	e662      	b.n	8017eba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80181f4:	d028      	beq.n	8018248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 80181f6:	9b06      	ldr	r3, [sp, #24]
 80181f8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80181fa:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80181fc:	3b01      	subs	r3, #1
 80181fe:	fb00 5003 	mla	r0, r0, r3, r5
 8018202:	1400      	asrs	r0, r0, #16
 8018204:	f53f ae76 	bmi.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018208:	3901      	subs	r1, #1
 801820a:	4288      	cmp	r0, r1
 801820c:	f6bf ae72 	bge.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018210:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018212:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018214:	fb01 0303 	mla	r3, r1, r3, r0
 8018218:	141b      	asrs	r3, r3, #16
 801821a:	f53f ae6b 	bmi.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801821e:	3a01      	subs	r2, #1
 8018220:	4293      	cmp	r3, r2
 8018222:	f6bf ae67 	bge.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018226:	9b06      	ldr	r3, [sp, #24]
 8018228:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801822c:	930f      	str	r3, [sp, #60]	; 0x3c
 801822e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018232:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018234:	2b00      	cmp	r3, #0
 8018236:	f300 8083 	bgt.w	8018340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801823a:	9b06      	ldr	r3, [sp, #24]
 801823c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018240:	9b07      	ldr	r3, [sp, #28]
 8018242:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018246:	9307      	str	r3, [sp, #28]
 8018248:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801824a:	2b00      	cmp	r3, #0
 801824c:	f340 81e4 	ble.w	8018618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8018250:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018254:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018258:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801825c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801825e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018262:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018266:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801826a:	eef0 6a48 	vmov.f32	s13, s16
 801826e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018272:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018276:	ee37 8a48 	vsub.f32	s16, s14, s16
 801827a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801827e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018282:	eef0 6a68 	vmov.f32	s13, s17
 8018286:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801828a:	ee18 2a10 	vmov	r2, s16
 801828e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018292:	fb92 f3f3 	sdiv	r3, r2, r3
 8018296:	ee18 2a90 	vmov	r2, s17
 801829a:	9327      	str	r3, [sp, #156]	; 0x9c
 801829c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801829e:	fb92 f3f3 	sdiv	r3, r2, r3
 80182a2:	9328      	str	r3, [sp, #160]	; 0xa0
 80182a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80182a8:	3b01      	subs	r3, #1
 80182aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80182ae:	930e      	str	r3, [sp, #56]	; 0x38
 80182b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80182b2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80182b6:	bf08      	it	eq
 80182b8:	4613      	moveq	r3, r2
 80182ba:	9306      	str	r3, [sp, #24]
 80182bc:	eef0 8a67 	vmov.f32	s17, s15
 80182c0:	eeb0 8a47 	vmov.f32	s16, s14
 80182c4:	e5eb      	b.n	8017e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80182c6:	fb08 f505 	mul.w	r5, r8, r5
 80182ca:	fb09 5303 	mla	r3, r9, r3, r5
 80182ce:	e66b      	b.n	8017fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80182d0:	4681      	mov	r9, r0
 80182d2:	e692      	b.n	8017ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80182d4:	f1c1 0210 	rsb	r2, r1, #16
 80182d8:	4341      	muls	r1, r0
 80182da:	fb09 1902 	mla	r9, r9, r2, r1
 80182de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80182e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80182e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80182ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80182ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80182f2:	ea42 0909 	orr.w	r9, r2, r9
 80182f6:	fa1f f289 	uxth.w	r2, r9
 80182fa:	e725      	b.n	8018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80182fc:	803a      	strh	r2, [r7, #0]
 80182fe:	e75d      	b.n	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018300:	f115 0e01 	adds.w	lr, r5, #1
 8018304:	f53f af5a 	bmi.w	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018308:	4572      	cmp	r2, lr
 801830a:	f6ff af57 	blt.w	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801830e:	f110 0e01 	adds.w	lr, r0, #1
 8018312:	f53f af53 	bmi.w	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018316:	4573      	cmp	r3, lr
 8018318:	f6ff af50 	blt.w	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801831c:	b21b      	sxth	r3, r3
 801831e:	b212      	sxth	r2, r2
 8018320:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8018324:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8018328:	9301      	str	r3, [sp, #4]
 801832a:	9200      	str	r2, [sp, #0]
 801832c:	4639      	mov	r1, r7
 801832e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8018332:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018334:	f7ff fbf2 	bl	8017b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018338:	e740      	b.n	80181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801833a:	bf00      	nop
 801833c:	fffff800 	.word	0xfffff800
 8018340:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018342:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018346:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018348:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801834c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801834e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018352:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018354:	141f      	asrs	r7, r3, #16
 8018356:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018358:	141b      	asrs	r3, r3, #16
 801835a:	fb01 3707 	mla	r7, r1, r7, r3
 801835e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018360:	fa1f fc82 	uxth.w	ip, r2
 8018364:	eb03 0a07 	add.w	sl, r3, r7
 8018368:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801836c:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018370:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018374:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018378:	b29b      	uxth	r3, r3
 801837a:	2d00      	cmp	r5, #0
 801837c:	f000 8131 	beq.w	80185e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 8018380:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018384:	940c      	str	r4, [sp, #48]	; 0x30
 8018386:	eb0a 0b01 	add.w	fp, sl, r1
 801838a:	fa1f fa85 	uxth.w	sl, r5
 801838e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018392:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018396:	fa1f fa8a 	uxth.w	sl, sl
 801839a:	eba0 000c 	sub.w	r0, r0, ip
 801839e:	eba3 030a 	sub.w	r3, r3, sl
 80183a2:	b280      	uxth	r0, r0
 80183a4:	fb08 f000 	mul.w	r0, r8, r0
 80183a8:	b29b      	uxth	r3, r3
 80183aa:	fb09 0303 	mla	r3, r9, r3, r0
 80183ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80183b0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80183b4:	940d      	str	r4, [sp, #52]	; 0x34
 80183b6:	fb0a 3300 	mla	r3, sl, r0, r3
 80183ba:	fb0c 3304 	mla	r3, ip, r4, r3
 80183be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80183c2:	2b00      	cmp	r3, #0
 80183c4:	f000 80ff 	beq.w	80185c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 80183c8:	9808      	ldr	r0, [sp, #32]
 80183ca:	9c08      	ldr	r4, [sp, #32]
 80183cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80183d0:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80183d4:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80183d8:	f000 8108 	beq.w	80185ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 80183dc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80183e0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80183e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80183e8:	fb09 f707 	mul.w	r7, r9, r7
 80183ec:	fb0a fc0c 	mul.w	ip, sl, ip
 80183f0:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80183f4:	f107 0b20 	add.w	fp, r7, #32
 80183f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80183fc:	44cc      	add	ip, r9
 80183fe:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018402:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018406:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801840a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801840e:	ea4c 0909 	orr.w	r9, ip, r9
 8018412:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018416:	8847      	ldrh	r7, [r0, #2]
 8018418:	d019      	beq.n	801844e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801841a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801841e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018422:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018426:	fb08 f807 	mul.w	r8, r8, r7
 801842a:	fb0a fc0c 	mul.w	ip, sl, ip
 801842e:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018432:	f108 0b20 	add.w	fp, r8, #32
 8018436:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801843a:	44bc      	add	ip, r7
 801843c:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018440:	0a3f      	lsrs	r7, r7, #8
 8018442:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018446:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801844a:	ea4c 0707 	orr.w	r7, ip, r7
 801844e:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018452:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018456:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801845a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801845e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018462:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018466:	ea4c 0909 	orr.w	r9, ip, r9
 801846a:	ea4a 0707 	orr.w	r7, sl, r7
 801846e:	2d00      	cmp	r5, #0
 8018470:	f000 80be 	beq.w	80185f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8018474:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018478:	3901      	subs	r1, #1
 801847a:	0049      	lsls	r1, r1, #1
 801847c:	3102      	adds	r1, #2
 801847e:	eb00 0c01 	add.w	ip, r0, r1
 8018482:	5a41      	ldrh	r1, [r0, r1]
 8018484:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018486:	28ff      	cmp	r0, #255	; 0xff
 8018488:	d019      	beq.n	80184be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801848a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801848c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018490:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018494:	fb04 fa01 	mul.w	sl, r4, r1
 8018498:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801849c:	fb08 f800 	mul.w	r8, r8, r0
 80184a0:	f10a 0020 	add.w	r0, sl, #32
 80184a4:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80184a8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80184ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184b0:	4441      	add	r1, r8
 80184b2:	0a00      	lsrs	r0, r0, #8
 80184b4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80184b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184bc:	4301      	orrs	r1, r0
 80184be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80184c0:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80184c4:	2cff      	cmp	r4, #255	; 0xff
 80184c6:	d01a      	beq.n	80184fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80184c8:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80184cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184d0:	fb04 fa00 	mul.w	sl, r4, r0
 80184d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80184d8:	fb08 f80c 	mul.w	r8, r8, ip
 80184dc:	f10a 0c20 	add.w	ip, sl, #32
 80184e0:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80184e4:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80184e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184ec:	4440      	add	r0, r8
 80184ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184f2:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80184f6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80184fa:	ea40 000c 	orr.w	r0, r0, ip
 80184fe:	fb15 fc02 	smulbb	ip, r5, r2
 8018502:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018506:	f1c5 0810 	rsb	r8, r5, #16
 801850a:	eba8 0802 	sub.w	r8, r8, r2
 801850e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018512:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018516:	437a      	muls	r2, r7
 8018518:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801851c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018520:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018524:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018528:	fb09 2208 	mla	r2, r9, r8, r2
 801852c:	ea4a 0101 	orr.w	r1, sl, r1
 8018530:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018534:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018538:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801853c:	fb05 2201 	mla	r2, r5, r1, r2
 8018540:	ea4b 0000 	orr.w	r0, fp, r0
 8018544:	fb0c 2200 	mla	r2, ip, r0, r2
 8018548:	0d57      	lsrs	r7, r2, #21
 801854a:	0952      	lsrs	r2, r2, #5
 801854c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018550:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018554:	433a      	orrs	r2, r7
 8018556:	2bff      	cmp	r3, #255	; 0xff
 8018558:	b292      	uxth	r2, r2
 801855a:	d05a      	beq.n	8018612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 801855c:	f8be 7000 	ldrh.w	r7, [lr]
 8018560:	4c30      	ldr	r4, [pc, #192]	; (8018624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8018562:	43db      	mvns	r3, r3
 8018564:	1238      	asrs	r0, r7, #8
 8018566:	fa5f fc83 	uxtb.w	ip, r3
 801856a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801856e:	10fd      	asrs	r5, r7, #3
 8018570:	fb00 f00c 	mul.w	r0, r0, ip
 8018574:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018578:	fb05 f10c 	mul.w	r1, r5, ip
 801857c:	1c45      	adds	r5, r0, #1
 801857e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018582:	1215      	asrs	r5, r2, #8
 8018584:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018588:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801858c:	1c4d      	adds	r5, r1, #1
 801858e:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018592:	10d1      	asrs	r1, r2, #3
 8018594:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018598:	00fb      	lsls	r3, r7, #3
 801859a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801859e:	b2db      	uxtb	r3, r3
 80185a0:	00c9      	lsls	r1, r1, #3
 80185a2:	fb03 f30c 	mul.w	r3, r3, ip
 80185a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80185aa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80185ae:	4308      	orrs	r0, r1
 80185b0:	00d2      	lsls	r2, r2, #3
 80185b2:	1c59      	adds	r1, r3, #1
 80185b4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80185b8:	b2d1      	uxtb	r1, r2
 80185ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80185be:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80185c2:	f8ae 0000 	strh.w	r0, [lr]
 80185c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80185c8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80185ca:	4413      	add	r3, r2
 80185cc:	9325      	str	r3, [sp, #148]	; 0x94
 80185ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80185d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80185d2:	441a      	add	r2, r3
 80185d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185d6:	9226      	str	r2, [sp, #152]	; 0x98
 80185d8:	3b01      	subs	r3, #1
 80185da:	f10e 0e02 	add.w	lr, lr, #2
 80185de:	930f      	str	r3, [sp, #60]	; 0x3c
 80185e0:	e627      	b.n	8018232 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80185e2:	fb08 f000 	mul.w	r0, r8, r0
 80185e6:	fb09 0303 	mla	r3, r9, r3, r0
 80185ea:	e6e8      	b.n	80183be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 80185ec:	46b9      	mov	r9, r7
 80185ee:	e710      	b.n	8018412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 80185f0:	f1c2 0110 	rsb	r1, r2, #16
 80185f4:	437a      	muls	r2, r7
 80185f6:	fb09 2901 	mla	r9, r9, r1, r2
 80185fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80185fe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018602:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018606:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801860a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801860e:	4302      	orrs	r2, r0
 8018610:	e7a1      	b.n	8018556 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8018612:	f8ae 2000 	strh.w	r2, [lr]
 8018616:	e7d6      	b.n	80185c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 8018618:	b013      	add	sp, #76	; 0x4c
 801861a:	ecbd 8b08 	vpop	{d8-d11}
 801861e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018622:	bf00      	nop
 8018624:	fffff800 	.word	0xfffff800

08018628 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018628:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801862c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018630:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018634:	f1bc 0f00 	cmp.w	ip, #0
 8018638:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801863c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018640:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018644:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018648:	8808      	ldrh	r0, [r1, #0]
 801864a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801864e:	db2f      	blt.n	80186b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018650:	45e2      	cmp	sl, ip
 8018652:	dd2d      	ble.n	80186b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018654:	2c00      	cmp	r4, #0
 8018656:	db29      	blt.n	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018658:	42a3      	cmp	r3, r4
 801865a:	dd27      	ble.n	80186ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801865c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018660:	1c62      	adds	r2, r4, #1
 8018662:	d428      	bmi.n	80186b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018664:	4293      	cmp	r3, r2
 8018666:	dd26      	ble.n	80186b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018668:	b32f      	cbz	r7, 80186b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801866a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801866e:	f11c 0c01 	adds.w	ip, ip, #1
 8018672:	d424      	bmi.n	80186be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018674:	45e2      	cmp	sl, ip
 8018676:	dd22      	ble.n	80186be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018678:	2e00      	cmp	r6, #0
 801867a:	f000 809c 	beq.w	80187b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801867e:	2c00      	cmp	r4, #0
 8018680:	db1b      	blt.n	80186ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018682:	42a3      	cmp	r3, r4
 8018684:	dd19      	ble.n	80186ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018686:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801868a:	3401      	adds	r4, #1
 801868c:	d41a      	bmi.n	80186c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801868e:	42a3      	cmp	r3, r4
 8018690:	dd18      	ble.n	80186c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018692:	b1cf      	cbz	r7, 80186c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018694:	3301      	adds	r3, #1
 8018696:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801869a:	2f0f      	cmp	r7, #15
 801869c:	d915      	bls.n	80186ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801869e:	4b49      	ldr	r3, [pc, #292]	; (80187c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80186a0:	4a49      	ldr	r2, [pc, #292]	; (80187c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80186a2:	484a      	ldr	r0, [pc, #296]	; (80187cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80186a4:	f240 11ef 	movw	r1, #495	; 0x1ef
 80186a8:	f002 ff7e 	bl	801b5a8 <__assert_func>
 80186ac:	4681      	mov	r9, r0
 80186ae:	e7d7      	b.n	8018660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80186b0:	4686      	mov	lr, r0
 80186b2:	4681      	mov	r9, r0
 80186b4:	e7db      	b.n	801866e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80186b6:	4686      	mov	lr, r0
 80186b8:	e7d9      	b.n	801866e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80186ba:	4684      	mov	ip, r0
 80186bc:	e7e5      	b.n	801868a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80186be:	4603      	mov	r3, r0
 80186c0:	4684      	mov	ip, r0
 80186c2:	e7ea      	b.n	801869a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80186c4:	4603      	mov	r3, r0
 80186c6:	e7e8      	b.n	801869a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80186c8:	4603      	mov	r3, r0
 80186ca:	2e0f      	cmp	r6, #15
 80186cc:	d8e7      	bhi.n	801869e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80186ce:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80186d2:	fb17 f806 	smulbb	r8, r7, r6
 80186d6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80186da:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80186de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80186e2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80186e6:	ea44 0909 	orr.w	r9, r4, r9
 80186ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186ee:	f1c6 0410 	rsb	r4, r6, #16
 80186f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80186f6:	1be4      	subs	r4, r4, r7
 80186f8:	041a      	lsls	r2, r3, #16
 80186fa:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80186fe:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018702:	fb07 fe0e 	mul.w	lr, r7, lr
 8018706:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801870a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801870e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018712:	fb04 e409 	mla	r4, r4, r9, lr
 8018716:	4313      	orrs	r3, r2
 8018718:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801871c:	fb08 4303 	mla	r3, r8, r3, r4
 8018720:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018724:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018728:	4322      	orrs	r2, r4
 801872a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801872e:	fb06 3202 	mla	r2, r6, r2, r3
 8018732:	0d53      	lsrs	r3, r2, #21
 8018734:	0952      	lsrs	r2, r2, #5
 8018736:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801873a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801873e:	431a      	orrs	r2, r3
 8018740:	b293      	uxth	r3, r2
 8018742:	b2af      	uxth	r7, r5
 8018744:	1202      	asrs	r2, r0, #8
 8018746:	43ed      	mvns	r5, r5
 8018748:	b2ed      	uxtb	r5, r5
 801874a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801874e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018752:	fb12 f205 	smulbb	r2, r2, r5
 8018756:	10c6      	asrs	r6, r0, #3
 8018758:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801875c:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018760:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018764:	10da      	asrs	r2, r3, #3
 8018766:	fb16 f605 	smulbb	r6, r6, r5
 801876a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801876e:	fb02 6207 	mla	r2, r2, r7, r6
 8018772:	b296      	uxth	r6, r2
 8018774:	00c2      	lsls	r2, r0, #3
 8018776:	00dc      	lsls	r4, r3, #3
 8018778:	b2d2      	uxtb	r2, r2
 801877a:	b2e4      	uxtb	r4, r4
 801877c:	fb12 f205 	smulbb	r2, r2, r5
 8018780:	fb04 2207 	mla	r2, r4, r7, r2
 8018784:	fa1f fc8c 	uxth.w	ip, ip
 8018788:	b292      	uxth	r2, r2
 801878a:	f10c 0301 	add.w	r3, ip, #1
 801878e:	1c50      	adds	r0, r2, #1
 8018790:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018794:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018798:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801879c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80187a0:	4313      	orrs	r3, r2
 80187a2:	1c72      	adds	r2, r6, #1
 80187a4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80187a8:	0952      	lsrs	r2, r2, #5
 80187aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187ae:	4313      	orrs	r3, r2
 80187b0:	800b      	strh	r3, [r1, #0]
 80187b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80187b6:	2f0f      	cmp	r7, #15
 80187b8:	f63f af71 	bhi.w	801869e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80187bc:	4603      	mov	r3, r0
 80187be:	4684      	mov	ip, r0
 80187c0:	e785      	b.n	80186ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80187c2:	bf00      	nop
 80187c4:	0801f4ba 	.word	0x0801f4ba
 80187c8:	0801fb22 	.word	0x0801fb22
 80187cc:	0801f5a3 	.word	0x0801f5a3

080187d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d4:	ed2d 8b08 	vpush	{d8-d11}
 80187d8:	b093      	sub	sp, #76	; 0x4c
 80187da:	461d      	mov	r5, r3
 80187dc:	9210      	str	r2, [sp, #64]	; 0x40
 80187de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80187e0:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 80187e4:	920b      	str	r2, [sp, #44]	; 0x2c
 80187e6:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 80187ea:	910a      	str	r1, [sp, #40]	; 0x28
 80187ec:	6859      	ldr	r1, [r3, #4]
 80187ee:	681b      	ldr	r3, [r3, #0]
 80187f0:	9011      	str	r0, [sp, #68]	; 0x44
 80187f2:	fb01 2707 	mla	r7, r1, r7, r2
 80187f6:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80187fa:	9307      	str	r3, [sp, #28]
 80187fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187fe:	681b      	ldr	r3, [r3, #0]
 8018800:	9309      	str	r3, [sp, #36]	; 0x24
 8018802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018804:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018808:	43db      	mvns	r3, r3
 801880a:	b2db      	uxtb	r3, r3
 801880c:	eeb0 aa40 	vmov.f32	s20, s0
 8018810:	eef0 9a60 	vmov.f32	s19, s1
 8018814:	eeb0 9a41 	vmov.f32	s18, s2
 8018818:	eeb0 8a62 	vmov.f32	s16, s5
 801881c:	eef0 8a43 	vmov.f32	s17, s6
 8018820:	eef0 ba44 	vmov.f32	s23, s8
 8018824:	eeb0 ba64 	vmov.f32	s22, s9
 8018828:	eef0 aa45 	vmov.f32	s21, s10
 801882c:	9308      	str	r3, [sp, #32]
 801882e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018830:	2b00      	cmp	r3, #0
 8018832:	dc03      	bgt.n	801883c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018834:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018836:	2b00      	cmp	r3, #0
 8018838:	f340 8203 	ble.w	8018c42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801883c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801883e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018842:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018846:	1e48      	subs	r0, r1, #1
 8018848:	f102 3cff 	add.w	ip, r2, #4294967295
 801884c:	2d00      	cmp	r5, #0
 801884e:	f340 80da 	ble.w	8018a06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018852:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018856:	ea4f 4326 	mov.w	r3, r6, asr #16
 801885a:	d406      	bmi.n	801886a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801885c:	4586      	cmp	lr, r0
 801885e:	da04      	bge.n	801886a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018860:	2b00      	cmp	r3, #0
 8018862:	db02      	blt.n	801886a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018864:	4563      	cmp	r3, ip
 8018866:	f2c0 80cf 	blt.w	8018a08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801886a:	f11e 0e01 	adds.w	lr, lr, #1
 801886e:	f100 80c1 	bmi.w	80189f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018872:	4571      	cmp	r1, lr
 8018874:	f2c0 80be 	blt.w	80189f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018878:	3301      	adds	r3, #1
 801887a:	f100 80bb 	bmi.w	80189f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801887e:	429a      	cmp	r2, r3
 8018880:	f2c0 80b8 	blt.w	80189f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018884:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018888:	46a9      	mov	r9, r5
 801888a:	f1b9 0f00 	cmp.w	r9, #0
 801888e:	f340 80d8 	ble.w	8018a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018892:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018894:	1421      	asrs	r1, r4, #16
 8018896:	ea4f 4026 	mov.w	r0, r6, asr #16
 801889a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801889e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80188a2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80188a6:	f100 8111 	bmi.w	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188aa:	f10e 3aff 	add.w	sl, lr, #4294967295
 80188ae:	4551      	cmp	r1, sl
 80188b0:	f280 810c 	bge.w	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188b4:	2800      	cmp	r0, #0
 80188b6:	f2c0 8109 	blt.w	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188ba:	f103 3aff 	add.w	sl, r3, #4294967295
 80188be:	4550      	cmp	r0, sl
 80188c0:	f280 8104 	bge.w	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188c4:	fa0f f38e 	sxth.w	r3, lr
 80188c8:	fb00 1103 	mla	r1, r0, r3, r1
 80188cc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80188ce:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80188d2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80188d6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80188da:	f1bc 0f00 	cmp.w	ip, #0
 80188de:	d007      	beq.n	80188f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80188e0:	005b      	lsls	r3, r3, #1
 80188e2:	eb0a 0003 	add.w	r0, sl, r3
 80188e6:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80188ea:	930c      	str	r3, [sp, #48]	; 0x30
 80188ec:	8843      	ldrh	r3, [r0, #2]
 80188ee:	930d      	str	r3, [sp, #52]	; 0x34
 80188f0:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80188f4:	fb12 f30c 	smulbb	r3, r2, ip
 80188f8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80188fc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018900:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018904:	10db      	asrs	r3, r3, #3
 8018906:	ea40 000e 	orr.w	r0, r0, lr
 801890a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801890e:	f1cc 0e10 	rsb	lr, ip, #16
 8018912:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018916:	ebae 0e02 	sub.w	lr, lr, r2
 801891a:	ea4a 0101 	orr.w	r1, sl, r1
 801891e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018922:	4351      	muls	r1, r2
 8018924:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018926:	9f08      	ldr	r7, [sp, #32]
 8018928:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801892c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018930:	0410      	lsls	r0, r2, #16
 8018932:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018936:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801893a:	4310      	orrs	r0, r2
 801893c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801893e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018940:	0412      	lsls	r2, r2, #16
 8018942:	fb03 e000 	mla	r0, r3, r0, lr
 8018946:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801894a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801894e:	ea42 020e 	orr.w	r2, r2, lr
 8018952:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018956:	fb03 0302 	mla	r3, r3, r2, r0
 801895a:	0d5a      	lsrs	r2, r3, #21
 801895c:	095b      	lsrs	r3, r3, #5
 801895e:	f8b8 c000 	ldrh.w	ip, [r8]
 8018962:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018966:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801896a:	4313      	orrs	r3, r2
 801896c:	b29b      	uxth	r3, r3
 801896e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018972:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018976:	1218      	asrs	r0, r3, #8
 8018978:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801897c:	fb11 f107 	smulbb	r1, r1, r7
 8018980:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018984:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018988:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801898c:	fb00 1002 	mla	r0, r0, r2, r1
 8018990:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018994:	10d9      	asrs	r1, r3, #3
 8018996:	fa5f fc8c 	uxtb.w	ip, ip
 801899a:	00db      	lsls	r3, r3, #3
 801899c:	b2db      	uxtb	r3, r3
 801899e:	fb1c fc07 	smulbb	ip, ip, r7
 80189a2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80189a6:	fb1e fe07 	smulbb	lr, lr, r7
 80189aa:	fb01 e102 	mla	r1, r1, r2, lr
 80189ae:	fb03 c202 	mla	r2, r3, r2, ip
 80189b2:	b280      	uxth	r0, r0
 80189b4:	b292      	uxth	r2, r2
 80189b6:	1c43      	adds	r3, r0, #1
 80189b8:	f102 0c01 	add.w	ip, r2, #1
 80189bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80189c0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80189c4:	b289      	uxth	r1, r1
 80189c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80189ca:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80189ce:	4313      	orrs	r3, r2
 80189d0:	1c4a      	adds	r2, r1, #1
 80189d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80189d6:	0949      	lsrs	r1, r1, #5
 80189d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189dc:	430b      	orrs	r3, r1
 80189de:	f8a8 3000 	strh.w	r3, [r8]
 80189e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80189e4:	441c      	add	r4, r3
 80189e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189e8:	f108 0802 	add.w	r8, r8, #2
 80189ec:	441e      	add	r6, r3
 80189ee:	f109 39ff 	add.w	r9, r9, #4294967295
 80189f2:	e74a      	b.n	801888a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80189f4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80189f6:	441c      	add	r4, r3
 80189f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189fa:	441e      	add	r6, r3
 80189fc:	9b07      	ldr	r3, [sp, #28]
 80189fe:	3302      	adds	r3, #2
 8018a00:	3d01      	subs	r5, #1
 8018a02:	9307      	str	r3, [sp, #28]
 8018a04:	e722      	b.n	801884c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018a06:	d022      	beq.n	8018a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018a08:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018a0a:	1e6b      	subs	r3, r5, #1
 8018a0c:	fb00 4003 	mla	r0, r0, r3, r4
 8018a10:	1400      	asrs	r0, r0, #16
 8018a12:	f53f af37 	bmi.w	8018884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a16:	3901      	subs	r1, #1
 8018a18:	4288      	cmp	r0, r1
 8018a1a:	f6bf af33 	bge.w	8018884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a1e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018a20:	fb01 6303 	mla	r3, r1, r3, r6
 8018a24:	141b      	asrs	r3, r3, #16
 8018a26:	f53f af2d 	bmi.w	8018884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a2a:	3a01      	subs	r2, #1
 8018a2c:	4293      	cmp	r3, r2
 8018a2e:	f6bf af29 	bge.w	8018884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a32:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018a36:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018a3a:	46a8      	mov	r8, r5
 8018a3c:	f1b8 0f00 	cmp.w	r8, #0
 8018a40:	dc5e      	bgt.n	8018b00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018a42:	9b07      	ldr	r3, [sp, #28]
 8018a44:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018a48:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018a4c:	9307      	str	r3, [sp, #28]
 8018a4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a50:	2b00      	cmp	r3, #0
 8018a52:	f340 80f6 	ble.w	8018c42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018a56:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018a5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a5e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018a62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a64:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018a68:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018a6c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018a70:	eef0 6a48 	vmov.f32	s13, s16
 8018a74:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018a78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a7c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018a80:	ee16 4a90 	vmov	r4, s13
 8018a84:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018a88:	eef0 6a68 	vmov.f32	s13, s17
 8018a8c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018a90:	ee18 2a10 	vmov	r2, s16
 8018a94:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018a98:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a9c:	ee18 2a90 	vmov	r2, s17
 8018aa0:	9327      	str	r3, [sp, #156]	; 0x9c
 8018aa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018aa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018aa8:	9328      	str	r3, [sp, #160]	; 0xa0
 8018aaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018aac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018aae:	3b01      	subs	r3, #1
 8018ab0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ab4:	930a      	str	r3, [sp, #40]	; 0x28
 8018ab6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ab8:	ee16 6a90 	vmov	r6, s13
 8018abc:	bf14      	ite	ne
 8018abe:	461d      	movne	r5, r3
 8018ac0:	4615      	moveq	r5, r2
 8018ac2:	eef0 8a67 	vmov.f32	s17, s15
 8018ac6:	eeb0 8a47 	vmov.f32	s16, s14
 8018aca:	e6b0      	b.n	801882e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018acc:	f111 0a01 	adds.w	sl, r1, #1
 8018ad0:	d487      	bmi.n	80189e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ad2:	45d6      	cmp	lr, sl
 8018ad4:	db85      	blt.n	80189e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ad6:	f110 0a01 	adds.w	sl, r0, #1
 8018ada:	d482      	bmi.n	80189e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018adc:	4553      	cmp	r3, sl
 8018ade:	db80      	blt.n	80189e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ae0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018ae2:	9101      	str	r1, [sp, #4]
 8018ae4:	b21b      	sxth	r3, r3
 8018ae6:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018aea:	9300      	str	r3, [sp, #0]
 8018aec:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018af0:	fa0f f38e 	sxth.w	r3, lr
 8018af4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018af6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018af8:	4641      	mov	r1, r8
 8018afa:	f7ff fd95 	bl	8018628 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018afe:	e770      	b.n	80189e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018b00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018b02:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018b04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018b08:	1430      	asrs	r0, r6, #16
 8018b0a:	1423      	asrs	r3, r4, #16
 8018b0c:	fb01 3000 	mla	r0, r1, r0, r3
 8018b10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b12:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018b16:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018b1a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018b1e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018b22:	8858      	ldrh	r0, [r3, #2]
 8018b24:	f1be 0f00 	cmp.w	lr, #0
 8018b28:	d00b      	beq.n	8018b42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018b2a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018b2e:	3901      	subs	r1, #1
 8018b30:	0049      	lsls	r1, r1, #1
 8018b32:	3102      	adds	r1, #2
 8018b34:	eb03 0b01 	add.w	fp, r3, r1
 8018b38:	5a5b      	ldrh	r3, [r3, r1]
 8018b3a:	930e      	str	r3, [sp, #56]	; 0x38
 8018b3c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018b40:	930f      	str	r3, [sp, #60]	; 0x3c
 8018b42:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018b46:	fb12 f30e 	smulbb	r3, r2, lr
 8018b4a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b4e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018b52:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018b56:	10db      	asrs	r3, r3, #3
 8018b58:	ea41 010c 	orr.w	r1, r1, ip
 8018b5c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b60:	f1ce 0c10 	rsb	ip, lr, #16
 8018b64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b68:	ebac 0c02 	sub.w	ip, ip, r2
 8018b6c:	ea4b 0000 	orr.w	r0, fp, r0
 8018b70:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018b74:	4350      	muls	r0, r2
 8018b76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018b78:	9f08      	ldr	r7, [sp, #32]
 8018b7a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018b7e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018b82:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018b86:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8018b8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018b8c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018b8e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b92:	0412      	lsls	r2, r2, #16
 8018b94:	ea4b 0101 	orr.w	r1, fp, r1
 8018b98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b9c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018ba0:	fb03 c101 	mla	r1, r3, r1, ip
 8018ba4:	4302      	orrs	r2, r0
 8018ba6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018baa:	fb03 1202 	mla	r2, r3, r2, r1
 8018bae:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8018bb2:	0952      	lsrs	r2, r2, #5
 8018bb4:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8018bb8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018bbc:	f8b9 2000 	ldrh.w	r2, [r9]
 8018bc0:	ea4b 0303 	orr.w	r3, fp, r3
 8018bc4:	b29b      	uxth	r3, r3
 8018bc6:	1211      	asrs	r1, r2, #8
 8018bc8:	1218      	asrs	r0, r3, #8
 8018bca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018bce:	fb11 f107 	smulbb	r1, r1, r7
 8018bd2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018bd6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018bda:	00d2      	lsls	r2, r2, #3
 8018bdc:	fb00 100a 	mla	r0, r0, sl, r1
 8018be0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018be4:	10d9      	asrs	r1, r3, #3
 8018be6:	b2d2      	uxtb	r2, r2
 8018be8:	00db      	lsls	r3, r3, #3
 8018bea:	fb1c fc07 	smulbb	ip, ip, r7
 8018bee:	fb12 f207 	smulbb	r2, r2, r7
 8018bf2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018bf6:	b2db      	uxtb	r3, r3
 8018bf8:	b280      	uxth	r0, r0
 8018bfa:	fb01 c10a 	mla	r1, r1, sl, ip
 8018bfe:	fb03 230a 	mla	r3, r3, sl, r2
 8018c02:	b29b      	uxth	r3, r3
 8018c04:	b289      	uxth	r1, r1
 8018c06:	1c42      	adds	r2, r0, #1
 8018c08:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018c0c:	f101 0c01 	add.w	ip, r1, #1
 8018c10:	1c5a      	adds	r2, r3, #1
 8018c12:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018c16:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018c1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018c1c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018c20:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018c24:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018c28:	4310      	orrs	r0, r2
 8018c2a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018c2e:	441c      	add	r4, r3
 8018c30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c32:	ea40 000c 	orr.w	r0, r0, ip
 8018c36:	f829 0b02 	strh.w	r0, [r9], #2
 8018c3a:	441e      	add	r6, r3
 8018c3c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c40:	e6fc      	b.n	8018a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8018c42:	b013      	add	sp, #76	; 0x4c
 8018c44:	ecbd 8b08 	vpop	{d8-d11}
 8018c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c50:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018c54:	fb06 5c03 	mla	ip, r6, r3, r5
 8018c58:	2e00      	cmp	r6, #0
 8018c5a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018c5e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018c62:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8018c66:	8808      	ldrh	r0, [r1, #0]
 8018c68:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018c6c:	db2e      	blt.n	8018ccc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018c6e:	45b0      	cmp	r8, r6
 8018c70:	dd2c      	ble.n	8018ccc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018c72:	2d00      	cmp	r5, #0
 8018c74:	db28      	blt.n	8018cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018c76:	42ab      	cmp	r3, r5
 8018c78:	dd26      	ble.n	8018cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018c7a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8018c7e:	1c6a      	adds	r2, r5, #1
 8018c80:	d427      	bmi.n	8018cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c82:	4293      	cmp	r3, r2
 8018c84:	dd25      	ble.n	8018cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c86:	b324      	cbz	r4, 8018cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c88:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018c8c:	3601      	adds	r6, #1
 8018c8e:	d424      	bmi.n	8018cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018c90:	45b0      	cmp	r8, r6
 8018c92:	dd22      	ble.n	8018cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018c94:	b31f      	cbz	r7, 8018cde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8018c96:	2d00      	cmp	r5, #0
 8018c98:	db1d      	blt.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018c9a:	42ab      	cmp	r3, r5
 8018c9c:	dd1b      	ble.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018c9e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018ca2:	3501      	adds	r5, #1
 8018ca4:	d405      	bmi.n	8018cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018ca6:	42ab      	cmp	r3, r5
 8018ca8:	dd03      	ble.n	8018cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018caa:	b124      	cbz	r4, 8018cb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018cac:	3301      	adds	r3, #1
 8018cae:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018cb2:	2c0f      	cmp	r4, #15
 8018cb4:	d801      	bhi.n	8018cba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018cb6:	2f0f      	cmp	r7, #15
 8018cb8:	d914      	bls.n	8018ce4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8018cba:	4b27      	ldr	r3, [pc, #156]	; (8018d58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018cbc:	4a27      	ldr	r2, [pc, #156]	; (8018d5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018cbe:	4828      	ldr	r0, [pc, #160]	; (8018d60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018cc0:	f240 11ef 	movw	r1, #495	; 0x1ef
 8018cc4:	f002 fc70 	bl	801b5a8 <__assert_func>
 8018cc8:	4684      	mov	ip, r0
 8018cca:	e7d8      	b.n	8018c7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018ccc:	4602      	mov	r2, r0
 8018cce:	4684      	mov	ip, r0
 8018cd0:	e7dc      	b.n	8018c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018cd2:	4602      	mov	r2, r0
 8018cd4:	e7da      	b.n	8018c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018cd6:	4606      	mov	r6, r0
 8018cd8:	e7e3      	b.n	8018ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018cda:	4606      	mov	r6, r0
 8018cdc:	e7e9      	b.n	8018cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018cde:	2c0f      	cmp	r4, #15
 8018ce0:	d8eb      	bhi.n	8018cba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018ce2:	4606      	mov	r6, r0
 8018ce4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018ce8:	fb14 f307 	smulbb	r3, r4, r7
 8018cec:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018cf0:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018cf4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018cf8:	10db      	asrs	r3, r3, #3
 8018cfa:	ea45 0c0c 	orr.w	ip, r5, ip
 8018cfe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018d02:	f1c7 0510 	rsb	r5, r7, #16
 8018d06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018d0a:	1b2d      	subs	r5, r5, r4
 8018d0c:	ea4e 0202 	orr.w	r2, lr, r2
 8018d10:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018d14:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018d18:	4354      	muls	r4, r2
 8018d1a:	fb05 450c 	mla	r5, r5, ip, r4
 8018d1e:	0404      	lsls	r4, r0, #16
 8018d20:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d28:	4320      	orrs	r0, r4
 8018d2a:	fb03 5400 	mla	r4, r3, r0, r5
 8018d2e:	0430      	lsls	r0, r6, #16
 8018d30:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d34:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018d38:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018d3c:	4330      	orrs	r0, r6
 8018d3e:	fb07 4000 	mla	r0, r7, r0, r4
 8018d42:	0d43      	lsrs	r3, r0, #21
 8018d44:	0940      	lsrs	r0, r0, #5
 8018d46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d4e:	4318      	orrs	r0, r3
 8018d50:	8008      	strh	r0, [r1, #0]
 8018d52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018d56:	bf00      	nop
 8018d58:	0801f4ba 	.word	0x0801f4ba
 8018d5c:	0801fb22 	.word	0x0801fb22
 8018d60:	0801f5a3 	.word	0x0801f5a3

08018d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d68:	ed2d 8b08 	vpush	{d8-d11}
 8018d6c:	b08f      	sub	sp, #60	; 0x3c
 8018d6e:	461d      	mov	r5, r3
 8018d70:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018d72:	920c      	str	r2, [sp, #48]	; 0x30
 8018d74:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8018d78:	9107      	str	r1, [sp, #28]
 8018d7a:	6859      	ldr	r1, [r3, #4]
 8018d7c:	681b      	ldr	r3, [r3, #0]
 8018d7e:	900d      	str	r0, [sp, #52]	; 0x34
 8018d80:	fb01 2707 	mla	r7, r1, r7, r2
 8018d84:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8018d88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d8a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8018d8e:	f8d3 8000 	ldr.w	r8, [r3]
 8018d92:	eeb0 aa40 	vmov.f32	s20, s0
 8018d96:	eef0 9a60 	vmov.f32	s19, s1
 8018d9a:	eeb0 9a41 	vmov.f32	s18, s2
 8018d9e:	eeb0 8a62 	vmov.f32	s16, s5
 8018da2:	eef0 8a43 	vmov.f32	s17, s6
 8018da6:	eef0 ba44 	vmov.f32	s23, s8
 8018daa:	eeb0 ba64 	vmov.f32	s22, s9
 8018dae:	eef0 aa45 	vmov.f32	s21, s10
 8018db2:	9b07      	ldr	r3, [sp, #28]
 8018db4:	2b00      	cmp	r3, #0
 8018db6:	dc03      	bgt.n	8018dc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018db8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018dba:	2b00      	cmp	r3, #0
 8018dbc:	f340 8181 	ble.w	80190c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018dc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018dc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018dc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018dca:	1e48      	subs	r0, r1, #1
 8018dcc:	f102 3cff 	add.w	ip, r2, #4294967295
 8018dd0:	2d00      	cmp	r5, #0
 8018dd2:	f340 809b 	ble.w	8018f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8018dd6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018dda:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018dde:	d406      	bmi.n	8018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018de0:	4586      	cmp	lr, r0
 8018de2:	da04      	bge.n	8018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018de4:	2b00      	cmp	r3, #0
 8018de6:	db02      	blt.n	8018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018de8:	4563      	cmp	r3, ip
 8018dea:	f2c0 8090 	blt.w	8018f0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018dee:	f11e 0e01 	adds.w	lr, lr, #1
 8018df2:	f100 8084 	bmi.w	8018efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018df6:	4571      	cmp	r1, lr
 8018df8:	f2c0 8081 	blt.w	8018efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018dfc:	3301      	adds	r3, #1
 8018dfe:	d47e      	bmi.n	8018efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018e00:	429a      	cmp	r2, r3
 8018e02:	db7c      	blt.n	8018efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018e04:	46aa      	mov	sl, r5
 8018e06:	46b9      	mov	r9, r7
 8018e08:	f1ba 0f00 	cmp.w	sl, #0
 8018e0c:	f340 8099 	ble.w	8018f42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018e10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e12:	1421      	asrs	r1, r4, #16
 8018e14:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018e18:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018e1c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018e20:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018e24:	f100 80d0 	bmi.w	8018fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e28:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018e2c:	4559      	cmp	r1, fp
 8018e2e:	f280 80cb 	bge.w	8018fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e32:	2800      	cmp	r0, #0
 8018e34:	f2c0 80c8 	blt.w	8018fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e38:	f103 3bff 	add.w	fp, r3, #4294967295
 8018e3c:	4558      	cmp	r0, fp
 8018e3e:	f280 80c3 	bge.w	8018fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e42:	fa0f fe8e 	sxth.w	lr, lr
 8018e46:	fb00 110e 	mla	r1, r0, lr, r1
 8018e4a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018e4e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8018e52:	8841      	ldrh	r1, [r0, #2]
 8018e54:	f1bc 0f00 	cmp.w	ip, #0
 8018e58:	d00b      	beq.n	8018e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018e5a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8018e5e:	3b01      	subs	r3, #1
 8018e60:	005b      	lsls	r3, r3, #1
 8018e62:	3302      	adds	r3, #2
 8018e64:	eb00 0e03 	add.w	lr, r0, r3
 8018e68:	5ac3      	ldrh	r3, [r0, r3]
 8018e6a:	9308      	str	r3, [sp, #32]
 8018e6c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8018e70:	9309      	str	r3, [sp, #36]	; 0x24
 8018e72:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8018e76:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018e7a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018e7e:	ea40 000b 	orr.w	r0, r0, fp
 8018e82:	fb12 f30c 	smulbb	r3, r2, ip
 8018e86:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018e8a:	10db      	asrs	r3, r3, #3
 8018e8c:	f1cc 0e10 	rsb	lr, ip, #16
 8018e90:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018e94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e98:	ebae 0e02 	sub.w	lr, lr, r2
 8018e9c:	ea4b 0101 	orr.w	r1, fp, r1
 8018ea0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018ea4:	4351      	muls	r1, r2
 8018ea6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ea8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018eac:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018eb0:	0410      	lsls	r0, r2, #16
 8018eb2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018eb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018eba:	4310      	orrs	r0, r2
 8018ebc:	9a08      	ldr	r2, [sp, #32]
 8018ebe:	9908      	ldr	r1, [sp, #32]
 8018ec0:	0412      	lsls	r2, r2, #16
 8018ec2:	fb03 e000 	mla	r0, r3, r0, lr
 8018ec6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018eca:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018ece:	ea42 020e 	orr.w	r2, r2, lr
 8018ed2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018ed6:	fb03 0302 	mla	r3, r3, r2, r0
 8018eda:	0d5a      	lsrs	r2, r3, #21
 8018edc:	095b      	lsrs	r3, r3, #5
 8018ede:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018ee2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018ee6:	4313      	orrs	r3, r2
 8018ee8:	f8a9 3000 	strh.w	r3, [r9]
 8018eec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018eee:	441c      	add	r4, r3
 8018ef0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ef2:	f109 0902 	add.w	r9, r9, #2
 8018ef6:	441e      	add	r6, r3
 8018ef8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018efc:	e784      	b.n	8018e08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8018efe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018f00:	441c      	add	r4, r3
 8018f02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f04:	3d01      	subs	r5, #1
 8018f06:	441e      	add	r6, r3
 8018f08:	3702      	adds	r7, #2
 8018f0a:	e761      	b.n	8018dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018f0c:	d01d      	beq.n	8018f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018f0e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018f10:	1e6b      	subs	r3, r5, #1
 8018f12:	fb00 4003 	mla	r0, r0, r3, r4
 8018f16:	1400      	asrs	r0, r0, #16
 8018f18:	f53f af74 	bmi.w	8018e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f1c:	3901      	subs	r1, #1
 8018f1e:	4288      	cmp	r0, r1
 8018f20:	f6bf af70 	bge.w	8018e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f24:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018f26:	fb01 6303 	mla	r3, r1, r3, r6
 8018f2a:	141b      	asrs	r3, r3, #16
 8018f2c:	f53f af6a 	bmi.w	8018e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f30:	3a01      	subs	r2, #1
 8018f32:	4293      	cmp	r3, r2
 8018f34:	f6bf af66 	bge.w	8018e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f38:	46a9      	mov	r9, r5
 8018f3a:	46ba      	mov	sl, r7
 8018f3c:	f1b9 0f00 	cmp.w	r9, #0
 8018f40:	dc5a      	bgt.n	8018ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f42:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018f46:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018f4a:	9b07      	ldr	r3, [sp, #28]
 8018f4c:	2b00      	cmp	r3, #0
 8018f4e:	f340 80b8 	ble.w	80190c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018f52:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f5a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f60:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f64:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f68:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f6c:	eef0 6a48 	vmov.f32	s13, s16
 8018f70:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f78:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f7c:	ee16 4a90 	vmov	r4, s13
 8018f80:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f84:	eef0 6a68 	vmov.f32	s13, s17
 8018f88:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f8c:	ee18 2a10 	vmov	r2, s16
 8018f90:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f94:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f98:	ee18 2a90 	vmov	r2, s17
 8018f9c:	9323      	str	r3, [sp, #140]	; 0x8c
 8018f9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018fa0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fa4:	9324      	str	r3, [sp, #144]	; 0x90
 8018fa6:	9b07      	ldr	r3, [sp, #28]
 8018fa8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018faa:	3b01      	subs	r3, #1
 8018fac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fb0:	9307      	str	r3, [sp, #28]
 8018fb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018fb4:	ee16 6a90 	vmov	r6, s13
 8018fb8:	bf14      	ite	ne
 8018fba:	461d      	movne	r5, r3
 8018fbc:	4615      	moveq	r5, r2
 8018fbe:	eef0 8a67 	vmov.f32	s17, s15
 8018fc2:	eeb0 8a47 	vmov.f32	s16, s14
 8018fc6:	e6f4      	b.n	8018db2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018fc8:	f111 0b01 	adds.w	fp, r1, #1
 8018fcc:	d48e      	bmi.n	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fce:	45de      	cmp	lr, fp
 8018fd0:	db8c      	blt.n	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fd2:	f110 0b01 	adds.w	fp, r0, #1
 8018fd6:	d489      	bmi.n	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fd8:	455b      	cmp	r3, fp
 8018fda:	db87      	blt.n	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fdc:	b21b      	sxth	r3, r3
 8018fde:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8018fe2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8018fe6:	9300      	str	r3, [sp, #0]
 8018fe8:	4642      	mov	r2, r8
 8018fea:	fa0f f38e 	sxth.w	r3, lr
 8018fee:	4649      	mov	r1, r9
 8018ff0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018ff2:	f7ff fe2b 	bl	8018c4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018ff6:	e779      	b.n	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018ff8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018ffa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018ffe:	1420      	asrs	r0, r4, #16
 8019000:	1431      	asrs	r1, r6, #16
 8019002:	fb03 0101 	mla	r1, r3, r1, r0
 8019006:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801900a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801900e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019012:	8841      	ldrh	r1, [r0, #2]
 8019014:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019018:	f1be 0f00 	cmp.w	lr, #0
 801901c:	d00b      	beq.n	8019036 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801901e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019022:	3b01      	subs	r3, #1
 8019024:	005b      	lsls	r3, r3, #1
 8019026:	3302      	adds	r3, #2
 8019028:	eb00 0b03 	add.w	fp, r0, r3
 801902c:	5ac3      	ldrh	r3, [r0, r3]
 801902e:	930a      	str	r3, [sp, #40]	; 0x28
 8019030:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019034:	930b      	str	r3, [sp, #44]	; 0x2c
 8019036:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801903a:	fb12 f30e 	smulbb	r3, r2, lr
 801903e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019042:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019046:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801904a:	10db      	asrs	r3, r3, #3
 801904c:	ea40 000c 	orr.w	r0, r0, ip
 8019050:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019054:	f1ce 0c10 	rsb	ip, lr, #16
 8019058:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801905c:	ebac 0c02 	sub.w	ip, ip, r2
 8019060:	ea4b 0101 	orr.w	r1, fp, r1
 8019064:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019068:	4351      	muls	r1, r2
 801906a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801906c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019070:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019074:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019078:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801907c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801907e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019080:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019084:	0412      	lsls	r2, r2, #16
 8019086:	ea4b 0000 	orr.w	r0, fp, r0
 801908a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801908e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8019092:	fb03 c000 	mla	r0, r3, r0, ip
 8019096:	ea42 0b0b 	orr.w	fp, r2, fp
 801909a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801909e:	fb03 000b 	mla	r0, r3, fp, r0
 80190a2:	0d43      	lsrs	r3, r0, #21
 80190a4:	0940      	lsrs	r0, r0, #5
 80190a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80190aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80190ae:	4318      	orrs	r0, r3
 80190b0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80190b2:	f82a 0b02 	strh.w	r0, [sl], #2
 80190b6:	441c      	add	r4, r3
 80190b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80190ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80190be:	441e      	add	r6, r3
 80190c0:	e73c      	b.n	8018f3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80190c2:	b00f      	add	sp, #60	; 0x3c
 80190c4:	ecbd 8b08 	vpop	{d8-d11}
 80190c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80190cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190d0:	880e      	ldrh	r6, [r1, #0]
 80190d2:	b085      	sub	sp, #20
 80190d4:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80190d8:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 80190dc:	4690      	mov	r8, r2
 80190de:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 80190e2:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 80190e6:	9200      	str	r2, [sp, #0]
 80190e8:	00f6      	lsls	r6, r6, #3
 80190ea:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 80190ee:	9201      	str	r2, [sp, #4]
 80190f0:	2c00      	cmp	r4, #0
 80190f2:	b2f2      	uxtb	r2, r6
 80190f4:	fb04 5603 	mla	r6, r4, r3, r5
 80190f8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80190fc:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019100:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019104:	9202      	str	r2, [sp, #8]
 8019106:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801910a:	db36      	blt.n	801917a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801910c:	45a6      	cmp	lr, r4
 801910e:	dd34      	ble.n	801917a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8019110:	2d00      	cmp	r5, #0
 8019112:	db30      	blt.n	8019176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8019114:	42ab      	cmp	r3, r5
 8019116:	dd2e      	ble.n	8019176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8019118:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801911c:	1c6e      	adds	r6, r5, #1
 801911e:	d42f      	bmi.n	8019180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019120:	42b3      	cmp	r3, r6
 8019122:	dd2d      	ble.n	8019180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019124:	b370      	cbz	r0, 8019184 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 8019126:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801912a:	3401      	adds	r4, #1
 801912c:	d42e      	bmi.n	801918c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801912e:	45a6      	cmp	lr, r4
 8019130:	dd2c      	ble.n	801918c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8019132:	b377      	cbz	r7, 8019192 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8019134:	2d00      	cmp	r5, #0
 8019136:	db27      	blt.n	8019188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8019138:	42ab      	cmp	r3, r5
 801913a:	dd25      	ble.n	8019188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801913c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019140:	3501      	adds	r5, #1
 8019142:	d429      	bmi.n	8019198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019144:	42ab      	cmp	r3, r5
 8019146:	dd27      	ble.n	8019198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019148:	b340      	cbz	r0, 801919c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801914a:	3301      	adds	r3, #1
 801914c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019150:	280f      	cmp	r0, #15
 8019152:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019156:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801915a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801915e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019162:	d801      	bhi.n	8019168 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019164:	2f0f      	cmp	r7, #15
 8019166:	d91b      	bls.n	80191a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8019168:	4b84      	ldr	r3, [pc, #528]	; (801937c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801916a:	4a85      	ldr	r2, [pc, #532]	; (8019380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801916c:	4885      	ldr	r0, [pc, #532]	; (8019384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801916e:	f240 210d 	movw	r1, #525	; 0x20d
 8019172:	f002 fa19 	bl	801b5a8 <__assert_func>
 8019176:	2200      	movs	r2, #0
 8019178:	e7d0      	b.n	801911c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801917a:	2600      	movs	r6, #0
 801917c:	4632      	mov	r2, r6
 801917e:	e7d4      	b.n	801912a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019180:	2600      	movs	r6, #0
 8019182:	e7d2      	b.n	801912a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019184:	4606      	mov	r6, r0
 8019186:	e7d0      	b.n	801912a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019188:	2400      	movs	r4, #0
 801918a:	e7d9      	b.n	8019140 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801918c:	2300      	movs	r3, #0
 801918e:	461c      	mov	r4, r3
 8019190:	e7de      	b.n	8019150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8019192:	463b      	mov	r3, r7
 8019194:	463c      	mov	r4, r7
 8019196:	e7db      	b.n	8019150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8019198:	2300      	movs	r3, #0
 801919a:	e7d9      	b.n	8019150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801919c:	4603      	mov	r3, r0
 801919e:	e7d7      	b.n	8019150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 80191a0:	b280      	uxth	r0, r0
 80191a2:	b2bf      	uxth	r7, r7
 80191a4:	fb00 fe07 	mul.w	lr, r0, r7
 80191a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80191ac:	0100      	lsls	r0, r0, #4
 80191ae:	eba0 0c0e 	sub.w	ip, r0, lr
 80191b2:	b2bf      	uxth	r7, r7
 80191b4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80191b8:	fa1f fc8c 	uxth.w	ip, ip
 80191bc:	1bed      	subs	r5, r5, r7
 80191be:	b2ad      	uxth	r5, r5
 80191c0:	fb0c f00a 	mul.w	r0, ip, sl
 80191c4:	fb05 000b 	mla	r0, r5, fp, r0
 80191c8:	fb07 0009 	mla	r0, r7, r9, r0
 80191cc:	fb0e 0008 	mla	r0, lr, r8, r0
 80191d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80191d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80191d8:	9003      	str	r0, [sp, #12]
 80191da:	d018      	beq.n	801920e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80191dc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80191e0:	fb0b f000 	mul.w	r0, fp, r0
 80191e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80191e8:	fb0b fb02 	mul.w	fp, fp, r2
 80191ec:	0a02      	lsrs	r2, r0, #8
 80191ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80191f2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80191f6:	4402      	add	r2, r0
 80191f8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80191fc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019200:	0a12      	lsrs	r2, r2, #8
 8019202:	0a00      	lsrs	r0, r0, #8
 8019204:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019208:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801920c:	4302      	orrs	r2, r0
 801920e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019212:	d019      	beq.n	8019248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8019214:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019218:	fb0a fb0b 	mul.w	fp, sl, fp
 801921c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019220:	fb0a fa06 	mul.w	sl, sl, r6
 8019224:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019228:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801922c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019230:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019234:	445e      	add	r6, fp
 8019236:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801923a:	0a36      	lsrs	r6, r6, #8
 801923c:	0a00      	lsrs	r0, r0, #8
 801923e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019242:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019246:	4306      	orrs	r6, r0
 8019248:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801924c:	d019      	beq.n	8019282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801924e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019252:	fb09 fa0a 	mul.w	sl, r9, sl
 8019256:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801925a:	fb09 f904 	mul.w	r9, r9, r4
 801925e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019262:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019266:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801926a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801926e:	4454      	add	r4, sl
 8019270:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019274:	0a24      	lsrs	r4, r4, #8
 8019276:	0a00      	lsrs	r0, r0, #8
 8019278:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801927c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019280:	4304      	orrs	r4, r0
 8019282:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019286:	d019      	beq.n	80192bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8019288:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801928c:	fb08 f909 	mul.w	r9, r8, r9
 8019290:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019294:	fb08 f803 	mul.w	r8, r8, r3
 8019298:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801929c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80192a0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80192a4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80192a8:	444b      	add	r3, r9
 80192aa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80192ae:	0a1b      	lsrs	r3, r3, #8
 80192b0:	0a00      	lsrs	r0, r0, #8
 80192b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80192b6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80192ba:	4303      	orrs	r3, r0
 80192bc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80192c0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80192c4:	fb0c f808 	mul.w	r8, ip, r8
 80192c8:	fb05 8800 	mla	r8, r5, r0, r8
 80192cc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80192d0:	fb07 8800 	mla	r8, r7, r0, r8
 80192d4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80192d8:	fb0e 8000 	mla	r0, lr, r0, r8
 80192dc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80192e0:	fb0c f606 	mul.w	r6, ip, r6
 80192e4:	0a00      	lsrs	r0, r0, #8
 80192e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80192ea:	fb05 6202 	mla	r2, r5, r2, r6
 80192ee:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80192f2:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80192f6:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80192fa:	fb07 2700 	mla	r7, r7, r0, r2
 80192fe:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019302:	9b03      	ldr	r3, [sp, #12]
 8019304:	9c00      	ldr	r4, [sp, #0]
 8019306:	b2ad      	uxth	r5, r5
 8019308:	436b      	muls	r3, r5
 801930a:	fb0e 7000 	mla	r0, lr, r0, r7
 801930e:	1c5a      	adds	r2, r3, #1
 8019310:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019314:	0a00      	lsrs	r0, r0, #8
 8019316:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801931a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801931e:	ea48 0000 	orr.w	r0, r8, r0
 8019322:	b2d2      	uxtb	r2, r2
 8019324:	fb14 f602 	smulbb	r6, r4, r2
 8019328:	0c03      	lsrs	r3, r0, #16
 801932a:	fb03 6305 	mla	r3, r3, r5, r6
 801932e:	b29e      	uxth	r6, r3
 8019330:	9b01      	ldr	r3, [sp, #4]
 8019332:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8019336:	fb13 f302 	smulbb	r3, r3, r2
 801933a:	fb04 3405 	mla	r4, r4, r5, r3
 801933e:	9b02      	ldr	r3, [sp, #8]
 8019340:	b2c0      	uxtb	r0, r0
 8019342:	fb13 f202 	smulbb	r2, r3, r2
 8019346:	fb00 2005 	mla	r0, r0, r5, r2
 801934a:	b280      	uxth	r0, r0
 801934c:	b2a4      	uxth	r4, r4
 801934e:	1c42      	adds	r2, r0, #1
 8019350:	1c73      	adds	r3, r6, #1
 8019352:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019356:	1c62      	adds	r2, r4, #1
 8019358:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801935c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019360:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019364:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019368:	0952      	lsrs	r2, r2, #5
 801936a:	4303      	orrs	r3, r0
 801936c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019370:	4313      	orrs	r3, r2
 8019372:	800b      	strh	r3, [r1, #0]
 8019374:	b005      	add	sp, #20
 8019376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801937a:	bf00      	nop
 801937c:	0801f4ba 	.word	0x0801f4ba
 8019380:	0801fa79 	.word	0x0801fa79
 8019384:	0801f5a3 	.word	0x0801f5a3

08019388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801938c:	ed2d 8b08 	vpush	{d8-d11}
 8019390:	b09d      	sub	sp, #116	; 0x74
 8019392:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8019396:	9219      	str	r2, [sp, #100]	; 0x64
 8019398:	9307      	str	r3, [sp, #28]
 801939a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801939c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80193a0:	931a      	str	r3, [sp, #104]	; 0x68
 80193a2:	9117      	str	r1, [sp, #92]	; 0x5c
 80193a4:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80193a8:	901b      	str	r0, [sp, #108]	; 0x6c
 80193aa:	6850      	ldr	r0, [r2, #4]
 80193ac:	6812      	ldr	r2, [r2, #0]
 80193ae:	fb00 1303 	mla	r3, r0, r3, r1
 80193b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193b6:	930a      	str	r3, [sp, #40]	; 0x28
 80193b8:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80193ba:	681b      	ldr	r3, [r3, #0]
 80193bc:	9310      	str	r3, [sp, #64]	; 0x40
 80193be:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80193c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80193c4:	eeb0 aa40 	vmov.f32	s20, s0
 80193c8:	eef0 9a60 	vmov.f32	s19, s1
 80193cc:	eeb0 9a41 	vmov.f32	s18, s2
 80193d0:	eeb0 8a62 	vmov.f32	s16, s5
 80193d4:	eef0 8a43 	vmov.f32	s17, s6
 80193d8:	eef0 ba44 	vmov.f32	s23, s8
 80193dc:	eeb0 ba64 	vmov.f32	s22, s9
 80193e0:	eef0 aa45 	vmov.f32	s21, s10
 80193e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80193e6:	2b00      	cmp	r3, #0
 80193e8:	dc03      	bgt.n	80193f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80193ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80193ec:	2b00      	cmp	r3, #0
 80193ee:	f340 837b 	ble.w	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80193f2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80193f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80193f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80193fc:	1e48      	subs	r0, r1, #1
 80193fe:	1e57      	subs	r7, r2, #1
 8019400:	9b07      	ldr	r3, [sp, #28]
 8019402:	2b00      	cmp	r3, #0
 8019404:	f340 8194 	ble.w	8019730 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8019408:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801940c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019410:	d406      	bmi.n	8019420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019412:	4584      	cmp	ip, r0
 8019414:	da04      	bge.n	8019420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019416:	2b00      	cmp	r3, #0
 8019418:	db02      	blt.n	8019420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801941a:	42bb      	cmp	r3, r7
 801941c:	f2c0 8189 	blt.w	8019732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019420:	f11c 0c01 	adds.w	ip, ip, #1
 8019424:	f100 8179 	bmi.w	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8019428:	4561      	cmp	r1, ip
 801942a:	f2c0 8176 	blt.w	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801942e:	3301      	adds	r3, #1
 8019430:	f100 8173 	bmi.w	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8019434:	429a      	cmp	r2, r3
 8019436:	f2c0 8170 	blt.w	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801943a:	9b07      	ldr	r3, [sp, #28]
 801943c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801943e:	9318      	str	r3, [sp, #96]	; 0x60
 8019440:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019442:	2b00      	cmp	r3, #0
 8019444:	f340 8192 	ble.w	801976c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8019448:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801944a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801944c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019450:	689b      	ldr	r3, [r3, #8]
 8019452:	1422      	asrs	r2, r4, #16
 8019454:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019458:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801945c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019460:	f100 81d3 	bmi.w	801980a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019464:	f103 38ff 	add.w	r8, r3, #4294967295
 8019468:	4542      	cmp	r2, r8
 801946a:	f280 81ce 	bge.w	801980a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801946e:	f1bc 0f00 	cmp.w	ip, #0
 8019472:	f2c0 81ca 	blt.w	801980a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019476:	f10e 38ff 	add.w	r8, lr, #4294967295
 801947a:	45c4      	cmp	ip, r8
 801947c:	f280 81c5 	bge.w	801980a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019480:	b21b      	sxth	r3, r3
 8019482:	fb0c 2203 	mla	r2, ip, r3, r2
 8019486:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019488:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801948c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019490:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019494:	2800      	cmp	r0, #0
 8019496:	f000 81af 	beq.w	80197f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801949a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801949e:	950c      	str	r5, [sp, #48]	; 0x30
 80194a0:	0e2d      	lsrs	r5, r5, #24
 80194a2:	9513      	str	r5, [sp, #76]	; 0x4c
 80194a4:	b181      	cbz	r1, 80194c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80194a6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80194aa:	3b01      	subs	r3, #1
 80194ac:	009b      	lsls	r3, r3, #2
 80194ae:	3304      	adds	r3, #4
 80194b0:	eb08 0c03 	add.w	ip, r8, r3
 80194b4:	f858 3003 	ldr.w	r3, [r8, r3]
 80194b8:	9308      	str	r3, [sp, #32]
 80194ba:	0e1b      	lsrs	r3, r3, #24
 80194bc:	9311      	str	r3, [sp, #68]	; 0x44
 80194be:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80194c2:	930d      	str	r3, [sp, #52]	; 0x34
 80194c4:	0e1b      	lsrs	r3, r3, #24
 80194c6:	9314      	str	r3, [sp, #80]	; 0x50
 80194c8:	b280      	uxth	r0, r0
 80194ca:	b289      	uxth	r1, r1
 80194cc:	fb00 f901 	mul.w	r9, r0, r1
 80194d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80194d4:	0100      	lsls	r0, r0, #4
 80194d6:	eba0 0809 	sub.w	r8, r0, r9
 80194da:	b289      	uxth	r1, r1
 80194dc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80194e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80194e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194e4:	fa1f f888 	uxth.w	r8, r8
 80194e8:	1a5b      	subs	r3, r3, r1
 80194ea:	b29b      	uxth	r3, r3
 80194ec:	fb08 f000 	mul.w	r0, r8, r0
 80194f0:	fb03 000e 	mla	r0, r3, lr, r0
 80194f4:	fb01 0005 	mla	r0, r1, r5, r0
 80194f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194fa:	fb09 0005 	mla	r0, r9, r5, r0
 80194fe:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019502:	2800      	cmp	r0, #0
 8019504:	f000 8100 	beq.w	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019508:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801950c:	d01b      	beq.n	8019546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801950e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019512:	fb0e fa0a 	mul.w	sl, lr, sl
 8019516:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801951a:	fb0e fe02 	mul.w	lr, lr, r2
 801951e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019522:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019526:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801952a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801952e:	4452      	add	r2, sl
 8019530:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019534:	0a12      	lsrs	r2, r2, #8
 8019536:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801953a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801953e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019542:	ea42 020c 	orr.w	r2, r2, ip
 8019546:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019548:	2dff      	cmp	r5, #255	; 0xff
 801954a:	d021      	beq.n	8019590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801954c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801954e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019552:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019554:	fb05 fb0b 	mul.w	fp, r5, fp
 8019558:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801955a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801955e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019560:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019564:	fb05 fa0a 	mul.w	sl, r5, sl
 8019568:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801956c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019570:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019574:	44de      	add	lr, fp
 8019576:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801957a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801957e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019582:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019586:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801958a:	ea4e 050a 	orr.w	r5, lr, sl
 801958e:	950c      	str	r5, [sp, #48]	; 0x30
 8019590:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019592:	2dff      	cmp	r5, #255	; 0xff
 8019594:	d021      	beq.n	80195da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019596:	9d08      	ldr	r5, [sp, #32]
 8019598:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801959c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801959e:	fb05 fb0b 	mul.w	fp, r5, fp
 80195a2:	9d08      	ldr	r5, [sp, #32]
 80195a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80195a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80195aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80195ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80195b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195b6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80195ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80195be:	44de      	add	lr, fp
 80195c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80195c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80195c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80195cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80195d4:	ea4e 050a 	orr.w	r5, lr, sl
 80195d8:	9508      	str	r5, [sp, #32]
 80195da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195dc:	2dff      	cmp	r5, #255	; 0xff
 80195de:	d021      	beq.n	8019624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80195e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80195e2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80195e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195e8:	fb05 fb0b 	mul.w	fp, r5, fp
 80195ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80195ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80195f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80195f8:	fb05 fa0a 	mul.w	sl, r5, sl
 80195fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019600:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019604:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019608:	44de      	add	lr, fp
 801960a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801960e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019612:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019616:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801961a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801961e:	ea4e 050a 	orr.w	r5, lr, sl
 8019622:	950d      	str	r5, [sp, #52]	; 0x34
 8019624:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019626:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801962a:	9d08      	ldr	r5, [sp, #32]
 801962c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019630:	fb08 fc0c 	mul.w	ip, r8, ip
 8019634:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019638:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801963c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801963e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019642:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019646:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019648:	fb09 cc0e 	mla	ip, r9, lr, ip
 801964c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019650:	fb08 f80e 	mul.w	r8, r8, lr
 8019654:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019658:	fb03 8202 	mla	r2, r3, r2, r8
 801965c:	9b08      	ldr	r3, [sp, #32]
 801965e:	f8b7 e000 	ldrh.w	lr, [r7]
 8019662:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019664:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019668:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801966a:	fb01 220a 	mla	r2, r1, sl, r2
 801966e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019672:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019674:	fb09 2901 	mla	r9, r9, r1, r2
 8019678:	4343      	muls	r3, r0
 801967a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801967e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019682:	1c58      	adds	r0, r3, #1
 8019684:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019688:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801968c:	ea4c 0c09 	orr.w	ip, ip, r9
 8019690:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019694:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019696:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801969a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801969e:	ea4f 232e 	mov.w	r3, lr, asr #8
 80196a2:	b2c0      	uxtb	r0, r0
 80196a4:	fb11 f102 	smulbb	r1, r1, r2
 80196a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80196ac:	fb03 1300 	mla	r3, r3, r0, r1
 80196b0:	b299      	uxth	r1, r3
 80196b2:	ea4f 02ee 	mov.w	r2, lr, asr #3
 80196b6:	f3cc 2307 	ubfx	r3, ip, #8, #8
 80196ba:	fb13 f305 	smulbb	r3, r3, r5
 80196be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80196c2:	fb02 3200 	mla	r2, r2, r0, r3
 80196c6:	fa5f fc8c 	uxtb.w	ip, ip
 80196ca:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 80196ce:	b2db      	uxtb	r3, r3
 80196d0:	fb1c fc05 	smulbb	ip, ip, r5
 80196d4:	fb03 cc00 	mla	ip, r3, r0, ip
 80196d8:	b292      	uxth	r2, r2
 80196da:	fa1f fc8c 	uxth.w	ip, ip
 80196de:	1c4b      	adds	r3, r1, #1
 80196e0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80196e4:	f10c 0001 	add.w	r0, ip, #1
 80196e8:	1c51      	adds	r1, r2, #1
 80196ea:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80196ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80196f2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80196f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80196fa:	0952      	lsrs	r2, r2, #5
 80196fc:	ea43 030c 	orr.w	r3, r3, ip
 8019700:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019704:	4313      	orrs	r3, r2
 8019706:	803b      	strh	r3, [r7, #0]
 8019708:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801970a:	441c      	add	r4, r3
 801970c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801970e:	441e      	add	r6, r3
 8019710:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019712:	3b01      	subs	r3, #1
 8019714:	3702      	adds	r7, #2
 8019716:	9318      	str	r3, [sp, #96]	; 0x60
 8019718:	e692      	b.n	8019440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801971a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801971c:	441c      	add	r4, r3
 801971e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019720:	441e      	add	r6, r3
 8019722:	9b07      	ldr	r3, [sp, #28]
 8019724:	3b01      	subs	r3, #1
 8019726:	9307      	str	r3, [sp, #28]
 8019728:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801972a:	3302      	adds	r3, #2
 801972c:	930a      	str	r3, [sp, #40]	; 0x28
 801972e:	e667      	b.n	8019400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019730:	d023      	beq.n	801977a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8019732:	9b07      	ldr	r3, [sp, #28]
 8019734:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019736:	3b01      	subs	r3, #1
 8019738:	fb00 4003 	mla	r0, r0, r3, r4
 801973c:	1400      	asrs	r0, r0, #16
 801973e:	f53f ae7c 	bmi.w	801943a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019742:	3901      	subs	r1, #1
 8019744:	4288      	cmp	r0, r1
 8019746:	f6bf ae78 	bge.w	801943a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801974a:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801974c:	fb01 6303 	mla	r3, r1, r3, r6
 8019750:	141b      	asrs	r3, r3, #16
 8019752:	f53f ae72 	bmi.w	801943a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019756:	3a01      	subs	r2, #1
 8019758:	4293      	cmp	r3, r2
 801975a:	f6bf ae6e 	bge.w	801943a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801975e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019762:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019766:	f1bb 0f00 	cmp.w	fp, #0
 801976a:	dc6c      	bgt.n	8019846 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801976c:	9b07      	ldr	r3, [sp, #28]
 801976e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019772:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019774:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019778:	930a      	str	r3, [sp, #40]	; 0x28
 801977a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801977c:	2b00      	cmp	r3, #0
 801977e:	f340 81b3 	ble.w	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8019782:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019786:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801978a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801978e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019790:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019794:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019798:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801979c:	eef0 6a48 	vmov.f32	s13, s16
 80197a0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80197a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197a8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80197ac:	ee16 4a90 	vmov	r4, s13
 80197b0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80197b4:	eef0 6a68 	vmov.f32	s13, s17
 80197b8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80197bc:	ee18 2a10 	vmov	r2, s16
 80197c0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80197c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80197c8:	ee18 2a90 	vmov	r2, s17
 80197cc:	9331      	str	r3, [sp, #196]	; 0xc4
 80197ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80197d4:	9332      	str	r3, [sp, #200]	; 0xc8
 80197d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80197d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80197da:	3b01      	subs	r3, #1
 80197dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197e0:	9317      	str	r3, [sp, #92]	; 0x5c
 80197e2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197e4:	bf08      	it	eq
 80197e6:	4613      	moveq	r3, r2
 80197e8:	ee16 6a90 	vmov	r6, s13
 80197ec:	9307      	str	r3, [sp, #28]
 80197ee:	eef0 8a67 	vmov.f32	s17, s15
 80197f2:	eeb0 8a47 	vmov.f32	s16, s14
 80197f6:	e5f5      	b.n	80193e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80197f8:	2900      	cmp	r1, #0
 80197fa:	f43f ae65 	beq.w	80194c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80197fe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019802:	9308      	str	r3, [sp, #32]
 8019804:	0e1b      	lsrs	r3, r3, #24
 8019806:	9311      	str	r3, [sp, #68]	; 0x44
 8019808:	e65e      	b.n	80194c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801980a:	f112 0801 	adds.w	r8, r2, #1
 801980e:	f53f af7b 	bmi.w	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019812:	4543      	cmp	r3, r8
 8019814:	f6ff af78 	blt.w	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019818:	f11c 0801 	adds.w	r8, ip, #1
 801981c:	f53f af74 	bmi.w	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019820:	45c6      	cmp	lr, r8
 8019822:	f6ff af71 	blt.w	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019826:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019828:	9201      	str	r2, [sp, #4]
 801982a:	fa0f f28e 	sxth.w	r2, lr
 801982e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019832:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019836:	9200      	str	r2, [sp, #0]
 8019838:	b21b      	sxth	r3, r3
 801983a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801983c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801983e:	4639      	mov	r1, r7
 8019840:	f7ff fc44 	bl	80190cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019844:	e760      	b.n	8019708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8019846:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019848:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801984a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801984e:	1427      	asrs	r7, r4, #16
 8019850:	1433      	asrs	r3, r6, #16
 8019852:	fb01 7303 	mla	r3, r1, r3, r7
 8019856:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801985a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801985e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019862:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019866:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801986a:	2a00      	cmp	r2, #0
 801986c:	f000 8133 	beq.w	8019ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 8019870:	687d      	ldr	r5, [r7, #4]
 8019872:	950e      	str	r5, [sp, #56]	; 0x38
 8019874:	0e2d      	lsrs	r5, r5, #24
 8019876:	9515      	str	r5, [sp, #84]	; 0x54
 8019878:	b178      	cbz	r0, 801989a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801987a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801987e:	3901      	subs	r1, #1
 8019880:	0089      	lsls	r1, r1, #2
 8019882:	3104      	adds	r1, #4
 8019884:	eb07 0e01 	add.w	lr, r7, r1
 8019888:	5879      	ldr	r1, [r7, r1]
 801988a:	9109      	str	r1, [sp, #36]	; 0x24
 801988c:	0e09      	lsrs	r1, r1, #24
 801988e:	9112      	str	r1, [sp, #72]	; 0x48
 8019890:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019894:	910f      	str	r1, [sp, #60]	; 0x3c
 8019896:	0e09      	lsrs	r1, r1, #24
 8019898:	9116      	str	r1, [sp, #88]	; 0x58
 801989a:	b292      	uxth	r2, r2
 801989c:	b280      	uxth	r0, r0
 801989e:	fb02 f800 	mul.w	r8, r2, r0
 80198a2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80198a6:	0112      	lsls	r2, r2, #4
 80198a8:	eba2 0e08 	sub.w	lr, r2, r8
 80198ac:	b280      	uxth	r0, r0
 80198ae:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80198b2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80198b4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80198b6:	fa1f fe8e 	uxth.w	lr, lr
 80198ba:	1a12      	subs	r2, r2, r0
 80198bc:	b292      	uxth	r2, r2
 80198be:	fb0e f101 	mul.w	r1, lr, r1
 80198c2:	fb02 110c 	mla	r1, r2, ip, r1
 80198c6:	fb00 1105 	mla	r1, r0, r5, r1
 80198ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80198cc:	fb08 1105 	mla	r1, r8, r5, r1
 80198d0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80198d4:	2900      	cmp	r1, #0
 80198d6:	f000 80f5 	beq.w	8019ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 80198da:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80198de:	d019      	beq.n	8019914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 80198e0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80198e4:	fb0c fa0a 	mul.w	sl, ip, sl
 80198e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80198ec:	fb0c fc03 	mul.w	ip, ip, r3
 80198f0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80198f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198f8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80198fc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019900:	4453      	add	r3, sl
 8019902:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019906:	0a1b      	lsrs	r3, r3, #8
 8019908:	0a3f      	lsrs	r7, r7, #8
 801990a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801990e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019912:	433b      	orrs	r3, r7
 8019914:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019916:	2dff      	cmp	r5, #255	; 0xff
 8019918:	d020      	beq.n	801995c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801991a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801991c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019920:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019922:	436f      	muls	r7, r5
 8019924:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019926:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801992a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801992c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019930:	fb05 fa0a 	mul.w	sl, r5, sl
 8019934:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019938:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801993c:	44bc      	add	ip, r7
 801993e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019942:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019946:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801994a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801994e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019952:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019956:	ea4c 050a 	orr.w	r5, ip, sl
 801995a:	950e      	str	r5, [sp, #56]	; 0x38
 801995c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801995e:	2dff      	cmp	r5, #255	; 0xff
 8019960:	d020      	beq.n	80199a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 8019962:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019964:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019968:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801996a:	436f      	muls	r7, r5
 801996c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801996e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019972:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019974:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019978:	fb05 fa0a 	mul.w	sl, r5, sl
 801997c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019980:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019984:	44bc      	add	ip, r7
 8019986:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801998a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801998e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019992:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019996:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801999a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801999e:	ea4c 050a 	orr.w	r5, ip, sl
 80199a2:	9509      	str	r5, [sp, #36]	; 0x24
 80199a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80199a6:	2dff      	cmp	r5, #255	; 0xff
 80199a8:	d020      	beq.n	80199ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 80199aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80199ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80199b0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80199b2:	436f      	muls	r7, r5
 80199b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80199b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80199ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80199bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80199c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80199c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80199c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199cc:	44bc      	add	ip, r7
 80199ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80199d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80199d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199e6:	ea4c 050a 	orr.w	r5, ip, sl
 80199ea:	950f      	str	r5, [sp, #60]	; 0x3c
 80199ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80199ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80199f2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80199f4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80199f8:	fb0e f707 	mul.w	r7, lr, r7
 80199fc:	fb02 770c 	mla	r7, r2, ip, r7
 8019a00:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019a04:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019a06:	fb00 770c 	mla	r7, r0, ip, r7
 8019a0a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019a0e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019a10:	fb08 770c 	mla	r7, r8, ip, r7
 8019a14:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019a18:	fb0e fe0c 	mul.w	lr, lr, ip
 8019a1c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019a20:	fb02 e303 	mla	r3, r2, r3, lr
 8019a24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019a26:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a28:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019a2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a2e:	fb00 330a 	mla	r3, r0, sl, r3
 8019a32:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019a36:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019a3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019a3c:	f8b9 0000 	ldrh.w	r0, [r9]
 8019a40:	4359      	muls	r1, r3
 8019a42:	0a3f      	lsrs	r7, r7, #8
 8019a44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019a4c:	1c4b      	adds	r3, r1, #1
 8019a4e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019a52:	ea47 070c 	orr.w	r7, r7, ip
 8019a56:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019a5a:	1202      	asrs	r2, r0, #8
 8019a5c:	0c3b      	lsrs	r3, r7, #16
 8019a5e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019a62:	b2c9      	uxtb	r1, r1
 8019a64:	fb13 f305 	smulbb	r3, r3, r5
 8019a68:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019a6c:	fb02 3201 	mla	r2, r2, r1, r3
 8019a70:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019a74:	10c3      	asrs	r3, r0, #3
 8019a76:	b2ff      	uxtb	r7, r7
 8019a78:	00c0      	lsls	r0, r0, #3
 8019a7a:	b2c0      	uxtb	r0, r0
 8019a7c:	fb17 f705 	smulbb	r7, r7, r5
 8019a80:	fb00 7001 	mla	r0, r0, r1, r7
 8019a84:	b292      	uxth	r2, r2
 8019a86:	fb1c fc05 	smulbb	ip, ip, r5
 8019a8a:	b280      	uxth	r0, r0
 8019a8c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019a90:	fb03 c301 	mla	r3, r3, r1, ip
 8019a94:	1c51      	adds	r1, r2, #1
 8019a96:	f100 0c01 	add.w	ip, r0, #1
 8019a9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019a9e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019aa2:	b29b      	uxth	r3, r3
 8019aa4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019aa8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019aac:	ea42 020c 	orr.w	r2, r2, ip
 8019ab0:	f103 0c01 	add.w	ip, r3, #1
 8019ab4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019ab8:	095b      	lsrs	r3, r3, #5
 8019aba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019abe:	431a      	orrs	r2, r3
 8019ac0:	f8a9 2000 	strh.w	r2, [r9]
 8019ac4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019ac6:	441c      	add	r4, r3
 8019ac8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019aca:	f109 0902 	add.w	r9, r9, #2
 8019ace:	441e      	add	r6, r3
 8019ad0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019ad4:	e647      	b.n	8019766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8019ad6:	2800      	cmp	r0, #0
 8019ad8:	f43f aedf 	beq.w	801989a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019adc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019ae0:	9109      	str	r1, [sp, #36]	; 0x24
 8019ae2:	0e09      	lsrs	r1, r1, #24
 8019ae4:	9112      	str	r1, [sp, #72]	; 0x48
 8019ae6:	e6d8      	b.n	801989a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019ae8:	b01d      	add	sp, #116	; 0x74
 8019aea:	ecbd 8b08 	vpop	{d8-d11}
 8019aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019af4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019af8:	880e      	ldrh	r6, [r1, #0]
 8019afa:	b085      	sub	sp, #20
 8019afc:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8019b00:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8019b04:	4690      	mov	r8, r2
 8019b06:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8019b0a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8019b0e:	9200      	str	r2, [sp, #0]
 8019b10:	00f6      	lsls	r6, r6, #3
 8019b12:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8019b16:	9201      	str	r2, [sp, #4]
 8019b18:	2c00      	cmp	r4, #0
 8019b1a:	b2f2      	uxtb	r2, r6
 8019b1c:	fb04 5603 	mla	r6, r4, r3, r5
 8019b20:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8019b24:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019b28:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019b2c:	9202      	str	r2, [sp, #8]
 8019b2e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 8019b32:	db36      	blt.n	8019ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019b34:	45a6      	cmp	lr, r4
 8019b36:	dd34      	ble.n	8019ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019b38:	2d00      	cmp	r5, #0
 8019b3a:	db30      	blt.n	8019b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 8019b3c:	42ab      	cmp	r3, r5
 8019b3e:	dd2e      	ble.n	8019b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 8019b40:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8019b44:	1c6e      	adds	r6, r5, #1
 8019b46:	d42f      	bmi.n	8019ba8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8019b48:	42b3      	cmp	r3, r6
 8019b4a:	dd2d      	ble.n	8019ba8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8019b4c:	b370      	cbz	r0, 8019bac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 8019b4e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8019b52:	3401      	adds	r4, #1
 8019b54:	d42e      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 8019b56:	45a6      	cmp	lr, r4
 8019b58:	dd2c      	ble.n	8019bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 8019b5a:	b377      	cbz	r7, 8019bba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 8019b5c:	2d00      	cmp	r5, #0
 8019b5e:	db27      	blt.n	8019bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 8019b60:	42ab      	cmp	r3, r5
 8019b62:	dd25      	ble.n	8019bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 8019b64:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019b68:	3501      	adds	r5, #1
 8019b6a:	d429      	bmi.n	8019bc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019b6c:	42ab      	cmp	r3, r5
 8019b6e:	dd27      	ble.n	8019bc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019b70:	b340      	cbz	r0, 8019bc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019b72:	3301      	adds	r3, #1
 8019b74:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019b78:	280f      	cmp	r0, #15
 8019b7a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019b7e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019b82:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019b86:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019b8a:	d801      	bhi.n	8019b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 8019b8c:	2f0f      	cmp	r7, #15
 8019b8e:	d91b      	bls.n	8019bc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019b90:	4b7d      	ldr	r3, [pc, #500]	; (8019d88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 8019b92:	4a7e      	ldr	r2, [pc, #504]	; (8019d8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 8019b94:	487e      	ldr	r0, [pc, #504]	; (8019d90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8019b96:	f240 210d 	movw	r1, #525	; 0x20d
 8019b9a:	f001 fd05 	bl	801b5a8 <__assert_func>
 8019b9e:	2200      	movs	r2, #0
 8019ba0:	e7d0      	b.n	8019b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 8019ba2:	2600      	movs	r6, #0
 8019ba4:	4632      	mov	r2, r6
 8019ba6:	e7d4      	b.n	8019b52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019ba8:	2600      	movs	r6, #0
 8019baa:	e7d2      	b.n	8019b52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019bac:	4606      	mov	r6, r0
 8019bae:	e7d0      	b.n	8019b52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019bb0:	2400      	movs	r4, #0
 8019bb2:	e7d9      	b.n	8019b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 8019bb4:	2300      	movs	r3, #0
 8019bb6:	461c      	mov	r4, r3
 8019bb8:	e7de      	b.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8019bba:	463b      	mov	r3, r7
 8019bbc:	463c      	mov	r4, r7
 8019bbe:	e7db      	b.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8019bc0:	2300      	movs	r3, #0
 8019bc2:	e7d9      	b.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8019bc4:	4603      	mov	r3, r0
 8019bc6:	e7d7      	b.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8019bc8:	b280      	uxth	r0, r0
 8019bca:	b2bf      	uxth	r7, r7
 8019bcc:	fb00 fe07 	mul.w	lr, r0, r7
 8019bd0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019bd4:	0100      	lsls	r0, r0, #4
 8019bd6:	eba0 0c0e 	sub.w	ip, r0, lr
 8019bda:	b2bf      	uxth	r7, r7
 8019bdc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019be0:	fa1f fc8c 	uxth.w	ip, ip
 8019be4:	1bed      	subs	r5, r5, r7
 8019be6:	b2ad      	uxth	r5, r5
 8019be8:	fb0c f00a 	mul.w	r0, ip, sl
 8019bec:	fb05 000b 	mla	r0, r5, fp, r0
 8019bf0:	fb07 0009 	mla	r0, r7, r9, r0
 8019bf4:	fb0e 0008 	mla	r0, lr, r8, r0
 8019bf8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019bfc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019c00:	9003      	str	r0, [sp, #12]
 8019c02:	d018      	beq.n	8019c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8019c04:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019c08:	fb0b f000 	mul.w	r0, fp, r0
 8019c0c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019c10:	fb0b fb02 	mul.w	fp, fp, r2
 8019c14:	0a02      	lsrs	r2, r0, #8
 8019c16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019c1a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019c1e:	4402      	add	r2, r0
 8019c20:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019c24:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019c28:	0a12      	lsrs	r2, r2, #8
 8019c2a:	0a00      	lsrs	r0, r0, #8
 8019c2c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019c30:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c34:	4302      	orrs	r2, r0
 8019c36:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019c3a:	d019      	beq.n	8019c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8019c3c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019c40:	fb0a fb0b 	mul.w	fp, sl, fp
 8019c44:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019c48:	fb0a fa06 	mul.w	sl, sl, r6
 8019c4c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019c50:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c58:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019c5c:	445e      	add	r6, fp
 8019c5e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019c62:	0a36      	lsrs	r6, r6, #8
 8019c64:	0a00      	lsrs	r0, r0, #8
 8019c66:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c6a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c6e:	4306      	orrs	r6, r0
 8019c70:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019c74:	d019      	beq.n	8019caa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8019c76:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019c7a:	fb09 fa0a 	mul.w	sl, r9, sl
 8019c7e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019c82:	fb09 f904 	mul.w	r9, r9, r4
 8019c86:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019c8a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019c8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019c92:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019c96:	4454      	add	r4, sl
 8019c98:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019c9c:	0a24      	lsrs	r4, r4, #8
 8019c9e:	0a00      	lsrs	r0, r0, #8
 8019ca0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019ca4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019ca8:	4304      	orrs	r4, r0
 8019caa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019cae:	d019      	beq.n	8019ce4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8019cb0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019cb4:	fb08 f909 	mul.w	r9, r8, r9
 8019cb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019cbc:	fb08 f803 	mul.w	r8, r8, r3
 8019cc0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019cc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019cc8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019ccc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019cd0:	444b      	add	r3, r9
 8019cd2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019cd6:	0a1b      	lsrs	r3, r3, #8
 8019cd8:	0a00      	lsrs	r0, r0, #8
 8019cda:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019cde:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019ce2:	4303      	orrs	r3, r0
 8019ce4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019ce8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019cec:	fb0c f808 	mul.w	r8, ip, r8
 8019cf0:	fb05 8800 	mla	r8, r5, r0, r8
 8019cf4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019cf8:	fb07 8800 	mla	r8, r7, r0, r8
 8019cfc:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019d00:	fb0e 8000 	mla	r0, lr, r0, r8
 8019d04:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d08:	0a00      	lsrs	r0, r0, #8
 8019d0a:	fb0c f606 	mul.w	r6, ip, r6
 8019d0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019d12:	fb05 6202 	mla	r2, r5, r2, r6
 8019d16:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019d1a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019d1e:	fb07 2700 	mla	r7, r7, r0, r2
 8019d22:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019d26:	9b03      	ldr	r3, [sp, #12]
 8019d28:	9c02      	ldr	r4, [sp, #8]
 8019d2a:	9d01      	ldr	r5, [sp, #4]
 8019d2c:	fb0e 7000 	mla	r0, lr, r0, r7
 8019d30:	43da      	mvns	r2, r3
 8019d32:	9b00      	ldr	r3, [sp, #0]
 8019d34:	b2d2      	uxtb	r2, r2
 8019d36:	0a00      	lsrs	r0, r0, #8
 8019d38:	4353      	muls	r3, r2
 8019d3a:	4354      	muls	r4, r2
 8019d3c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019d40:	ea48 0000 	orr.w	r0, r8, r0
 8019d44:	4355      	muls	r5, r2
 8019d46:	4622      	mov	r2, r4
 8019d48:	1c5c      	adds	r4, r3, #1
 8019d4a:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8019d4e:	0c03      	lsrs	r3, r0, #16
 8019d50:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019d54:	4b0f      	ldr	r3, [pc, #60]	; (8019d94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019d56:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8019d5a:	1c54      	adds	r4, r2, #1
 8019d5c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8019d60:	b2c2      	uxtb	r2, r0
 8019d62:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019d66:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8019d6a:	1c6a      	adds	r2, r5, #1
 8019d6c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8019d70:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019d74:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019d78:	00c0      	lsls	r0, r0, #3
 8019d7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019d7e:	4318      	orrs	r0, r3
 8019d80:	8008      	strh	r0, [r1, #0]
 8019d82:	b005      	add	sp, #20
 8019d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d88:	0801f4ba 	.word	0x0801f4ba
 8019d8c:	0801fa79 	.word	0x0801fa79
 8019d90:	0801f5a3 	.word	0x0801f5a3
 8019d94:	fffff800 	.word	0xfffff800

08019d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d9c:	ed2d 8b08 	vpush	{d8-d11}
 8019da0:	b09b      	sub	sp, #108	; 0x6c
 8019da2:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8019da6:	9218      	str	r2, [sp, #96]	; 0x60
 8019da8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019daa:	9116      	str	r1, [sp, #88]	; 0x58
 8019dac:	9307      	str	r3, [sp, #28]
 8019dae:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8019db2:	9019      	str	r0, [sp, #100]	; 0x64
 8019db4:	6850      	ldr	r0, [r2, #4]
 8019db6:	6812      	ldr	r2, [r2, #0]
 8019db8:	fb00 1303 	mla	r3, r0, r3, r1
 8019dbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019dc0:	930a      	str	r3, [sp, #40]	; 0x28
 8019dc2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019dc4:	681b      	ldr	r3, [r3, #0]
 8019dc6:	930f      	str	r3, [sp, #60]	; 0x3c
 8019dc8:	eeb0 aa40 	vmov.f32	s20, s0
 8019dcc:	eef0 9a60 	vmov.f32	s19, s1
 8019dd0:	eeb0 9a41 	vmov.f32	s18, s2
 8019dd4:	eeb0 8a62 	vmov.f32	s16, s5
 8019dd8:	eef0 8a43 	vmov.f32	s17, s6
 8019ddc:	eef0 ba44 	vmov.f32	s23, s8
 8019de0:	eeb0 ba64 	vmov.f32	s22, s9
 8019de4:	eef0 aa45 	vmov.f32	s21, s10
 8019de8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019dea:	2b00      	cmp	r3, #0
 8019dec:	dc03      	bgt.n	8019df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019dee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019df0:	2b00      	cmp	r3, #0
 8019df2:	f340 838a 	ble.w	801a50a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 8019df6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019df8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019dfc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019e00:	1e48      	subs	r0, r1, #1
 8019e02:	1e57      	subs	r7, r2, #1
 8019e04:	9b07      	ldr	r3, [sp, #28]
 8019e06:	2b00      	cmp	r3, #0
 8019e08:	f340 818b 	ble.w	801a122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019e0c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019e10:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019e14:	d406      	bmi.n	8019e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e16:	4584      	cmp	ip, r0
 8019e18:	da04      	bge.n	8019e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e1a:	2b00      	cmp	r3, #0
 8019e1c:	db02      	blt.n	8019e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e1e:	42bb      	cmp	r3, r7
 8019e20:	f2c0 8180 	blt.w	801a124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019e24:	f11c 0c01 	adds.w	ip, ip, #1
 8019e28:	f100 8170 	bmi.w	801a10c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e2c:	4561      	cmp	r1, ip
 8019e2e:	f2c0 816d 	blt.w	801a10c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e32:	3301      	adds	r3, #1
 8019e34:	f100 816a 	bmi.w	801a10c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e38:	429a      	cmp	r2, r3
 8019e3a:	f2c0 8167 	blt.w	801a10c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e3e:	9b07      	ldr	r3, [sp, #28]
 8019e40:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019e42:	9317      	str	r3, [sp, #92]	; 0x5c
 8019e44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e46:	2b00      	cmp	r3, #0
 8019e48:	f340 8189 	ble.w	801a15e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8019e4c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8019e4e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019e50:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019e54:	689b      	ldr	r3, [r3, #8]
 8019e56:	1422      	asrs	r2, r4, #16
 8019e58:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019e5c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019e60:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019e64:	f100 81d8 	bmi.w	801a218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019e68:	f103 38ff 	add.w	r8, r3, #4294967295
 8019e6c:	4542      	cmp	r2, r8
 8019e6e:	f280 81d3 	bge.w	801a218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019e72:	f1bc 0f00 	cmp.w	ip, #0
 8019e76:	f2c0 81cf 	blt.w	801a218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019e7a:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019e7e:	45c4      	cmp	ip, r8
 8019e80:	f280 81ca 	bge.w	801a218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019e84:	b21b      	sxth	r3, r3
 8019e86:	fb0c 2203 	mla	r2, ip, r3, r2
 8019e8a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019e8c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019e90:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019e94:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019e98:	2900      	cmp	r1, #0
 8019e9a:	f000 81a6 	beq.w	801a1ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019e9e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019ea2:	950b      	str	r5, [sp, #44]	; 0x2c
 8019ea4:	0e2d      	lsrs	r5, r5, #24
 8019ea6:	9512      	str	r5, [sp, #72]	; 0x48
 8019ea8:	b180      	cbz	r0, 8019ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019eaa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019eae:	3b01      	subs	r3, #1
 8019eb0:	009b      	lsls	r3, r3, #2
 8019eb2:	3304      	adds	r3, #4
 8019eb4:	eb08 0c03 	add.w	ip, r8, r3
 8019eb8:	f858 3003 	ldr.w	r3, [r8, r3]
 8019ebc:	9308      	str	r3, [sp, #32]
 8019ebe:	0e1b      	lsrs	r3, r3, #24
 8019ec0:	9310      	str	r3, [sp, #64]	; 0x40
 8019ec2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019ec6:	930c      	str	r3, [sp, #48]	; 0x30
 8019ec8:	0e1b      	lsrs	r3, r3, #24
 8019eca:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ecc:	b289      	uxth	r1, r1
 8019ece:	b280      	uxth	r0, r0
 8019ed0:	fb01 f900 	mul.w	r9, r1, r0
 8019ed4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019ed8:	0109      	lsls	r1, r1, #4
 8019eda:	eba1 0809 	sub.w	r8, r1, r9
 8019ede:	b280      	uxth	r0, r0
 8019ee0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019ee4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019ee6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ee8:	fa1f f888 	uxth.w	r8, r8
 8019eec:	1a09      	subs	r1, r1, r0
 8019eee:	b289      	uxth	r1, r1
 8019ef0:	fb08 f303 	mul.w	r3, r8, r3
 8019ef4:	fb01 330e 	mla	r3, r1, lr, r3
 8019ef8:	fb00 3305 	mla	r3, r0, r5, r3
 8019efc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019efe:	fb09 3305 	mla	r3, r9, r5, r3
 8019f02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f06:	2b00      	cmp	r3, #0
 8019f08:	f000 80f7 	beq.w	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019f0c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019f10:	d01b      	beq.n	8019f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8019f12:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019f16:	fb0e fa0a 	mul.w	sl, lr, sl
 8019f1a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019f1e:	fb0e fe02 	mul.w	lr, lr, r2
 8019f22:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019f26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019f2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019f2e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019f32:	4452      	add	r2, sl
 8019f34:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f38:	0a12      	lsrs	r2, r2, #8
 8019f3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019f42:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f46:	ea42 020c 	orr.w	r2, r2, ip
 8019f4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f4c:	2dff      	cmp	r5, #255	; 0xff
 8019f4e:	d021      	beq.n	8019f94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019f50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f52:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019f56:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f58:	fb05 fb0b 	mul.w	fp, r5, fp
 8019f5c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f5e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019f62:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f64:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f68:	fb05 fa0a 	mul.w	sl, r5, sl
 8019f6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f70:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019f74:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f78:	44de      	add	lr, fp
 8019f7a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f8a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f8e:	ea4e 050a 	orr.w	r5, lr, sl
 8019f92:	950b      	str	r5, [sp, #44]	; 0x2c
 8019f94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019f96:	2dff      	cmp	r5, #255	; 0xff
 8019f98:	d021      	beq.n	8019fde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8019f9a:	9d08      	ldr	r5, [sp, #32]
 8019f9c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019fa0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019fa2:	fb05 fb0b 	mul.w	fp, r5, fp
 8019fa6:	9d08      	ldr	r5, [sp, #32]
 8019fa8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019fac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019fae:	fb05 fa0e 	mul.w	sl, r5, lr
 8019fb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019fb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019fbe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019fc2:	44de      	add	lr, fp
 8019fc4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019fc8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019fcc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fd4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fd8:	ea4e 050a 	orr.w	r5, lr, sl
 8019fdc:	9508      	str	r5, [sp, #32]
 8019fde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fe0:	2dff      	cmp	r5, #255	; 0xff
 8019fe2:	d021      	beq.n	801a028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019fe4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019fe6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019fea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fec:	fb05 fb0b 	mul.w	fp, r5, fp
 8019ff0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ff2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019ff6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019ff8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019ffc:	fb05 fa0a 	mul.w	sl, r5, sl
 801a000:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a004:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a008:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a00c:	44de      	add	lr, fp
 801a00e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a012:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a016:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a01a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a01e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a022:	ea4e 050a 	orr.w	r5, lr, sl
 801a026:	950c      	str	r5, [sp, #48]	; 0x30
 801a028:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a02a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a02e:	9d08      	ldr	r5, [sp, #32]
 801a030:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a034:	fb08 fc0c 	mul.w	ip, r8, ip
 801a038:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a03c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a040:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a042:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a046:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a04a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a04c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a050:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a054:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a058:	fb08 f80e 	mul.w	r8, r8, lr
 801a05c:	fb01 8202 	mla	r2, r1, r2, r8
 801a060:	9908      	ldr	r1, [sp, #32]
 801a062:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a066:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a068:	fb00 220a 	mla	r2, r0, sl, r2
 801a06c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a070:	fb09 2900 	mla	r9, r9, r0, r2
 801a074:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a078:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a07c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a080:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a084:	ea4c 0c09 	orr.w	ip, ip, r9
 801a088:	2bff      	cmp	r3, #255	; 0xff
 801a08a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a08e:	f000 80b5 	beq.w	801a1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801a092:	8839      	ldrh	r1, [r7, #0]
 801a094:	43db      	mvns	r3, r3
 801a096:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a09a:	fa5f f883 	uxtb.w	r8, r3
 801a09e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a0a2:	fb0e fe08 	mul.w	lr, lr, r8
 801a0a6:	10c8      	asrs	r0, r1, #3
 801a0a8:	00cb      	lsls	r3, r1, #3
 801a0aa:	f10e 0101 	add.w	r1, lr, #1
 801a0ae:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a0b2:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801a0b6:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 801a0ba:	b2db      	uxtb	r3, r3
 801a0bc:	4964      	ldr	r1, [pc, #400]	; (801a250 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 801a0be:	fb03 f308 	mul.w	r3, r3, r8
 801a0c2:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801a0c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a0ca:	1c59      	adds	r1, r3, #1
 801a0cc:	fb00 f008 	mul.w	r0, r0, r8
 801a0d0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a0d4:	fa5f fc8c 	uxtb.w	ip, ip
 801a0d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a0dc:	1c43      	adds	r3, r0, #1
 801a0de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a0e2:	b2d3      	uxtb	r3, r2
 801a0e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a0e8:	00db      	lsls	r3, r3, #3
 801a0ea:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 801a0ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a0f2:	ea4c 0c03 	orr.w	ip, ip, r3
 801a0f6:	f8a7 c000 	strh.w	ip, [r7]
 801a0fa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a0fc:	441c      	add	r4, r3
 801a0fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a100:	441e      	add	r6, r3
 801a102:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a104:	3b01      	subs	r3, #1
 801a106:	3702      	adds	r7, #2
 801a108:	9317      	str	r3, [sp, #92]	; 0x5c
 801a10a:	e69b      	b.n	8019e44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a10c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a10e:	441c      	add	r4, r3
 801a110:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a112:	441e      	add	r6, r3
 801a114:	9b07      	ldr	r3, [sp, #28]
 801a116:	3b01      	subs	r3, #1
 801a118:	9307      	str	r3, [sp, #28]
 801a11a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a11c:	3302      	adds	r3, #2
 801a11e:	930a      	str	r3, [sp, #40]	; 0x28
 801a120:	e670      	b.n	8019e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a122:	d023      	beq.n	801a16c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801a124:	9b07      	ldr	r3, [sp, #28]
 801a126:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a128:	3b01      	subs	r3, #1
 801a12a:	fb00 4003 	mla	r0, r0, r3, r4
 801a12e:	1400      	asrs	r0, r0, #16
 801a130:	f53f ae85 	bmi.w	8019e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a134:	3901      	subs	r1, #1
 801a136:	4288      	cmp	r0, r1
 801a138:	f6bf ae81 	bge.w	8019e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a13c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a13e:	fb01 6303 	mla	r3, r1, r3, r6
 801a142:	141b      	asrs	r3, r3, #16
 801a144:	f53f ae7b 	bmi.w	8019e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a148:	3a01      	subs	r2, #1
 801a14a:	4293      	cmp	r3, r2
 801a14c:	f6bf ae77 	bge.w	8019e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a150:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a154:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a158:	f1bb 0f00 	cmp.w	fp, #0
 801a15c:	dc7a      	bgt.n	801a254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801a15e:	9b07      	ldr	r3, [sp, #28]
 801a160:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a166:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a16a:	930a      	str	r3, [sp, #40]	; 0x28
 801a16c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a16e:	2b00      	cmp	r3, #0
 801a170:	f340 81cb 	ble.w	801a50a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801a174:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a178:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a17c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a180:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a182:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a186:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a18a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a18e:	eef0 6a48 	vmov.f32	s13, s16
 801a192:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a196:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a19a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a19e:	ee16 4a90 	vmov	r4, s13
 801a1a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a1a6:	eef0 6a68 	vmov.f32	s13, s17
 801a1aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a1ae:	ee18 2a10 	vmov	r2, s16
 801a1b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a1b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1ba:	ee18 2a90 	vmov	r2, s17
 801a1be:	932f      	str	r3, [sp, #188]	; 0xbc
 801a1c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a1c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1c6:	9330      	str	r3, [sp, #192]	; 0xc0
 801a1c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a1ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a1cc:	3b01      	subs	r3, #1
 801a1ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1d2:	9316      	str	r3, [sp, #88]	; 0x58
 801a1d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a1d6:	bf08      	it	eq
 801a1d8:	4613      	moveq	r3, r2
 801a1da:	ee16 6a90 	vmov	r6, s13
 801a1de:	9307      	str	r3, [sp, #28]
 801a1e0:	eef0 8a67 	vmov.f32	s17, s15
 801a1e4:	eeb0 8a47 	vmov.f32	s16, s14
 801a1e8:	e5fe      	b.n	8019de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a1ea:	2800      	cmp	r0, #0
 801a1ec:	f43f ae6e 	beq.w	8019ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a1f0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a1f4:	9308      	str	r3, [sp, #32]
 801a1f6:	0e1b      	lsrs	r3, r3, #24
 801a1f8:	9310      	str	r3, [sp, #64]	; 0x40
 801a1fa:	e667      	b.n	8019ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a1fc:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a200:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a204:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a208:	f022 0207 	bic.w	r2, r2, #7
 801a20c:	431a      	orrs	r2, r3
 801a20e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a212:	ea42 0c0c 	orr.w	ip, r2, ip
 801a216:	e76e      	b.n	801a0f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a218:	f112 0801 	adds.w	r8, r2, #1
 801a21c:	f53f af6d 	bmi.w	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a220:	4543      	cmp	r3, r8
 801a222:	f6ff af6a 	blt.w	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a226:	f11c 0801 	adds.w	r8, ip, #1
 801a22a:	f53f af66 	bmi.w	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a22e:	45c6      	cmp	lr, r8
 801a230:	f6ff af63 	blt.w	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a234:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a238:	fa0f f28e 	sxth.w	r2, lr
 801a23c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a240:	9200      	str	r2, [sp, #0]
 801a242:	b21b      	sxth	r3, r3
 801a244:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a246:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a248:	4639      	mov	r1, r7
 801a24a:	f7ff fc53 	bl	8019af4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a24e:	e754      	b.n	801a0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a250:	fffff800 	.word	0xfffff800
 801a254:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a256:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a258:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a25c:	1421      	asrs	r1, r4, #16
 801a25e:	1433      	asrs	r3, r6, #16
 801a260:	fb07 1303 	mla	r3, r7, r3, r1
 801a264:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a266:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a26a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a26e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a272:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a276:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a27a:	2a00      	cmp	r2, #0
 801a27c:	f000 812e 	beq.w	801a4dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801a280:	684d      	ldr	r5, [r1, #4]
 801a282:	950d      	str	r5, [sp, #52]	; 0x34
 801a284:	0e2d      	lsrs	r5, r5, #24
 801a286:	9514      	str	r5, [sp, #80]	; 0x50
 801a288:	b178      	cbz	r0, 801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a28a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a28e:	3f01      	subs	r7, #1
 801a290:	00bf      	lsls	r7, r7, #2
 801a292:	3704      	adds	r7, #4
 801a294:	eb01 0e07 	add.w	lr, r1, r7
 801a298:	59c9      	ldr	r1, [r1, r7]
 801a29a:	9109      	str	r1, [sp, #36]	; 0x24
 801a29c:	0e09      	lsrs	r1, r1, #24
 801a29e:	9111      	str	r1, [sp, #68]	; 0x44
 801a2a0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a2a4:	910e      	str	r1, [sp, #56]	; 0x38
 801a2a6:	0e09      	lsrs	r1, r1, #24
 801a2a8:	9115      	str	r1, [sp, #84]	; 0x54
 801a2aa:	b292      	uxth	r2, r2
 801a2ac:	b280      	uxth	r0, r0
 801a2ae:	fb02 f900 	mul.w	r9, r2, r0
 801a2b2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a2b6:	0112      	lsls	r2, r2, #4
 801a2b8:	eba2 0e09 	sub.w	lr, r2, r9
 801a2bc:	b280      	uxth	r0, r0
 801a2be:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a2c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a2c6:	fa1f fe8e 	uxth.w	lr, lr
 801a2ca:	1a09      	subs	r1, r1, r0
 801a2cc:	b289      	uxth	r1, r1
 801a2ce:	fb0e f202 	mul.w	r2, lr, r2
 801a2d2:	fb01 220c 	mla	r2, r1, ip, r2
 801a2d6:	fb00 2205 	mla	r2, r0, r5, r2
 801a2da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a2dc:	fb09 2205 	mla	r2, r9, r5, r2
 801a2e0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a2e4:	2a00      	cmp	r2, #0
 801a2e6:	f000 80f0 	beq.w	801a4ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801a2ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a2ee:	d019      	beq.n	801a324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801a2f0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a2f4:	fb0c fa0a 	mul.w	sl, ip, sl
 801a2f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a2fc:	fb0c fc03 	mul.w	ip, ip, r3
 801a300:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a304:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a308:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a30c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a310:	4453      	add	r3, sl
 801a312:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a316:	0a1b      	lsrs	r3, r3, #8
 801a318:	0a3f      	lsrs	r7, r7, #8
 801a31a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a31e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a322:	433b      	orrs	r3, r7
 801a324:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a326:	2dff      	cmp	r5, #255	; 0xff
 801a328:	d020      	beq.n	801a36c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801a32a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a32c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a330:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a332:	436f      	muls	r7, r5
 801a334:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a336:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a33a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a33c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a340:	fb05 fa0a 	mul.w	sl, r5, sl
 801a344:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a348:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a34c:	44bc      	add	ip, r7
 801a34e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a352:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a35a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a35e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a362:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a366:	ea4c 050a 	orr.w	r5, ip, sl
 801a36a:	950d      	str	r5, [sp, #52]	; 0x34
 801a36c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a36e:	2dff      	cmp	r5, #255	; 0xff
 801a370:	d020      	beq.n	801a3b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801a372:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a374:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a378:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a37a:	436f      	muls	r7, r5
 801a37c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a37e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a382:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a384:	fb05 fa0c 	mul.w	sl, r5, ip
 801a388:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a38c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a390:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a394:	44bc      	add	ip, r7
 801a396:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a39a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a39e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3ae:	ea4c 050a 	orr.w	r5, ip, sl
 801a3b2:	9509      	str	r5, [sp, #36]	; 0x24
 801a3b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a3b6:	2dff      	cmp	r5, #255	; 0xff
 801a3b8:	d020      	beq.n	801a3fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801a3ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a3bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a3c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a3c2:	436f      	muls	r7, r5
 801a3c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a3c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a3ca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a3cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a3d0:	fb05 fa0a 	mul.w	sl, r5, sl
 801a3d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a3d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3dc:	44bc      	add	ip, r7
 801a3de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a3e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a3e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3f6:	ea4c 050a 	orr.w	r5, ip, sl
 801a3fa:	950e      	str	r5, [sp, #56]	; 0x38
 801a3fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a3fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a402:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a404:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a408:	fb0e f707 	mul.w	r7, lr, r7
 801a40c:	fb01 770c 	mla	r7, r1, ip, r7
 801a410:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a414:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a416:	fb00 770c 	mla	r7, r0, ip, r7
 801a41a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a41e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a420:	fb09 770c 	mla	r7, r9, ip, r7
 801a424:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a428:	fb0e fe0c 	mul.w	lr, lr, ip
 801a42c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a430:	fb01 e303 	mla	r3, r1, r3, lr
 801a434:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a436:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a43a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a43c:	fb00 330a 	mla	r3, r0, sl, r3
 801a440:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a444:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a448:	0a3f      	lsrs	r7, r7, #8
 801a44a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a44e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a452:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a456:	ea47 070c 	orr.w	r7, r7, ip
 801a45a:	2aff      	cmp	r2, #255	; 0xff
 801a45c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a460:	d045      	beq.n	801a4ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 801a462:	f8b8 1000 	ldrh.w	r1, [r8]
 801a466:	43d2      	mvns	r2, r2
 801a468:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a46c:	fa5f fe82 	uxtb.w	lr, r2
 801a470:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a474:	fb0c fc0e 	mul.w	ip, ip, lr
 801a478:	10c8      	asrs	r0, r1, #3
 801a47a:	00ca      	lsls	r2, r1, #3
 801a47c:	f10c 0101 	add.w	r1, ip, #1
 801a480:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801a484:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801a488:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a48c:	b2d2      	uxtb	r2, r2
 801a48e:	4921      	ldr	r1, [pc, #132]	; (801a514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801a490:	fb02 f20e 	mul.w	r2, r2, lr
 801a494:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a498:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a49c:	1c51      	adds	r1, r2, #1
 801a49e:	fb00 f00e 	mul.w	r0, r0, lr
 801a4a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a4a6:	b2ff      	uxtb	r7, r7
 801a4a8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a4ac:	1c42      	adds	r2, r0, #1
 801a4ae:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801a4b2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a4b6:	b2df      	uxtb	r7, r3
 801a4b8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a4bc:	00ff      	lsls	r7, r7, #3
 801a4be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a4c2:	ea4c 0c07 	orr.w	ip, ip, r7
 801a4c6:	f8a8 c000 	strh.w	ip, [r8]
 801a4ca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a4cc:	441c      	add	r4, r3
 801a4ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a4d0:	f108 0802 	add.w	r8, r8, #2
 801a4d4:	441e      	add	r6, r3
 801a4d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a4da:	e63d      	b.n	801a158 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a4dc:	2800      	cmp	r0, #0
 801a4de:	f43f aee4 	beq.w	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a4e2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a4e6:	9109      	str	r1, [sp, #36]	; 0x24
 801a4e8:	0e09      	lsrs	r1, r1, #24
 801a4ea:	9111      	str	r1, [sp, #68]	; 0x44
 801a4ec:	e6dd      	b.n	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801a4ee:	097a      	lsrs	r2, r7, #5
 801a4f0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a4f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4f8:	f023 0307 	bic.w	r3, r3, #7
 801a4fc:	4313      	orrs	r3, r2
 801a4fe:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a502:	431f      	orrs	r7, r3
 801a504:	f8a8 7000 	strh.w	r7, [r8]
 801a508:	e7df      	b.n	801a4ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801a50a:	b01b      	add	sp, #108	; 0x6c
 801a50c:	ecbd 8b08 	vpop	{d8-d11}
 801a510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a514:	fffff800 	.word	0xfffff800

0801a518 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a518:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a51c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a520:	2c00      	cmp	r4, #0
 801a522:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a526:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a52a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a52e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a532:	fb04 ce03 	mla	lr, r4, r3, ip
 801a536:	db60      	blt.n	801a5fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a538:	45a1      	cmp	r9, r4
 801a53a:	dd5e      	ble.n	801a5fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a53c:	f1bc 0f00 	cmp.w	ip, #0
 801a540:	db59      	blt.n	801a5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a542:	45e0      	cmp	r8, ip
 801a544:	dd57      	ble.n	801a5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a546:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a54a:	f01e 0f01 	tst.w	lr, #1
 801a54e:	5c16      	ldrb	r6, [r2, r0]
 801a550:	bf0c      	ite	eq
 801a552:	f006 060f 	andeq.w	r6, r6, #15
 801a556:	1136      	asrne	r6, r6, #4
 801a558:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a55c:	b2f6      	uxtb	r6, r6
 801a55e:	f11c 0001 	adds.w	r0, ip, #1
 801a562:	d44d      	bmi.n	801a600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a564:	4580      	cmp	r8, r0
 801a566:	dd4b      	ble.n	801a600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a568:	2d00      	cmp	r5, #0
 801a56a:	d04b      	beq.n	801a604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a56c:	f10e 0a01 	add.w	sl, lr, #1
 801a570:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a574:	f01a 0f01 	tst.w	sl, #1
 801a578:	5c10      	ldrb	r0, [r2, r0]
 801a57a:	bf0c      	ite	eq
 801a57c:	f000 000f 	andeq.w	r0, r0, #15
 801a580:	1100      	asrne	r0, r0, #4
 801a582:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a586:	b2c0      	uxtb	r0, r0
 801a588:	3401      	adds	r4, #1
 801a58a:	d43f      	bmi.n	801a60c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a58c:	45a1      	cmp	r9, r4
 801a58e:	dd3d      	ble.n	801a60c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a590:	2f00      	cmp	r7, #0
 801a592:	f000 809e 	beq.w	801a6d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801a596:	f1bc 0f00 	cmp.w	ip, #0
 801a59a:	db35      	blt.n	801a608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a59c:	45e0      	cmp	r8, ip
 801a59e:	dd33      	ble.n	801a608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a5a0:	eb03 090e 	add.w	r9, r3, lr
 801a5a4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a5a8:	f019 0f01 	tst.w	r9, #1
 801a5ac:	5d14      	ldrb	r4, [r2, r4]
 801a5ae:	bf0c      	ite	eq
 801a5b0:	f004 040f 	andeq.w	r4, r4, #15
 801a5b4:	1124      	asrne	r4, r4, #4
 801a5b6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a5ba:	b2e4      	uxtb	r4, r4
 801a5bc:	f11c 0c01 	adds.w	ip, ip, #1
 801a5c0:	d427      	bmi.n	801a612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a5c2:	45e0      	cmp	r8, ip
 801a5c4:	dd25      	ble.n	801a612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a5c6:	b335      	cbz	r5, 801a616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a5c8:	3301      	adds	r3, #1
 801a5ca:	449e      	add	lr, r3
 801a5cc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a5d0:	f01e 0f01 	tst.w	lr, #1
 801a5d4:	5cd2      	ldrb	r2, [r2, r3]
 801a5d6:	bf0c      	ite	eq
 801a5d8:	f002 020f 	andeq.w	r2, r2, #15
 801a5dc:	1112      	asrne	r2, r2, #4
 801a5de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5e2:	b2d3      	uxtb	r3, r2
 801a5e4:	2d0f      	cmp	r5, #15
 801a5e6:	d917      	bls.n	801a618 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a5e8:	4b3c      	ldr	r3, [pc, #240]	; (801a6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801a5ea:	4a3d      	ldr	r2, [pc, #244]	; (801a6e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a5ec:	483d      	ldr	r0, [pc, #244]	; (801a6e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a5ee:	f240 210d 	movw	r1, #525	; 0x20d
 801a5f2:	f000 ffd9 	bl	801b5a8 <__assert_func>
 801a5f6:	2600      	movs	r6, #0
 801a5f8:	e7b1      	b.n	801a55e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a5fa:	2000      	movs	r0, #0
 801a5fc:	4606      	mov	r6, r0
 801a5fe:	e7c3      	b.n	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a600:	2000      	movs	r0, #0
 801a602:	e7c1      	b.n	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a604:	4628      	mov	r0, r5
 801a606:	e7bf      	b.n	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a608:	2400      	movs	r4, #0
 801a60a:	e7d7      	b.n	801a5bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a60c:	2300      	movs	r3, #0
 801a60e:	461c      	mov	r4, r3
 801a610:	e7e8      	b.n	801a5e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a612:	2300      	movs	r3, #0
 801a614:	e7e6      	b.n	801a5e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a616:	462b      	mov	r3, r5
 801a618:	2f0f      	cmp	r7, #15
 801a61a:	d8e5      	bhi.n	801a5e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a61c:	b2ad      	uxth	r5, r5
 801a61e:	b2bf      	uxth	r7, r7
 801a620:	fb05 fc07 	mul.w	ip, r5, r7
 801a624:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a628:	012d      	lsls	r5, r5, #4
 801a62a:	b2bf      	uxth	r7, r7
 801a62c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a630:	eba5 050c 	sub.w	r5, r5, ip
 801a634:	1bd2      	subs	r2, r2, r7
 801a636:	b2ad      	uxth	r5, r5
 801a638:	b292      	uxth	r2, r2
 801a63a:	4368      	muls	r0, r5
 801a63c:	fb06 0002 	mla	r0, r6, r2, r0
 801a640:	fb07 0404 	mla	r4, r7, r4, r0
 801a644:	fb0c 4303 	mla	r3, ip, r3, r4
 801a648:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a64c:	2b00      	cmp	r3, #0
 801a64e:	d03e      	beq.n	801a6ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801a650:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801a654:	4a24      	ldr	r2, [pc, #144]	; (801a6e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a656:	4343      	muls	r3, r0
 801a658:	1c58      	adds	r0, r3, #1
 801a65a:	6816      	ldr	r6, [r2, #0]
 801a65c:	880a      	ldrh	r2, [r1, #0]
 801a65e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a662:	1200      	asrs	r0, r0, #8
 801a664:	b284      	uxth	r4, r0
 801a666:	1215      	asrs	r5, r2, #8
 801a668:	43c0      	mvns	r0, r0
 801a66a:	b2c3      	uxtb	r3, r0
 801a66c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a670:	0a30      	lsrs	r0, r6, #8
 801a672:	fb15 f503 	smulbb	r5, r5, r3
 801a676:	10d7      	asrs	r7, r2, #3
 801a678:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a67c:	fb00 5004 	mla	r0, r0, r4, r5
 801a680:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a684:	08f5      	lsrs	r5, r6, #3
 801a686:	00d2      	lsls	r2, r2, #3
 801a688:	fb17 f703 	smulbb	r7, r7, r3
 801a68c:	b2d2      	uxtb	r2, r2
 801a68e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a692:	00f6      	lsls	r6, r6, #3
 801a694:	fb05 7504 	mla	r5, r5, r4, r7
 801a698:	fb12 f303 	smulbb	r3, r2, r3
 801a69c:	b2f6      	uxtb	r6, r6
 801a69e:	fb06 3304 	mla	r3, r6, r4, r3
 801a6a2:	b2ad      	uxth	r5, r5
 801a6a4:	b29a      	uxth	r2, r3
 801a6a6:	b280      	uxth	r0, r0
 801a6a8:	1c6b      	adds	r3, r5, #1
 801a6aa:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a6ae:	1c44      	adds	r4, r0, #1
 801a6b0:	095b      	lsrs	r3, r3, #5
 801a6b2:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a6b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a6ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6be:	4303      	orrs	r3, r0
 801a6c0:	1c50      	adds	r0, r2, #1
 801a6c2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a6c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a6ca:	4313      	orrs	r3, r2
 801a6cc:	800b      	strh	r3, [r1, #0]
 801a6ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a6d2:	2d0f      	cmp	r5, #15
 801a6d4:	d888      	bhi.n	801a5e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a6d6:	463b      	mov	r3, r7
 801a6d8:	463c      	mov	r4, r7
 801a6da:	e79f      	b.n	801a61c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a6dc:	0801f4ba 	.word	0x0801f4ba
 801a6e0:	0801fa79 	.word	0x0801fa79
 801a6e4:	0801f5a3 	.word	0x0801f5a3
 801a6e8:	20008998 	.word	0x20008998

0801a6ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6f0:	ed2d 8b08 	vpush	{d8-d11}
 801a6f4:	b097      	sub	sp, #92	; 0x5c
 801a6f6:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801a6fa:	9214      	str	r2, [sp, #80]	; 0x50
 801a6fc:	9309      	str	r3, [sp, #36]	; 0x24
 801a6fe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a700:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a704:	910d      	str	r1, [sp, #52]	; 0x34
 801a706:	930e      	str	r3, [sp, #56]	; 0x38
 801a708:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a70c:	9015      	str	r0, [sp, #84]	; 0x54
 801a70e:	6850      	ldr	r0, [r2, #4]
 801a710:	6812      	ldr	r2, [r2, #0]
 801a712:	fb00 1303 	mla	r3, r0, r3, r1
 801a716:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801a71a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a71c:	689b      	ldr	r3, [r3, #8]
 801a71e:	3301      	adds	r3, #1
 801a720:	f023 0301 	bic.w	r3, r3, #1
 801a724:	930a      	str	r3, [sp, #40]	; 0x28
 801a726:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a728:	681f      	ldr	r7, [r3, #0]
 801a72a:	eeb0 aa40 	vmov.f32	s20, s0
 801a72e:	eef0 9a60 	vmov.f32	s19, s1
 801a732:	eeb0 9a41 	vmov.f32	s18, s2
 801a736:	eeb0 8a62 	vmov.f32	s16, s5
 801a73a:	eef0 8a43 	vmov.f32	s17, s6
 801a73e:	eef0 ba44 	vmov.f32	s23, s8
 801a742:	eeb0 ba64 	vmov.f32	s22, s9
 801a746:	eef0 aa45 	vmov.f32	s21, s10
 801a74a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	dc03      	bgt.n	801a758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a750:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a752:	2b00      	cmp	r3, #0
 801a754:	f340 826a 	ble.w	801ac2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801a758:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a75a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a75e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a762:	1e48      	subs	r0, r1, #1
 801a764:	f102 3cff 	add.w	ip, r2, #4294967295
 801a768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a76a:	2b00      	cmp	r3, #0
 801a76c:	f340 80f3 	ble.w	801a956 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a770:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a774:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a778:	d406      	bmi.n	801a788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a77a:	4586      	cmp	lr, r0
 801a77c:	da04      	bge.n	801a788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a77e:	2b00      	cmp	r3, #0
 801a780:	db02      	blt.n	801a788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a782:	4563      	cmp	r3, ip
 801a784:	f2c0 80e8 	blt.w	801a958 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a788:	f11e 0e01 	adds.w	lr, lr, #1
 801a78c:	f100 80d9 	bmi.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a790:	4571      	cmp	r1, lr
 801a792:	f2c0 80d6 	blt.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a796:	3301      	adds	r3, #1
 801a798:	f100 80d3 	bmi.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a79c:	429a      	cmp	r2, r3
 801a79e:	f2c0 80d0 	blt.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801a7a2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a7a6:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a7aa:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7ac:	46d0      	mov	r8, sl
 801a7ae:	f1b9 0f00 	cmp.w	r9, #0
 801a7b2:	f340 80f0 	ble.w	801a996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801a7b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a7b8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a7bc:	1423      	asrs	r3, r4, #16
 801a7be:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a7c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a7c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a7ca:	f100 8139 	bmi.w	801aa40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a7ce:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a7d2:	455b      	cmp	r3, fp
 801a7d4:	f280 8134 	bge.w	801aa40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a7d8:	2800      	cmp	r0, #0
 801a7da:	f2c0 8131 	blt.w	801aa40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a7de:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a7e2:	4558      	cmp	r0, fp
 801a7e4:	f280 812c 	bge.w	801aa40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a7e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a7ea:	fb00 3305 	mla	r3, r0, r5, r3
 801a7ee:	0858      	lsrs	r0, r3, #1
 801a7f0:	07dd      	lsls	r5, r3, #31
 801a7f2:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a7f6:	bf54      	ite	pl
 801a7f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a7fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a800:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a804:	fa5f fc8c 	uxtb.w	ip, ip
 801a808:	2a00      	cmp	r2, #0
 801a80a:	f000 8108 	beq.w	801aa1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a80e:	1c58      	adds	r0, r3, #1
 801a810:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a814:	07c0      	lsls	r0, r0, #31
 801a816:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a81a:	bf54      	ite	pl
 801a81c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a820:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a824:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a828:	fa5f f08e 	uxtb.w	r0, lr
 801a82c:	9010      	str	r0, [sp, #64]	; 0x40
 801a82e:	b1d1      	cbz	r1, 801a866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801a830:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a832:	4403      	add	r3, r0
 801a834:	0858      	lsrs	r0, r3, #1
 801a836:	07dd      	lsls	r5, r3, #31
 801a838:	5c38      	ldrb	r0, [r7, r0]
 801a83a:	bf54      	ite	pl
 801a83c:	f000 000f 	andpl.w	r0, r0, #15
 801a840:	1100      	asrmi	r0, r0, #4
 801a842:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a846:	3301      	adds	r3, #1
 801a848:	b2c0      	uxtb	r0, r0
 801a84a:	900b      	str	r0, [sp, #44]	; 0x2c
 801a84c:	0858      	lsrs	r0, r3, #1
 801a84e:	07dd      	lsls	r5, r3, #31
 801a850:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a854:	bf54      	ite	pl
 801a856:	f00e 030f 	andpl.w	r3, lr, #15
 801a85a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a85e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a862:	b2db      	uxtb	r3, r3
 801a864:	9311      	str	r3, [sp, #68]	; 0x44
 801a866:	b292      	uxth	r2, r2
 801a868:	b289      	uxth	r1, r1
 801a86a:	fb02 f301 	mul.w	r3, r2, r1
 801a86e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a872:	0112      	lsls	r2, r2, #4
 801a874:	b289      	uxth	r1, r1
 801a876:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801a87a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a87c:	1ad2      	subs	r2, r2, r3
 801a87e:	1a40      	subs	r0, r0, r1
 801a880:	b292      	uxth	r2, r2
 801a882:	436a      	muls	r2, r5
 801a884:	b280      	uxth	r0, r0
 801a886:	fb0c 2c00 	mla	ip, ip, r0, r2
 801a88a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a88c:	fb01 c102 	mla	r1, r1, r2, ip
 801a890:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a892:	fb03 1302 	mla	r3, r3, r2, r1
 801a896:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a89a:	2b00      	cmp	r3, #0
 801a89c:	d048      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801a89e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8a0:	4a78      	ldr	r2, [pc, #480]	; (801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801a8a2:	434b      	muls	r3, r1
 801a8a4:	1c59      	adds	r1, r3, #1
 801a8a6:	f8d2 e000 	ldr.w	lr, [r2]
 801a8aa:	f8b8 2000 	ldrh.w	r2, [r8]
 801a8ae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a8b2:	121b      	asrs	r3, r3, #8
 801a8b4:	b299      	uxth	r1, r3
 801a8b6:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a8ba:	43db      	mvns	r3, r3
 801a8bc:	b2db      	uxtb	r3, r3
 801a8be:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801a8c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8c6:	fb1c fc03 	smulbb	ip, ip, r3
 801a8ca:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801a8ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a8d2:	fb00 c001 	mla	r0, r0, r1, ip
 801a8d6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a8da:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801a8de:	fb1b fb03 	smulbb	fp, fp, r3
 801a8e2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a8e6:	00d2      	lsls	r2, r2, #3
 801a8e8:	fb0c bc01 	mla	ip, ip, r1, fp
 801a8ec:	b2d2      	uxtb	r2, r2
 801a8ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8f2:	fb12 f303 	smulbb	r3, r2, r3
 801a8f6:	fa1f fc8c 	uxth.w	ip, ip
 801a8fa:	fa5f fe8e 	uxtb.w	lr, lr
 801a8fe:	b280      	uxth	r0, r0
 801a900:	fb0e 3101 	mla	r1, lr, r1, r3
 801a904:	f10c 0201 	add.w	r2, ip, #1
 801a908:	b289      	uxth	r1, r1
 801a90a:	1c43      	adds	r3, r0, #1
 801a90c:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801a910:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a914:	0952      	lsrs	r2, r2, #5
 801a916:	1c4b      	adds	r3, r1, #1
 801a918:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a91c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a920:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a924:	4310      	orrs	r0, r2
 801a926:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a92a:	4308      	orrs	r0, r1
 801a92c:	f8a8 0000 	strh.w	r0, [r8]
 801a930:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a932:	441c      	add	r4, r3
 801a934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a936:	f108 0802 	add.w	r8, r8, #2
 801a93a:	441e      	add	r6, r3
 801a93c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a940:	e735      	b.n	801a7ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801a942:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a944:	441c      	add	r4, r3
 801a946:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a948:	441e      	add	r6, r3
 801a94a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a94c:	3b01      	subs	r3, #1
 801a94e:	9309      	str	r3, [sp, #36]	; 0x24
 801a950:	f10a 0a02 	add.w	sl, sl, #2
 801a954:	e708      	b.n	801a768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a956:	d023      	beq.n	801a9a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801a958:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a95a:	982b      	ldr	r0, [sp, #172]	; 0xac
 801a95c:	3b01      	subs	r3, #1
 801a95e:	fb00 4003 	mla	r0, r0, r3, r4
 801a962:	1400      	asrs	r0, r0, #16
 801a964:	f53f af1d 	bmi.w	801a7a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a968:	3901      	subs	r1, #1
 801a96a:	4288      	cmp	r0, r1
 801a96c:	f6bf af19 	bge.w	801a7a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a970:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801a972:	fb01 6303 	mla	r3, r1, r3, r6
 801a976:	141b      	asrs	r3, r3, #16
 801a978:	f53f af13 	bmi.w	801a7a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a97c:	3a01      	subs	r2, #1
 801a97e:	4293      	cmp	r3, r2
 801a980:	f6bf af0f 	bge.w	801a7a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a984:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801a988:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a98c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a98e:	46d1      	mov	r9, sl
 801a990:	f1bb 0f00 	cmp.w	fp, #0
 801a994:	dc78      	bgt.n	801aa88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801a996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a998:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a99c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801a9a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a9a2:	2b00      	cmp	r3, #0
 801a9a4:	f340 8142 	ble.w	801ac2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801a9a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a9ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a9b0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a9b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9b6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a9ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a9be:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a9c2:	eef0 6a48 	vmov.f32	s13, s16
 801a9c6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a9ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9ce:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a9d2:	ee16 4a90 	vmov	r4, s13
 801a9d6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a9da:	eef0 6a68 	vmov.f32	s13, s17
 801a9de:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a9e2:	ee18 2a10 	vmov	r2, s16
 801a9e6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a9ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9ee:	ee18 2a90 	vmov	r2, s17
 801a9f2:	932b      	str	r3, [sp, #172]	; 0xac
 801a9f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9fa:	932c      	str	r3, [sp, #176]	; 0xb0
 801a9fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a9fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa00:	3b01      	subs	r3, #1
 801aa02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa06:	930d      	str	r3, [sp, #52]	; 0x34
 801aa08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aa0a:	bf08      	it	eq
 801aa0c:	4613      	moveq	r3, r2
 801aa0e:	ee16 6a90 	vmov	r6, s13
 801aa12:	9309      	str	r3, [sp, #36]	; 0x24
 801aa14:	eef0 8a67 	vmov.f32	s17, s15
 801aa18:	eeb0 8a47 	vmov.f32	s16, s14
 801aa1c:	e695      	b.n	801a74a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aa1e:	2900      	cmp	r1, #0
 801aa20:	f43f af21 	beq.w	801a866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801aa24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801aa26:	4418      	add	r0, r3
 801aa28:	0843      	lsrs	r3, r0, #1
 801aa2a:	07c0      	lsls	r0, r0, #31
 801aa2c:	5cfb      	ldrb	r3, [r7, r3]
 801aa2e:	bf54      	ite	pl
 801aa30:	f003 030f 	andpl.w	r3, r3, #15
 801aa34:	111b      	asrmi	r3, r3, #4
 801aa36:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801aa3a:	b2db      	uxtb	r3, r3
 801aa3c:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa3e:	e712      	b.n	801a866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801aa40:	f113 0b01 	adds.w	fp, r3, #1
 801aa44:	f53f af74 	bmi.w	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801aa48:	45dc      	cmp	ip, fp
 801aa4a:	f6ff af71 	blt.w	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801aa4e:	f110 0b01 	adds.w	fp, r0, #1
 801aa52:	f53f af6d 	bmi.w	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801aa56:	45de      	cmp	lr, fp
 801aa58:	f6ff af6a 	blt.w	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801aa5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa5e:	9302      	str	r3, [sp, #8]
 801aa60:	fa0f f38e 	sxth.w	r3, lr
 801aa64:	9301      	str	r3, [sp, #4]
 801aa66:	fa0f f38c 	sxth.w	r3, ip
 801aa6a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801aa6e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801aa72:	9300      	str	r3, [sp, #0]
 801aa74:	463a      	mov	r2, r7
 801aa76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aa78:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa7a:	4641      	mov	r1, r8
 801aa7c:	f7ff fd4c 	bl	801a518 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801aa80:	e756      	b.n	801a930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801aa82:	bf00      	nop
 801aa84:	20008998 	.word	0x20008998
 801aa88:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aa8a:	1422      	asrs	r2, r4, #16
 801aa8c:	1433      	asrs	r3, r6, #16
 801aa8e:	fb05 2303 	mla	r3, r5, r3, r2
 801aa92:	085a      	lsrs	r2, r3, #1
 801aa94:	07dd      	lsls	r5, r3, #31
 801aa96:	5cba      	ldrb	r2, [r7, r2]
 801aa98:	bf54      	ite	pl
 801aa9a:	f002 020f 	andpl.w	r2, r2, #15
 801aa9e:	1112      	asrmi	r2, r2, #4
 801aaa0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aaa4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801aaa8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aaac:	b2d2      	uxtb	r2, r2
 801aaae:	2900      	cmp	r1, #0
 801aab0:	f000 80a8 	beq.w	801ac04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801aab4:	f103 0e01 	add.w	lr, r3, #1
 801aab8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801aabc:	f01e 0f01 	tst.w	lr, #1
 801aac0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aac4:	bf0c      	ite	eq
 801aac6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801aaca:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801aace:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aad2:	fa5f f58c 	uxtb.w	r5, ip
 801aad6:	9512      	str	r5, [sp, #72]	; 0x48
 801aad8:	b300      	cbz	r0, 801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801aada:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aadc:	442b      	add	r3, r5
 801aade:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aae2:	07dd      	lsls	r5, r3, #31
 801aae4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aae8:	bf54      	ite	pl
 801aaea:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aaee:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aaf2:	3301      	adds	r3, #1
 801aaf4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aaf8:	fa5f f58c 	uxtb.w	r5, ip
 801aafc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ab00:	950c      	str	r5, [sp, #48]	; 0x30
 801ab02:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ab06:	07dd      	lsls	r5, r3, #31
 801ab08:	bf54      	ite	pl
 801ab0a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ab0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ab12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ab16:	fa5f f38c 	uxtb.w	r3, ip
 801ab1a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ab1c:	b289      	uxth	r1, r1
 801ab1e:	b280      	uxth	r0, r0
 801ab20:	fb01 f300 	mul.w	r3, r1, r0
 801ab24:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801ab28:	0109      	lsls	r1, r1, #4
 801ab2a:	b280      	uxth	r0, r0
 801ab2c:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801ab30:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab32:	1ac9      	subs	r1, r1, r3
 801ab34:	ebac 0c00 	sub.w	ip, ip, r0
 801ab38:	b289      	uxth	r1, r1
 801ab3a:	4369      	muls	r1, r5
 801ab3c:	fa1f fc8c 	uxth.w	ip, ip
 801ab40:	fb02 120c 	mla	r2, r2, ip, r1
 801ab44:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ab46:	fb00 2001 	mla	r0, r0, r1, r2
 801ab4a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab4c:	fb03 0302 	mla	r3, r3, r2, r0
 801ab50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab54:	2b00      	cmp	r3, #0
 801ab56:	d04c      	beq.n	801abf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ab58:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ab5a:	4a37      	ldr	r2, [pc, #220]	; (801ac38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801ab5c:	434b      	muls	r3, r1
 801ab5e:	1c59      	adds	r1, r3, #1
 801ab60:	f8d2 e000 	ldr.w	lr, [r2]
 801ab64:	f8b9 2000 	ldrh.w	r2, [r9]
 801ab68:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ab6c:	121b      	asrs	r3, r3, #8
 801ab6e:	b299      	uxth	r1, r3
 801ab70:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ab74:	43db      	mvns	r3, r3
 801ab76:	b2db      	uxtb	r3, r3
 801ab78:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801ab7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab80:	fb1c fc03 	smulbb	ip, ip, r3
 801ab84:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801ab88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ab8c:	fb00 c001 	mla	r0, r0, r1, ip
 801ab90:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ab94:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801ab98:	fb18 f803 	smulbb	r8, r8, r3
 801ab9c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801aba0:	00d2      	lsls	r2, r2, #3
 801aba2:	fb0c 8c01 	mla	ip, ip, r1, r8
 801aba6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abaa:	b2d2      	uxtb	r2, r2
 801abac:	fa1f fc8c 	uxth.w	ip, ip
 801abb0:	fa5f fe8e 	uxtb.w	lr, lr
 801abb4:	fb12 f203 	smulbb	r2, r2, r3
 801abb8:	b280      	uxth	r0, r0
 801abba:	fb0e 2201 	mla	r2, lr, r1, r2
 801abbe:	f10c 0801 	add.w	r8, ip, #1
 801abc2:	b292      	uxth	r2, r2
 801abc4:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801abc8:	f100 0801 	add.w	r8, r0, #1
 801abcc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801abd0:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801abd4:	1c51      	adds	r1, r2, #1
 801abd6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801abda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801abde:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801abe2:	ea4c 0c00 	orr.w	ip, ip, r0
 801abe6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801abea:	ea4c 0c02 	orr.w	ip, ip, r2
 801abee:	f8a9 c000 	strh.w	ip, [r9]
 801abf2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801abf4:	441c      	add	r4, r3
 801abf6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801abf8:	f109 0902 	add.w	r9, r9, #2
 801abfc:	441e      	add	r6, r3
 801abfe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ac02:	e6c5      	b.n	801a990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801ac04:	2800      	cmp	r0, #0
 801ac06:	d089      	beq.n	801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801ac08:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ac0a:	442b      	add	r3, r5
 801ac0c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac10:	07db      	lsls	r3, r3, #31
 801ac12:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac16:	bf54      	ite	pl
 801ac18:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ac1c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ac20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac24:	fa5f f38c 	uxtb.w	r3, ip
 801ac28:	930c      	str	r3, [sp, #48]	; 0x30
 801ac2a:	e777      	b.n	801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801ac2c:	b017      	add	sp, #92	; 0x5c
 801ac2e:	ecbd 8b08 	vpop	{d8-d11}
 801ac32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac36:	bf00      	nop
 801ac38:	20008998 	.word	0x20008998

0801ac3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ac3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ac40:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801ac44:	2c00      	cmp	r4, #0
 801ac46:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ac4a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ac4e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ac52:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801ac56:	fb04 ce03 	mla	lr, r4, r3, ip
 801ac5a:	db60      	blt.n	801ad1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ac5c:	45a1      	cmp	r9, r4
 801ac5e:	dd5e      	ble.n	801ad1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ac60:	f1bc 0f00 	cmp.w	ip, #0
 801ac64:	db59      	blt.n	801ad1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ac66:	45e0      	cmp	r8, ip
 801ac68:	dd57      	ble.n	801ad1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ac6a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ac6e:	f01e 0f01 	tst.w	lr, #1
 801ac72:	5c16      	ldrb	r6, [r2, r0]
 801ac74:	bf0c      	ite	eq
 801ac76:	f006 060f 	andeq.w	r6, r6, #15
 801ac7a:	1136      	asrne	r6, r6, #4
 801ac7c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ac80:	b2f6      	uxtb	r6, r6
 801ac82:	f11c 0001 	adds.w	r0, ip, #1
 801ac86:	d44d      	bmi.n	801ad24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ac88:	4580      	cmp	r8, r0
 801ac8a:	dd4b      	ble.n	801ad24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ac8c:	2d00      	cmp	r5, #0
 801ac8e:	d04b      	beq.n	801ad28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801ac90:	f10e 0a01 	add.w	sl, lr, #1
 801ac94:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ac98:	f01a 0f01 	tst.w	sl, #1
 801ac9c:	5c10      	ldrb	r0, [r2, r0]
 801ac9e:	bf0c      	ite	eq
 801aca0:	f000 000f 	andeq.w	r0, r0, #15
 801aca4:	1100      	asrne	r0, r0, #4
 801aca6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801acaa:	b2c0      	uxtb	r0, r0
 801acac:	3401      	adds	r4, #1
 801acae:	d43f      	bmi.n	801ad30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801acb0:	45a1      	cmp	r9, r4
 801acb2:	dd3d      	ble.n	801ad30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801acb4:	2f00      	cmp	r7, #0
 801acb6:	f000 8097 	beq.w	801ade8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801acba:	f1bc 0f00 	cmp.w	ip, #0
 801acbe:	db35      	blt.n	801ad2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801acc0:	45e0      	cmp	r8, ip
 801acc2:	dd33      	ble.n	801ad2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801acc4:	eb03 090e 	add.w	r9, r3, lr
 801acc8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801accc:	f019 0f01 	tst.w	r9, #1
 801acd0:	5d14      	ldrb	r4, [r2, r4]
 801acd2:	bf0c      	ite	eq
 801acd4:	f004 040f 	andeq.w	r4, r4, #15
 801acd8:	1124      	asrne	r4, r4, #4
 801acda:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801acde:	b2e4      	uxtb	r4, r4
 801ace0:	f11c 0c01 	adds.w	ip, ip, #1
 801ace4:	d427      	bmi.n	801ad36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ace6:	45e0      	cmp	r8, ip
 801ace8:	dd25      	ble.n	801ad36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801acea:	b335      	cbz	r5, 801ad3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801acec:	3301      	adds	r3, #1
 801acee:	449e      	add	lr, r3
 801acf0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801acf4:	f01e 0f01 	tst.w	lr, #1
 801acf8:	5cd2      	ldrb	r2, [r2, r3]
 801acfa:	bf0c      	ite	eq
 801acfc:	f002 020f 	andeq.w	r2, r2, #15
 801ad00:	1112      	asrne	r2, r2, #4
 801ad02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ad06:	b2d3      	uxtb	r3, r2
 801ad08:	2d0f      	cmp	r5, #15
 801ad0a:	d917      	bls.n	801ad3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801ad0c:	4b39      	ldr	r3, [pc, #228]	; (801adf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801ad0e:	4a3a      	ldr	r2, [pc, #232]	; (801adf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ad10:	483a      	ldr	r0, [pc, #232]	; (801adfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801ad12:	f240 210d 	movw	r1, #525	; 0x20d
 801ad16:	f000 fc47 	bl	801b5a8 <__assert_func>
 801ad1a:	2600      	movs	r6, #0
 801ad1c:	e7b1      	b.n	801ac82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ad1e:	2000      	movs	r0, #0
 801ad20:	4606      	mov	r6, r0
 801ad22:	e7c3      	b.n	801acac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ad24:	2000      	movs	r0, #0
 801ad26:	e7c1      	b.n	801acac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ad28:	4628      	mov	r0, r5
 801ad2a:	e7bf      	b.n	801acac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ad2c:	2400      	movs	r4, #0
 801ad2e:	e7d7      	b.n	801ace0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ad30:	2300      	movs	r3, #0
 801ad32:	461c      	mov	r4, r3
 801ad34:	e7e8      	b.n	801ad08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ad36:	2300      	movs	r3, #0
 801ad38:	e7e6      	b.n	801ad08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ad3a:	462b      	mov	r3, r5
 801ad3c:	2f0f      	cmp	r7, #15
 801ad3e:	d8e5      	bhi.n	801ad0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ad40:	b2ad      	uxth	r5, r5
 801ad42:	b2bf      	uxth	r7, r7
 801ad44:	fb05 fc07 	mul.w	ip, r5, r7
 801ad48:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ad4c:	012d      	lsls	r5, r5, #4
 801ad4e:	b2bf      	uxth	r7, r7
 801ad50:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ad54:	eba5 050c 	sub.w	r5, r5, ip
 801ad58:	1bd2      	subs	r2, r2, r7
 801ad5a:	b2ad      	uxth	r5, r5
 801ad5c:	b292      	uxth	r2, r2
 801ad5e:	4368      	muls	r0, r5
 801ad60:	fb06 0002 	mla	r0, r6, r2, r0
 801ad64:	fb07 0404 	mla	r4, r7, r4, r0
 801ad68:	fb0c 4303 	mla	r3, ip, r3, r4
 801ad6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad70:	2b00      	cmp	r3, #0
 801ad72:	d037      	beq.n	801ade4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801ad74:	4a22      	ldr	r2, [pc, #136]	; (801ae00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801ad76:	6816      	ldr	r6, [r2, #0]
 801ad78:	880a      	ldrh	r2, [r1, #0]
 801ad7a:	b298      	uxth	r0, r3
 801ad7c:	1215      	asrs	r5, r2, #8
 801ad7e:	43db      	mvns	r3, r3
 801ad80:	b2db      	uxtb	r3, r3
 801ad82:	0a34      	lsrs	r4, r6, #8
 801ad84:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ad88:	fb15 f503 	smulbb	r5, r5, r3
 801ad8c:	10d7      	asrs	r7, r2, #3
 801ad8e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ad92:	fb04 5400 	mla	r4, r4, r0, r5
 801ad96:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ad9a:	08f5      	lsrs	r5, r6, #3
 801ad9c:	fb17 f703 	smulbb	r7, r7, r3
 801ada0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ada4:	00d2      	lsls	r2, r2, #3
 801ada6:	fb05 7500 	mla	r5, r5, r0, r7
 801adaa:	b2d2      	uxtb	r2, r2
 801adac:	00f6      	lsls	r6, r6, #3
 801adae:	fb12 f303 	smulbb	r3, r2, r3
 801adb2:	b2ad      	uxth	r5, r5
 801adb4:	b2f6      	uxtb	r6, r6
 801adb6:	b2a4      	uxth	r4, r4
 801adb8:	fb06 3000 	mla	r0, r6, r0, r3
 801adbc:	1c6b      	adds	r3, r5, #1
 801adbe:	b280      	uxth	r0, r0
 801adc0:	1c62      	adds	r2, r4, #1
 801adc2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801adc6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801adca:	095b      	lsrs	r3, r3, #5
 801adcc:	1c42      	adds	r2, r0, #1
 801adce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801add2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801add6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801adda:	4323      	orrs	r3, r4
 801addc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ade0:	4303      	orrs	r3, r0
 801ade2:	800b      	strh	r3, [r1, #0]
 801ade4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ade8:	2d0f      	cmp	r5, #15
 801adea:	d88f      	bhi.n	801ad0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801adec:	463b      	mov	r3, r7
 801adee:	463c      	mov	r4, r7
 801adf0:	e7a6      	b.n	801ad40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801adf2:	bf00      	nop
 801adf4:	0801f4ba 	.word	0x0801f4ba
 801adf8:	0801fa79 	.word	0x0801fa79
 801adfc:	0801f5a3 	.word	0x0801f5a3
 801ae00:	20008998 	.word	0x20008998

0801ae04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae08:	ed2d 8b08 	vpush	{d8-d11}
 801ae0c:	b093      	sub	sp, #76	; 0x4c
 801ae0e:	461d      	mov	r5, r3
 801ae10:	920c      	str	r2, [sp, #48]	; 0x30
 801ae12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ae14:	9107      	str	r1, [sp, #28]
 801ae16:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ae1a:	9011      	str	r0, [sp, #68]	; 0x44
 801ae1c:	6850      	ldr	r0, [r2, #4]
 801ae1e:	6812      	ldr	r2, [r2, #0]
 801ae20:	fb00 1303 	mla	r3, r0, r3, r1
 801ae24:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ae28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae2a:	689b      	ldr	r3, [r3, #8]
 801ae2c:	3301      	adds	r3, #1
 801ae2e:	f023 0301 	bic.w	r3, r3, #1
 801ae32:	9306      	str	r3, [sp, #24]
 801ae34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae36:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ae3a:	681f      	ldr	r7, [r3, #0]
 801ae3c:	eeb0 aa40 	vmov.f32	s20, s0
 801ae40:	eef0 9a60 	vmov.f32	s19, s1
 801ae44:	eeb0 9a41 	vmov.f32	s18, s2
 801ae48:	eeb0 8a62 	vmov.f32	s16, s5
 801ae4c:	eef0 8a43 	vmov.f32	s17, s6
 801ae50:	eef0 ba44 	vmov.f32	s23, s8
 801ae54:	eeb0 ba64 	vmov.f32	s22, s9
 801ae58:	eef0 aa45 	vmov.f32	s21, s10
 801ae5c:	9b07      	ldr	r3, [sp, #28]
 801ae5e:	2b00      	cmp	r3, #0
 801ae60:	dc03      	bgt.n	801ae6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ae64:	2b00      	cmp	r3, #0
 801ae66:	f340 8261 	ble.w	801b32c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801ae6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ae74:	1e48      	subs	r0, r1, #1
 801ae76:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae7a:	2d00      	cmp	r5, #0
 801ae7c:	f340 80ef 	ble.w	801b05e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ae80:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ae84:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ae88:	d406      	bmi.n	801ae98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae8a:	4586      	cmp	lr, r0
 801ae8c:	da04      	bge.n	801ae98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae8e:	2b00      	cmp	r3, #0
 801ae90:	db02      	blt.n	801ae98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae92:	4563      	cmp	r3, ip
 801ae94:	f2c0 80e4 	blt.w	801b060 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801ae98:	f11e 0e01 	adds.w	lr, lr, #1
 801ae9c:	f100 80d7 	bmi.w	801b04e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801aea0:	4571      	cmp	r1, lr
 801aea2:	f2c0 80d4 	blt.w	801b04e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801aea6:	3301      	adds	r3, #1
 801aea8:	f100 80d1 	bmi.w	801b04e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801aeac:	429a      	cmp	r2, r3
 801aeae:	f2c0 80ce 	blt.w	801b04e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801aeb2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801aeb6:	9509      	str	r5, [sp, #36]	; 0x24
 801aeb8:	46c8      	mov	r8, r9
 801aeba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aebc:	2b00      	cmp	r3, #0
 801aebe:	f340 80ec 	ble.w	801b09a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801aec2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801aec6:	9308      	str	r3, [sp, #32]
 801aec8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aeca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801aece:	1423      	asrs	r3, r4, #16
 801aed0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801aed4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801aed8:	f100 813b 	bmi.w	801b152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801aedc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801aee0:	455b      	cmp	r3, fp
 801aee2:	f280 8136 	bge.w	801b152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801aee6:	2800      	cmp	r0, #0
 801aee8:	f2c0 8133 	blt.w	801b152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801aeec:	f10e 3bff 	add.w	fp, lr, #4294967295
 801aef0:	4558      	cmp	r0, fp
 801aef2:	f280 812e 	bge.w	801b152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801aef6:	9a06      	ldr	r2, [sp, #24]
 801aef8:	fb00 3302 	mla	r3, r0, r2, r3
 801aefc:	0858      	lsrs	r0, r3, #1
 801aefe:	07da      	lsls	r2, r3, #31
 801af00:	f817 c000 	ldrb.w	ip, [r7, r0]
 801af04:	9a08      	ldr	r2, [sp, #32]
 801af06:	bf54      	ite	pl
 801af08:	f00c 0c0f 	andpl.w	ip, ip, #15
 801af0c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801af10:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801af14:	fa5f fc8c 	uxtb.w	ip, ip
 801af18:	2a00      	cmp	r2, #0
 801af1a:	f000 8101 	beq.w	801b120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801af1e:	1c58      	adds	r0, r3, #1
 801af20:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801af24:	07c0      	lsls	r0, r0, #31
 801af26:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801af2a:	bf54      	ite	pl
 801af2c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801af30:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801af34:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801af38:	fa5f fe8e 	uxtb.w	lr, lr
 801af3c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801af40:	b1b9      	cbz	r1, 801af72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801af42:	4453      	add	r3, sl
 801af44:	0858      	lsrs	r0, r3, #1
 801af46:	07da      	lsls	r2, r3, #31
 801af48:	5c38      	ldrb	r0, [r7, r0]
 801af4a:	bf54      	ite	pl
 801af4c:	f000 000f 	andpl.w	r0, r0, #15
 801af50:	1100      	asrmi	r0, r0, #4
 801af52:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801af56:	b2c0      	uxtb	r0, r0
 801af58:	900a      	str	r0, [sp, #40]	; 0x28
 801af5a:	1c58      	adds	r0, r3, #1
 801af5c:	0843      	lsrs	r3, r0, #1
 801af5e:	07c2      	lsls	r2, r0, #31
 801af60:	5cfb      	ldrb	r3, [r7, r3]
 801af62:	bf54      	ite	pl
 801af64:	f003 030f 	andpl.w	r3, r3, #15
 801af68:	111b      	asrmi	r3, r3, #4
 801af6a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801af6e:	b2db      	uxtb	r3, r3
 801af70:	930e      	str	r3, [sp, #56]	; 0x38
 801af72:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801af76:	b289      	uxth	r1, r1
 801af78:	fb02 f301 	mul.w	r3, r2, r1
 801af7c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801af80:	0112      	lsls	r2, r2, #4
 801af82:	b289      	uxth	r1, r1
 801af84:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801af88:	1a40      	subs	r0, r0, r1
 801af8a:	fa1f fe80 	uxth.w	lr, r0
 801af8e:	1ad2      	subs	r2, r2, r3
 801af90:	980d      	ldr	r0, [sp, #52]	; 0x34
 801af92:	b292      	uxth	r2, r2
 801af94:	4342      	muls	r2, r0
 801af96:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801af9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af9c:	fb01 c102 	mla	r1, r1, r2, ip
 801afa0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801afa2:	fb03 1302 	mla	r3, r3, r2, r1
 801afa6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801afaa:	2b00      	cmp	r3, #0
 801afac:	d045      	beq.n	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801afae:	4a79      	ldr	r2, [pc, #484]	; (801b194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801afb0:	6811      	ldr	r1, [r2, #0]
 801afb2:	2bff      	cmp	r3, #255	; 0xff
 801afb4:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801afb8:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801afbc:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801afc0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801afc4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801afc8:	b2c9      	uxtb	r1, r1
 801afca:	f000 80ba 	beq.w	801b142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801afce:	f8b8 c000 	ldrh.w	ip, [r8]
 801afd2:	fa1f fb83 	uxth.w	fp, r3
 801afd6:	ea4f 202c 	mov.w	r0, ip, asr #8
 801afda:	43db      	mvns	r3, r3
 801afdc:	b2db      	uxtb	r3, r3
 801afde:	fb1e fe0b 	smulbb	lr, lr, fp
 801afe2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801afe6:	fb00 e003 	mla	r0, r0, r3, lr
 801afea:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801afee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801aff2:	fb12 f20b 	smulbb	r2, r2, fp
 801aff6:	fb0e 2203 	mla	r2, lr, r3, r2
 801affa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801affe:	b292      	uxth	r2, r2
 801b000:	fb11 f10b 	smulbb	r1, r1, fp
 801b004:	fa5f fc8c 	uxtb.w	ip, ip
 801b008:	b280      	uxth	r0, r0
 801b00a:	fb0c 1303 	mla	r3, ip, r3, r1
 801b00e:	f102 0e01 	add.w	lr, r2, #1
 801b012:	b29b      	uxth	r3, r3
 801b014:	1c41      	adds	r1, r0, #1
 801b016:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b01a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b01e:	0952      	lsrs	r2, r2, #5
 801b020:	1c59      	adds	r1, r3, #1
 801b022:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b026:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b02a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b02e:	4310      	orrs	r0, r2
 801b030:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b034:	4318      	orrs	r0, r3
 801b036:	f8a8 0000 	strh.w	r0, [r8]
 801b03a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b03c:	441c      	add	r4, r3
 801b03e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b040:	441e      	add	r6, r3
 801b042:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b044:	3b01      	subs	r3, #1
 801b046:	f108 0802 	add.w	r8, r8, #2
 801b04a:	9309      	str	r3, [sp, #36]	; 0x24
 801b04c:	e735      	b.n	801aeba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b04e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b050:	441c      	add	r4, r3
 801b052:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b054:	3d01      	subs	r5, #1
 801b056:	441e      	add	r6, r3
 801b058:	f109 0902 	add.w	r9, r9, #2
 801b05c:	e70d      	b.n	801ae7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b05e:	d020      	beq.n	801b0a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801b060:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b062:	1e6b      	subs	r3, r5, #1
 801b064:	fb00 4003 	mla	r0, r0, r3, r4
 801b068:	1400      	asrs	r0, r0, #16
 801b06a:	f53f af22 	bmi.w	801aeb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b06e:	3901      	subs	r1, #1
 801b070:	4288      	cmp	r0, r1
 801b072:	f6bf af1e 	bge.w	801aeb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b076:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b078:	fb01 6303 	mla	r3, r1, r3, r6
 801b07c:	141b      	asrs	r3, r3, #16
 801b07e:	f53f af18 	bmi.w	801aeb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b082:	3a01      	subs	r2, #1
 801b084:	4293      	cmp	r3, r2
 801b086:	f6bf af14 	bge.w	801aeb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b08a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b08e:	9308      	str	r3, [sp, #32]
 801b090:	46aa      	mov	sl, r5
 801b092:	46c8      	mov	r8, r9
 801b094:	f1ba 0f00 	cmp.w	sl, #0
 801b098:	dc7e      	bgt.n	801b198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b09a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b09e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b0a2:	9b07      	ldr	r3, [sp, #28]
 801b0a4:	2b00      	cmp	r3, #0
 801b0a6:	f340 8141 	ble.w	801b32c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801b0aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b0ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b0b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b0b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b0bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b0c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b0c4:	eef0 6a48 	vmov.f32	s13, s16
 801b0c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b0cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b0d4:	ee16 4a90 	vmov	r4, s13
 801b0d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b0dc:	eef0 6a68 	vmov.f32	s13, s17
 801b0e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b0e4:	ee18 2a10 	vmov	r2, s16
 801b0e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b0ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0f0:	ee18 2a90 	vmov	r2, s17
 801b0f4:	9327      	str	r3, [sp, #156]	; 0x9c
 801b0f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0fc:	9328      	str	r3, [sp, #160]	; 0xa0
 801b0fe:	9b07      	ldr	r3, [sp, #28]
 801b100:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b102:	3b01      	subs	r3, #1
 801b104:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b108:	9307      	str	r3, [sp, #28]
 801b10a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b10c:	ee16 6a90 	vmov	r6, s13
 801b110:	bf14      	ite	ne
 801b112:	461d      	movne	r5, r3
 801b114:	4615      	moveq	r5, r2
 801b116:	eef0 8a67 	vmov.f32	s17, s15
 801b11a:	eeb0 8a47 	vmov.f32	s16, s14
 801b11e:	e69d      	b.n	801ae5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b120:	2900      	cmp	r1, #0
 801b122:	f43f af26 	beq.w	801af72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b126:	eb0a 0003 	add.w	r0, sl, r3
 801b12a:	0843      	lsrs	r3, r0, #1
 801b12c:	07c0      	lsls	r0, r0, #31
 801b12e:	5cfb      	ldrb	r3, [r7, r3]
 801b130:	bf54      	ite	pl
 801b132:	f003 030f 	andpl.w	r3, r3, #15
 801b136:	111b      	asrmi	r3, r3, #4
 801b138:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b13c:	b2db      	uxtb	r3, r3
 801b13e:	930a      	str	r3, [sp, #40]	; 0x28
 801b140:	e717      	b.n	801af72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b142:	00d2      	lsls	r2, r2, #3
 801b144:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b148:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801b14c:	f8a8 1000 	strh.w	r1, [r8]
 801b150:	e773      	b.n	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b152:	f113 0b01 	adds.w	fp, r3, #1
 801b156:	f53f af70 	bmi.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b15a:	45dc      	cmp	ip, fp
 801b15c:	f6ff af6d 	blt.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b160:	f110 0b01 	adds.w	fp, r0, #1
 801b164:	f53f af69 	bmi.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b168:	45de      	cmp	lr, fp
 801b16a:	f6ff af66 	blt.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b16e:	9a08      	ldr	r2, [sp, #32]
 801b170:	9302      	str	r3, [sp, #8]
 801b172:	fa0f f38e 	sxth.w	r3, lr
 801b176:	9301      	str	r3, [sp, #4]
 801b178:	fa0f f38c 	sxth.w	r3, ip
 801b17c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b180:	9105      	str	r1, [sp, #20]
 801b182:	9300      	str	r3, [sp, #0]
 801b184:	463a      	mov	r2, r7
 801b186:	4653      	mov	r3, sl
 801b188:	4641      	mov	r1, r8
 801b18a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b18c:	f7ff fd56 	bl	801ac3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b190:	e753      	b.n	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b192:	bf00      	nop
 801b194:	20008998 	.word	0x20008998
 801b198:	9906      	ldr	r1, [sp, #24]
 801b19a:	1422      	asrs	r2, r4, #16
 801b19c:	1433      	asrs	r3, r6, #16
 801b19e:	fb01 2303 	mla	r3, r1, r3, r2
 801b1a2:	085a      	lsrs	r2, r3, #1
 801b1a4:	07d9      	lsls	r1, r3, #31
 801b1a6:	5cba      	ldrb	r2, [r7, r2]
 801b1a8:	bf54      	ite	pl
 801b1aa:	f002 020f 	andpl.w	r2, r2, #15
 801b1ae:	1112      	asrmi	r2, r2, #4
 801b1b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b1b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b1b8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b1bc:	b2d2      	uxtb	r2, r2
 801b1be:	2800      	cmp	r0, #0
 801b1c0:	f000 809b 	beq.w	801b2fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801b1c4:	f103 0e01 	add.w	lr, r3, #1
 801b1c8:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801b1cc:	f01e 0f01 	tst.w	lr, #1
 801b1d0:	5c79      	ldrb	r1, [r7, r1]
 801b1d2:	bf0c      	ite	eq
 801b1d4:	f001 010f 	andeq.w	r1, r1, #15
 801b1d8:	1109      	asrne	r1, r1, #4
 801b1da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b1de:	b2c9      	uxtb	r1, r1
 801b1e0:	910f      	str	r1, [sp, #60]	; 0x3c
 801b1e2:	f1bc 0f00 	cmp.w	ip, #0
 801b1e6:	d019      	beq.n	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b1e8:	9908      	ldr	r1, [sp, #32]
 801b1ea:	440b      	add	r3, r1
 801b1ec:	0859      	lsrs	r1, r3, #1
 801b1ee:	f013 0f01 	tst.w	r3, #1
 801b1f2:	5c79      	ldrb	r1, [r7, r1]
 801b1f4:	bf0c      	ite	eq
 801b1f6:	f001 010f 	andeq.w	r1, r1, #15
 801b1fa:	1109      	asrne	r1, r1, #4
 801b1fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b200:	b2c9      	uxtb	r1, r1
 801b202:	3301      	adds	r3, #1
 801b204:	910b      	str	r1, [sp, #44]	; 0x2c
 801b206:	0859      	lsrs	r1, r3, #1
 801b208:	07db      	lsls	r3, r3, #31
 801b20a:	5c79      	ldrb	r1, [r7, r1]
 801b20c:	bf54      	ite	pl
 801b20e:	f001 010f 	andpl.w	r1, r1, #15
 801b212:	1109      	asrmi	r1, r1, #4
 801b214:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b218:	b2c9      	uxtb	r1, r1
 801b21a:	9110      	str	r1, [sp, #64]	; 0x40
 801b21c:	b280      	uxth	r0, r0
 801b21e:	fa1f fc8c 	uxth.w	ip, ip
 801b222:	fb00 f30c 	mul.w	r3, r0, ip
 801b226:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b22a:	0100      	lsls	r0, r0, #4
 801b22c:	fa1f fc8c 	uxth.w	ip, ip
 801b230:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b234:	eba1 010c 	sub.w	r1, r1, ip
 801b238:	fa1f fe81 	uxth.w	lr, r1
 801b23c:	1ac0      	subs	r0, r0, r3
 801b23e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b240:	b280      	uxth	r0, r0
 801b242:	4348      	muls	r0, r1
 801b244:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b246:	fb02 020e 	mla	r2, r2, lr, r0
 801b24a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b24e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b250:	fb03 c302 	mla	r3, r3, r2, ip
 801b254:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b258:	2b00      	cmp	r3, #0
 801b25a:	d045      	beq.n	801b2e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b25c:	4a36      	ldr	r2, [pc, #216]	; (801b338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801b25e:	6811      	ldr	r1, [r2, #0]
 801b260:	2bff      	cmp	r3, #255	; 0xff
 801b262:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801b266:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801b26a:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801b26e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b272:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b276:	b2c9      	uxtb	r1, r1
 801b278:	d050      	beq.n	801b31c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801b27a:	f8b8 c000 	ldrh.w	ip, [r8]
 801b27e:	fa1f fb83 	uxth.w	fp, r3
 801b282:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b286:	43db      	mvns	r3, r3
 801b288:	b2db      	uxtb	r3, r3
 801b28a:	fb1e fe0b 	smulbb	lr, lr, fp
 801b28e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b292:	fb00 e003 	mla	r0, r0, r3, lr
 801b296:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801b29a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b29e:	fb12 f20b 	smulbb	r2, r2, fp
 801b2a2:	fb0e 2203 	mla	r2, lr, r3, r2
 801b2a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b2aa:	b292      	uxth	r2, r2
 801b2ac:	fa5f fc8c 	uxtb.w	ip, ip
 801b2b0:	fb11 f10b 	smulbb	r1, r1, fp
 801b2b4:	b280      	uxth	r0, r0
 801b2b6:	fb0c 1103 	mla	r1, ip, r3, r1
 801b2ba:	f102 0e01 	add.w	lr, r2, #1
 801b2be:	b289      	uxth	r1, r1
 801b2c0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b2c4:	f100 0e01 	add.w	lr, r0, #1
 801b2c8:	0952      	lsrs	r2, r2, #5
 801b2ca:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b2ce:	1c4b      	adds	r3, r1, #1
 801b2d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2d4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b2d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b2dc:	4302      	orrs	r2, r0
 801b2de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b2e2:	430a      	orrs	r2, r1
 801b2e4:	f8a8 2000 	strh.w	r2, [r8]
 801b2e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b2ea:	441c      	add	r4, r3
 801b2ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b2ee:	f108 0802 	add.w	r8, r8, #2
 801b2f2:	441e      	add	r6, r3
 801b2f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b2f8:	e6cc      	b.n	801b094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b2fa:	f1bc 0f00 	cmp.w	ip, #0
 801b2fe:	d08d      	beq.n	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b300:	9908      	ldr	r1, [sp, #32]
 801b302:	440b      	add	r3, r1
 801b304:	0859      	lsrs	r1, r3, #1
 801b306:	07db      	lsls	r3, r3, #31
 801b308:	5c79      	ldrb	r1, [r7, r1]
 801b30a:	bf54      	ite	pl
 801b30c:	f001 010f 	andpl.w	r1, r1, #15
 801b310:	1109      	asrmi	r1, r1, #4
 801b312:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b316:	b2c9      	uxtb	r1, r1
 801b318:	910b      	str	r1, [sp, #44]	; 0x2c
 801b31a:	e77f      	b.n	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801b31c:	00d2      	lsls	r2, r2, #3
 801b31e:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b322:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801b326:	f8a8 1000 	strh.w	r1, [r8]
 801b32a:	e7dd      	b.n	801b2e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b32c:	b013      	add	sp, #76	; 0x4c
 801b32e:	ecbd 8b08 	vpop	{d8-d11}
 801b332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b336:	bf00      	nop
 801b338:	20008998 	.word	0x20008998

0801b33c <CRC_Lock>:
 801b33c:	b530      	push	{r4, r5, lr}
 801b33e:	4a1d      	ldr	r2, [pc, #116]	; (801b3b4 <CRC_Lock+0x78>)
 801b340:	6813      	ldr	r3, [r2, #0]
 801b342:	f023 0301 	bic.w	r3, r3, #1
 801b346:	6013      	str	r3, [r2, #0]
 801b348:	4b1b      	ldr	r3, [pc, #108]	; (801b3b8 <CRC_Lock+0x7c>)
 801b34a:	681a      	ldr	r2, [r3, #0]
 801b34c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b350:	4022      	ands	r2, r4
 801b352:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b356:	42aa      	cmp	r2, r5
 801b358:	d005      	beq.n	801b366 <CRC_Lock+0x2a>
 801b35a:	681b      	ldr	r3, [r3, #0]
 801b35c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b360:	4023      	ands	r3, r4
 801b362:	4293      	cmp	r3, r2
 801b364:	d11d      	bne.n	801b3a2 <CRC_Lock+0x66>
 801b366:	4b15      	ldr	r3, [pc, #84]	; (801b3bc <CRC_Lock+0x80>)
 801b368:	681b      	ldr	r3, [r3, #0]
 801b36a:	b9d3      	cbnz	r3, 801b3a2 <CRC_Lock+0x66>
 801b36c:	4a14      	ldr	r2, [pc, #80]	; (801b3c0 <CRC_Lock+0x84>)
 801b36e:	6813      	ldr	r3, [r2, #0]
 801b370:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b374:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801b378:	d006      	beq.n	801b388 <CRC_Lock+0x4c>
 801b37a:	6813      	ldr	r3, [r2, #0]
 801b37c:	f240 4283 	movw	r2, #1155	; 0x483
 801b380:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b384:	4293      	cmp	r3, r2
 801b386:	d10c      	bne.n	801b3a2 <CRC_Lock+0x66>
 801b388:	4b0e      	ldr	r3, [pc, #56]	; (801b3c4 <CRC_Lock+0x88>)
 801b38a:	2201      	movs	r2, #1
 801b38c:	601a      	str	r2, [r3, #0]
 801b38e:	681a      	ldr	r2, [r3, #0]
 801b390:	2a00      	cmp	r2, #0
 801b392:	d1fc      	bne.n	801b38e <CRC_Lock+0x52>
 801b394:	4b0c      	ldr	r3, [pc, #48]	; (801b3c8 <CRC_Lock+0x8c>)
 801b396:	6018      	str	r0, [r3, #0]
 801b398:	6818      	ldr	r0, [r3, #0]
 801b39a:	1a43      	subs	r3, r0, r1
 801b39c:	4258      	negs	r0, r3
 801b39e:	4158      	adcs	r0, r3
 801b3a0:	bd30      	pop	{r4, r5, pc}
 801b3a2:	4b0a      	ldr	r3, [pc, #40]	; (801b3cc <CRC_Lock+0x90>)
 801b3a4:	2201      	movs	r2, #1
 801b3a6:	601a      	str	r2, [r3, #0]
 801b3a8:	681a      	ldr	r2, [r3, #0]
 801b3aa:	2a00      	cmp	r2, #0
 801b3ac:	d1fc      	bne.n	801b3a8 <CRC_Lock+0x6c>
 801b3ae:	4b08      	ldr	r3, [pc, #32]	; (801b3d0 <CRC_Lock+0x94>)
 801b3b0:	e7f1      	b.n	801b396 <CRC_Lock+0x5a>
 801b3b2:	bf00      	nop
 801b3b4:	e0002000 	.word	0xe0002000
 801b3b8:	e000ed00 	.word	0xe000ed00
 801b3bc:	e0042000 	.word	0xe0042000
 801b3c0:	5c001000 	.word	0x5c001000
 801b3c4:	58024c08 	.word	0x58024c08
 801b3c8:	58024c00 	.word	0x58024c00
 801b3cc:	40023008 	.word	0x40023008
 801b3d0:	40023000 	.word	0x40023000

0801b3d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b3d4:	6101      	str	r1, [r0, #16]
 801b3d6:	4770      	bx	lr

0801b3d8 <_ZN8touchgfx8Gestures4tickEv>:
 801b3d8:	7b83      	ldrb	r3, [r0, #14]
 801b3da:	b14b      	cbz	r3, 801b3f0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b3dc:	8903      	ldrh	r3, [r0, #8]
 801b3de:	3301      	adds	r3, #1
 801b3e0:	b29b      	uxth	r3, r3
 801b3e2:	2b07      	cmp	r3, #7
 801b3e4:	8103      	strh	r3, [r0, #8]
 801b3e6:	bf81      	itttt	hi
 801b3e8:	2300      	movhi	r3, #0
 801b3ea:	8143      	strhhi	r3, [r0, #10]
 801b3ec:	8183      	strhhi	r3, [r0, #12]
 801b3ee:	7383      	strbhi	r3, [r0, #14]
 801b3f0:	4770      	bx	lr
	...

0801b3f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b3f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b3f8:	4604      	mov	r4, r0
 801b3fa:	8880      	ldrh	r0, [r0, #4]
 801b3fc:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b400:	4698      	mov	r8, r3
 801b402:	eba8 0000 	sub.w	r0, r8, r0
 801b406:	4b1c      	ldr	r3, [pc, #112]	; (801b478 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b408:	9300      	str	r3, [sp, #0]
 801b40a:	b280      	uxth	r0, r0
 801b40c:	2300      	movs	r3, #0
 801b40e:	f88d 3004 	strb.w	r3, [sp, #4]
 801b412:	b203      	sxth	r3, r0
 801b414:	2b00      	cmp	r3, #0
 801b416:	bfb8      	it	lt
 801b418:	4240      	neglt	r0, r0
 801b41a:	4617      	mov	r7, r2
 801b41c:	8aa2      	ldrh	r2, [r4, #20]
 801b41e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b422:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b426:	bfb8      	it	lt
 801b428:	b203      	sxthlt	r3, r0
 801b42a:	460e      	mov	r6, r1
 801b42c:	4293      	cmp	r3, r2
 801b42e:	88e1      	ldrh	r1, [r4, #6]
 801b430:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b434:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b438:	dc08      	bgt.n	801b44c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b43a:	1a69      	subs	r1, r5, r1
 801b43c:	b289      	uxth	r1, r1
 801b43e:	b20b      	sxth	r3, r1
 801b440:	2b00      	cmp	r3, #0
 801b442:	bfbc      	itt	lt
 801b444:	4249      	neglt	r1, r1
 801b446:	b20b      	sxthlt	r3, r1
 801b448:	429a      	cmp	r2, r3
 801b44a:	da13      	bge.n	801b474 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b44c:	6920      	ldr	r0, [r4, #16]
 801b44e:	6803      	ldr	r3, [r0, #0]
 801b450:	4669      	mov	r1, sp
 801b452:	685b      	ldr	r3, [r3, #4]
 801b454:	4798      	blx	r3
 801b456:	eba8 0606 	sub.w	r6, r8, r6
 801b45a:	2300      	movs	r3, #0
 801b45c:	1bef      	subs	r7, r5, r7
 801b45e:	2001      	movs	r0, #1
 801b460:	8123      	strh	r3, [r4, #8]
 801b462:	8166      	strh	r6, [r4, #10]
 801b464:	81a7      	strh	r7, [r4, #12]
 801b466:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b46a:	80e5      	strh	r5, [r4, #6]
 801b46c:	73a0      	strb	r0, [r4, #14]
 801b46e:	b004      	add	sp, #16
 801b470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b474:	2000      	movs	r0, #0
 801b476:	e7fa      	b.n	801b46e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b478:	0801e938 	.word	0x0801e938

0801b47c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b47c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b47e:	461e      	mov	r6, r3
 801b480:	1e4b      	subs	r3, r1, #1
 801b482:	2b01      	cmp	r3, #1
 801b484:	b085      	sub	sp, #20
 801b486:	4604      	mov	r4, r0
 801b488:	460d      	mov	r5, r1
 801b48a:	4617      	mov	r7, r2
 801b48c:	d84b      	bhi.n	801b526 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b48e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b492:	1cd3      	adds	r3, r2, #3
 801b494:	b29b      	uxth	r3, r3
 801b496:	2b06      	cmp	r3, #6
 801b498:	d916      	bls.n	801b4c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b49a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b53c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b49e:	f8cd c004 	str.w	ip, [sp, #4]
 801b4a2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b4a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b4aa:	6900      	ldr	r0, [r0, #16]
 801b4ac:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b4b0:	f04f 0c00 	mov.w	ip, #0
 801b4b4:	f88d c008 	strb.w	ip, [sp, #8]
 801b4b8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b4bc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b4c0:	6803      	ldr	r3, [r0, #0]
 801b4c2:	a901      	add	r1, sp, #4
 801b4c4:	689b      	ldr	r3, [r3, #8]
 801b4c6:	4798      	blx	r3
 801b4c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b4cc:	1cd3      	adds	r3, r2, #3
 801b4ce:	b29b      	uxth	r3, r3
 801b4d0:	2b06      	cmp	r3, #6
 801b4d2:	d916      	bls.n	801b502 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b4d4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b53c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b4d8:	f8cd c004 	str.w	ip, [sp, #4]
 801b4dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b4e0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b4e4:	6920      	ldr	r0, [r4, #16]
 801b4e6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b4ea:	f04f 0c01 	mov.w	ip, #1
 801b4ee:	f88d c008 	strb.w	ip, [sp, #8]
 801b4f2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b4f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b4fa:	6803      	ldr	r3, [r0, #0]
 801b4fc:	a901      	add	r1, sp, #4
 801b4fe:	689b      	ldr	r3, [r3, #8]
 801b500:	4798      	blx	r3
 801b502:	4b0d      	ldr	r3, [pc, #52]	; (801b538 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b504:	9301      	str	r3, [sp, #4]
 801b506:	6920      	ldr	r0, [r4, #16]
 801b508:	f88d 5008 	strb.w	r5, [sp, #8]
 801b50c:	2300      	movs	r3, #0
 801b50e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b512:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b516:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b51a:	6803      	ldr	r3, [r0, #0]
 801b51c:	a901      	add	r1, sp, #4
 801b51e:	681b      	ldr	r3, [r3, #0]
 801b520:	4798      	blx	r3
 801b522:	b005      	add	sp, #20
 801b524:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b526:	2900      	cmp	r1, #0
 801b528:	d1eb      	bne.n	801b502 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b52a:	80a2      	strh	r2, [r4, #4]
 801b52c:	80c6      	strh	r6, [r0, #6]
 801b52e:	60a1      	str	r1, [r4, #8]
 801b530:	81a1      	strh	r1, [r4, #12]
 801b532:	73a1      	strb	r1, [r4, #14]
 801b534:	e7e5      	b.n	801b502 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b536:	bf00      	nop
 801b538:	0801e924 	.word	0x0801e924
 801b53c:	0801e94c 	.word	0x0801e94c

0801b540 <__aeabi_atexit>:
 801b540:	460b      	mov	r3, r1
 801b542:	4601      	mov	r1, r0
 801b544:	4618      	mov	r0, r3
 801b546:	f000 b853 	b.w	801b5f0 <__cxa_atexit>

0801b54a <__cxa_pure_virtual>:
 801b54a:	b508      	push	{r3, lr}
 801b54c:	f000 f820 	bl	801b590 <_ZSt9terminatev>

0801b550 <_ZdlPvj>:
 801b550:	f000 b80f 	b.w	801b572 <_ZdlPv>

0801b554 <__cxa_guard_acquire>:
 801b554:	6803      	ldr	r3, [r0, #0]
 801b556:	07db      	lsls	r3, r3, #31
 801b558:	d406      	bmi.n	801b568 <__cxa_guard_acquire+0x14>
 801b55a:	7843      	ldrb	r3, [r0, #1]
 801b55c:	b103      	cbz	r3, 801b560 <__cxa_guard_acquire+0xc>
 801b55e:	deff      	udf	#255	; 0xff
 801b560:	2301      	movs	r3, #1
 801b562:	7043      	strb	r3, [r0, #1]
 801b564:	4618      	mov	r0, r3
 801b566:	4770      	bx	lr
 801b568:	2000      	movs	r0, #0
 801b56a:	4770      	bx	lr

0801b56c <__cxa_guard_release>:
 801b56c:	2301      	movs	r3, #1
 801b56e:	6003      	str	r3, [r0, #0]
 801b570:	4770      	bx	lr

0801b572 <_ZdlPv>:
 801b572:	f000 b88f 	b.w	801b694 <free>

0801b576 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b576:	b508      	push	{r3, lr}
 801b578:	4780      	blx	r0
 801b57a:	f000 f80e 	bl	801b59a <abort>
	...

0801b580 <_ZSt13get_terminatev>:
 801b580:	4b02      	ldr	r3, [pc, #8]	; (801b58c <_ZSt13get_terminatev+0xc>)
 801b582:	6818      	ldr	r0, [r3, #0]
 801b584:	f3bf 8f5b 	dmb	ish
 801b588:	4770      	bx	lr
 801b58a:	bf00      	nop
 801b58c:	2000008c 	.word	0x2000008c

0801b590 <_ZSt9terminatev>:
 801b590:	b508      	push	{r3, lr}
 801b592:	f7ff fff5 	bl	801b580 <_ZSt13get_terminatev>
 801b596:	f7ff ffee 	bl	801b576 <_ZN10__cxxabiv111__terminateEPFvvE>

0801b59a <abort>:
 801b59a:	b508      	push	{r3, lr}
 801b59c:	2006      	movs	r0, #6
 801b59e:	f000 fc3d 	bl	801be1c <raise>
 801b5a2:	2001      	movs	r0, #1
 801b5a4:	f7e5 fdce 	bl	8001144 <_exit>

0801b5a8 <__assert_func>:
 801b5a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b5aa:	461c      	mov	r4, r3
 801b5ac:	4b09      	ldr	r3, [pc, #36]	; (801b5d4 <__assert_func+0x2c>)
 801b5ae:	681b      	ldr	r3, [r3, #0]
 801b5b0:	4605      	mov	r5, r0
 801b5b2:	68d8      	ldr	r0, [r3, #12]
 801b5b4:	b152      	cbz	r2, 801b5cc <__assert_func+0x24>
 801b5b6:	4b08      	ldr	r3, [pc, #32]	; (801b5d8 <__assert_func+0x30>)
 801b5b8:	9100      	str	r1, [sp, #0]
 801b5ba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801b5be:	4907      	ldr	r1, [pc, #28]	; (801b5dc <__assert_func+0x34>)
 801b5c0:	462b      	mov	r3, r5
 801b5c2:	4622      	mov	r2, r4
 801b5c4:	f000 f828 	bl	801b618 <fiprintf>
 801b5c8:	f7ff ffe7 	bl	801b59a <abort>
 801b5cc:	4b04      	ldr	r3, [pc, #16]	; (801b5e0 <__assert_func+0x38>)
 801b5ce:	461a      	mov	r2, r3
 801b5d0:	e7f2      	b.n	801b5b8 <__assert_func+0x10>
 801b5d2:	bf00      	nop
 801b5d4:	20000090 	.word	0x20000090
 801b5d8:	0801fd13 	.word	0x0801fd13
 801b5dc:	0801fd20 	.word	0x0801fd20
 801b5e0:	0801fd4e 	.word	0x0801fd4e

0801b5e4 <atexit>:
 801b5e4:	2300      	movs	r3, #0
 801b5e6:	4601      	mov	r1, r0
 801b5e8:	461a      	mov	r2, r3
 801b5ea:	4618      	mov	r0, r3
 801b5ec:	f000 bcf2 	b.w	801bfd4 <__register_exitproc>

0801b5f0 <__cxa_atexit>:
 801b5f0:	b510      	push	{r4, lr}
 801b5f2:	4c05      	ldr	r4, [pc, #20]	; (801b608 <__cxa_atexit+0x18>)
 801b5f4:	4613      	mov	r3, r2
 801b5f6:	b12c      	cbz	r4, 801b604 <__cxa_atexit+0x14>
 801b5f8:	460a      	mov	r2, r1
 801b5fa:	4601      	mov	r1, r0
 801b5fc:	2002      	movs	r0, #2
 801b5fe:	f000 fce9 	bl	801bfd4 <__register_exitproc>
 801b602:	bd10      	pop	{r4, pc}
 801b604:	4620      	mov	r0, r4
 801b606:	e7fc      	b.n	801b602 <__cxa_atexit+0x12>
 801b608:	0801bfd5 	.word	0x0801bfd5

0801b60c <__errno>:
 801b60c:	4b01      	ldr	r3, [pc, #4]	; (801b614 <__errno+0x8>)
 801b60e:	6818      	ldr	r0, [r3, #0]
 801b610:	4770      	bx	lr
 801b612:	bf00      	nop
 801b614:	20000090 	.word	0x20000090

0801b618 <fiprintf>:
 801b618:	b40e      	push	{r1, r2, r3}
 801b61a:	b503      	push	{r0, r1, lr}
 801b61c:	4601      	mov	r1, r0
 801b61e:	ab03      	add	r3, sp, #12
 801b620:	4805      	ldr	r0, [pc, #20]	; (801b638 <fiprintf+0x20>)
 801b622:	f853 2b04 	ldr.w	r2, [r3], #4
 801b626:	6800      	ldr	r0, [r0, #0]
 801b628:	9301      	str	r3, [sp, #4]
 801b62a:	f000 f921 	bl	801b870 <_vfiprintf_r>
 801b62e:	b002      	add	sp, #8
 801b630:	f85d eb04 	ldr.w	lr, [sp], #4
 801b634:	b003      	add	sp, #12
 801b636:	4770      	bx	lr
 801b638:	20000090 	.word	0x20000090

0801b63c <__libc_init_array>:
 801b63c:	b570      	push	{r4, r5, r6, lr}
 801b63e:	4e0d      	ldr	r6, [pc, #52]	; (801b674 <__libc_init_array+0x38>)
 801b640:	4c0d      	ldr	r4, [pc, #52]	; (801b678 <__libc_init_array+0x3c>)
 801b642:	1ba4      	subs	r4, r4, r6
 801b644:	10a4      	asrs	r4, r4, #2
 801b646:	2500      	movs	r5, #0
 801b648:	42a5      	cmp	r5, r4
 801b64a:	d109      	bne.n	801b660 <__libc_init_array+0x24>
 801b64c:	4e0b      	ldr	r6, [pc, #44]	; (801b67c <__libc_init_array+0x40>)
 801b64e:	4c0c      	ldr	r4, [pc, #48]	; (801b680 <__libc_init_array+0x44>)
 801b650:	f000 ffb0 	bl	801c5b4 <_init>
 801b654:	1ba4      	subs	r4, r4, r6
 801b656:	10a4      	asrs	r4, r4, #2
 801b658:	2500      	movs	r5, #0
 801b65a:	42a5      	cmp	r5, r4
 801b65c:	d105      	bne.n	801b66a <__libc_init_array+0x2e>
 801b65e:	bd70      	pop	{r4, r5, r6, pc}
 801b660:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b664:	4798      	blx	r3
 801b666:	3501      	adds	r5, #1
 801b668:	e7ee      	b.n	801b648 <__libc_init_array+0xc>
 801b66a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b66e:	4798      	blx	r3
 801b670:	3501      	adds	r5, #1
 801b672:	e7f2      	b.n	801b65a <__libc_init_array+0x1e>
 801b674:	08059954 	.word	0x08059954
 801b678:	08059954 	.word	0x08059954
 801b67c:	08059954 	.word	0x08059954
 801b680:	08059968 	.word	0x08059968

0801b684 <malloc>:
 801b684:	4b02      	ldr	r3, [pc, #8]	; (801b690 <malloc+0xc>)
 801b686:	4601      	mov	r1, r0
 801b688:	6818      	ldr	r0, [r3, #0]
 801b68a:	f000 b86d 	b.w	801b768 <_malloc_r>
 801b68e:	bf00      	nop
 801b690:	20000090 	.word	0x20000090

0801b694 <free>:
 801b694:	4b02      	ldr	r3, [pc, #8]	; (801b6a0 <free+0xc>)
 801b696:	4601      	mov	r1, r0
 801b698:	6818      	ldr	r0, [r3, #0]
 801b69a:	f000 b817 	b.w	801b6cc <_free_r>
 801b69e:	bf00      	nop
 801b6a0:	20000090 	.word	0x20000090

0801b6a4 <memcpy>:
 801b6a4:	b510      	push	{r4, lr}
 801b6a6:	1e43      	subs	r3, r0, #1
 801b6a8:	440a      	add	r2, r1
 801b6aa:	4291      	cmp	r1, r2
 801b6ac:	d100      	bne.n	801b6b0 <memcpy+0xc>
 801b6ae:	bd10      	pop	{r4, pc}
 801b6b0:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b6b4:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b6b8:	e7f7      	b.n	801b6aa <memcpy+0x6>

0801b6ba <memset>:
 801b6ba:	4402      	add	r2, r0
 801b6bc:	4603      	mov	r3, r0
 801b6be:	4293      	cmp	r3, r2
 801b6c0:	d100      	bne.n	801b6c4 <memset+0xa>
 801b6c2:	4770      	bx	lr
 801b6c4:	f803 1b01 	strb.w	r1, [r3], #1
 801b6c8:	e7f9      	b.n	801b6be <memset+0x4>
	...

0801b6cc <_free_r>:
 801b6cc:	b538      	push	{r3, r4, r5, lr}
 801b6ce:	4605      	mov	r5, r0
 801b6d0:	2900      	cmp	r1, #0
 801b6d2:	d045      	beq.n	801b760 <_free_r+0x94>
 801b6d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b6d8:	1f0c      	subs	r4, r1, #4
 801b6da:	2b00      	cmp	r3, #0
 801b6dc:	bfb8      	it	lt
 801b6de:	18e4      	addlt	r4, r4, r3
 801b6e0:	f000 feba 	bl	801c458 <__malloc_lock>
 801b6e4:	4a1f      	ldr	r2, [pc, #124]	; (801b764 <_free_r+0x98>)
 801b6e6:	6813      	ldr	r3, [r2, #0]
 801b6e8:	4610      	mov	r0, r2
 801b6ea:	b933      	cbnz	r3, 801b6fa <_free_r+0x2e>
 801b6ec:	6063      	str	r3, [r4, #4]
 801b6ee:	6014      	str	r4, [r2, #0]
 801b6f0:	4628      	mov	r0, r5
 801b6f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b6f6:	f000 beb0 	b.w	801c45a <__malloc_unlock>
 801b6fa:	42a3      	cmp	r3, r4
 801b6fc:	d90c      	bls.n	801b718 <_free_r+0x4c>
 801b6fe:	6821      	ldr	r1, [r4, #0]
 801b700:	1862      	adds	r2, r4, r1
 801b702:	4293      	cmp	r3, r2
 801b704:	bf04      	itt	eq
 801b706:	681a      	ldreq	r2, [r3, #0]
 801b708:	685b      	ldreq	r3, [r3, #4]
 801b70a:	6063      	str	r3, [r4, #4]
 801b70c:	bf04      	itt	eq
 801b70e:	1852      	addeq	r2, r2, r1
 801b710:	6022      	streq	r2, [r4, #0]
 801b712:	6004      	str	r4, [r0, #0]
 801b714:	e7ec      	b.n	801b6f0 <_free_r+0x24>
 801b716:	4613      	mov	r3, r2
 801b718:	685a      	ldr	r2, [r3, #4]
 801b71a:	b10a      	cbz	r2, 801b720 <_free_r+0x54>
 801b71c:	42a2      	cmp	r2, r4
 801b71e:	d9fa      	bls.n	801b716 <_free_r+0x4a>
 801b720:	6819      	ldr	r1, [r3, #0]
 801b722:	1858      	adds	r0, r3, r1
 801b724:	42a0      	cmp	r0, r4
 801b726:	d10b      	bne.n	801b740 <_free_r+0x74>
 801b728:	6820      	ldr	r0, [r4, #0]
 801b72a:	4401      	add	r1, r0
 801b72c:	1858      	adds	r0, r3, r1
 801b72e:	4282      	cmp	r2, r0
 801b730:	6019      	str	r1, [r3, #0]
 801b732:	d1dd      	bne.n	801b6f0 <_free_r+0x24>
 801b734:	6810      	ldr	r0, [r2, #0]
 801b736:	6852      	ldr	r2, [r2, #4]
 801b738:	605a      	str	r2, [r3, #4]
 801b73a:	4401      	add	r1, r0
 801b73c:	6019      	str	r1, [r3, #0]
 801b73e:	e7d7      	b.n	801b6f0 <_free_r+0x24>
 801b740:	d902      	bls.n	801b748 <_free_r+0x7c>
 801b742:	230c      	movs	r3, #12
 801b744:	602b      	str	r3, [r5, #0]
 801b746:	e7d3      	b.n	801b6f0 <_free_r+0x24>
 801b748:	6820      	ldr	r0, [r4, #0]
 801b74a:	1821      	adds	r1, r4, r0
 801b74c:	428a      	cmp	r2, r1
 801b74e:	bf04      	itt	eq
 801b750:	6811      	ldreq	r1, [r2, #0]
 801b752:	6852      	ldreq	r2, [r2, #4]
 801b754:	6062      	str	r2, [r4, #4]
 801b756:	bf04      	itt	eq
 801b758:	1809      	addeq	r1, r1, r0
 801b75a:	6021      	streq	r1, [r4, #0]
 801b75c:	605c      	str	r4, [r3, #4]
 801b75e:	e7c7      	b.n	801b6f0 <_free_r+0x24>
 801b760:	bd38      	pop	{r3, r4, r5, pc}
 801b762:	bf00      	nop
 801b764:	20008a8c 	.word	0x20008a8c

0801b768 <_malloc_r>:
 801b768:	b570      	push	{r4, r5, r6, lr}
 801b76a:	1ccd      	adds	r5, r1, #3
 801b76c:	f025 0503 	bic.w	r5, r5, #3
 801b770:	3508      	adds	r5, #8
 801b772:	2d0c      	cmp	r5, #12
 801b774:	bf38      	it	cc
 801b776:	250c      	movcc	r5, #12
 801b778:	2d00      	cmp	r5, #0
 801b77a:	4606      	mov	r6, r0
 801b77c:	db01      	blt.n	801b782 <_malloc_r+0x1a>
 801b77e:	42a9      	cmp	r1, r5
 801b780:	d903      	bls.n	801b78a <_malloc_r+0x22>
 801b782:	230c      	movs	r3, #12
 801b784:	6033      	str	r3, [r6, #0]
 801b786:	2000      	movs	r0, #0
 801b788:	bd70      	pop	{r4, r5, r6, pc}
 801b78a:	f000 fe65 	bl	801c458 <__malloc_lock>
 801b78e:	4a21      	ldr	r2, [pc, #132]	; (801b814 <_malloc_r+0xac>)
 801b790:	6814      	ldr	r4, [r2, #0]
 801b792:	4621      	mov	r1, r4
 801b794:	b991      	cbnz	r1, 801b7bc <_malloc_r+0x54>
 801b796:	4c20      	ldr	r4, [pc, #128]	; (801b818 <_malloc_r+0xb0>)
 801b798:	6823      	ldr	r3, [r4, #0]
 801b79a:	b91b      	cbnz	r3, 801b7a4 <_malloc_r+0x3c>
 801b79c:	4630      	mov	r0, r6
 801b79e:	f000 fb05 	bl	801bdac <_sbrk_r>
 801b7a2:	6020      	str	r0, [r4, #0]
 801b7a4:	4629      	mov	r1, r5
 801b7a6:	4630      	mov	r0, r6
 801b7a8:	f000 fb00 	bl	801bdac <_sbrk_r>
 801b7ac:	1c43      	adds	r3, r0, #1
 801b7ae:	d124      	bne.n	801b7fa <_malloc_r+0x92>
 801b7b0:	230c      	movs	r3, #12
 801b7b2:	6033      	str	r3, [r6, #0]
 801b7b4:	4630      	mov	r0, r6
 801b7b6:	f000 fe50 	bl	801c45a <__malloc_unlock>
 801b7ba:	e7e4      	b.n	801b786 <_malloc_r+0x1e>
 801b7bc:	680b      	ldr	r3, [r1, #0]
 801b7be:	1b5b      	subs	r3, r3, r5
 801b7c0:	d418      	bmi.n	801b7f4 <_malloc_r+0x8c>
 801b7c2:	2b0b      	cmp	r3, #11
 801b7c4:	d90f      	bls.n	801b7e6 <_malloc_r+0x7e>
 801b7c6:	600b      	str	r3, [r1, #0]
 801b7c8:	50cd      	str	r5, [r1, r3]
 801b7ca:	18cc      	adds	r4, r1, r3
 801b7cc:	4630      	mov	r0, r6
 801b7ce:	f000 fe44 	bl	801c45a <__malloc_unlock>
 801b7d2:	f104 000b 	add.w	r0, r4, #11
 801b7d6:	1d23      	adds	r3, r4, #4
 801b7d8:	f020 0007 	bic.w	r0, r0, #7
 801b7dc:	1ac3      	subs	r3, r0, r3
 801b7de:	d0d3      	beq.n	801b788 <_malloc_r+0x20>
 801b7e0:	425a      	negs	r2, r3
 801b7e2:	50e2      	str	r2, [r4, r3]
 801b7e4:	e7d0      	b.n	801b788 <_malloc_r+0x20>
 801b7e6:	428c      	cmp	r4, r1
 801b7e8:	684b      	ldr	r3, [r1, #4]
 801b7ea:	bf16      	itet	ne
 801b7ec:	6063      	strne	r3, [r4, #4]
 801b7ee:	6013      	streq	r3, [r2, #0]
 801b7f0:	460c      	movne	r4, r1
 801b7f2:	e7eb      	b.n	801b7cc <_malloc_r+0x64>
 801b7f4:	460c      	mov	r4, r1
 801b7f6:	6849      	ldr	r1, [r1, #4]
 801b7f8:	e7cc      	b.n	801b794 <_malloc_r+0x2c>
 801b7fa:	1cc4      	adds	r4, r0, #3
 801b7fc:	f024 0403 	bic.w	r4, r4, #3
 801b800:	42a0      	cmp	r0, r4
 801b802:	d005      	beq.n	801b810 <_malloc_r+0xa8>
 801b804:	1a21      	subs	r1, r4, r0
 801b806:	4630      	mov	r0, r6
 801b808:	f000 fad0 	bl	801bdac <_sbrk_r>
 801b80c:	3001      	adds	r0, #1
 801b80e:	d0cf      	beq.n	801b7b0 <_malloc_r+0x48>
 801b810:	6025      	str	r5, [r4, #0]
 801b812:	e7db      	b.n	801b7cc <_malloc_r+0x64>
 801b814:	20008a8c 	.word	0x20008a8c
 801b818:	20008a90 	.word	0x20008a90

0801b81c <__sfputc_r>:
 801b81c:	6893      	ldr	r3, [r2, #8]
 801b81e:	3b01      	subs	r3, #1
 801b820:	2b00      	cmp	r3, #0
 801b822:	b410      	push	{r4}
 801b824:	6093      	str	r3, [r2, #8]
 801b826:	da08      	bge.n	801b83a <__sfputc_r+0x1e>
 801b828:	6994      	ldr	r4, [r2, #24]
 801b82a:	42a3      	cmp	r3, r4
 801b82c:	db01      	blt.n	801b832 <__sfputc_r+0x16>
 801b82e:	290a      	cmp	r1, #10
 801b830:	d103      	bne.n	801b83a <__sfputc_r+0x1e>
 801b832:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b836:	f000 bb0d 	b.w	801be54 <__swbuf_r>
 801b83a:	6813      	ldr	r3, [r2, #0]
 801b83c:	1c58      	adds	r0, r3, #1
 801b83e:	6010      	str	r0, [r2, #0]
 801b840:	7019      	strb	r1, [r3, #0]
 801b842:	4608      	mov	r0, r1
 801b844:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b848:	4770      	bx	lr

0801b84a <__sfputs_r>:
 801b84a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b84c:	4606      	mov	r6, r0
 801b84e:	460f      	mov	r7, r1
 801b850:	4614      	mov	r4, r2
 801b852:	18d5      	adds	r5, r2, r3
 801b854:	42ac      	cmp	r4, r5
 801b856:	d101      	bne.n	801b85c <__sfputs_r+0x12>
 801b858:	2000      	movs	r0, #0
 801b85a:	e007      	b.n	801b86c <__sfputs_r+0x22>
 801b85c:	463a      	mov	r2, r7
 801b85e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b862:	4630      	mov	r0, r6
 801b864:	f7ff ffda 	bl	801b81c <__sfputc_r>
 801b868:	1c43      	adds	r3, r0, #1
 801b86a:	d1f3      	bne.n	801b854 <__sfputs_r+0xa>
 801b86c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b870 <_vfiprintf_r>:
 801b870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b874:	460c      	mov	r4, r1
 801b876:	b09d      	sub	sp, #116	; 0x74
 801b878:	4617      	mov	r7, r2
 801b87a:	461d      	mov	r5, r3
 801b87c:	4606      	mov	r6, r0
 801b87e:	b118      	cbz	r0, 801b888 <_vfiprintf_r+0x18>
 801b880:	6983      	ldr	r3, [r0, #24]
 801b882:	b90b      	cbnz	r3, 801b888 <_vfiprintf_r+0x18>
 801b884:	f000 fcfa 	bl	801c27c <__sinit>
 801b888:	4b7c      	ldr	r3, [pc, #496]	; (801ba7c <_vfiprintf_r+0x20c>)
 801b88a:	429c      	cmp	r4, r3
 801b88c:	d158      	bne.n	801b940 <_vfiprintf_r+0xd0>
 801b88e:	6874      	ldr	r4, [r6, #4]
 801b890:	89a3      	ldrh	r3, [r4, #12]
 801b892:	0718      	lsls	r0, r3, #28
 801b894:	d55e      	bpl.n	801b954 <_vfiprintf_r+0xe4>
 801b896:	6923      	ldr	r3, [r4, #16]
 801b898:	2b00      	cmp	r3, #0
 801b89a:	d05b      	beq.n	801b954 <_vfiprintf_r+0xe4>
 801b89c:	2300      	movs	r3, #0
 801b89e:	9309      	str	r3, [sp, #36]	; 0x24
 801b8a0:	2320      	movs	r3, #32
 801b8a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b8a6:	2330      	movs	r3, #48	; 0x30
 801b8a8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b8ac:	9503      	str	r5, [sp, #12]
 801b8ae:	f04f 0b01 	mov.w	fp, #1
 801b8b2:	46b8      	mov	r8, r7
 801b8b4:	4645      	mov	r5, r8
 801b8b6:	f815 3b01 	ldrb.w	r3, [r5], #1
 801b8ba:	b10b      	cbz	r3, 801b8c0 <_vfiprintf_r+0x50>
 801b8bc:	2b25      	cmp	r3, #37	; 0x25
 801b8be:	d154      	bne.n	801b96a <_vfiprintf_r+0xfa>
 801b8c0:	ebb8 0a07 	subs.w	sl, r8, r7
 801b8c4:	d00b      	beq.n	801b8de <_vfiprintf_r+0x6e>
 801b8c6:	4653      	mov	r3, sl
 801b8c8:	463a      	mov	r2, r7
 801b8ca:	4621      	mov	r1, r4
 801b8cc:	4630      	mov	r0, r6
 801b8ce:	f7ff ffbc 	bl	801b84a <__sfputs_r>
 801b8d2:	3001      	adds	r0, #1
 801b8d4:	f000 80c2 	beq.w	801ba5c <_vfiprintf_r+0x1ec>
 801b8d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8da:	4453      	add	r3, sl
 801b8dc:	9309      	str	r3, [sp, #36]	; 0x24
 801b8de:	f898 3000 	ldrb.w	r3, [r8]
 801b8e2:	2b00      	cmp	r3, #0
 801b8e4:	f000 80ba 	beq.w	801ba5c <_vfiprintf_r+0x1ec>
 801b8e8:	2300      	movs	r3, #0
 801b8ea:	f04f 32ff 	mov.w	r2, #4294967295
 801b8ee:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b8f2:	9304      	str	r3, [sp, #16]
 801b8f4:	9307      	str	r3, [sp, #28]
 801b8f6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b8fa:	931a      	str	r3, [sp, #104]	; 0x68
 801b8fc:	46a8      	mov	r8, r5
 801b8fe:	2205      	movs	r2, #5
 801b900:	f818 1b01 	ldrb.w	r1, [r8], #1
 801b904:	485e      	ldr	r0, [pc, #376]	; (801ba80 <_vfiprintf_r+0x210>)
 801b906:	f7e4 fc73 	bl	80001f0 <memchr>
 801b90a:	9b04      	ldr	r3, [sp, #16]
 801b90c:	bb78      	cbnz	r0, 801b96e <_vfiprintf_r+0xfe>
 801b90e:	06d9      	lsls	r1, r3, #27
 801b910:	bf44      	itt	mi
 801b912:	2220      	movmi	r2, #32
 801b914:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b918:	071a      	lsls	r2, r3, #28
 801b91a:	bf44      	itt	mi
 801b91c:	222b      	movmi	r2, #43	; 0x2b
 801b91e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b922:	782a      	ldrb	r2, [r5, #0]
 801b924:	2a2a      	cmp	r2, #42	; 0x2a
 801b926:	d02a      	beq.n	801b97e <_vfiprintf_r+0x10e>
 801b928:	9a07      	ldr	r2, [sp, #28]
 801b92a:	46a8      	mov	r8, r5
 801b92c:	2000      	movs	r0, #0
 801b92e:	250a      	movs	r5, #10
 801b930:	4641      	mov	r1, r8
 801b932:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b936:	3b30      	subs	r3, #48	; 0x30
 801b938:	2b09      	cmp	r3, #9
 801b93a:	d969      	bls.n	801ba10 <_vfiprintf_r+0x1a0>
 801b93c:	b360      	cbz	r0, 801b998 <_vfiprintf_r+0x128>
 801b93e:	e024      	b.n	801b98a <_vfiprintf_r+0x11a>
 801b940:	4b50      	ldr	r3, [pc, #320]	; (801ba84 <_vfiprintf_r+0x214>)
 801b942:	429c      	cmp	r4, r3
 801b944:	d101      	bne.n	801b94a <_vfiprintf_r+0xda>
 801b946:	68b4      	ldr	r4, [r6, #8]
 801b948:	e7a2      	b.n	801b890 <_vfiprintf_r+0x20>
 801b94a:	4b4f      	ldr	r3, [pc, #316]	; (801ba88 <_vfiprintf_r+0x218>)
 801b94c:	429c      	cmp	r4, r3
 801b94e:	bf08      	it	eq
 801b950:	68f4      	ldreq	r4, [r6, #12]
 801b952:	e79d      	b.n	801b890 <_vfiprintf_r+0x20>
 801b954:	4621      	mov	r1, r4
 801b956:	4630      	mov	r0, r6
 801b958:	f000 face 	bl	801bef8 <__swsetup_r>
 801b95c:	2800      	cmp	r0, #0
 801b95e:	d09d      	beq.n	801b89c <_vfiprintf_r+0x2c>
 801b960:	f04f 30ff 	mov.w	r0, #4294967295
 801b964:	b01d      	add	sp, #116	; 0x74
 801b966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b96a:	46a8      	mov	r8, r5
 801b96c:	e7a2      	b.n	801b8b4 <_vfiprintf_r+0x44>
 801b96e:	4a44      	ldr	r2, [pc, #272]	; (801ba80 <_vfiprintf_r+0x210>)
 801b970:	1a80      	subs	r0, r0, r2
 801b972:	fa0b f000 	lsl.w	r0, fp, r0
 801b976:	4318      	orrs	r0, r3
 801b978:	9004      	str	r0, [sp, #16]
 801b97a:	4645      	mov	r5, r8
 801b97c:	e7be      	b.n	801b8fc <_vfiprintf_r+0x8c>
 801b97e:	9a03      	ldr	r2, [sp, #12]
 801b980:	1d11      	adds	r1, r2, #4
 801b982:	6812      	ldr	r2, [r2, #0]
 801b984:	9103      	str	r1, [sp, #12]
 801b986:	2a00      	cmp	r2, #0
 801b988:	db01      	blt.n	801b98e <_vfiprintf_r+0x11e>
 801b98a:	9207      	str	r2, [sp, #28]
 801b98c:	e004      	b.n	801b998 <_vfiprintf_r+0x128>
 801b98e:	4252      	negs	r2, r2
 801b990:	f043 0302 	orr.w	r3, r3, #2
 801b994:	9207      	str	r2, [sp, #28]
 801b996:	9304      	str	r3, [sp, #16]
 801b998:	f898 3000 	ldrb.w	r3, [r8]
 801b99c:	2b2e      	cmp	r3, #46	; 0x2e
 801b99e:	d10e      	bne.n	801b9be <_vfiprintf_r+0x14e>
 801b9a0:	f898 3001 	ldrb.w	r3, [r8, #1]
 801b9a4:	2b2a      	cmp	r3, #42	; 0x2a
 801b9a6:	d138      	bne.n	801ba1a <_vfiprintf_r+0x1aa>
 801b9a8:	9b03      	ldr	r3, [sp, #12]
 801b9aa:	1d1a      	adds	r2, r3, #4
 801b9ac:	681b      	ldr	r3, [r3, #0]
 801b9ae:	9203      	str	r2, [sp, #12]
 801b9b0:	2b00      	cmp	r3, #0
 801b9b2:	bfb8      	it	lt
 801b9b4:	f04f 33ff 	movlt.w	r3, #4294967295
 801b9b8:	f108 0802 	add.w	r8, r8, #2
 801b9bc:	9305      	str	r3, [sp, #20]
 801b9be:	4d33      	ldr	r5, [pc, #204]	; (801ba8c <_vfiprintf_r+0x21c>)
 801b9c0:	f898 1000 	ldrb.w	r1, [r8]
 801b9c4:	2203      	movs	r2, #3
 801b9c6:	4628      	mov	r0, r5
 801b9c8:	f7e4 fc12 	bl	80001f0 <memchr>
 801b9cc:	b140      	cbz	r0, 801b9e0 <_vfiprintf_r+0x170>
 801b9ce:	2340      	movs	r3, #64	; 0x40
 801b9d0:	1b40      	subs	r0, r0, r5
 801b9d2:	fa03 f000 	lsl.w	r0, r3, r0
 801b9d6:	9b04      	ldr	r3, [sp, #16]
 801b9d8:	4303      	orrs	r3, r0
 801b9da:	f108 0801 	add.w	r8, r8, #1
 801b9de:	9304      	str	r3, [sp, #16]
 801b9e0:	f898 1000 	ldrb.w	r1, [r8]
 801b9e4:	482a      	ldr	r0, [pc, #168]	; (801ba90 <_vfiprintf_r+0x220>)
 801b9e6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b9ea:	2206      	movs	r2, #6
 801b9ec:	f108 0701 	add.w	r7, r8, #1
 801b9f0:	f7e4 fbfe 	bl	80001f0 <memchr>
 801b9f4:	2800      	cmp	r0, #0
 801b9f6:	d037      	beq.n	801ba68 <_vfiprintf_r+0x1f8>
 801b9f8:	4b26      	ldr	r3, [pc, #152]	; (801ba94 <_vfiprintf_r+0x224>)
 801b9fa:	bb1b      	cbnz	r3, 801ba44 <_vfiprintf_r+0x1d4>
 801b9fc:	9b03      	ldr	r3, [sp, #12]
 801b9fe:	3307      	adds	r3, #7
 801ba00:	f023 0307 	bic.w	r3, r3, #7
 801ba04:	3308      	adds	r3, #8
 801ba06:	9303      	str	r3, [sp, #12]
 801ba08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba0a:	444b      	add	r3, r9
 801ba0c:	9309      	str	r3, [sp, #36]	; 0x24
 801ba0e:	e750      	b.n	801b8b2 <_vfiprintf_r+0x42>
 801ba10:	fb05 3202 	mla	r2, r5, r2, r3
 801ba14:	2001      	movs	r0, #1
 801ba16:	4688      	mov	r8, r1
 801ba18:	e78a      	b.n	801b930 <_vfiprintf_r+0xc0>
 801ba1a:	2300      	movs	r3, #0
 801ba1c:	f108 0801 	add.w	r8, r8, #1
 801ba20:	9305      	str	r3, [sp, #20]
 801ba22:	4619      	mov	r1, r3
 801ba24:	250a      	movs	r5, #10
 801ba26:	4640      	mov	r0, r8
 801ba28:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ba2c:	3a30      	subs	r2, #48	; 0x30
 801ba2e:	2a09      	cmp	r2, #9
 801ba30:	d903      	bls.n	801ba3a <_vfiprintf_r+0x1ca>
 801ba32:	2b00      	cmp	r3, #0
 801ba34:	d0c3      	beq.n	801b9be <_vfiprintf_r+0x14e>
 801ba36:	9105      	str	r1, [sp, #20]
 801ba38:	e7c1      	b.n	801b9be <_vfiprintf_r+0x14e>
 801ba3a:	fb05 2101 	mla	r1, r5, r1, r2
 801ba3e:	2301      	movs	r3, #1
 801ba40:	4680      	mov	r8, r0
 801ba42:	e7f0      	b.n	801ba26 <_vfiprintf_r+0x1b6>
 801ba44:	ab03      	add	r3, sp, #12
 801ba46:	9300      	str	r3, [sp, #0]
 801ba48:	4622      	mov	r2, r4
 801ba4a:	4b13      	ldr	r3, [pc, #76]	; (801ba98 <_vfiprintf_r+0x228>)
 801ba4c:	a904      	add	r1, sp, #16
 801ba4e:	4630      	mov	r0, r6
 801ba50:	f3af 8000 	nop.w
 801ba54:	f1b0 3fff 	cmp.w	r0, #4294967295
 801ba58:	4681      	mov	r9, r0
 801ba5a:	d1d5      	bne.n	801ba08 <_vfiprintf_r+0x198>
 801ba5c:	89a3      	ldrh	r3, [r4, #12]
 801ba5e:	065b      	lsls	r3, r3, #25
 801ba60:	f53f af7e 	bmi.w	801b960 <_vfiprintf_r+0xf0>
 801ba64:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ba66:	e77d      	b.n	801b964 <_vfiprintf_r+0xf4>
 801ba68:	ab03      	add	r3, sp, #12
 801ba6a:	9300      	str	r3, [sp, #0]
 801ba6c:	4622      	mov	r2, r4
 801ba6e:	4b0a      	ldr	r3, [pc, #40]	; (801ba98 <_vfiprintf_r+0x228>)
 801ba70:	a904      	add	r1, sp, #16
 801ba72:	4630      	mov	r0, r6
 801ba74:	f000 f888 	bl	801bb88 <_printf_i>
 801ba78:	e7ec      	b.n	801ba54 <_vfiprintf_r+0x1e4>
 801ba7a:	bf00      	nop
 801ba7c:	0801fdac 	.word	0x0801fdac
 801ba80:	0801fd54 	.word	0x0801fd54
 801ba84:	0801fdcc 	.word	0x0801fdcc
 801ba88:	0801fd8c 	.word	0x0801fd8c
 801ba8c:	0801fd5a 	.word	0x0801fd5a
 801ba90:	0801fd5e 	.word	0x0801fd5e
 801ba94:	00000000 	.word	0x00000000
 801ba98:	0801b84b 	.word	0x0801b84b

0801ba9c <_printf_common>:
 801ba9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801baa0:	4691      	mov	r9, r2
 801baa2:	461f      	mov	r7, r3
 801baa4:	688a      	ldr	r2, [r1, #8]
 801baa6:	690b      	ldr	r3, [r1, #16]
 801baa8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801baac:	4293      	cmp	r3, r2
 801baae:	bfb8      	it	lt
 801bab0:	4613      	movlt	r3, r2
 801bab2:	f8c9 3000 	str.w	r3, [r9]
 801bab6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801baba:	4606      	mov	r6, r0
 801babc:	460c      	mov	r4, r1
 801babe:	b112      	cbz	r2, 801bac6 <_printf_common+0x2a>
 801bac0:	3301      	adds	r3, #1
 801bac2:	f8c9 3000 	str.w	r3, [r9]
 801bac6:	6823      	ldr	r3, [r4, #0]
 801bac8:	0699      	lsls	r1, r3, #26
 801baca:	bf42      	ittt	mi
 801bacc:	f8d9 3000 	ldrmi.w	r3, [r9]
 801bad0:	3302      	addmi	r3, #2
 801bad2:	f8c9 3000 	strmi.w	r3, [r9]
 801bad6:	6825      	ldr	r5, [r4, #0]
 801bad8:	f015 0506 	ands.w	r5, r5, #6
 801badc:	d107      	bne.n	801baee <_printf_common+0x52>
 801bade:	f104 0a19 	add.w	sl, r4, #25
 801bae2:	68e3      	ldr	r3, [r4, #12]
 801bae4:	f8d9 2000 	ldr.w	r2, [r9]
 801bae8:	1a9b      	subs	r3, r3, r2
 801baea:	42ab      	cmp	r3, r5
 801baec:	dc28      	bgt.n	801bb40 <_printf_common+0xa4>
 801baee:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801baf2:	6822      	ldr	r2, [r4, #0]
 801baf4:	3300      	adds	r3, #0
 801baf6:	bf18      	it	ne
 801baf8:	2301      	movne	r3, #1
 801bafa:	0692      	lsls	r2, r2, #26
 801bafc:	d42d      	bmi.n	801bb5a <_printf_common+0xbe>
 801bafe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bb02:	4639      	mov	r1, r7
 801bb04:	4630      	mov	r0, r6
 801bb06:	47c0      	blx	r8
 801bb08:	3001      	adds	r0, #1
 801bb0a:	d020      	beq.n	801bb4e <_printf_common+0xb2>
 801bb0c:	6823      	ldr	r3, [r4, #0]
 801bb0e:	68e5      	ldr	r5, [r4, #12]
 801bb10:	f8d9 2000 	ldr.w	r2, [r9]
 801bb14:	f003 0306 	and.w	r3, r3, #6
 801bb18:	2b04      	cmp	r3, #4
 801bb1a:	bf08      	it	eq
 801bb1c:	1aad      	subeq	r5, r5, r2
 801bb1e:	68a3      	ldr	r3, [r4, #8]
 801bb20:	6922      	ldr	r2, [r4, #16]
 801bb22:	bf0c      	ite	eq
 801bb24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bb28:	2500      	movne	r5, #0
 801bb2a:	4293      	cmp	r3, r2
 801bb2c:	bfc4      	itt	gt
 801bb2e:	1a9b      	subgt	r3, r3, r2
 801bb30:	18ed      	addgt	r5, r5, r3
 801bb32:	f04f 0900 	mov.w	r9, #0
 801bb36:	341a      	adds	r4, #26
 801bb38:	454d      	cmp	r5, r9
 801bb3a:	d11a      	bne.n	801bb72 <_printf_common+0xd6>
 801bb3c:	2000      	movs	r0, #0
 801bb3e:	e008      	b.n	801bb52 <_printf_common+0xb6>
 801bb40:	2301      	movs	r3, #1
 801bb42:	4652      	mov	r2, sl
 801bb44:	4639      	mov	r1, r7
 801bb46:	4630      	mov	r0, r6
 801bb48:	47c0      	blx	r8
 801bb4a:	3001      	adds	r0, #1
 801bb4c:	d103      	bne.n	801bb56 <_printf_common+0xba>
 801bb4e:	f04f 30ff 	mov.w	r0, #4294967295
 801bb52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bb56:	3501      	adds	r5, #1
 801bb58:	e7c3      	b.n	801bae2 <_printf_common+0x46>
 801bb5a:	18e1      	adds	r1, r4, r3
 801bb5c:	1c5a      	adds	r2, r3, #1
 801bb5e:	2030      	movs	r0, #48	; 0x30
 801bb60:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801bb64:	4422      	add	r2, r4
 801bb66:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801bb6a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801bb6e:	3302      	adds	r3, #2
 801bb70:	e7c5      	b.n	801bafe <_printf_common+0x62>
 801bb72:	2301      	movs	r3, #1
 801bb74:	4622      	mov	r2, r4
 801bb76:	4639      	mov	r1, r7
 801bb78:	4630      	mov	r0, r6
 801bb7a:	47c0      	blx	r8
 801bb7c:	3001      	adds	r0, #1
 801bb7e:	d0e6      	beq.n	801bb4e <_printf_common+0xb2>
 801bb80:	f109 0901 	add.w	r9, r9, #1
 801bb84:	e7d8      	b.n	801bb38 <_printf_common+0x9c>
	...

0801bb88 <_printf_i>:
 801bb88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bb8c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801bb90:	460c      	mov	r4, r1
 801bb92:	7e09      	ldrb	r1, [r1, #24]
 801bb94:	b085      	sub	sp, #20
 801bb96:	296e      	cmp	r1, #110	; 0x6e
 801bb98:	4617      	mov	r7, r2
 801bb9a:	4606      	mov	r6, r0
 801bb9c:	4698      	mov	r8, r3
 801bb9e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bba0:	f000 80b3 	beq.w	801bd0a <_printf_i+0x182>
 801bba4:	d822      	bhi.n	801bbec <_printf_i+0x64>
 801bba6:	2963      	cmp	r1, #99	; 0x63
 801bba8:	d036      	beq.n	801bc18 <_printf_i+0x90>
 801bbaa:	d80a      	bhi.n	801bbc2 <_printf_i+0x3a>
 801bbac:	2900      	cmp	r1, #0
 801bbae:	f000 80b9 	beq.w	801bd24 <_printf_i+0x19c>
 801bbb2:	2958      	cmp	r1, #88	; 0x58
 801bbb4:	f000 8083 	beq.w	801bcbe <_printf_i+0x136>
 801bbb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bbbc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801bbc0:	e032      	b.n	801bc28 <_printf_i+0xa0>
 801bbc2:	2964      	cmp	r1, #100	; 0x64
 801bbc4:	d001      	beq.n	801bbca <_printf_i+0x42>
 801bbc6:	2969      	cmp	r1, #105	; 0x69
 801bbc8:	d1f6      	bne.n	801bbb8 <_printf_i+0x30>
 801bbca:	6820      	ldr	r0, [r4, #0]
 801bbcc:	6813      	ldr	r3, [r2, #0]
 801bbce:	0605      	lsls	r5, r0, #24
 801bbd0:	f103 0104 	add.w	r1, r3, #4
 801bbd4:	d52a      	bpl.n	801bc2c <_printf_i+0xa4>
 801bbd6:	681b      	ldr	r3, [r3, #0]
 801bbd8:	6011      	str	r1, [r2, #0]
 801bbda:	2b00      	cmp	r3, #0
 801bbdc:	da03      	bge.n	801bbe6 <_printf_i+0x5e>
 801bbde:	222d      	movs	r2, #45	; 0x2d
 801bbe0:	425b      	negs	r3, r3
 801bbe2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801bbe6:	486f      	ldr	r0, [pc, #444]	; (801bda4 <_printf_i+0x21c>)
 801bbe8:	220a      	movs	r2, #10
 801bbea:	e039      	b.n	801bc60 <_printf_i+0xd8>
 801bbec:	2973      	cmp	r1, #115	; 0x73
 801bbee:	f000 809d 	beq.w	801bd2c <_printf_i+0x1a4>
 801bbf2:	d808      	bhi.n	801bc06 <_printf_i+0x7e>
 801bbf4:	296f      	cmp	r1, #111	; 0x6f
 801bbf6:	d020      	beq.n	801bc3a <_printf_i+0xb2>
 801bbf8:	2970      	cmp	r1, #112	; 0x70
 801bbfa:	d1dd      	bne.n	801bbb8 <_printf_i+0x30>
 801bbfc:	6823      	ldr	r3, [r4, #0]
 801bbfe:	f043 0320 	orr.w	r3, r3, #32
 801bc02:	6023      	str	r3, [r4, #0]
 801bc04:	e003      	b.n	801bc0e <_printf_i+0x86>
 801bc06:	2975      	cmp	r1, #117	; 0x75
 801bc08:	d017      	beq.n	801bc3a <_printf_i+0xb2>
 801bc0a:	2978      	cmp	r1, #120	; 0x78
 801bc0c:	d1d4      	bne.n	801bbb8 <_printf_i+0x30>
 801bc0e:	2378      	movs	r3, #120	; 0x78
 801bc10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801bc14:	4864      	ldr	r0, [pc, #400]	; (801bda8 <_printf_i+0x220>)
 801bc16:	e055      	b.n	801bcc4 <_printf_i+0x13c>
 801bc18:	6813      	ldr	r3, [r2, #0]
 801bc1a:	1d19      	adds	r1, r3, #4
 801bc1c:	681b      	ldr	r3, [r3, #0]
 801bc1e:	6011      	str	r1, [r2, #0]
 801bc20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bc24:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bc28:	2301      	movs	r3, #1
 801bc2a:	e08c      	b.n	801bd46 <_printf_i+0x1be>
 801bc2c:	681b      	ldr	r3, [r3, #0]
 801bc2e:	6011      	str	r1, [r2, #0]
 801bc30:	f010 0f40 	tst.w	r0, #64	; 0x40
 801bc34:	bf18      	it	ne
 801bc36:	b21b      	sxthne	r3, r3
 801bc38:	e7cf      	b.n	801bbda <_printf_i+0x52>
 801bc3a:	6813      	ldr	r3, [r2, #0]
 801bc3c:	6825      	ldr	r5, [r4, #0]
 801bc3e:	1d18      	adds	r0, r3, #4
 801bc40:	6010      	str	r0, [r2, #0]
 801bc42:	0628      	lsls	r0, r5, #24
 801bc44:	d501      	bpl.n	801bc4a <_printf_i+0xc2>
 801bc46:	681b      	ldr	r3, [r3, #0]
 801bc48:	e002      	b.n	801bc50 <_printf_i+0xc8>
 801bc4a:	0668      	lsls	r0, r5, #25
 801bc4c:	d5fb      	bpl.n	801bc46 <_printf_i+0xbe>
 801bc4e:	881b      	ldrh	r3, [r3, #0]
 801bc50:	4854      	ldr	r0, [pc, #336]	; (801bda4 <_printf_i+0x21c>)
 801bc52:	296f      	cmp	r1, #111	; 0x6f
 801bc54:	bf14      	ite	ne
 801bc56:	220a      	movne	r2, #10
 801bc58:	2208      	moveq	r2, #8
 801bc5a:	2100      	movs	r1, #0
 801bc5c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801bc60:	6865      	ldr	r5, [r4, #4]
 801bc62:	60a5      	str	r5, [r4, #8]
 801bc64:	2d00      	cmp	r5, #0
 801bc66:	f2c0 8095 	blt.w	801bd94 <_printf_i+0x20c>
 801bc6a:	6821      	ldr	r1, [r4, #0]
 801bc6c:	f021 0104 	bic.w	r1, r1, #4
 801bc70:	6021      	str	r1, [r4, #0]
 801bc72:	2b00      	cmp	r3, #0
 801bc74:	d13d      	bne.n	801bcf2 <_printf_i+0x16a>
 801bc76:	2d00      	cmp	r5, #0
 801bc78:	f040 808e 	bne.w	801bd98 <_printf_i+0x210>
 801bc7c:	4665      	mov	r5, ip
 801bc7e:	2a08      	cmp	r2, #8
 801bc80:	d10b      	bne.n	801bc9a <_printf_i+0x112>
 801bc82:	6823      	ldr	r3, [r4, #0]
 801bc84:	07db      	lsls	r3, r3, #31
 801bc86:	d508      	bpl.n	801bc9a <_printf_i+0x112>
 801bc88:	6923      	ldr	r3, [r4, #16]
 801bc8a:	6862      	ldr	r2, [r4, #4]
 801bc8c:	429a      	cmp	r2, r3
 801bc8e:	bfde      	ittt	le
 801bc90:	2330      	movle	r3, #48	; 0x30
 801bc92:	f805 3c01 	strble.w	r3, [r5, #-1]
 801bc96:	f105 35ff 	addle.w	r5, r5, #4294967295
 801bc9a:	ebac 0305 	sub.w	r3, ip, r5
 801bc9e:	6123      	str	r3, [r4, #16]
 801bca0:	f8cd 8000 	str.w	r8, [sp]
 801bca4:	463b      	mov	r3, r7
 801bca6:	aa03      	add	r2, sp, #12
 801bca8:	4621      	mov	r1, r4
 801bcaa:	4630      	mov	r0, r6
 801bcac:	f7ff fef6 	bl	801ba9c <_printf_common>
 801bcb0:	3001      	adds	r0, #1
 801bcb2:	d14d      	bne.n	801bd50 <_printf_i+0x1c8>
 801bcb4:	f04f 30ff 	mov.w	r0, #4294967295
 801bcb8:	b005      	add	sp, #20
 801bcba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bcbe:	4839      	ldr	r0, [pc, #228]	; (801bda4 <_printf_i+0x21c>)
 801bcc0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801bcc4:	6813      	ldr	r3, [r2, #0]
 801bcc6:	6821      	ldr	r1, [r4, #0]
 801bcc8:	1d1d      	adds	r5, r3, #4
 801bcca:	681b      	ldr	r3, [r3, #0]
 801bccc:	6015      	str	r5, [r2, #0]
 801bcce:	060a      	lsls	r2, r1, #24
 801bcd0:	d50b      	bpl.n	801bcea <_printf_i+0x162>
 801bcd2:	07ca      	lsls	r2, r1, #31
 801bcd4:	bf44      	itt	mi
 801bcd6:	f041 0120 	orrmi.w	r1, r1, #32
 801bcda:	6021      	strmi	r1, [r4, #0]
 801bcdc:	b91b      	cbnz	r3, 801bce6 <_printf_i+0x15e>
 801bcde:	6822      	ldr	r2, [r4, #0]
 801bce0:	f022 0220 	bic.w	r2, r2, #32
 801bce4:	6022      	str	r2, [r4, #0]
 801bce6:	2210      	movs	r2, #16
 801bce8:	e7b7      	b.n	801bc5a <_printf_i+0xd2>
 801bcea:	064d      	lsls	r5, r1, #25
 801bcec:	bf48      	it	mi
 801bcee:	b29b      	uxthmi	r3, r3
 801bcf0:	e7ef      	b.n	801bcd2 <_printf_i+0x14a>
 801bcf2:	4665      	mov	r5, ip
 801bcf4:	fbb3 f1f2 	udiv	r1, r3, r2
 801bcf8:	fb02 3311 	mls	r3, r2, r1, r3
 801bcfc:	5cc3      	ldrb	r3, [r0, r3]
 801bcfe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801bd02:	460b      	mov	r3, r1
 801bd04:	2900      	cmp	r1, #0
 801bd06:	d1f5      	bne.n	801bcf4 <_printf_i+0x16c>
 801bd08:	e7b9      	b.n	801bc7e <_printf_i+0xf6>
 801bd0a:	6813      	ldr	r3, [r2, #0]
 801bd0c:	6825      	ldr	r5, [r4, #0]
 801bd0e:	6961      	ldr	r1, [r4, #20]
 801bd10:	1d18      	adds	r0, r3, #4
 801bd12:	6010      	str	r0, [r2, #0]
 801bd14:	0628      	lsls	r0, r5, #24
 801bd16:	681b      	ldr	r3, [r3, #0]
 801bd18:	d501      	bpl.n	801bd1e <_printf_i+0x196>
 801bd1a:	6019      	str	r1, [r3, #0]
 801bd1c:	e002      	b.n	801bd24 <_printf_i+0x19c>
 801bd1e:	066a      	lsls	r2, r5, #25
 801bd20:	d5fb      	bpl.n	801bd1a <_printf_i+0x192>
 801bd22:	8019      	strh	r1, [r3, #0]
 801bd24:	2300      	movs	r3, #0
 801bd26:	6123      	str	r3, [r4, #16]
 801bd28:	4665      	mov	r5, ip
 801bd2a:	e7b9      	b.n	801bca0 <_printf_i+0x118>
 801bd2c:	6813      	ldr	r3, [r2, #0]
 801bd2e:	1d19      	adds	r1, r3, #4
 801bd30:	6011      	str	r1, [r2, #0]
 801bd32:	681d      	ldr	r5, [r3, #0]
 801bd34:	6862      	ldr	r2, [r4, #4]
 801bd36:	2100      	movs	r1, #0
 801bd38:	4628      	mov	r0, r5
 801bd3a:	f7e4 fa59 	bl	80001f0 <memchr>
 801bd3e:	b108      	cbz	r0, 801bd44 <_printf_i+0x1bc>
 801bd40:	1b40      	subs	r0, r0, r5
 801bd42:	6060      	str	r0, [r4, #4]
 801bd44:	6863      	ldr	r3, [r4, #4]
 801bd46:	6123      	str	r3, [r4, #16]
 801bd48:	2300      	movs	r3, #0
 801bd4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bd4e:	e7a7      	b.n	801bca0 <_printf_i+0x118>
 801bd50:	6923      	ldr	r3, [r4, #16]
 801bd52:	462a      	mov	r2, r5
 801bd54:	4639      	mov	r1, r7
 801bd56:	4630      	mov	r0, r6
 801bd58:	47c0      	blx	r8
 801bd5a:	3001      	adds	r0, #1
 801bd5c:	d0aa      	beq.n	801bcb4 <_printf_i+0x12c>
 801bd5e:	6823      	ldr	r3, [r4, #0]
 801bd60:	079b      	lsls	r3, r3, #30
 801bd62:	d413      	bmi.n	801bd8c <_printf_i+0x204>
 801bd64:	68e0      	ldr	r0, [r4, #12]
 801bd66:	9b03      	ldr	r3, [sp, #12]
 801bd68:	4298      	cmp	r0, r3
 801bd6a:	bfb8      	it	lt
 801bd6c:	4618      	movlt	r0, r3
 801bd6e:	e7a3      	b.n	801bcb8 <_printf_i+0x130>
 801bd70:	2301      	movs	r3, #1
 801bd72:	464a      	mov	r2, r9
 801bd74:	4639      	mov	r1, r7
 801bd76:	4630      	mov	r0, r6
 801bd78:	47c0      	blx	r8
 801bd7a:	3001      	adds	r0, #1
 801bd7c:	d09a      	beq.n	801bcb4 <_printf_i+0x12c>
 801bd7e:	3501      	adds	r5, #1
 801bd80:	68e3      	ldr	r3, [r4, #12]
 801bd82:	9a03      	ldr	r2, [sp, #12]
 801bd84:	1a9b      	subs	r3, r3, r2
 801bd86:	42ab      	cmp	r3, r5
 801bd88:	dcf2      	bgt.n	801bd70 <_printf_i+0x1e8>
 801bd8a:	e7eb      	b.n	801bd64 <_printf_i+0x1dc>
 801bd8c:	2500      	movs	r5, #0
 801bd8e:	f104 0919 	add.w	r9, r4, #25
 801bd92:	e7f5      	b.n	801bd80 <_printf_i+0x1f8>
 801bd94:	2b00      	cmp	r3, #0
 801bd96:	d1ac      	bne.n	801bcf2 <_printf_i+0x16a>
 801bd98:	7803      	ldrb	r3, [r0, #0]
 801bd9a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bd9e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bda2:	e76c      	b.n	801bc7e <_printf_i+0xf6>
 801bda4:	0801fd65 	.word	0x0801fd65
 801bda8:	0801fd76 	.word	0x0801fd76

0801bdac <_sbrk_r>:
 801bdac:	b538      	push	{r3, r4, r5, lr}
 801bdae:	4c06      	ldr	r4, [pc, #24]	; (801bdc8 <_sbrk_r+0x1c>)
 801bdb0:	2300      	movs	r3, #0
 801bdb2:	4605      	mov	r5, r0
 801bdb4:	4608      	mov	r0, r1
 801bdb6:	6023      	str	r3, [r4, #0]
 801bdb8:	f7e5 fa3c 	bl	8001234 <_sbrk>
 801bdbc:	1c43      	adds	r3, r0, #1
 801bdbe:	d102      	bne.n	801bdc6 <_sbrk_r+0x1a>
 801bdc0:	6823      	ldr	r3, [r4, #0]
 801bdc2:	b103      	cbz	r3, 801bdc6 <_sbrk_r+0x1a>
 801bdc4:	602b      	str	r3, [r5, #0]
 801bdc6:	bd38      	pop	{r3, r4, r5, pc}
 801bdc8:	20008d80 	.word	0x20008d80

0801bdcc <_raise_r>:
 801bdcc:	291f      	cmp	r1, #31
 801bdce:	b538      	push	{r3, r4, r5, lr}
 801bdd0:	4604      	mov	r4, r0
 801bdd2:	460d      	mov	r5, r1
 801bdd4:	d904      	bls.n	801bde0 <_raise_r+0x14>
 801bdd6:	2316      	movs	r3, #22
 801bdd8:	6003      	str	r3, [r0, #0]
 801bdda:	f04f 30ff 	mov.w	r0, #4294967295
 801bdde:	bd38      	pop	{r3, r4, r5, pc}
 801bde0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801bde2:	b112      	cbz	r2, 801bdea <_raise_r+0x1e>
 801bde4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801bde8:	b94b      	cbnz	r3, 801bdfe <_raise_r+0x32>
 801bdea:	4620      	mov	r0, r4
 801bdec:	f000 f830 	bl	801be50 <_getpid_r>
 801bdf0:	462a      	mov	r2, r5
 801bdf2:	4601      	mov	r1, r0
 801bdf4:	4620      	mov	r0, r4
 801bdf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bdfa:	f000 b817 	b.w	801be2c <_kill_r>
 801bdfe:	2b01      	cmp	r3, #1
 801be00:	d00a      	beq.n	801be18 <_raise_r+0x4c>
 801be02:	1c59      	adds	r1, r3, #1
 801be04:	d103      	bne.n	801be0e <_raise_r+0x42>
 801be06:	2316      	movs	r3, #22
 801be08:	6003      	str	r3, [r0, #0]
 801be0a:	2001      	movs	r0, #1
 801be0c:	e7e7      	b.n	801bdde <_raise_r+0x12>
 801be0e:	2400      	movs	r4, #0
 801be10:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801be14:	4628      	mov	r0, r5
 801be16:	4798      	blx	r3
 801be18:	2000      	movs	r0, #0
 801be1a:	e7e0      	b.n	801bdde <_raise_r+0x12>

0801be1c <raise>:
 801be1c:	4b02      	ldr	r3, [pc, #8]	; (801be28 <raise+0xc>)
 801be1e:	4601      	mov	r1, r0
 801be20:	6818      	ldr	r0, [r3, #0]
 801be22:	f7ff bfd3 	b.w	801bdcc <_raise_r>
 801be26:	bf00      	nop
 801be28:	20000090 	.word	0x20000090

0801be2c <_kill_r>:
 801be2c:	b538      	push	{r3, r4, r5, lr}
 801be2e:	4c07      	ldr	r4, [pc, #28]	; (801be4c <_kill_r+0x20>)
 801be30:	2300      	movs	r3, #0
 801be32:	4605      	mov	r5, r0
 801be34:	4608      	mov	r0, r1
 801be36:	4611      	mov	r1, r2
 801be38:	6023      	str	r3, [r4, #0]
 801be3a:	f7e5 f973 	bl	8001124 <_kill>
 801be3e:	1c43      	adds	r3, r0, #1
 801be40:	d102      	bne.n	801be48 <_kill_r+0x1c>
 801be42:	6823      	ldr	r3, [r4, #0]
 801be44:	b103      	cbz	r3, 801be48 <_kill_r+0x1c>
 801be46:	602b      	str	r3, [r5, #0]
 801be48:	bd38      	pop	{r3, r4, r5, pc}
 801be4a:	bf00      	nop
 801be4c:	20008d80 	.word	0x20008d80

0801be50 <_getpid_r>:
 801be50:	f7e5 b960 	b.w	8001114 <_getpid>

0801be54 <__swbuf_r>:
 801be54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801be56:	460e      	mov	r6, r1
 801be58:	4614      	mov	r4, r2
 801be5a:	4605      	mov	r5, r0
 801be5c:	b118      	cbz	r0, 801be66 <__swbuf_r+0x12>
 801be5e:	6983      	ldr	r3, [r0, #24]
 801be60:	b90b      	cbnz	r3, 801be66 <__swbuf_r+0x12>
 801be62:	f000 fa0b 	bl	801c27c <__sinit>
 801be66:	4b21      	ldr	r3, [pc, #132]	; (801beec <__swbuf_r+0x98>)
 801be68:	429c      	cmp	r4, r3
 801be6a:	d12a      	bne.n	801bec2 <__swbuf_r+0x6e>
 801be6c:	686c      	ldr	r4, [r5, #4]
 801be6e:	69a3      	ldr	r3, [r4, #24]
 801be70:	60a3      	str	r3, [r4, #8]
 801be72:	89a3      	ldrh	r3, [r4, #12]
 801be74:	071a      	lsls	r2, r3, #28
 801be76:	d52e      	bpl.n	801bed6 <__swbuf_r+0x82>
 801be78:	6923      	ldr	r3, [r4, #16]
 801be7a:	b363      	cbz	r3, 801bed6 <__swbuf_r+0x82>
 801be7c:	6923      	ldr	r3, [r4, #16]
 801be7e:	6820      	ldr	r0, [r4, #0]
 801be80:	1ac0      	subs	r0, r0, r3
 801be82:	6963      	ldr	r3, [r4, #20]
 801be84:	b2f6      	uxtb	r6, r6
 801be86:	4283      	cmp	r3, r0
 801be88:	4637      	mov	r7, r6
 801be8a:	dc04      	bgt.n	801be96 <__swbuf_r+0x42>
 801be8c:	4621      	mov	r1, r4
 801be8e:	4628      	mov	r0, r5
 801be90:	f000 f98a 	bl	801c1a8 <_fflush_r>
 801be94:	bb28      	cbnz	r0, 801bee2 <__swbuf_r+0x8e>
 801be96:	68a3      	ldr	r3, [r4, #8]
 801be98:	3b01      	subs	r3, #1
 801be9a:	60a3      	str	r3, [r4, #8]
 801be9c:	6823      	ldr	r3, [r4, #0]
 801be9e:	1c5a      	adds	r2, r3, #1
 801bea0:	6022      	str	r2, [r4, #0]
 801bea2:	701e      	strb	r6, [r3, #0]
 801bea4:	6963      	ldr	r3, [r4, #20]
 801bea6:	3001      	adds	r0, #1
 801bea8:	4283      	cmp	r3, r0
 801beaa:	d004      	beq.n	801beb6 <__swbuf_r+0x62>
 801beac:	89a3      	ldrh	r3, [r4, #12]
 801beae:	07db      	lsls	r3, r3, #31
 801beb0:	d519      	bpl.n	801bee6 <__swbuf_r+0x92>
 801beb2:	2e0a      	cmp	r6, #10
 801beb4:	d117      	bne.n	801bee6 <__swbuf_r+0x92>
 801beb6:	4621      	mov	r1, r4
 801beb8:	4628      	mov	r0, r5
 801beba:	f000 f975 	bl	801c1a8 <_fflush_r>
 801bebe:	b190      	cbz	r0, 801bee6 <__swbuf_r+0x92>
 801bec0:	e00f      	b.n	801bee2 <__swbuf_r+0x8e>
 801bec2:	4b0b      	ldr	r3, [pc, #44]	; (801bef0 <__swbuf_r+0x9c>)
 801bec4:	429c      	cmp	r4, r3
 801bec6:	d101      	bne.n	801becc <__swbuf_r+0x78>
 801bec8:	68ac      	ldr	r4, [r5, #8]
 801beca:	e7d0      	b.n	801be6e <__swbuf_r+0x1a>
 801becc:	4b09      	ldr	r3, [pc, #36]	; (801bef4 <__swbuf_r+0xa0>)
 801bece:	429c      	cmp	r4, r3
 801bed0:	bf08      	it	eq
 801bed2:	68ec      	ldreq	r4, [r5, #12]
 801bed4:	e7cb      	b.n	801be6e <__swbuf_r+0x1a>
 801bed6:	4621      	mov	r1, r4
 801bed8:	4628      	mov	r0, r5
 801beda:	f000 f80d 	bl	801bef8 <__swsetup_r>
 801bede:	2800      	cmp	r0, #0
 801bee0:	d0cc      	beq.n	801be7c <__swbuf_r+0x28>
 801bee2:	f04f 37ff 	mov.w	r7, #4294967295
 801bee6:	4638      	mov	r0, r7
 801bee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801beea:	bf00      	nop
 801beec:	0801fdac 	.word	0x0801fdac
 801bef0:	0801fdcc 	.word	0x0801fdcc
 801bef4:	0801fd8c 	.word	0x0801fd8c

0801bef8 <__swsetup_r>:
 801bef8:	4b32      	ldr	r3, [pc, #200]	; (801bfc4 <__swsetup_r+0xcc>)
 801befa:	b570      	push	{r4, r5, r6, lr}
 801befc:	681d      	ldr	r5, [r3, #0]
 801befe:	4606      	mov	r6, r0
 801bf00:	460c      	mov	r4, r1
 801bf02:	b125      	cbz	r5, 801bf0e <__swsetup_r+0x16>
 801bf04:	69ab      	ldr	r3, [r5, #24]
 801bf06:	b913      	cbnz	r3, 801bf0e <__swsetup_r+0x16>
 801bf08:	4628      	mov	r0, r5
 801bf0a:	f000 f9b7 	bl	801c27c <__sinit>
 801bf0e:	4b2e      	ldr	r3, [pc, #184]	; (801bfc8 <__swsetup_r+0xd0>)
 801bf10:	429c      	cmp	r4, r3
 801bf12:	d10f      	bne.n	801bf34 <__swsetup_r+0x3c>
 801bf14:	686c      	ldr	r4, [r5, #4]
 801bf16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bf1a:	b29a      	uxth	r2, r3
 801bf1c:	0715      	lsls	r5, r2, #28
 801bf1e:	d42c      	bmi.n	801bf7a <__swsetup_r+0x82>
 801bf20:	06d0      	lsls	r0, r2, #27
 801bf22:	d411      	bmi.n	801bf48 <__swsetup_r+0x50>
 801bf24:	2209      	movs	r2, #9
 801bf26:	6032      	str	r2, [r6, #0]
 801bf28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801bf2c:	81a3      	strh	r3, [r4, #12]
 801bf2e:	f04f 30ff 	mov.w	r0, #4294967295
 801bf32:	e03e      	b.n	801bfb2 <__swsetup_r+0xba>
 801bf34:	4b25      	ldr	r3, [pc, #148]	; (801bfcc <__swsetup_r+0xd4>)
 801bf36:	429c      	cmp	r4, r3
 801bf38:	d101      	bne.n	801bf3e <__swsetup_r+0x46>
 801bf3a:	68ac      	ldr	r4, [r5, #8]
 801bf3c:	e7eb      	b.n	801bf16 <__swsetup_r+0x1e>
 801bf3e:	4b24      	ldr	r3, [pc, #144]	; (801bfd0 <__swsetup_r+0xd8>)
 801bf40:	429c      	cmp	r4, r3
 801bf42:	bf08      	it	eq
 801bf44:	68ec      	ldreq	r4, [r5, #12]
 801bf46:	e7e6      	b.n	801bf16 <__swsetup_r+0x1e>
 801bf48:	0751      	lsls	r1, r2, #29
 801bf4a:	d512      	bpl.n	801bf72 <__swsetup_r+0x7a>
 801bf4c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bf4e:	b141      	cbz	r1, 801bf62 <__swsetup_r+0x6a>
 801bf50:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801bf54:	4299      	cmp	r1, r3
 801bf56:	d002      	beq.n	801bf5e <__swsetup_r+0x66>
 801bf58:	4630      	mov	r0, r6
 801bf5a:	f7ff fbb7 	bl	801b6cc <_free_r>
 801bf5e:	2300      	movs	r3, #0
 801bf60:	6363      	str	r3, [r4, #52]	; 0x34
 801bf62:	89a3      	ldrh	r3, [r4, #12]
 801bf64:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801bf68:	81a3      	strh	r3, [r4, #12]
 801bf6a:	2300      	movs	r3, #0
 801bf6c:	6063      	str	r3, [r4, #4]
 801bf6e:	6923      	ldr	r3, [r4, #16]
 801bf70:	6023      	str	r3, [r4, #0]
 801bf72:	89a3      	ldrh	r3, [r4, #12]
 801bf74:	f043 0308 	orr.w	r3, r3, #8
 801bf78:	81a3      	strh	r3, [r4, #12]
 801bf7a:	6923      	ldr	r3, [r4, #16]
 801bf7c:	b94b      	cbnz	r3, 801bf92 <__swsetup_r+0x9a>
 801bf7e:	89a3      	ldrh	r3, [r4, #12]
 801bf80:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801bf84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801bf88:	d003      	beq.n	801bf92 <__swsetup_r+0x9a>
 801bf8a:	4621      	mov	r1, r4
 801bf8c:	4630      	mov	r0, r6
 801bf8e:	f000 fa23 	bl	801c3d8 <__smakebuf_r>
 801bf92:	89a2      	ldrh	r2, [r4, #12]
 801bf94:	f012 0301 	ands.w	r3, r2, #1
 801bf98:	d00c      	beq.n	801bfb4 <__swsetup_r+0xbc>
 801bf9a:	2300      	movs	r3, #0
 801bf9c:	60a3      	str	r3, [r4, #8]
 801bf9e:	6963      	ldr	r3, [r4, #20]
 801bfa0:	425b      	negs	r3, r3
 801bfa2:	61a3      	str	r3, [r4, #24]
 801bfa4:	6923      	ldr	r3, [r4, #16]
 801bfa6:	b953      	cbnz	r3, 801bfbe <__swsetup_r+0xc6>
 801bfa8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bfac:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801bfb0:	d1ba      	bne.n	801bf28 <__swsetup_r+0x30>
 801bfb2:	bd70      	pop	{r4, r5, r6, pc}
 801bfb4:	0792      	lsls	r2, r2, #30
 801bfb6:	bf58      	it	pl
 801bfb8:	6963      	ldrpl	r3, [r4, #20]
 801bfba:	60a3      	str	r3, [r4, #8]
 801bfbc:	e7f2      	b.n	801bfa4 <__swsetup_r+0xac>
 801bfbe:	2000      	movs	r0, #0
 801bfc0:	e7f7      	b.n	801bfb2 <__swsetup_r+0xba>
 801bfc2:	bf00      	nop
 801bfc4:	20000090 	.word	0x20000090
 801bfc8:	0801fdac 	.word	0x0801fdac
 801bfcc:	0801fdcc 	.word	0x0801fdcc
 801bfd0:	0801fd8c 	.word	0x0801fd8c

0801bfd4 <__register_exitproc>:
 801bfd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bfd8:	4d2c      	ldr	r5, [pc, #176]	; (801c08c <__register_exitproc+0xb8>)
 801bfda:	682c      	ldr	r4, [r5, #0]
 801bfdc:	4607      	mov	r7, r0
 801bfde:	460e      	mov	r6, r1
 801bfe0:	4691      	mov	r9, r2
 801bfe2:	4698      	mov	r8, r3
 801bfe4:	b934      	cbnz	r4, 801bff4 <__register_exitproc+0x20>
 801bfe6:	4b2a      	ldr	r3, [pc, #168]	; (801c090 <__register_exitproc+0xbc>)
 801bfe8:	4c2a      	ldr	r4, [pc, #168]	; (801c094 <__register_exitproc+0xc0>)
 801bfea:	602c      	str	r4, [r5, #0]
 801bfec:	b113      	cbz	r3, 801bff4 <__register_exitproc+0x20>
 801bfee:	681b      	ldr	r3, [r3, #0]
 801bff0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801bff4:	6863      	ldr	r3, [r4, #4]
 801bff6:	2b1f      	cmp	r3, #31
 801bff8:	dd3d      	ble.n	801c076 <__register_exitproc+0xa2>
 801bffa:	4b27      	ldr	r3, [pc, #156]	; (801c098 <__register_exitproc+0xc4>)
 801bffc:	b91b      	cbnz	r3, 801c006 <__register_exitproc+0x32>
 801bffe:	f04f 30ff 	mov.w	r0, #4294967295
 801c002:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c006:	208c      	movs	r0, #140	; 0x8c
 801c008:	f7ff fb3c 	bl	801b684 <malloc>
 801c00c:	4604      	mov	r4, r0
 801c00e:	2800      	cmp	r0, #0
 801c010:	d0f5      	beq.n	801bffe <__register_exitproc+0x2a>
 801c012:	2300      	movs	r3, #0
 801c014:	682a      	ldr	r2, [r5, #0]
 801c016:	6002      	str	r2, [r0, #0]
 801c018:	6043      	str	r3, [r0, #4]
 801c01a:	6028      	str	r0, [r5, #0]
 801c01c:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801c020:	b30f      	cbz	r7, 801c066 <__register_exitproc+0x92>
 801c022:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c026:	f7ff fb2d 	bl	801b684 <malloc>
 801c02a:	2800      	cmp	r0, #0
 801c02c:	d0e7      	beq.n	801bffe <__register_exitproc+0x2a>
 801c02e:	2300      	movs	r3, #0
 801c030:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c034:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801c038:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c03c:	6862      	ldr	r2, [r4, #4]
 801c03e:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801c042:	2301      	movs	r3, #1
 801c044:	4093      	lsls	r3, r2
 801c046:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801c04a:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801c04e:	431a      	orrs	r2, r3
 801c050:	2f02      	cmp	r7, #2
 801c052:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801c056:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801c05a:	bf02      	ittt	eq
 801c05c:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801c060:	4313      	orreq	r3, r2
 801c062:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801c066:	6863      	ldr	r3, [r4, #4]
 801c068:	1c5a      	adds	r2, r3, #1
 801c06a:	3302      	adds	r3, #2
 801c06c:	6062      	str	r2, [r4, #4]
 801c06e:	2000      	movs	r0, #0
 801c070:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801c074:	e7c5      	b.n	801c002 <__register_exitproc+0x2e>
 801c076:	2f00      	cmp	r7, #0
 801c078:	d0f5      	beq.n	801c066 <__register_exitproc+0x92>
 801c07a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c07e:	2800      	cmp	r0, #0
 801c080:	d1dc      	bne.n	801c03c <__register_exitproc+0x68>
 801c082:	4b05      	ldr	r3, [pc, #20]	; (801c098 <__register_exitproc+0xc4>)
 801c084:	2b00      	cmp	r3, #0
 801c086:	d0ba      	beq.n	801bffe <__register_exitproc+0x2a>
 801c088:	e7cb      	b.n	801c022 <__register_exitproc+0x4e>
 801c08a:	bf00      	nop
 801c08c:	20008c28 	.word	0x20008c28
 801c090:	0801fd88 	.word	0x0801fd88
 801c094:	20008b9c 	.word	0x20008b9c
 801c098:	0801b685 	.word	0x0801b685

0801c09c <__sflush_r>:
 801c09c:	898a      	ldrh	r2, [r1, #12]
 801c09e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c0a2:	4605      	mov	r5, r0
 801c0a4:	0710      	lsls	r0, r2, #28
 801c0a6:	460c      	mov	r4, r1
 801c0a8:	d458      	bmi.n	801c15c <__sflush_r+0xc0>
 801c0aa:	684b      	ldr	r3, [r1, #4]
 801c0ac:	2b00      	cmp	r3, #0
 801c0ae:	dc05      	bgt.n	801c0bc <__sflush_r+0x20>
 801c0b0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c0b2:	2b00      	cmp	r3, #0
 801c0b4:	dc02      	bgt.n	801c0bc <__sflush_r+0x20>
 801c0b6:	2000      	movs	r0, #0
 801c0b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c0bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c0be:	2e00      	cmp	r6, #0
 801c0c0:	d0f9      	beq.n	801c0b6 <__sflush_r+0x1a>
 801c0c2:	2300      	movs	r3, #0
 801c0c4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c0c8:	682f      	ldr	r7, [r5, #0]
 801c0ca:	6a21      	ldr	r1, [r4, #32]
 801c0cc:	602b      	str	r3, [r5, #0]
 801c0ce:	d032      	beq.n	801c136 <__sflush_r+0x9a>
 801c0d0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c0d2:	89a3      	ldrh	r3, [r4, #12]
 801c0d4:	075a      	lsls	r2, r3, #29
 801c0d6:	d505      	bpl.n	801c0e4 <__sflush_r+0x48>
 801c0d8:	6863      	ldr	r3, [r4, #4]
 801c0da:	1ac0      	subs	r0, r0, r3
 801c0dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c0de:	b10b      	cbz	r3, 801c0e4 <__sflush_r+0x48>
 801c0e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c0e2:	1ac0      	subs	r0, r0, r3
 801c0e4:	2300      	movs	r3, #0
 801c0e6:	4602      	mov	r2, r0
 801c0e8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c0ea:	6a21      	ldr	r1, [r4, #32]
 801c0ec:	4628      	mov	r0, r5
 801c0ee:	47b0      	blx	r6
 801c0f0:	1c43      	adds	r3, r0, #1
 801c0f2:	89a3      	ldrh	r3, [r4, #12]
 801c0f4:	d106      	bne.n	801c104 <__sflush_r+0x68>
 801c0f6:	6829      	ldr	r1, [r5, #0]
 801c0f8:	291d      	cmp	r1, #29
 801c0fa:	d848      	bhi.n	801c18e <__sflush_r+0xf2>
 801c0fc:	4a29      	ldr	r2, [pc, #164]	; (801c1a4 <__sflush_r+0x108>)
 801c0fe:	40ca      	lsrs	r2, r1
 801c100:	07d6      	lsls	r6, r2, #31
 801c102:	d544      	bpl.n	801c18e <__sflush_r+0xf2>
 801c104:	2200      	movs	r2, #0
 801c106:	6062      	str	r2, [r4, #4]
 801c108:	04d9      	lsls	r1, r3, #19
 801c10a:	6922      	ldr	r2, [r4, #16]
 801c10c:	6022      	str	r2, [r4, #0]
 801c10e:	d504      	bpl.n	801c11a <__sflush_r+0x7e>
 801c110:	1c42      	adds	r2, r0, #1
 801c112:	d101      	bne.n	801c118 <__sflush_r+0x7c>
 801c114:	682b      	ldr	r3, [r5, #0]
 801c116:	b903      	cbnz	r3, 801c11a <__sflush_r+0x7e>
 801c118:	6560      	str	r0, [r4, #84]	; 0x54
 801c11a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c11c:	602f      	str	r7, [r5, #0]
 801c11e:	2900      	cmp	r1, #0
 801c120:	d0c9      	beq.n	801c0b6 <__sflush_r+0x1a>
 801c122:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c126:	4299      	cmp	r1, r3
 801c128:	d002      	beq.n	801c130 <__sflush_r+0x94>
 801c12a:	4628      	mov	r0, r5
 801c12c:	f7ff face 	bl	801b6cc <_free_r>
 801c130:	2000      	movs	r0, #0
 801c132:	6360      	str	r0, [r4, #52]	; 0x34
 801c134:	e7c0      	b.n	801c0b8 <__sflush_r+0x1c>
 801c136:	2301      	movs	r3, #1
 801c138:	4628      	mov	r0, r5
 801c13a:	47b0      	blx	r6
 801c13c:	1c41      	adds	r1, r0, #1
 801c13e:	d1c8      	bne.n	801c0d2 <__sflush_r+0x36>
 801c140:	682b      	ldr	r3, [r5, #0]
 801c142:	2b00      	cmp	r3, #0
 801c144:	d0c5      	beq.n	801c0d2 <__sflush_r+0x36>
 801c146:	2b1d      	cmp	r3, #29
 801c148:	d001      	beq.n	801c14e <__sflush_r+0xb2>
 801c14a:	2b16      	cmp	r3, #22
 801c14c:	d101      	bne.n	801c152 <__sflush_r+0xb6>
 801c14e:	602f      	str	r7, [r5, #0]
 801c150:	e7b1      	b.n	801c0b6 <__sflush_r+0x1a>
 801c152:	89a3      	ldrh	r3, [r4, #12]
 801c154:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c158:	81a3      	strh	r3, [r4, #12]
 801c15a:	e7ad      	b.n	801c0b8 <__sflush_r+0x1c>
 801c15c:	690f      	ldr	r7, [r1, #16]
 801c15e:	2f00      	cmp	r7, #0
 801c160:	d0a9      	beq.n	801c0b6 <__sflush_r+0x1a>
 801c162:	0793      	lsls	r3, r2, #30
 801c164:	680e      	ldr	r6, [r1, #0]
 801c166:	bf08      	it	eq
 801c168:	694b      	ldreq	r3, [r1, #20]
 801c16a:	600f      	str	r7, [r1, #0]
 801c16c:	bf18      	it	ne
 801c16e:	2300      	movne	r3, #0
 801c170:	eba6 0807 	sub.w	r8, r6, r7
 801c174:	608b      	str	r3, [r1, #8]
 801c176:	f1b8 0f00 	cmp.w	r8, #0
 801c17a:	dd9c      	ble.n	801c0b6 <__sflush_r+0x1a>
 801c17c:	4643      	mov	r3, r8
 801c17e:	463a      	mov	r2, r7
 801c180:	6a21      	ldr	r1, [r4, #32]
 801c182:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c184:	4628      	mov	r0, r5
 801c186:	47b0      	blx	r6
 801c188:	2800      	cmp	r0, #0
 801c18a:	dc06      	bgt.n	801c19a <__sflush_r+0xfe>
 801c18c:	89a3      	ldrh	r3, [r4, #12]
 801c18e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c192:	81a3      	strh	r3, [r4, #12]
 801c194:	f04f 30ff 	mov.w	r0, #4294967295
 801c198:	e78e      	b.n	801c0b8 <__sflush_r+0x1c>
 801c19a:	4407      	add	r7, r0
 801c19c:	eba8 0800 	sub.w	r8, r8, r0
 801c1a0:	e7e9      	b.n	801c176 <__sflush_r+0xda>
 801c1a2:	bf00      	nop
 801c1a4:	20400001 	.word	0x20400001

0801c1a8 <_fflush_r>:
 801c1a8:	b538      	push	{r3, r4, r5, lr}
 801c1aa:	690b      	ldr	r3, [r1, #16]
 801c1ac:	4605      	mov	r5, r0
 801c1ae:	460c      	mov	r4, r1
 801c1b0:	b1db      	cbz	r3, 801c1ea <_fflush_r+0x42>
 801c1b2:	b118      	cbz	r0, 801c1bc <_fflush_r+0x14>
 801c1b4:	6983      	ldr	r3, [r0, #24]
 801c1b6:	b90b      	cbnz	r3, 801c1bc <_fflush_r+0x14>
 801c1b8:	f000 f860 	bl	801c27c <__sinit>
 801c1bc:	4b0c      	ldr	r3, [pc, #48]	; (801c1f0 <_fflush_r+0x48>)
 801c1be:	429c      	cmp	r4, r3
 801c1c0:	d109      	bne.n	801c1d6 <_fflush_r+0x2e>
 801c1c2:	686c      	ldr	r4, [r5, #4]
 801c1c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c1c8:	b17b      	cbz	r3, 801c1ea <_fflush_r+0x42>
 801c1ca:	4621      	mov	r1, r4
 801c1cc:	4628      	mov	r0, r5
 801c1ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c1d2:	f7ff bf63 	b.w	801c09c <__sflush_r>
 801c1d6:	4b07      	ldr	r3, [pc, #28]	; (801c1f4 <_fflush_r+0x4c>)
 801c1d8:	429c      	cmp	r4, r3
 801c1da:	d101      	bne.n	801c1e0 <_fflush_r+0x38>
 801c1dc:	68ac      	ldr	r4, [r5, #8]
 801c1de:	e7f1      	b.n	801c1c4 <_fflush_r+0x1c>
 801c1e0:	4b05      	ldr	r3, [pc, #20]	; (801c1f8 <_fflush_r+0x50>)
 801c1e2:	429c      	cmp	r4, r3
 801c1e4:	bf08      	it	eq
 801c1e6:	68ec      	ldreq	r4, [r5, #12]
 801c1e8:	e7ec      	b.n	801c1c4 <_fflush_r+0x1c>
 801c1ea:	2000      	movs	r0, #0
 801c1ec:	bd38      	pop	{r3, r4, r5, pc}
 801c1ee:	bf00      	nop
 801c1f0:	0801fdac 	.word	0x0801fdac
 801c1f4:	0801fdcc 	.word	0x0801fdcc
 801c1f8:	0801fd8c 	.word	0x0801fd8c

0801c1fc <std>:
 801c1fc:	2300      	movs	r3, #0
 801c1fe:	b510      	push	{r4, lr}
 801c200:	4604      	mov	r4, r0
 801c202:	e9c0 3300 	strd	r3, r3, [r0]
 801c206:	6083      	str	r3, [r0, #8]
 801c208:	8181      	strh	r1, [r0, #12]
 801c20a:	6643      	str	r3, [r0, #100]	; 0x64
 801c20c:	81c2      	strh	r2, [r0, #14]
 801c20e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c212:	6183      	str	r3, [r0, #24]
 801c214:	4619      	mov	r1, r3
 801c216:	2208      	movs	r2, #8
 801c218:	305c      	adds	r0, #92	; 0x5c
 801c21a:	f7ff fa4e 	bl	801b6ba <memset>
 801c21e:	4b05      	ldr	r3, [pc, #20]	; (801c234 <std+0x38>)
 801c220:	6263      	str	r3, [r4, #36]	; 0x24
 801c222:	4b05      	ldr	r3, [pc, #20]	; (801c238 <std+0x3c>)
 801c224:	62a3      	str	r3, [r4, #40]	; 0x28
 801c226:	4b05      	ldr	r3, [pc, #20]	; (801c23c <std+0x40>)
 801c228:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c22a:	4b05      	ldr	r3, [pc, #20]	; (801c240 <std+0x44>)
 801c22c:	6224      	str	r4, [r4, #32]
 801c22e:	6323      	str	r3, [r4, #48]	; 0x30
 801c230:	bd10      	pop	{r4, pc}
 801c232:	bf00      	nop
 801c234:	0801c45d 	.word	0x0801c45d
 801c238:	0801c47f 	.word	0x0801c47f
 801c23c:	0801c4b7 	.word	0x0801c4b7
 801c240:	0801c4db 	.word	0x0801c4db

0801c244 <_cleanup_r>:
 801c244:	4901      	ldr	r1, [pc, #4]	; (801c24c <_cleanup_r+0x8>)
 801c246:	f000 b885 	b.w	801c354 <_fwalk_reent>
 801c24a:	bf00      	nop
 801c24c:	0801c1a9 	.word	0x0801c1a9

0801c250 <__sfmoreglue>:
 801c250:	b570      	push	{r4, r5, r6, lr}
 801c252:	1e4a      	subs	r2, r1, #1
 801c254:	2568      	movs	r5, #104	; 0x68
 801c256:	4355      	muls	r5, r2
 801c258:	460e      	mov	r6, r1
 801c25a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c25e:	f7ff fa83 	bl	801b768 <_malloc_r>
 801c262:	4604      	mov	r4, r0
 801c264:	b140      	cbz	r0, 801c278 <__sfmoreglue+0x28>
 801c266:	2100      	movs	r1, #0
 801c268:	e9c0 1600 	strd	r1, r6, [r0]
 801c26c:	300c      	adds	r0, #12
 801c26e:	60a0      	str	r0, [r4, #8]
 801c270:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c274:	f7ff fa21 	bl	801b6ba <memset>
 801c278:	4620      	mov	r0, r4
 801c27a:	bd70      	pop	{r4, r5, r6, pc}

0801c27c <__sinit>:
 801c27c:	6983      	ldr	r3, [r0, #24]
 801c27e:	b510      	push	{r4, lr}
 801c280:	4604      	mov	r4, r0
 801c282:	bb33      	cbnz	r3, 801c2d2 <__sinit+0x56>
 801c284:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801c288:	6503      	str	r3, [r0, #80]	; 0x50
 801c28a:	4b12      	ldr	r3, [pc, #72]	; (801c2d4 <__sinit+0x58>)
 801c28c:	4a12      	ldr	r2, [pc, #72]	; (801c2d8 <__sinit+0x5c>)
 801c28e:	681b      	ldr	r3, [r3, #0]
 801c290:	6282      	str	r2, [r0, #40]	; 0x28
 801c292:	4298      	cmp	r0, r3
 801c294:	bf04      	itt	eq
 801c296:	2301      	moveq	r3, #1
 801c298:	6183      	streq	r3, [r0, #24]
 801c29a:	f000 f81f 	bl	801c2dc <__sfp>
 801c29e:	6060      	str	r0, [r4, #4]
 801c2a0:	4620      	mov	r0, r4
 801c2a2:	f000 f81b 	bl	801c2dc <__sfp>
 801c2a6:	60a0      	str	r0, [r4, #8]
 801c2a8:	4620      	mov	r0, r4
 801c2aa:	f000 f817 	bl	801c2dc <__sfp>
 801c2ae:	2200      	movs	r2, #0
 801c2b0:	60e0      	str	r0, [r4, #12]
 801c2b2:	2104      	movs	r1, #4
 801c2b4:	6860      	ldr	r0, [r4, #4]
 801c2b6:	f7ff ffa1 	bl	801c1fc <std>
 801c2ba:	2201      	movs	r2, #1
 801c2bc:	2109      	movs	r1, #9
 801c2be:	68a0      	ldr	r0, [r4, #8]
 801c2c0:	f7ff ff9c 	bl	801c1fc <std>
 801c2c4:	2202      	movs	r2, #2
 801c2c6:	2112      	movs	r1, #18
 801c2c8:	68e0      	ldr	r0, [r4, #12]
 801c2ca:	f7ff ff97 	bl	801c1fc <std>
 801c2ce:	2301      	movs	r3, #1
 801c2d0:	61a3      	str	r3, [r4, #24]
 801c2d2:	bd10      	pop	{r4, pc}
 801c2d4:	0801fd50 	.word	0x0801fd50
 801c2d8:	0801c245 	.word	0x0801c245

0801c2dc <__sfp>:
 801c2dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c2de:	4b1b      	ldr	r3, [pc, #108]	; (801c34c <__sfp+0x70>)
 801c2e0:	681e      	ldr	r6, [r3, #0]
 801c2e2:	69b3      	ldr	r3, [r6, #24]
 801c2e4:	4607      	mov	r7, r0
 801c2e6:	b913      	cbnz	r3, 801c2ee <__sfp+0x12>
 801c2e8:	4630      	mov	r0, r6
 801c2ea:	f7ff ffc7 	bl	801c27c <__sinit>
 801c2ee:	3648      	adds	r6, #72	; 0x48
 801c2f0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c2f4:	3b01      	subs	r3, #1
 801c2f6:	d503      	bpl.n	801c300 <__sfp+0x24>
 801c2f8:	6833      	ldr	r3, [r6, #0]
 801c2fa:	b133      	cbz	r3, 801c30a <__sfp+0x2e>
 801c2fc:	6836      	ldr	r6, [r6, #0]
 801c2fe:	e7f7      	b.n	801c2f0 <__sfp+0x14>
 801c300:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c304:	b16d      	cbz	r5, 801c322 <__sfp+0x46>
 801c306:	3468      	adds	r4, #104	; 0x68
 801c308:	e7f4      	b.n	801c2f4 <__sfp+0x18>
 801c30a:	2104      	movs	r1, #4
 801c30c:	4638      	mov	r0, r7
 801c30e:	f7ff ff9f 	bl	801c250 <__sfmoreglue>
 801c312:	6030      	str	r0, [r6, #0]
 801c314:	2800      	cmp	r0, #0
 801c316:	d1f1      	bne.n	801c2fc <__sfp+0x20>
 801c318:	230c      	movs	r3, #12
 801c31a:	603b      	str	r3, [r7, #0]
 801c31c:	4604      	mov	r4, r0
 801c31e:	4620      	mov	r0, r4
 801c320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c322:	4b0b      	ldr	r3, [pc, #44]	; (801c350 <__sfp+0x74>)
 801c324:	6665      	str	r5, [r4, #100]	; 0x64
 801c326:	e9c4 5500 	strd	r5, r5, [r4]
 801c32a:	60a5      	str	r5, [r4, #8]
 801c32c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801c330:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801c334:	2208      	movs	r2, #8
 801c336:	4629      	mov	r1, r5
 801c338:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c33c:	f7ff f9bd 	bl	801b6ba <memset>
 801c340:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c344:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c348:	e7e9      	b.n	801c31e <__sfp+0x42>
 801c34a:	bf00      	nop
 801c34c:	0801fd50 	.word	0x0801fd50
 801c350:	ffff0001 	.word	0xffff0001

0801c354 <_fwalk_reent>:
 801c354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c358:	4680      	mov	r8, r0
 801c35a:	4689      	mov	r9, r1
 801c35c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c360:	2600      	movs	r6, #0
 801c362:	b914      	cbnz	r4, 801c36a <_fwalk_reent+0x16>
 801c364:	4630      	mov	r0, r6
 801c366:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c36a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801c36e:	3f01      	subs	r7, #1
 801c370:	d501      	bpl.n	801c376 <_fwalk_reent+0x22>
 801c372:	6824      	ldr	r4, [r4, #0]
 801c374:	e7f5      	b.n	801c362 <_fwalk_reent+0xe>
 801c376:	89ab      	ldrh	r3, [r5, #12]
 801c378:	2b01      	cmp	r3, #1
 801c37a:	d907      	bls.n	801c38c <_fwalk_reent+0x38>
 801c37c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c380:	3301      	adds	r3, #1
 801c382:	d003      	beq.n	801c38c <_fwalk_reent+0x38>
 801c384:	4629      	mov	r1, r5
 801c386:	4640      	mov	r0, r8
 801c388:	47c8      	blx	r9
 801c38a:	4306      	orrs	r6, r0
 801c38c:	3568      	adds	r5, #104	; 0x68
 801c38e:	e7ee      	b.n	801c36e <_fwalk_reent+0x1a>

0801c390 <__swhatbuf_r>:
 801c390:	b570      	push	{r4, r5, r6, lr}
 801c392:	460e      	mov	r6, r1
 801c394:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c398:	2900      	cmp	r1, #0
 801c39a:	b096      	sub	sp, #88	; 0x58
 801c39c:	4614      	mov	r4, r2
 801c39e:	461d      	mov	r5, r3
 801c3a0:	da07      	bge.n	801c3b2 <__swhatbuf_r+0x22>
 801c3a2:	2300      	movs	r3, #0
 801c3a4:	602b      	str	r3, [r5, #0]
 801c3a6:	89b3      	ldrh	r3, [r6, #12]
 801c3a8:	061a      	lsls	r2, r3, #24
 801c3aa:	d410      	bmi.n	801c3ce <__swhatbuf_r+0x3e>
 801c3ac:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c3b0:	e00e      	b.n	801c3d0 <__swhatbuf_r+0x40>
 801c3b2:	466a      	mov	r2, sp
 801c3b4:	f000 f8b8 	bl	801c528 <_fstat_r>
 801c3b8:	2800      	cmp	r0, #0
 801c3ba:	dbf2      	blt.n	801c3a2 <__swhatbuf_r+0x12>
 801c3bc:	9a01      	ldr	r2, [sp, #4]
 801c3be:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c3c2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c3c6:	425a      	negs	r2, r3
 801c3c8:	415a      	adcs	r2, r3
 801c3ca:	602a      	str	r2, [r5, #0]
 801c3cc:	e7ee      	b.n	801c3ac <__swhatbuf_r+0x1c>
 801c3ce:	2340      	movs	r3, #64	; 0x40
 801c3d0:	2000      	movs	r0, #0
 801c3d2:	6023      	str	r3, [r4, #0]
 801c3d4:	b016      	add	sp, #88	; 0x58
 801c3d6:	bd70      	pop	{r4, r5, r6, pc}

0801c3d8 <__smakebuf_r>:
 801c3d8:	898b      	ldrh	r3, [r1, #12]
 801c3da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c3dc:	079d      	lsls	r5, r3, #30
 801c3de:	4606      	mov	r6, r0
 801c3e0:	460c      	mov	r4, r1
 801c3e2:	d507      	bpl.n	801c3f4 <__smakebuf_r+0x1c>
 801c3e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c3e8:	6023      	str	r3, [r4, #0]
 801c3ea:	6123      	str	r3, [r4, #16]
 801c3ec:	2301      	movs	r3, #1
 801c3ee:	6163      	str	r3, [r4, #20]
 801c3f0:	b002      	add	sp, #8
 801c3f2:	bd70      	pop	{r4, r5, r6, pc}
 801c3f4:	ab01      	add	r3, sp, #4
 801c3f6:	466a      	mov	r2, sp
 801c3f8:	f7ff ffca 	bl	801c390 <__swhatbuf_r>
 801c3fc:	9900      	ldr	r1, [sp, #0]
 801c3fe:	4605      	mov	r5, r0
 801c400:	4630      	mov	r0, r6
 801c402:	f7ff f9b1 	bl	801b768 <_malloc_r>
 801c406:	b948      	cbnz	r0, 801c41c <__smakebuf_r+0x44>
 801c408:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c40c:	059a      	lsls	r2, r3, #22
 801c40e:	d4ef      	bmi.n	801c3f0 <__smakebuf_r+0x18>
 801c410:	f023 0303 	bic.w	r3, r3, #3
 801c414:	f043 0302 	orr.w	r3, r3, #2
 801c418:	81a3      	strh	r3, [r4, #12]
 801c41a:	e7e3      	b.n	801c3e4 <__smakebuf_r+0xc>
 801c41c:	4b0d      	ldr	r3, [pc, #52]	; (801c454 <__smakebuf_r+0x7c>)
 801c41e:	62b3      	str	r3, [r6, #40]	; 0x28
 801c420:	89a3      	ldrh	r3, [r4, #12]
 801c422:	6020      	str	r0, [r4, #0]
 801c424:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c428:	81a3      	strh	r3, [r4, #12]
 801c42a:	9b00      	ldr	r3, [sp, #0]
 801c42c:	6163      	str	r3, [r4, #20]
 801c42e:	9b01      	ldr	r3, [sp, #4]
 801c430:	6120      	str	r0, [r4, #16]
 801c432:	b15b      	cbz	r3, 801c44c <__smakebuf_r+0x74>
 801c434:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c438:	4630      	mov	r0, r6
 801c43a:	f000 f887 	bl	801c54c <_isatty_r>
 801c43e:	b128      	cbz	r0, 801c44c <__smakebuf_r+0x74>
 801c440:	89a3      	ldrh	r3, [r4, #12]
 801c442:	f023 0303 	bic.w	r3, r3, #3
 801c446:	f043 0301 	orr.w	r3, r3, #1
 801c44a:	81a3      	strh	r3, [r4, #12]
 801c44c:	89a3      	ldrh	r3, [r4, #12]
 801c44e:	431d      	orrs	r5, r3
 801c450:	81a5      	strh	r5, [r4, #12]
 801c452:	e7cd      	b.n	801c3f0 <__smakebuf_r+0x18>
 801c454:	0801c245 	.word	0x0801c245

0801c458 <__malloc_lock>:
 801c458:	4770      	bx	lr

0801c45a <__malloc_unlock>:
 801c45a:	4770      	bx	lr

0801c45c <__sread>:
 801c45c:	b510      	push	{r4, lr}
 801c45e:	460c      	mov	r4, r1
 801c460:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c464:	f000 f894 	bl	801c590 <_read_r>
 801c468:	2800      	cmp	r0, #0
 801c46a:	bfab      	itete	ge
 801c46c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c46e:	89a3      	ldrhlt	r3, [r4, #12]
 801c470:	181b      	addge	r3, r3, r0
 801c472:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c476:	bfac      	ite	ge
 801c478:	6563      	strge	r3, [r4, #84]	; 0x54
 801c47a:	81a3      	strhlt	r3, [r4, #12]
 801c47c:	bd10      	pop	{r4, pc}

0801c47e <__swrite>:
 801c47e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c482:	461f      	mov	r7, r3
 801c484:	898b      	ldrh	r3, [r1, #12]
 801c486:	05db      	lsls	r3, r3, #23
 801c488:	4605      	mov	r5, r0
 801c48a:	460c      	mov	r4, r1
 801c48c:	4616      	mov	r6, r2
 801c48e:	d505      	bpl.n	801c49c <__swrite+0x1e>
 801c490:	2302      	movs	r3, #2
 801c492:	2200      	movs	r2, #0
 801c494:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c498:	f000 f868 	bl	801c56c <_lseek_r>
 801c49c:	89a3      	ldrh	r3, [r4, #12]
 801c49e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c4a2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c4a6:	81a3      	strh	r3, [r4, #12]
 801c4a8:	4632      	mov	r2, r6
 801c4aa:	463b      	mov	r3, r7
 801c4ac:	4628      	mov	r0, r5
 801c4ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c4b2:	f000 b817 	b.w	801c4e4 <_write_r>

0801c4b6 <__sseek>:
 801c4b6:	b510      	push	{r4, lr}
 801c4b8:	460c      	mov	r4, r1
 801c4ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c4be:	f000 f855 	bl	801c56c <_lseek_r>
 801c4c2:	1c43      	adds	r3, r0, #1
 801c4c4:	89a3      	ldrh	r3, [r4, #12]
 801c4c6:	bf15      	itete	ne
 801c4c8:	6560      	strne	r0, [r4, #84]	; 0x54
 801c4ca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c4ce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c4d2:	81a3      	strheq	r3, [r4, #12]
 801c4d4:	bf18      	it	ne
 801c4d6:	81a3      	strhne	r3, [r4, #12]
 801c4d8:	bd10      	pop	{r4, pc}

0801c4da <__sclose>:
 801c4da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c4de:	f000 b813 	b.w	801c508 <_close_r>
	...

0801c4e4 <_write_r>:
 801c4e4:	b538      	push	{r3, r4, r5, lr}
 801c4e6:	4c07      	ldr	r4, [pc, #28]	; (801c504 <_write_r+0x20>)
 801c4e8:	4605      	mov	r5, r0
 801c4ea:	4608      	mov	r0, r1
 801c4ec:	4611      	mov	r1, r2
 801c4ee:	2200      	movs	r2, #0
 801c4f0:	6022      	str	r2, [r4, #0]
 801c4f2:	461a      	mov	r2, r3
 801c4f4:	f7e4 fe4d 	bl	8001192 <_write>
 801c4f8:	1c43      	adds	r3, r0, #1
 801c4fa:	d102      	bne.n	801c502 <_write_r+0x1e>
 801c4fc:	6823      	ldr	r3, [r4, #0]
 801c4fe:	b103      	cbz	r3, 801c502 <_write_r+0x1e>
 801c500:	602b      	str	r3, [r5, #0]
 801c502:	bd38      	pop	{r3, r4, r5, pc}
 801c504:	20008d80 	.word	0x20008d80

0801c508 <_close_r>:
 801c508:	b538      	push	{r3, r4, r5, lr}
 801c50a:	4c06      	ldr	r4, [pc, #24]	; (801c524 <_close_r+0x1c>)
 801c50c:	2300      	movs	r3, #0
 801c50e:	4605      	mov	r5, r0
 801c510:	4608      	mov	r0, r1
 801c512:	6023      	str	r3, [r4, #0]
 801c514:	f7e4 fe59 	bl	80011ca <_close>
 801c518:	1c43      	adds	r3, r0, #1
 801c51a:	d102      	bne.n	801c522 <_close_r+0x1a>
 801c51c:	6823      	ldr	r3, [r4, #0]
 801c51e:	b103      	cbz	r3, 801c522 <_close_r+0x1a>
 801c520:	602b      	str	r3, [r5, #0]
 801c522:	bd38      	pop	{r3, r4, r5, pc}
 801c524:	20008d80 	.word	0x20008d80

0801c528 <_fstat_r>:
 801c528:	b538      	push	{r3, r4, r5, lr}
 801c52a:	4c07      	ldr	r4, [pc, #28]	; (801c548 <_fstat_r+0x20>)
 801c52c:	2300      	movs	r3, #0
 801c52e:	4605      	mov	r5, r0
 801c530:	4608      	mov	r0, r1
 801c532:	4611      	mov	r1, r2
 801c534:	6023      	str	r3, [r4, #0]
 801c536:	f7e4 fe54 	bl	80011e2 <_fstat>
 801c53a:	1c43      	adds	r3, r0, #1
 801c53c:	d102      	bne.n	801c544 <_fstat_r+0x1c>
 801c53e:	6823      	ldr	r3, [r4, #0]
 801c540:	b103      	cbz	r3, 801c544 <_fstat_r+0x1c>
 801c542:	602b      	str	r3, [r5, #0]
 801c544:	bd38      	pop	{r3, r4, r5, pc}
 801c546:	bf00      	nop
 801c548:	20008d80 	.word	0x20008d80

0801c54c <_isatty_r>:
 801c54c:	b538      	push	{r3, r4, r5, lr}
 801c54e:	4c06      	ldr	r4, [pc, #24]	; (801c568 <_isatty_r+0x1c>)
 801c550:	2300      	movs	r3, #0
 801c552:	4605      	mov	r5, r0
 801c554:	4608      	mov	r0, r1
 801c556:	6023      	str	r3, [r4, #0]
 801c558:	f7e4 fe53 	bl	8001202 <_isatty>
 801c55c:	1c43      	adds	r3, r0, #1
 801c55e:	d102      	bne.n	801c566 <_isatty_r+0x1a>
 801c560:	6823      	ldr	r3, [r4, #0]
 801c562:	b103      	cbz	r3, 801c566 <_isatty_r+0x1a>
 801c564:	602b      	str	r3, [r5, #0]
 801c566:	bd38      	pop	{r3, r4, r5, pc}
 801c568:	20008d80 	.word	0x20008d80

0801c56c <_lseek_r>:
 801c56c:	b538      	push	{r3, r4, r5, lr}
 801c56e:	4c07      	ldr	r4, [pc, #28]	; (801c58c <_lseek_r+0x20>)
 801c570:	4605      	mov	r5, r0
 801c572:	4608      	mov	r0, r1
 801c574:	4611      	mov	r1, r2
 801c576:	2200      	movs	r2, #0
 801c578:	6022      	str	r2, [r4, #0]
 801c57a:	461a      	mov	r2, r3
 801c57c:	f7e4 fe4c 	bl	8001218 <_lseek>
 801c580:	1c43      	adds	r3, r0, #1
 801c582:	d102      	bne.n	801c58a <_lseek_r+0x1e>
 801c584:	6823      	ldr	r3, [r4, #0]
 801c586:	b103      	cbz	r3, 801c58a <_lseek_r+0x1e>
 801c588:	602b      	str	r3, [r5, #0]
 801c58a:	bd38      	pop	{r3, r4, r5, pc}
 801c58c:	20008d80 	.word	0x20008d80

0801c590 <_read_r>:
 801c590:	b538      	push	{r3, r4, r5, lr}
 801c592:	4c07      	ldr	r4, [pc, #28]	; (801c5b0 <_read_r+0x20>)
 801c594:	4605      	mov	r5, r0
 801c596:	4608      	mov	r0, r1
 801c598:	4611      	mov	r1, r2
 801c59a:	2200      	movs	r2, #0
 801c59c:	6022      	str	r2, [r4, #0]
 801c59e:	461a      	mov	r2, r3
 801c5a0:	f7e4 fdda 	bl	8001158 <_read>
 801c5a4:	1c43      	adds	r3, r0, #1
 801c5a6:	d102      	bne.n	801c5ae <_read_r+0x1e>
 801c5a8:	6823      	ldr	r3, [r4, #0]
 801c5aa:	b103      	cbz	r3, 801c5ae <_read_r+0x1e>
 801c5ac:	602b      	str	r3, [r5, #0]
 801c5ae:	bd38      	pop	{r3, r4, r5, pc}
 801c5b0:	20008d80 	.word	0x20008d80

0801c5b4 <_init>:
 801c5b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c5b6:	bf00      	nop
 801c5b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c5ba:	bc08      	pop	{r3}
 801c5bc:	469e      	mov	lr, r3
 801c5be:	4770      	bx	lr

0801c5c0 <_fini>:
 801c5c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c5c2:	bf00      	nop
 801c5c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c5c6:	bc08      	pop	{r3}
 801c5c8:	469e      	mov	lr, r3
 801c5ca:	4770      	bx	lr
